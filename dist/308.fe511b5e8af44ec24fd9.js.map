{"version":3,"file":"308.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/./src/HCFModule/Clinic/ClinicMyAppointments/ClinicRequests/ClinicAppointmentRequest.js"],"sourcesContent":["import { Box, Skeleton, Typography, Pagination } from \"@mui/material\"; // Import Skeleton for loading placeholders\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { NavLink } from \"react-router-dom\";\nimport ClinicCardRequest from \"../../ClinicDashboard/ClinicRequests/ClinicCardRequest\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst useStyles = makeStyles((theme) => ({\n    requestcontainer: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"flex\",\n        },\n    },\n}));\n\nconst ClinicAppointmentRequest = () => {\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"myappointment\");\n        localStorage.setItem(\"path\", \"clinicrequest\");\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    }, []);\n\n    const [loading, setLoading] = useState(true); // Loading state\n    const [clinicAppointmentRequests, setClinicAppointmentRequests] = useState([]);\n    const doctor_id = localStorage.getItem(\"clinic_suid\");\n    const status_in_progress = \"in_progress\";\n    const [accAndRejClicked, setaccAndRejClicked] = useState([]);\n\n    const clinicAppointmentRequestsList = async (doctor_id, status_in_progress) => {\n        setLoading(true); // Set loading to true\n        try {\n            const response = await axiosInstance.get(\n                `sec/hcf/${doctor_id}/${status_in_progress}/clinicAppointmentRequests`,\n            );\n            const Count = response?.data?.response || [];\n            setClinicAppointmentRequests(Count);\n        } catch (error) {\n            console.error(\"Error fetching request data:\", error.response);\n        } finally {\n            setLoading(false); // Set loading to false\n        }\n    };\n\n    useEffect(() => {\n        clinicAppointmentRequestsList(doctor_id, status_in_progress);\n    }, []);\n\n    function AcceptOrRejectButtonClicked(value) {\n        setaccAndRejClicked(value);\n    }\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 5;\n\n    // Calculate paginated data\n    const totalPages = Math.ceil(clinicAppointmentRequests.length / itemsPerPage);\n    const paginatedData = clinicAppointmentRequests.slice(\n        (currentPage - 1) * itemsPerPage,\n        currentPage * itemsPerPage\n    );\n\n    // Handle page change\n    const handlePageChange = (event, value) => {\n        setCurrentPage(value);\n    };\n\n    return (\n        <>\n            <div\n                className=\"requestcontainer\"\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    width: \"98%\",\n                    height: \"100%\",\n                }}\n            >\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicrequest\"}>\n                        Requests\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicupcoming\"}>\n                        Upcoming\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/cliniccompleted\"}>\n                        Completed\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/cliniccancelled\"}>\n                        Cancelled\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicchats\"}>Chats</NavLink>\n                </nav>\n                <Box\n                    component=\"div\"\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        height: \"100%\",\n                    }}\n                >\n                   <Box\n            sx={{\n                width: \"100%\",\n                height: \"100%\",\n                border: \"1px solid #E6E1E5\",\n                padding: \"1rem\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n            }}\n        >\n            {loading ? (\n                Array.from({ length: 5 }).map((_, index) => (\n                    <Skeleton\n                        key={index}\n                        variant=\"rectangular\"\n                        width=\"100%\"\n                        height={100}\n                        sx={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n                    />\n                ))\n            ) : clinicAppointmentRequests.length === 0 ? (\n                <NoAppointmentCard text_one={\"No Appointment\"} />\n            ) : (\n                <>\n                    {paginatedData.map((data, index) => (\n                        <ClinicCardRequest\n                            key={index}\n                            AcceptOrRejectButtonClicked={AcceptOrRejectButtonClicked}\n                            accAndRejClicked={accAndRejClicked}\n                            label={\"Accept\"}\n                            data={data}\n                        />\n                    ))}\n                    {/* Pagination Controls */}\n                    \n                </>\n            )}\n        </Box>\n        <Pagination\n                        count={totalPages}\n                        page={currentPage}\n                        onChange={handlePageChange}\n                        color=\"primary\"\n                        sx={{ marginTop: \"1rem\" }}\n                    />\n                </Box>\n            </div>\n        </>\n    );\n};\n\nexport default ClinicAppointmentRequest;\n"],"names":["makeStyles","theme","requestcontainer","breakpoints","down","display","ClinicAppointmentRequest","useEffect","localStorage","setItem","document","getElementById","style","loading","setLoading","useState","clinicAppointmentRequests","setClinicAppointmentRequests","doctor_id","getItem","accAndRejClicked","setaccAndRejClicked","AcceptOrRejectButtonClicked","value","async","status_in_progress","_response$data","response","axiosInstance","get","concat","Count","data","error","clinicAppointmentRequestsList","currentPage","setCurrentPage","totalPages","Math","ceil","length","paginatedData","slice","React","className","sx","flexWrap","width","height","NavLink","to","Box","component","position","top","flexDirection","alignItems","border","padding","Array","from","map","_","index","Skeleton","key","variant","marginBottom","borderRadius","NoAppointmentCard","text_one","ClinicCardRequest","label","Pagination","count","page","onChange","handlePageChange","event","color","marginTop"],"sourceRoot":""}