{"version":3,"file":"821.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/./src/HCFModule/Clinic/ClinicDashboard/ClinicRequests/ClinicCardRequest.js","webpack://sec-frontend/./src/static/images/DrImages/GroupIcon.svg"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport profileImage from \"../../../../static/images/DrImages/profileImage.png\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\n\nimport { Box, Typography } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport \"./ClinicCardRequest.scss\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\n// import CustomModal from '../../../custom-modal';\nimport axios from \"axios\";\nimport CustomRadioButton from \"../../../../components/CustomRadioButton\";\nimport CustomModal from \"../../../../components/CustomModal\";\nimport GroupIcon from \"../../../../static/images/DrImages/GroupIcon.svg\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport { baseURL } from \"../../../../constants/const\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport { Schedule } from \"@mui/icons-material\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar\";\nimport { formatDate } from \"../../../../constants/const\";\n\nconst ClinicCardRequest = ({ data = {}, label, AcceptOrRejectButtonClicked, accAndRejClicked }) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [snackType, setSnackType] = useState(\"\");\n    const [openPatientModal, setOpenPatientModal] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [clinicAppointmentPatient, setClinicAppointmentPatient] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackOpen, setSnackOpen] = useState(false);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenDialogCancle(false);\n        setOpenDialogReschedule(false);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const [openDialogCancle, setOpenDialogCancle] = useState(false);\n    const [openDialogReschedule, setOpenDialogReschedule] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n\n    const radioValues = [\n        \"I have a schedule clash\",\n        \"I am not available at the schedule\",\n        \"I have some emergency\",\n        \"I am not well\",\n        \"Other Emergencies\",\n    ];\n    const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n    const [acceptAppointment, setAcceptAppointment] = useState({\n        appointment_id: null,\n        patient_id: null,\n        doctor_id: null,\n        status: null,\n    });\n    const [clicked, setClicked] = useState(false);\n\n    const [rejectAppointment, setRejectappointment] = useState({\n        appointment_id: data?.appointment_id,\n        patient_id: data?.patient_id,\n        doctor_id: data?.doctor_id,\n        reason: null,\n        status: \"in_progress\",\n        option: \"reject\",\n    });\n    console.log(\"Reject appointment data : \", rejectAppointment);\n    const [rejectClicked, setRejectClicked] = useState(false);\n    const [appointmentRequestData, setAppointmentRequestData] = useState({\n        appointment_id: null,\n        patient_id: null,\n        doctor_id: null,\n        // reason: null,\n        status: \"in_progress\",\n        option: \"accept\",\n    });\n\n    useEffect(() => {\n        setAppointmentRequestData({\n            appointment_id: data?.appointment_id,\n            patient_id: data?.patient_id,\n            doctor_id: data?.doctor_id,\n            status: \"in_progress\",\n            option: \"accept\",\n        });\n    }, []);\n\n    const AcceptAppointment = async () => {\n        setClicked(!clicked);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/hcf/clinicAppointmentAccept\",\n                JSON.stringify(appointmentRequestData),\n                { Accept: \"Application/json\" },\n            );\n            setSnackMessage(\"Appointment Confirmed\");\n            setSnackType(\"success\");\n            setSnackOpen(true);\n            console.log(\"RESPONSE : \", response?.data);\n            // acceptButtonClicked(\"child\")\n            AcceptOrRejectButtonClicked(!accAndRejClicked);\n        } catch (error) {\n            console.log(error.response);\n            setSnackMessage(\"error during booking appointment\");\n            setSnackType(\"error\");\n            setSnackOpen(true);\n        }\n    };\n\n    const RejectAppointment = async () => {\n        // setRejectClicked(true);\n        console.log(\"Hitting reject request\");\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/hcf/clinicAppointmentReject\",\n                JSON.stringify(rejectAppointment),\n            );\n            setSnackMessage(\"Appointment Booking Rejected\");\n            setSnackType(\"success\");\n            setSnackOpen(true); // alert(response?.data.response.status);\n            console.log(\"RESPONSE : \", response?.data);\n            AcceptOrRejectButtonClicked(!accAndRejClicked);\n            setRejectAppointmentFlag(false);\n            setOpenDialog(false);\n        } catch (error) {\n            console.log(error.response);\n            setRejectAppointmentFlag(false);\n            setSnackMessage(\"error during rejecting  appointment says \", error.response);\n            setSnackType(\"error\");\n            setSnackOpen(true);\n        }\n    };\n\n    const [rejectAppointmentFlag, setRejectAppointmentFlag] = useState(false);\n\n    useEffect(() => {\n        if (rejectAppointmentFlag) {\n            RejectAppointment();\n        }\n    }, [rejectAppointmentFlag]);\n\n    const navigate = useNavigate();\n    //----------------------------------------------------modal code--------------------------------------------\n    const patient_id = data?.patient_id;\n    const appointment_id = data?.appointment_id;\n    const clinicAppointmentRequestsList = async (patient_id, appointment_id) => {\n        setLoading(true); // Set loading to true\n        try {\n            const response = await axiosInstance.get(\n                `sec/hcf/${patient_id}/${appointment_id}/ClinicAppointmentPatient`,\n            );\n            const Count = response?.data?.response || [];\n            setClinicAppointmentPatient(Count);\n        } catch (error) {\n            console.error(\"Error fetching request data:\", error.response);\n        } finally {\n            setLoading(false); // Set loading to false\n        }\n    };\n\n    useEffect(() => {\n        clinicAppointmentRequestsList(patient_id, appointment_id);\n    }, []);\n\n    const handleViewReport = () => {\n        setOpenModal(true);\n    };\n\n    const filepath =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_path;\n    const filename =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_name;\n\n    console.log(\"filepath\", filepath);\n\n    const handleDownloadReport = () => {\n        // Direct download link for Google Drive\n        const link = document.createElement(\"a\");\n        link.target = \"_blank\";\n        link.href = filepath;\n        link.download = filename;\n        link.click();\n    };\n    const fileUrl = filepath && (filepath.startsWith(\"http\") ? filepath : `/assets/${filepath}`);\n\n    return (\n        <>\n            <div className=\"Request-main-container\">\n                <CustomSnackBar type={snackType} message={snackMessage} isOpen={snackOpen} />\n                <div className=\"Request-inner-container\">\n                    {/* -----Image Container-------- */}\n                    <div style={{ width: \"3.13981rem\", height: \"height: 4.71831rem\" }}>\n                        <div className=\"RequestimageContainer\">\n                            <Box\n                                className=\"image-container\"\n                                component={\"img\"}\n                                sx={{ width: \"100%\", height: \"100%\" }}\n                                src={data?.profile_picture || GroupIcon}\n                                alt=\"Profile Image\"\n                            ></Box>\n                        </div>\n                    </div>\n\n                    {/* --------- Details Container-------- */}\n                    <div style={{ marginLeft: \"2%\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                            <Typography\n                                sx={{\n                                    color: \"#313033\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"1.125rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.75rem\",\n                                }}\n                            >\n                                {data?.first_name || data?.middle_name || data?.last_name\n                                    ? `${data?.first_name || \"\"} ${data?.middle_name || \"\"} ${\n                                          data?.last_name || \"\"\n                                      }`.trim()\n                                    : null}\n                            </Typography>\n                        </div>\n                        <div className=\"card-details-container\">\n                            <Typography\n                                sx={{\n                                    color: \"#787579\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"0.75rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.125rem\",\n                                    letterSpacing: \"0.006rem\",\n                                    width: \"17rem\",\n                                }}\n                            >\n                                {/* Schedule | {data?.appointment_date.split(\"T\")[0]} | Attachments{\" \"} */}\n                                {\"Schedule | \"}\n                                {formatDate(data?.appointment_date)}\n                                {\" | \"}\n                                {data?.attachments}\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n                {/* ------------ Button Container------------ */}\n                <div className=\"request-button-container\">\n                    <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"2%\" }}>\n                        {label ? (\n                            <CustomButton\n                                buttonCss={{\n                                    display: \"flex\",\n                                    width: \"9.3125rem\",\n                                    height: \"2.5rem\",\n                                    padding: \"0.5rem 1rem\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    gap: \"0.5rem\",\n                                    flexShrink: \"0\",\n                                    borderRadius: \"6.25rem\",\n                                }}\n                                label={label}\n                                isTransaprent={false}\n                                handleClick={AcceptAppointment}\n                            />\n                        ) : null}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        {label ? (\n                            <MoreHorizIcon\n                                sx={{\n                                    cursor: \"pointer\",\n                                    color: \"#4f4d4d\",\n                                    border: \"1px solid #E6E1E5\",\n                                    borderRadius: \"50px\",\n                                }}\n                                onClick={handleClick}\n                            />\n                        ) : null}\n                        <Menu\n                            id=\"basic-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                            MenuListProps={{\n                                \"aria-labelledby\": \"basic-button\",\n                            }}\n                        >\n                            {/* ---------------------- Appointments and Re-Schedule--------------------------------------------------- */}\n                            <MenuItem onClick={() => setOpenDialog(!openDialog)}>Reject</MenuItem>\n                            <MenuItem onClick={() => setOpenPatientModal(!openPatientModal)}>\n                                patient Details\n                            </MenuItem>\n                            <CustomModal\n                                isOpen={openDialog}\n                                title={\"Reject Appointment Request\"}\n                                conditionOpen={setOpenDialog}\n                                footer={\n                                    <Fragment>\n                                        <Box\n                                            sx={{\n                                                width: \"100%\",\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                            }}\n                                        ></Box>\n                                    </Fragment>\n                                }\n                            >\n                                <Box sx={{ textAlign: \"center\" }}>\n                                    <Typography>\n                                        Are you sure. you want to cancel the appointment\n                                    </Typography>\n                                </Box>\n                                <div style={{ marginTop: \"4%\" }}>\n                                    <>\n                                        <Box\n                                            sx={{\n                                                marginTop: \"5%\",\n                                                display: \"flex\",\n                                                flexWrap: \"wrap\",\n                                                flexDirection: \"column\",\n                                            }}\n                                        >\n                                            <Typography\n                                                sx={{\n                                                    fontWeight: \"600\",\n                                                    fontSize: \"16px\",\n                                                    lineHeight: \"24px\",\n                                                }}\n                                            >\n                                                Reason For Rejection\n                                            </Typography>\n                                            <CustomRadioButton\n                                                label={\"\"}\n                                                handleChange={({ target }) => {\n                                                    setRadioVal(target.value);\n                                                    setRejectappointment({\n                                                        ...rejectAppointment,\n                                                        reason: target.value,\n                                                    });\n                                                }}\n                                                value={radioVal}\n                                                items={radioValues}\n                                            />\n                                            <Box sx={{ marginTop: \"5%\", width: \"100%\" }}>\n                                                <Typography>Add Note</Typography>\n                                                <TextField\n                                                    style={{ width: \"100%\", padding: \"3%\" }}\n                                                    placeholder=\" Note: Please leave the review here.\"\n                                                    multiline\n                                                    rows={3}\n                                                    maxRows={4}\n                                                />\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    marginTop: \"6%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"center\",\n                                                }}\n                                            >\n                                                <CustomButton\n                                                    handleClick={() =>\n                                                        setRejectAppointmentFlag(true)\n                                                    }\n                                                    label=\"Reject Appointment\"\n                                                />\n                                            </Box>\n                                        </Box>\n                                    </>\n                                </div>\n                            </CustomModal>\n                            {/* view modal */}\n                            <CustomModal\n                                style={{\n                                    display: \"flex\",\n                                }}\n                                isOpen={openPatientModal}\n                                conditionOpen={setOpenPatientModal}\n                                title={\n                                    <Box\n                                        sx={{\n                                            border: \"1px solid #E6E1E5\",\n                                            borderTop: \"1px\",\n                                            borderRight: \"1px\",\n                                            borderLeft: \"1px\",\n                                            width: \"570px\",\n                                            height: \"82px\",\n                                            display: \"flex\",\n                                            justifycontent: \"flexstart\",\n                                        }}\n                                    >\n                                        <h2\n                                            style={{\n                                                textAlign: \"left\",\n                                                fontfamily: \"poppins\",\n                                                fontSize: \"20px\",\n                                                fontstyle: \"normal\",\n                                                fontweight: \"500\",\n                                                lineheight: \"30px\",\n                                                width: \"100%\",\n                                                height: \"30px\",\n                                            }}\n                                        >\n                                            Patient Details\n                                        </h2>\n                                    </Box>\n                                }\n                            >\n                                <div>Patient Details</div>\n                                <div className=\"textfield-cont\">\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Name\n                                        </Typography>\n                                        <Typography>{`${clinicAppointmentPatient[0]?.first_name} ${clinicAppointmentPatient[0]?.last_name}`}</Typography>\n                                    </div>\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Age\n                                        </Typography>\n                                        <Typography>{clinicAppointmentPatient[0]?.age}</Typography>\n                                    </div>\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Gender\n                                        </Typography>\n                                        <Typography>\n                                            {clinicAppointmentPatient[0]?.gender}\n                                        </Typography>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div>Attached files</div>\n                                    <div className=\"textfield-cont\">\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#787579\",\n                                                    fontSize: \"0.875rem\",\n                                                    fontWeight: 400,\n                                                }}\n                                            >\n                                                File name\n                                            </Typography>\n                                            <Typography>\n                                                {clinicAppointmentPatient[0]?.attachments}\n                                            </Typography>\n                                        </div>\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{ color: \"#E72B4A\", cursor: \"pointer\" }}\n                                                onClick={handleViewReport}\n                                            >\n                                                view\n                                            </Typography>\n                                        </div>\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#E72B4A\",\n                                                    display: \"flex\",\n                                                    alignItems: \"center\",\n                                                    cursor: \"pointer\",\n                                                }}\n                                                onClick={handleDownloadReport}\n                                            >\n                                                <DownloadIcon sx={{ marginRight: \"5px\" }} />{\" \"}\n                                                Download\n                                            </Typography>\n                                        </div>\n                                    </div>\n                                    <div>Questions Details</div>\n                                    <div className=\"textfield-cont\">\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#787579\",\n                                                    fontSize: \"0.875rem\",\n                                                    fontWeight: 400,\n                                                }}\n                                            >\n                                                Question 1\n                                            </Typography>\n                                            <Typography>\n                                                {clinicAppointmentPatient[0]?.answer_1 || \"answer\"}\n                                            </Typography>\n                                        </div>\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#787579\",\n                                                    fontSize: \"0.875rem\",\n                                                    fontWeight: 400,\n                                                }}\n                                            >\n                                                Question 2\n                                            </Typography>\n                                            <Typography>\n                                                {clinicAppointmentPatient[0]?.answer_2 || \"answer\"}\n                                            </Typography>\n                                        </div>\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#787579\",\n                                                    fontSize: \"0.875rem\",\n                                                    fontWeight: 400,\n                                                }}\n                                            >\n                                                Question 3\n                                            </Typography>\n                                            <Typography>\n                                                {clinicAppointmentPatient[0]?.answer_3 || \"answer\"}\n                                            </Typography>\n                                        </div>\n                                    </div>\n                                    <div className=\"textfield-conte\">\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#787579\",\n                                                    fontSize: \"0.875rem\",\n                                                    fontWeight: 400,\n                                                }}\n                                            >\n                                                Question 4\n                                            </Typography>\n                                            <Typography>\n                                                {clinicAppointmentPatient[0]?.answer_4 || \"answer\"}\n                                            </Typography>\n                                        </div>\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#787579\",\n                                                    fontSize: \"0.875rem\",\n                                                    fontWeight: 400,\n                                                }}\n                                            >\n                                                Question 5\n                                            </Typography>\n                                            <Typography>\n                                                {clinicAppointmentPatient[0]?.answer_5 || \"answer\"}\n                                            </Typography>\n                                        </div>\n                                    </div>\n\n                                    {/* Modal for displaying the report */}\n                                    <CustomModal isOpen={openModal} conditionOpen={setOpenModal}>\n                                        <Box\n                                            sx={{\n                                                width: \"870px\",\n                                                border: \"1px solid #E6E1E5\",\n                                                borderTop: \"1px\",\n                                                borderRight: \"1px\",\n                                                borderLeft: \"1px\",\n                                                height: \"80vh\",\n                                                padding: \"20px\",\n                                                backgroundColor: \"white\",\n                                            }}\n                                        >\n                                            <Typography variant=\"h6\">Report</Typography>\n                                            <iframe\n                                                src={fileUrl}\n                                                width=\"100%\"\n                                                height=\"100%\"\n                                                title=\"Report Viewer\"\n                                                style={{ border: \"1px solid\" }}\n                                            />\n                                        </Box>\n                                    </CustomModal>\n                                </div>\n                            </CustomModal>\n                        </Menu>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ClinicCardRequest;\n","var _circle, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgGroupIcon = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 16,\n    r: 15.5,\n    fill: \"#fff\",\n    stroke: \"#E6E1E5\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#AEAAAE\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 9.979,\n    cy: 15.998,\n    r: 2.006\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 15.998,\n    r: 2.006\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 22.024,\n    cy: 15.998,\n    r: 2.006\n  }))));\n};\nexport { SvgGroupIcon as ReactComponent };\nexport default __webpack_public_path__ + \"1cabdb3ae29c5524313e1580b423d0e4.svg\";"],"names":["_ref","_clinicAppointmentPat","_clinicAppointmentPat2","_clinicAppointmentPat3","_clinicAppointmentPat4","_clinicAppointmentPat5","_clinicAppointmentPat6","_clinicAppointmentPat7","_clinicAppointmentPat8","_clinicAppointmentPat9","_clinicAppointmentPat0","_clinicAppointmentPat1","_clinicAppointmentPat10","data","label","AcceptOrRejectButtonClicked","accAndRejClicked","anchorEl","setAnchorEl","React","snackType","setSnackType","useState","openPatientModal","setOpenPatientModal","openModal","setOpenModal","clinicAppointmentPatient","setClinicAppointmentPatient","loading","setLoading","snackMessage","setSnackMessage","snackOpen","setSnackOpen","open","Boolean","openDialogCancle","setOpenDialogCancle","openDialogReschedule","setOpenDialogReschedule","openDialog","setOpenDialog","radioValues","radioVal","setRadioVal","acceptAppointment","setAcceptAppointment","appointment_id","patient_id","doctor_id","status","clicked","setClicked","rejectAppointment","setRejectappointment","reason","option","rejectClicked","setRejectClicked","appointmentRequestData","setAppointmentRequestData","useEffect","rejectAppointmentFlag","setRejectAppointmentFlag","async","axiosInstance","post","JSON","stringify","error","response","RejectAppointment","useNavigate","_response$data","get","concat","Count","clinicAppointmentRequestsList","filepath","Array","isArray","report_path","filename","report_name","fileUrl","startsWith","className","CustomSnackBar","type","message","isOpen","style","width","height","Box","component","sx","src","profile_picture","GroupIcon","alt","marginLeft","display","justifyContent","Typography","color","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","first_name","middle_name","last_name","trim","letterSpacing","formatDate","appointment_date","attachments","alignItems","marginRight","CustomButton","buttonCss","padding","gap","flexShrink","borderRadius","isTransaprent","handleClick","Accept","MoreHorizIcon","cursor","border","onClick","event","currentTarget","Menu","id","onClose","handleClose","MenuListProps","MenuItem","CustomModal","title","conditionOpen","footer","Fragment","textAlign","marginTop","flexWrap","flexDirection","CustomRadioButton","handleChange","_ref2","target","value","_objectSpread","items","TextField","placeholder","multiline","rows","maxRows","borderTop","borderRight","borderLeft","justifycontent","fontfamily","fontstyle","fontweight","lineheight","age","gender","handleViewReport","handleDownloadReport","link","document","createElement","href","download","click","DownloadIcon","answer_1","answer_2","answer_3","answer_4","answer_5","backgroundColor","variant"],"sourceRoot":""}