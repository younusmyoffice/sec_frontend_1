{"version":3,"file":"752.fe511b5e8af44ec24fd9.js","mappings":"iRAYA,MAkJA,EAlJgBA,KACZ,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAC1CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,IAC5CG,EAAgBC,IAAqBJ,EAAAA,EAAAA,UAAS,IAC9CK,EAAkBC,IAAuBN,EAAAA,EAAAA,WAAS,IAClDO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,KAC5CS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,GAEjCW,EAAO,CACTC,UAAWC,aAAaC,QAAQ,eAChCC,mBAAoB,eAGlBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,WAAU,KACNL,aAAaM,QAAQ,kBAAmB,aACxCN,aAAaM,QAAQ,OAAQ,WAC7BC,SAASC,eAAe,6BAA6BC,MAAMC,QAAU,kBAErEC,IACAC,EAAM,+BAAgC,cAAe1B,GACrD0B,EAAM,+BAAgC,SAAUvB,GAChDuB,EAAM,+BAAgC,YAAarB,GACnDsB,IAAeC,QAAQ,IAAMjB,GAAW,KACzC,KAEHQ,EAAAA,EAAAA,WAAU,KACNQ,KACD,CAACrB,IAEJ,MAAMqB,EAAeE,UACjB,IAAI,IAAAC,EACA,MAAMC,QAAiBC,EAAAA,EAAcC,KACjC,mCACAC,KAAKC,UAAUvB,IAEnBH,EAAiBsB,SAAc,QAAND,EAARC,EAAUnB,YAAI,IAAAkB,OAAA,EAAdA,EAAgBC,SACrC,CAAE,MAAOK,GAET,GAGEV,EAAQG,MAAOQ,EAAKC,EAAQC,KAC9B,IAAI,IAAAC,EACA,MAAMT,QAAiBC,EAAAA,EAAcC,KAAKI,EAAK,CAC3CxB,UAAWC,aAAaC,QAAQ,eAChCuB,OAAQA,IAEZC,EAASR,SAAc,QAANS,EAART,EAAUnB,YAAI,IAAA4B,GAAa,QAAbA,EAAdA,EAAgBT,SAAS,UAAE,IAAAS,OAAA,EAA3BA,EAA6BC,cAC1C,CAAE,MAAOC,GAET,GAGEjB,EAAeI,UACjB,UACUc,EAAAA,EAAMC,IAAI,GAADC,OACRC,EAAAA,GAAO,2CAAAD,OAA0C/B,aAAaC,QAC7D,gBAGZ,CAAE,MAAOqB,GAET,GAGJ,SAASW,EAA4BC,GACjCzC,EAAoByC,EACxB,CAEA,OACIC,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAC9BJ,EAAAA,cAAA,OAAKK,UAAU,oBACV5C,EACGuC,EAAAA,cAACM,EAAAA,EAAQ,CAACC,QAAQ,OAAOJ,MAAO,IAAKC,OAAQ,MAE7CJ,EAAAA,cAACQ,EAAAA,EAAqB,CAClBC,qBAAsB3D,EACtB4D,gBAAiB,wBAGxBjD,EACGuC,EAAAA,cAACM,EAAAA,EAAQ,CAACC,QAAQ,OAAOJ,MAAO,IAAKC,OAAQ,MAE7CJ,EAAAA,cAACQ,EAAAA,EAAqB,CAClBC,qBAAsBxD,EACtByD,gBAAiB,0BAGxBjD,EACGuC,EAAAA,cAACM,EAAAA,EAAQ,CAACC,QAAQ,OAAOJ,MAAO,IAAKC,OAAQ,MAE7CJ,EAAAA,cAACQ,EAAAA,EAAqB,CAClBC,qBAAsBtD,EACtBuD,gBAAiB,eAK7BV,EAAAA,cAACC,EAAAA,EAAG,CAACI,UAAU,uBACXL,EAAAA,cAACW,EAAAA,GAAO,CAACC,GAAI,4BAA4B,YACzCZ,EAAAA,cAACW,EAAAA,GAAO,CAACC,GAAI,iCAAiC,kBAElDZ,EAAAA,cAACC,EAAAA,EAAG,CACAC,GAAI,CACA3B,QAAS,OACTsC,cAAe,SACfC,OAAQ,oBACRC,aAAc,SACdC,QAAS,KACTZ,OAAQ,SAGZJ,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,SACb1C,EAEGwD,MAAMC,KAAK,IAAID,MAAM,IAAIE,IAAI,CAACC,EAAGC,IAC7BrB,EAAAA,cAACM,EAAAA,EAAQ,CAACgB,IAAKD,EAAOd,QAAQ,cAAcJ,MAAM,OAAOC,OAAQ,OAE5C,IAAzB7C,EAAcgE,OACdvB,EAAAA,cAACwB,EAAAA,EAAiB,CAACC,SAAU,mBAE7BlE,EAAc4D,IAAKxD,GACfqC,EAAAA,cAAC0B,EAAAA,EAAiB,CACdJ,IAAK3D,EAAKgE,GACV7B,4BAA6BA,EAC7BzC,iBAAkBA,EAClBuE,MAAO,SACPjE,KAAMA,MAKtBqC,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAE2B,SAAU,SAAUC,IAAK,SAChC9B,EAAAA,cAAC+B,EAAAA,EAAY,CACTC,YAAaA,IAAMhE,EAAS,8CAC5BiE,eAAe,EACfL,MAAM,gB","sources":["webpack://sec-frontend/./src/DoctorModule/DoctorMainDashboard/Request.js/Request.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DoctorAppointmentCard from \"../../CustomDoctorComponent/CustomDoctorAppointment/DoctorAppointment\";\nimport \"./Request.scss\";\nimport { Box, Skeleton } from \"@mui/material\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport CustomRequestCard from \"../../CustomDoctorComponent/Cards/CustomRequestCard/CardRequest\";\nimport axios from \"axios\";\nimport { baseURL } from \"../../../constants/const\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst Request = () => {\n    const [requestCount, setRequestCount] = useState(0);\n    const [upcomingCount, setUpcomingCount] = useState(0);\n    const [completedCount, setCompletedCount] = useState(0);\n    const [accAndRejClicked, setAccAndRejClicked] = useState(false);\n    const [doctorRequest, setDoctorRequest] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n\n    const data = {\n        doctor_id: localStorage.getItem(\"doctor_suid\"),\n        status_in_progress: \"in_progress\",\n    };\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"dashboard\");\n        localStorage.setItem(\"path\", \"request\");\n        document.getElementById(\"location-search-container\").style.display = \"none !important\";\n\n        fetchrequest();\n        Count(\"/sec/Doctor/DocDashoardCount\", \"in_progress\", setRequestCount);\n        Count(\"/sec/Doctor/DocDashoardCount\", \"booked\", setUpcomingCount);\n        Count(\"/sec/Doctor/DocDashoardCount\", \"completed\", setCompletedCount);\n        fetchDataNew().finally(() => setLoading(false)); // Set loading to false after fetching data\n    }, []);\n\n    useEffect(() => {\n        fetchDataNew();\n    }, [accAndRejClicked]);\n\n    const fetchDataNew = async () => {\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/Doctor/AppointmentsRequests\",\n                JSON.stringify(data),\n            );\n            setDoctorRequest(response?.data?.response);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const Count = async (url, status, setCount) => {\n        try {\n            const response = await axiosInstance.post(url, {\n                doctor_id: localStorage.getItem(\"doctor_suid\"),\n                status: status,\n            });\n            setCount(response?.data?.response[0]?.keyword_count);\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    const fetchrequest = async () => {\n        try {\n            await axios.get(\n                `${baseURL}/sec/Doctor/DocDashoardApp/in_progress/${localStorage.getItem(\n                    \"doctor_suid\",\n                )}`,\n            );\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    function AcceptOrRejectButtonClicked(value) {\n        setAccAndRejClicked(value);\n    }\n\n    return (\n        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n            <div className=\"Appointment-card\">\n                {loading ? (\n                    <Skeleton variant=\"text\" width={200} height={200} />\n                ) : (\n                    <DoctorAppointmentCard\n                        NumberOfAppointments={requestCount}\n                        AppointmentType={\"Appointment Request\"}\n                    />\n                )}\n                {loading ? (\n                    <Skeleton variant=\"text\" width={200} height={200} />\n                ) : (\n                    <DoctorAppointmentCard\n                        NumberOfAppointments={upcomingCount}\n                        AppointmentType={\"Upcoming Appointments\"}\n                    />\n                )}\n                {loading ? (\n                    <Skeleton variant=\"text\" width={200} height={200} />\n                ) : (\n                    <DoctorAppointmentCard\n                        NumberOfAppointments={completedCount}\n                        AppointmentType={\"Completed\"}\n                    />\n                )}\n            </div>\n\n            <Box className=\"DocNavBar-Container\">\n                <NavLink to={\"/doctordashboard/request\"}>Requests</NavLink>\n                <NavLink to={\"/doctordashboard/notification\"}>Notifications</NavLink>\n            </Box>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    border: \"1px solid #E6E1E5\",\n                    borderRadius: \"0.5rem\",\n                    padding: \"2%\",\n                    height: \"55vh\",\n                }}\n            >\n                <Box sx={{ width: \"100%\" }}>\n                    {loading ? (\n                        // Skeleton loaders for request cards\n                        Array.from(new Array(3)).map((_, index) => (\n                            <Skeleton key={index} variant=\"rectangular\" width=\"100%\" height={100} />\n                        ))\n                    ) : doctorRequest.length === 0 ? (\n                        <NoAppointmentCard text_one={\"No Appointment\"} />\n                    ) : (\n                        doctorRequest.map((data) => (\n                            <CustomRequestCard\n                                key={data.id}\n                                AcceptOrRejectButtonClicked={AcceptOrRejectButtonClicked}\n                                accAndRejClicked={accAndRejClicked}\n                                label={\"Accept\"}\n                                data={data}\n                            />\n                        ))\n                    )}\n                </Box>\n                <Box sx={{ position: \"sticky\", top: \"100%\" }}>\n                    <CustomButton\n                        handleClick={() => navigate(\"/doctordashboard/doctorAppointment/request\")}\n                        isTransaprent={true}\n                        label=\"View all\"\n                    />\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Request;\n"],"names":["Request","requestCount","setRequestCount","useState","upcomingCount","setUpcomingCount","completedCount","setCompletedCount","accAndRejClicked","setAccAndRejClicked","doctorRequest","setDoctorRequest","loading","setLoading","data","doctor_id","localStorage","getItem","status_in_progress","navigate","useNavigate","useEffect","setItem","document","getElementById","style","display","fetchrequest","Count","fetchDataNew","finally","async","_response$data","response","axiosInstance","post","JSON","stringify","error","url","status","setCount","_response$data2","keyword_count","err","axios","get","concat","baseURL","AcceptOrRejectButtonClicked","value","React","Box","sx","width","height","className","Skeleton","variant","DoctorAppointmentCard","NumberOfAppointments","AppointmentType","NavLink","to","flexDirection","border","borderRadius","padding","Array","from","map","_","index","key","length","NoAppointmentCard","text_one","CustomRequestCard","id","label","position","top","CustomButton","handleClick","isTransaprent"],"sourceRoot":""}