{"version":3,"file":"193.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/./src/components/Card/CustomUpcomingcard/UpcomingCard.js","webpack://sec-frontend/./src/HCFModule/Clinic/ClinicMyAppointments/ClinicUpcoming/ClinicUpcoming.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\n\n// import \"./customUpcomingCard.scss\";\n// import CustomButton from '../../../components/CustomButton/custom-button';\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport profileImage from \"../../../static/images/DrImages/profileImage.png\";\nimport CustomModal from \"../../CustomModal\";\nimport CustomRadioButton from \"../../CustomRadioButton\";\nimport CustomSnackBar from \"../../CustomSnackBar\";\nimport CustomButton from \"../../CustomButton/custom-button\";\nimport \"./Upcoming.scss\";\nimport axiosInstance from \"../../../config/axiosInstance\";\n\nconst formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date\n        .toLocaleString(\"en-GB\", {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n        })\n        .replace(\",\", \"\");\n};\n\nconst UpcomingCard = ({\n    data = {},\n    Joinlabel,\n    onClickJoinHandler,\n    StatusLabel,\n    AcceptOrRejectButtonClicked,\n    accAndRejClicked\n}) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenDialogCancle(false);\n        setOpenDialogReschedule(false);\n    };\n    const [snackType, setSnackType] = useState(\"\");\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackOpen, setSnackOpen] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [openPatientModal, setOpenPatientModal] = useState(false);\n    const [clinicAppointmentPatient, setClinicAppointmentPatient] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n    const [openModal, setOpenModal] = useState(false);\n\n    const [clicked, setClicked] = useState(false);\n    const [joinAppointmentClinic, setJoinAppointmentClinic] = useState({\n        appointment_id: null,\n        doctor_id: null,\n        option: \"accept\",\n    });\n    const [rejectAppointment, setRejectAppointment] = useState({\n        appointment_id: data?.appointment_id,\n        patient_id: data?.patient_id,\n        doctor_id: data?.doctor_id,\n        reason: \"\",\n        status: \"in_progress\",\n        option: \"reject\",\n    });\n    console.log(\"Reject appointment : \", rejectAppointment);\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    console.log(\"upcoming cards data : \", data);\n    const [openDialogCancle, setOpenDialogCancle] = useState(false);\n    const [openDialogReschedule, setOpenDialogReschedule] = useState(false);\n\n    const radioValues = [\n        \"I have a schedule clash\",\n        \"I am not available at the schedule\",\n        \"I have some other plans\",\n        \"Reason4\",\n        \"Reason5\",\n    ];\n    const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n\n    useEffect(() => {\n        setJoinAppointmentClinic({\n            appointment_id: data?.appointment_id,\n            doctor_id: data?.doctor_id,\n            option: \"join\",\n        });\n    }, []);\n\n    const JoinAppointment = async () => {\n        setClicked(!clicked);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/hcf/joinAppointmentClinic\",\n                JSON.stringify(joinAppointmentClinic),\n                { Accept: \"Application/json\" },\n            );\n            setSnackMessage(\"joined Confirmed\");\n            setSnackType(\"success\");\n            setSnackOpen(true);\n            console.log(\"RESPONSE : \", response?.data);\n            // acceptButtonClicked(\"child\")\n            AcceptOrRejectButtonClicked(!accAndRejClicked);\n        } catch (error) {\n            console.log(error.response);\n            setSnackMessage(\"error during joining appointment\");\n            setSnackType(\"error\");\n            setSnackOpen(true);\n        }\n    };\n\n    const RejectAppointment = async () => {\n        // setRejectClicked(true);\n        console.log(\"Hitting reject request\");\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/hcf/clinicAppointmentReject\",\n                JSON.stringify(rejectAppointment),\n            );\n            setSnackMessage(\"upcoming appointment Rejected\");\n            setSnackType(\"success\");\n            setSnackOpen(true); \n            console.log(\"RESPONSE : \", response?.data);\n            AcceptOrRejectButtonClicked(!accAndRejClicked);\n            setRejectAppointmentFlag(false);\n        } catch (error) {\n            console.log(error.response);\n            setRejectAppointmentFlag(false);\n            setSnackMessage(\"error during rejecting  appointment says \",error.response);\n            setSnackType(\"error\");\n            setSnackOpen(true);\n        }\n    };\n\n    const [rejectAppointmentFlag, setRejectAppointmentFlag] = useState(false);\n\n    useEffect(() => {\n        if (rejectAppointmentFlag) {\n            RejectAppointment();\n        }\n    }, [rejectAppointmentFlag]);\n        //----------------------------------------------------modal code--------------------------------------------\n        const patient_id = data?.patient_id;\n        const appointment_id = data?.appointment_id;\n        const clinicAppointmentRequestsList = async (patient_id, appointment_id) => {\n            setLoading(true); // Set loading to true\n            try {\n                const response = await axiosInstance.get(\n                    `sec/hcf/${patient_id}/${appointment_id}/ClinicAppointmentPatient`,\n                );\n                const Count = response?.data?.response || [];\n                setClinicAppointmentPatient(Count);\n            } catch (error) {\n                console.error(\"Error fetching request data:\", error.response);\n            } finally {\n                setLoading(false); // Set loading to false\n            }\n        };\n    \n        useEffect(() => {\n            clinicAppointmentRequestsList(patient_id, appointment_id);\n        }, []);\n    \n        const handleViewReport = () => {\n            setOpenModal(true);\n        };\n        const filepath = Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_path;\n        const filename = Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_name;\n\n        console.log(\"filepath\", filepath)\n    \n        const handleDownloadReport = () => {\n            // Direct download link for Google Drive\n            const link = document.createElement(\"a\");\n            link.target = \"_blank\";\n            link.href = filepath;\n            link.download = filename;\n            link.click();\n        };\n    \n        const fileUrl = filepath && (filepath.startsWith(\"http\") ? filepath : `/assets/${filepath}`);\n\n    return (\n        <>\n            <div className=\"Request-main-container\">\n            <CustomSnackBar type={snackType} message={snackMessage} isOpen={snackOpen} />\n                <div className=\"Request-inner-container\">\n                    {/* -----Image Container-------- */}\n                    <div style={{ width: \"3.13981rem\", height: \"height: 4.71831rem\" }}>\n                        <div className=\"RequestimageContainer\">\n                            <Box\n                                className=\"image-container\"\n                                component={\"img\"}\n                                sx={{ width: \"100%\", height: \"100%\" }}\n                                src={data?.profile_picture}\n                                alt=\"Profile Image\"\n                            ></Box>\n                        </div>\n                    </div>\n\n                    {/* --------- Details Container-------- */}\n                    <div style={{ marginLeft: \"2%\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                            <Typography\n                                sx={{\n                                    color: \"#313033\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"1.125rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.75rem\",\n                                }}\n                            >\n                                {data?.first_name || data?.middle_name || data?.last_name\n                                    ? `${data?.first_name || \"\"} ${data?.middle_name || \"\"} ${\n                                          data?.last_name || \"\"\n                                      }`.trim()\n                                    : null}\n                            </Typography>\n                            <Box\n                            ml={2}\n                            px={1.5}\n                            py={0.5}\n                            border=\"1px solid #E72B4A\"\n                            borderRadius=\"16px\"\n                            color=\"#E72B4A\"\n                            fontSize=\"0.875rem\"\n                            fontWeight={500}\n                        >\n                            {StatusLabel}\n                        </Box>\n                        </div>\n                        <div className=\"card-details-container\">\n                        \n                            <Typography\n                                sx={{\n                                    color: \"#787579\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"0.75rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    paddingTop: \"8px\",\n                                    lineHeight: \"1.125rem\",\n                                    letterSpacing: \"0.006rem\",\n                                    width: \"17rem\",\n                                }}\n                            >\n                                Schedule | {formatTimestamp(data?.appointment_date)}| {data?.attachments}\n                            </Typography>\n                            <Box\n                                component={\"a\"}\n                                sx={{\n                                    color: \"#E72B4A\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"0.75rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.125rem\",\n                                    letterSpacing: \"0.006rem\",\n                                    paddingTop: \"8px\",\n\n                                }}\n                            >\n                                View\n                            </Box>\n                            \n                        </div>\n                    </div>\n                </div>\n                {/* ------------ Button Container------------ */}\n                <div className=\"request-button-container\">\n                    <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"2%\" }}>\n                        <CustomButton\n                            buttonCss={{\n                                display: \"flex\",\n                                width: \"9.3125rem\",\n                                height: \"2.5rem\",\n                                padding: \"0.5rem 1rem\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                gap: \"0.5rem\",\n                                flexShrink: \"0\",\n                                borderRadius: \"6.25rem\",\n                            }}\n                            label={Joinlabel}\n                            isTransaprent={false}\n                            handleClick={JoinAppointment}\n                        />\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <MoreHorizIcon\n                            sx={{\n                                cursor: \"pointer\",\n                                color: \"#4f4d4d\",\n                                border: \"1px solid #E6E1E5\",\n                                borderRadius: \"50px\",\n                            }}\n                            onClick={handleClick}\n                        />\n                        <Menu\n                            id=\"basic-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                            MenuListProps={{\n                                \"aria-labelledby\": \"basic-button\",\n                            }}\n                        >\n                            {/* ---------------------- Appointments and Re-Schedule--------------------------------------------------- */}\n                            <MenuItem onClick={() => setOpenDialog(!openDialog)}>Reject</MenuItem>\n                            <MenuItem onClick={() => setOpenPatientModal(!openPatientModal)}>\n                                patient Details\n                            </MenuItem>\n                            <CustomModal\n                                isOpen={openDialog}\n                                title={\"Reject Appointment Request\"}\n                                conditionOpen={setOpenDialog}\n                                footer={\n                                    <Fragment>\n                                        <Box\n                                            sx={{\n                                                width: \"100%\",\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                            }}\n                                        ></Box>\n                                    </Fragment>\n                                }\n                            >\n                                <Box sx={{ textAlign: \"center\" }}>\n                                    <Typography>\n                                        Are you sure. you want to cancel the appointment\n                                    </Typography>\n                                </Box>\n                                <div style={{ marginTop: \"4%\" }}>\n                                    <>\n                                        <Box\n                                            sx={{\n                                                marginTop: \"5%\",\n                                                display: \"flex\",\n                                                flexWrap: \"wrap\",\n                                                flexDirection: \"column\",\n                                            }}\n                                        >\n                                            <Typography\n                                                sx={{\n                                                    fontWeight: \"600\",\n                                                    fontSize: \"16px\",\n                                                    lineHeight: \"24px\",\n                                                }}\n                                            >\n                                                Reason For Rejection\n                                            </Typography>\n                                            <CustomRadioButton\n                                                label={\"\"}\n                                                handleChange={({ target }) => {\n                                                    setRadioVal(target.value);\n                                                    setRejectAppointment({\n                                                        ...rejectAppointment,\n                                                        reason: target.value,\n                                                    });\n                                                }}\n                                                value={radioVal}\n                                                items={radioValues}\n                                            />\n                                            <Box sx={{ marginTop: \"5%\", width: \"100%\" }}>\n                                                <Typography>Add Note</Typography>\n                                                <TextField\n                                                    style={{ width: \"100%\", padding: \"3%\" }}\n                                                    placeholder=\"Reason for rejecting the appointment\"\n                                                    multiline\n                                                    rows={3}\n                                                    maxRows={4}\n                                                />\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    marginTop: \"6%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"center\",\n                                                }}\n                                            >\n                                                <CustomButton\n                                                    handleClick={() =>\n                                                        setRejectAppointmentFlag(true)\n                                                    }\n                                                    label=\"Reject Appoitment\"\n                                                />\n                                            </Box>\n                                        </Box>\n                                    </>\n                                </div>\n                            </CustomModal>\n                            {/* view modal */}\n                            <CustomModal\n                                style={{\n                                    display: \"flex\",\n                                }}\n                                isOpen={openPatientModal}\n                                conditionOpen={setOpenPatientModal}\n                                title={\n                                    <Box\n                                        sx={{\n                                            border: \"1px solid #E6E1E5\",\n                                            borderTop: \"1px\",\n                                            borderRight: \"1px\",\n                                            borderLeft: \"1px\",\n                                            width: \"570px\",\n                                            height: \"82px\",\n                                            display: \"flex\",\n                                            justifycontent: \"flexstart\",\n                                        }}\n                                    >\n                                        <h2\n                                            style={{\n                                                textAlign: \"left\",\n                                                fontfamily: \"poppins\",\n                                                fontSize: \"20px\",\n                                                fontstyle: \"normal\",\n                                                fontweight: \"500\",\n                                                lineheight: \"30px\",\n                                                width: \"100%\",\n                                                height: \"30px\",\n                                            }}\n                                        >\n                                            Patient Details\n                                        </h2>\n                                    </Box>\n                                }\n                            >\n                                <div>Patient Details</div>\n                                <div className=\"textfield-cont\">\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Name\n                                        </Typography>\n                                        <Typography>{`${clinicAppointmentPatient[0]?.first_name} ${clinicAppointmentPatient[0]?.last_name}`}</Typography>\n                                    </div>\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Age\n                                        </Typography>\n                                        <Typography>{clinicAppointmentPatient[0]?.age}</Typography>\n                                    </div>\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Gender\n                                        </Typography>\n                                        <Typography>\n                                            {clinicAppointmentPatient[0]?.gender}\n                                        </Typography>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div>Attached files</div>\n                                    <div className=\"textfield-cont\">\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#787579\",\n                                                    fontSize: \"0.875rem\",\n                                                    fontWeight: 400,\n                                                }}\n                                            >\n                                                File name\n                                            </Typography>\n                                            <Typography>\n                                                {clinicAppointmentPatient[0]?.attachments}\n                                            </Typography>\n                                        </div>\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{ color: \"#E72B4A\", cursor: \"pointer\" }}\n                                                onClick={handleViewReport}\n                                            >\n                                                view\n                                            </Typography>\n                                        </div>\n                                        <div className=\"name-email\">\n                                            <Typography\n                                                sx={{\n                                                    color: \"#E72B4A\",\n                                                    display: \"flex\",\n                                                    alignItems: \"center\",\n                                                    cursor: \"pointer\",\n                                                }}\n                                                onClick={handleDownloadReport}\n                                            >\n                                                <DownloadIcon sx={{ marginRight: \"5px\" }} />{\" \"}\n                                                Download\n                                            </Typography>\n                                        </div>\n                                    </div>\n                                    <div>Questions Details</div>\n                                <div className=\"textfield-cont\">\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Question 1\n                                        </Typography>\n                                        <Typography>\n                                            {clinicAppointmentPatient[0]?.answer_1 || \"answer\"}\n                                        </Typography>\n                                    </div>\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Question 2\n                                        </Typography>\n                                        <Typography>\n                                            {clinicAppointmentPatient[0]?.answer_2 || \"answer\"}\n                                        </Typography>\n                                    </div>\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Question 3\n                                        </Typography>\n                                        <Typography>\n                                            {clinicAppointmentPatient[0]?.answer_3 || \"answer\"}\n                                        </Typography>\n                                    </div>\n                                </div>\n                                <div className=\"textfield-conte\">\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Question 4\n                                        </Typography>\n                                        <Typography>\n                                            {clinicAppointmentPatient[0]?.answer_4 || \"answer\"}\n                                        </Typography>\n                                    </div>\n                                    <div className=\"name-email\">\n                                        <Typography\n                                            sx={{\n                                                color: \"#787579\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: 400,\n                                            }}\n                                        >\n                                            Question 5\n                                        </Typography>\n                                        <Typography>\n                                            {clinicAppointmentPatient[0]?.answer_5 || \"answer\"}\n                                        </Typography>\n                                    </div>\n                                </div>\n\n                                    {/* Modal for displaying the report */}\n                                    <CustomModal isOpen={openModal} conditionOpen={setOpenModal}>\n                                        <Box\n                                            sx={{\n                                                width: \"870px\",\n                                                border: \"1px solid #E6E1E5\",\n                                                borderTop: \"1px\",\n                                                borderRight: \"1px\",\n                                                borderLeft: \"1px\",\n                                                height: \"80vh\",\n                                                padding: \"20px\",\n                                                backgroundColor: \"white\",\n                                            }}\n                                        >\n                                            <Typography variant=\"h6\">Report</Typography>\n                                            <iframe\n                                                src={fileUrl}\n                                                width=\"100%\"\n                                                height=\"100%\"\n                                                title=\"Report Viewer\"\n                                                style={{ border: \"1px solid\" }}\n                                            />\n                                        </Box>\n                                    </CustomModal>\n                                </div>\n                            </CustomModal>\n                        </Menu>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default UpcomingCard;\n","import { Box, Skeleton, Pagination } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport UpcomingCard from \"../../../../components/Card/CustomUpcomingcard/UpcomingCard\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst ClinicUpcoming = () => {\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"myappointment\");\n        localStorage.setItem(\"path\", \"clinicupcoming\");\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    }, []);\n\n    const [clinicAppointmentUpcoming, setClinicAppointmentUpcoming] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1); // Current page state\n    const itemsPerPage = 5; // Number of items per page\n    const doctor_id = localStorage.getItem(\"clinic_suid\");\n    const status_booked = \"booked\";\n\n    // Fetch upcoming appointments\n    const fetchUpcomingAppointments = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.get(\n                `sec/hcf/${doctor_id}/${status_booked}/clinicAppointmentUpcoming`\n            );\n            setClinicAppointmentUpcoming(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching upcoming appointment data:\", error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (doctor_id) fetchUpcomingAppointments();\n    }, [doctor_id]);\n\n    // Paginated data\n    const totalPages = Math.ceil(clinicAppointmentUpcoming.length / itemsPerPage);\n    const paginatedData = clinicAppointmentUpcoming.slice(\n        (currentPage - 1) * itemsPerPage,\n        currentPage * itemsPerPage\n    );\n\n    // Handle page change\n    const handlePageChange = (_, value) => setCurrentPage(value);\n\n    return (\n        <div\n            className=\"requestcontainer\"\n            style={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                width: \"98%\",\n            }}\n        >\n            <nav className=\"NavBar-Container-Appoinement\">\n                <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicrequest\"}>\n                    Requests\n                </NavLink>\n                <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicupcoming\"}>\n                    Upcoming\n                </NavLink>\n                <NavLink to={\"/clinicDashboard/clinicmyappointment/cliniccompleted\"}>\n                    Completed\n                </NavLink>\n                <NavLink to={\"/clinicDashboard/clinicmyappointment/cliniccancelled\"}>\n                    Cancelled\n                </NavLink>\n                <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicchats\"}>Chats</NavLink>\n            </nav>\n            <Box\n                component={\"div\"}\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    height: \"100%\",\n                }}\n            >\n                <Box\n                    sx={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        border: \"1px solid #E6E1E5\",\n                        padding: \"1rem\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    {loading ? (\n                        // Skeleton loaders during data fetch\n                        Array.from({ length: itemsPerPage }).map((_, index) => (\n                            <Skeleton\n                                key={index}\n                                variant=\"rectangular\"\n                                width=\"100%\"\n                                height={100}\n                                sx={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n                            />\n                        ))\n                    ) : clinicAppointmentUpcoming.length === 0 ? (\n                        // No data state\n                        <NoAppointmentCard text_one={\"No Appointment\"} />\n                    ) : (\n                        // Render paginated data\n                        paginatedData.map((data, index) => (\n                            <UpcomingCard\n                                key={index}\n                                data={data}\n                                Joinlabel={\"Join\"}\n                                StatusLabel={data.plan_name}\n                            />\n                        ))\n                    )}\n                    {/* Pagination Component */}\n                    {!loading && clinicAppointmentUpcoming.length > 0 && (\n                        <Pagination\n                            count={totalPages}\n                            page={currentPage}\n                            onChange={handlePageChange}\n                            color=\"primary\"\n                            sx={{ marginTop: \"1rem\" }}\n                        />\n                    )}\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default ClinicUpcoming;\n"],"names":["_ref","_clinicAppointmentPat","_clinicAppointmentPat2","_clinicAppointmentPat3","_clinicAppointmentPat4","_clinicAppointmentPat5","_clinicAppointmentPat6","_clinicAppointmentPat7","_clinicAppointmentPat8","_clinicAppointmentPat9","_clinicAppointmentPat0","_clinicAppointmentPat1","_clinicAppointmentPat10","data","Joinlabel","onClickJoinHandler","StatusLabel","AcceptOrRejectButtonClicked","accAndRejClicked","anchorEl","setAnchorEl","React","open","Boolean","snackType","setSnackType","useState","snackMessage","setSnackMessage","snackOpen","setSnackOpen","openDialog","setOpenDialog","openPatientModal","setOpenPatientModal","clinicAppointmentPatient","setClinicAppointmentPatient","loading","setLoading","openModal","setOpenModal","clicked","setClicked","joinAppointmentClinic","setJoinAppointmentClinic","appointment_id","doctor_id","option","rejectAppointment","setRejectAppointment","patient_id","reason","status","openDialogCancle","setOpenDialogCancle","openDialogReschedule","setOpenDialogReschedule","radioValues","radioVal","setRadioVal","useEffect","rejectAppointmentFlag","setRejectAppointmentFlag","async","axiosInstance","post","JSON","stringify","error","response","RejectAppointment","_response$data","get","concat","Count","clinicAppointmentRequestsList","filepath","Array","isArray","report_path","filename","report_name","fileUrl","startsWith","className","CustomSnackBar","type","message","isOpen","style","width","height","Box","component","sx","src","profile_picture","alt","marginLeft","display","justifyContent","Typography","color","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","first_name","middle_name","last_name","trim","ml","px","py","border","borderRadius","paddingTop","letterSpacing","timestamp","appointment_date","Date","toLocaleString","day","month","year","hour","minute","hour12","replace","attachments","alignItems","marginRight","CustomButton","buttonCss","padding","gap","flexShrink","label","isTransaprent","handleClick","Accept","MoreHorizIcon","cursor","onClick","event","currentTarget","Menu","id","onClose","handleClose","MenuListProps","MenuItem","CustomModal","title","conditionOpen","footer","Fragment","textAlign","marginTop","flexWrap","flexDirection","CustomRadioButton","handleChange","_ref2","target","value","_objectSpread","items","TextField","placeholder","multiline","rows","maxRows","borderTop","borderRight","borderLeft","justifycontent","fontfamily","fontstyle","fontweight","lineheight","age","gender","handleViewReport","handleDownloadReport","link","document","createElement","href","download","click","DownloadIcon","answer_1","answer_2","answer_3","answer_4","answer_5","backgroundColor","variant","ClinicUpcoming","localStorage","setItem","getElementById","clinicAppointmentUpcoming","setClinicAppointmentUpcoming","currentPage","setCurrentPage","getItem","fetchUpcomingAppointments","totalPages","Math","ceil","length","paginatedData","slice","NavLink","to","position","top","from","map","_","index","Skeleton","key","marginBottom","NoAppointmentCard","text_one","UpcomingCard","plan_name","Pagination","count","page","onChange","handlePageChange"],"sourceRoot":""}