{"version":3,"file":"799.fe511b5e8af44ec24fd9.js","mappings":"qOAQA,MAkHA,EAlHwBA,MACpBC,EAAAA,EAAAA,WAAU,KACNC,aAAaC,QAAQ,kBAAmB,eACxCD,aAAaC,QAAQ,OAAQ,cAC9B,IAEH,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACxCK,IAAgBL,EAAAA,EAAAA,UAAS,IAEzBM,IAAWN,EAAAA,EAAAA,UAAS,CACvBO,UAAWC,OAAOZ,aAAaa,QAAQ,gBACvCC,cAAe,cAmBnBf,EAAAA,EAAAA,WAAU,KAhBQgB,WACdT,GAAW,GACX,IAAI,IAAAU,EACA,MAAMC,QAAiBC,EAAAA,EAAcC,KACjC,0CACAC,KAAKC,UAAUX,IAEnBP,GAAiBc,SAAc,QAAND,EAARC,EAAUK,YAAI,IAAAN,OAAA,EAAdA,EAAgBC,WAAY,GAEjD,CAAE,MAAOM,GAET,CAAE,QACEjB,GAAW,EACf,GAIAkB,IACD,IAEH,MAKMC,GAAclB,EAAc,GAAKE,EACjCiB,EAAWD,EAAahB,EACxBkB,EAAgBzB,EAAc0B,MAAMH,EAAYC,GAEtD,OACIG,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,MAAO,MAAOC,OAAQ,SAC9CL,EAAAA,cAACM,EAAAA,EAAuB,MACxBN,EAAAA,cAACC,EAAAA,EAAG,CACAM,UAAW,MACXL,GAAI,CACAM,SAAU,WACVC,IAAK,MACLL,MAAO,OACPD,QAAS,OACTE,OAAQ,SAGZL,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEE,MAAO,OAAQC,OAAQ,SAC9BL,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEE,MAAO,OAAQC,OAAQ,SAC9BL,EAAAA,cAACC,EAAAA,EAAG,CACAC,GAAI,CACAE,MAAO,OACPM,OAAQ,oBACRL,OAAQ,MACRM,aAAc,MACdC,QAAS,KACTC,WAAY,OAGfrC,EACGsC,MAAMC,KAAK,CAAEC,OAAQ,IAAKC,IAAI,CAACC,EAAGC,IAC9BnB,EAAAA,cAACoB,EAAAA,EAAQ,CACLC,IAAKF,EACLG,QAAQ,cACRlB,MAAM,OACNC,OAAQ,GACRH,GAAI,CAAEqB,GAAI,MAGO,IAAzBlD,EAAc2C,OACdhB,EAAAA,cAACwB,EAAAA,EAAiB,CAACC,SAAU,mBAE7B3B,EAAcmB,IAAKS,GACf1B,EAAAA,cAAC2B,EAAAA,EAAiB,CAACN,IAAKK,EAAaE,GAAInC,KAAMiC,OAKzDlD,GAAWH,EAAc2C,OAAS,GAChChB,EAAAA,cAACC,EAAAA,EAAG,CACAC,GAAI,CACAC,QAAS,OACT0B,eAAgB,SAChBC,GAAI,IAGR9B,EAAAA,cAAC+B,EAAAA,EAAU,CACPC,MAAOC,KAAKC,KAAK7D,EAAc2C,OAASpC,GACxCuD,KAAMzD,EACN0D,SAjEXC,CAACnB,EAAGoB,KACzB3D,EAAe2D,IAiEiBC,MAAM,kB","sources":["webpack://sec-frontend/./src/DoctorModule/DoctorAppointmentDashboard/DoctorCancelled/DoctorCancelled.js"],"sourcesContent":["import { Box, Skeleton, Pagination } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./doctorCancelled.scss\";\nimport DoctorAppointmentNavbar from \"../../CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar\";\nimport CustomRequestCard from \"../../CustomDoctorComponent/Cards/CustomRequestCard/CardRequest\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst DoctorCancelled = () => {\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"appointment\");\n        localStorage.setItem(\"path\", \"cancelled\");\n    }, []);\n\n    const [completedData, setCompletedData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1); // Current page state\n    const [itemsPerPage] = useState(5); // Items per page\n    \n    const [apiData] = useState({\n        doctor_id: Number(localStorage.getItem(\"doctor_suid\")),\n        status_cancel: \"canceled\",\n    });\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/Doctor/CancelledAppointmentsDoctor\",\n                JSON.stringify(apiData)\n            );\n            setCompletedData(response?.data?.response || []);\n            console.log(\"Doctor cancelled appointments: \", response?.data);\n        } catch (error) {\n            console.log(\"Doctor cancelled appointments error:\", error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const handlePageChange = (_, newPage) => {\n        setCurrentPage(newPage);\n    };\n\n    // Calculate the data to be displayed on the current page\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const paginatedData = completedData.slice(startIndex, endIndex);\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", width: \"95%\", height: \"100%\" }}>\n                <DoctorAppointmentNavbar />\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                            <Box\n                                sx={{\n                                    width: \"100%\",\n                                    border: \"1px solid #E6E1E5\",\n                                    height: \"70%\",\n                                    borderRadius: \"8px\",\n                                    padding: \"2%\",\n                                    marginLeft: \"2%\",\n                                }}\n                            >\n                                {loading ? (\n                                    Array.from({ length: 3 }).map((_, index) => (\n                                        <Skeleton\n                                            key={index}\n                                            variant=\"rectangular\"\n                                            width=\"100%\"\n                                            height={80}\n                                            sx={{ mb: 2 }}\n                                        />\n                                    ))\n                                ) : completedData.length === 0 ? (\n                                    <NoAppointmentCard text_one={\"No Appointment\"} />\n                                ) : (\n                                    paginatedData.map((completeData) => (\n                                        <CustomRequestCard key={completeData.id} data={completeData} />\n                                    ))\n                                )}\n                            </Box>\n                            {/* Pagination Component */}\n                            {!loading && completedData.length > 0 && (\n                                <Box\n                                    sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        mt: 2,\n                                    }}\n                                >\n                                    <Pagination\n                                        count={Math.ceil(completedData.length / itemsPerPage)}\n                                        page={currentPage}\n                                        onChange={handlePageChange}\n                                        color=\"primary\"\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorCancelled;\n"],"names":["DoctorCancelled","useEffect","localStorage","setItem","completedData","setCompletedData","useState","loading","setLoading","currentPage","setCurrentPage","itemsPerPage","apiData","doctor_id","Number","getItem","status_cancel","async","_response$data","response","axiosInstance","post","JSON","stringify","data","error","fetchData","startIndex","endIndex","paginatedData","slice","React","Box","sx","display","width","height","DoctorAppointmentNavbar","component","position","top","border","borderRadius","padding","marginLeft","Array","from","length","map","_","index","Skeleton","key","variant","mb","NoAppointmentCard","text_one","completeData","CustomRequestCard","id","justifyContent","mt","Pagination","count","Math","ceil","page","onChange","handlePageChange","newPage","color"],"sourceRoot":""}