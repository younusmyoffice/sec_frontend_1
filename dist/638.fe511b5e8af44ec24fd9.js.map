{"version":3,"file":"638.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/./src/DoctorModule/DoctorListing/DoctorActiveListing/DoctorActiveLising.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Skeleton, Typography, IconButton } from \"@mui/material\";\nimport { Add as AddIcon, Refresh as RefreshIcon } from \"@mui/icons-material\";\nimport \"./doctorActiveListing.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport CustomDrActiveListingCard from \"../../CustomDoctorComponent/Cards/CustomDrActiveListingCard/CustomDrActiveListingCard\";\nimport DoctorListingNavbar from \"../../CustomDoctorComponent/DoctorListingNavbar/DoctorListingBavbar\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\n\nconst DoctorActiveListing = () => {\n    const [activeListing, setActiveListing] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [deleteDoctorListFlag, setDeleteDoctorListFlag] = useState(false);\n    const [snackmessage , setSnackmessage] = useState(\"\");\n    const [deleteListing, setDeleteListing] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"listing\");\n        localStorage.setItem(\"path\", \"doctoractiveListing\");\n        \n        // Clean up any editing state when returning to active listing\n        const editingListingId = localStorage.getItem(\"editing_listing_id\");\n        if (editingListingId) {\n            console.log(\"Returned to active listing, cleaning up editing state\");\n            localStorage.removeItem(\"editing_listing_id\");\n        }\n    }, []);\n\n    const fetchActiveListing = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.get(\n                `/sec/doctor/DocListingPlanActive/${localStorage.getItem(\"doctor_suid\")}`,\n            );\n            setActiveListing(response?.data?.DocListingPlanActive);\n            setSnackmessage(response?.data?.message);\n            setDeleteDoctorListFlag(false);\n        } catch (err) {\n            console.log(\"Active listing error : \", err);\n            setDeleteDoctorListFlag(false);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const DeleteDoctorListing = async (listID) => {\n        console.log(\"Doctor list ID : \", listID);\n        setDeleteListing(false);\n        // Confirm delete\n        const ok = window.confirm(\"Are you sure you want to delete this listing? This action cannot be undone.\");\n        if (!ok) return;\n        try {\n            const response = await axiosInstance.post(\"/sec/doctor/deleteDocListingPlan\", {\n                doctor_id: Number(localStorage.getItem(\"doctor_suid\")),\n                doctor_list_id: Number(listID),\n            });\n            if (response.status === 200 || response.status === 202) {\n                setDeleteDoctorListFlag(true);\n                setDeleteListing(true);\n            }\n            console.log(\"Delete : \", response);\n        } catch (err) {\n            console.log(\"Error\", err);\n            setDeleteDoctorListFlag(false);\n            setDeleteListing(false);\n        }\n    };\n\n    const ChangeActiveState = async (doctor_id, doctor_list_id) => {  // api for deactivation\n        setDeleteDoctorListFlag(false);\n        const ok = window.confirm(\"Deactivate this listing? Patients will no longer see it.\");\n        if (!ok) return;\n        try {\n            const response = await axiosInstance.post(`/sec/doctor/docListingActiveDeactive`, {\n                doctor_id: Number(doctor_id),\n                doctor_list_id: Number(doctor_list_id),\n                is_active: 0, //deactive\n            });\n            setSnackmessage(response?.data?.response?.message);\n            setDeleteDoctorListFlag(true);\n        } catch (err) {\n            console.log(\"DeActivate Error : \", err);\n            setDeleteDoctorListFlag(false);\n        }\n    };\n\n    const handleEditListing = (listingId) => {\n        // Store the listing ID for editing\n        localStorage.setItem(\"editing_listing_id\", listingId);\n        // Navigate to the listing details page for editing\n        navigate(\"/doctordashboard/doctorListing/listingdetails\");\n    };\n\n    useEffect(() => {\n        if (deleteDoctorListFlag) {\n            fetchActiveListing();\n        }\n    }, [deleteDoctorListFlag]);\n\n    useEffect(() => {\n        fetchActiveListing();\n    }, []);\n\n    return (\n        <>\n            <CustomSnackBar message={snackmessage} isOpen={deleteDoctorListFlag} type={\"success\"} />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"95%\",\n                    height: \"100%\",\n                    flexDirection: \"column\",\n                }}\n            >\n                <Box\n                    sx={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        marginBottom: \"24px\",\n                        flexWrap: \"wrap\",\n                        gap: \"16px\"\n                    }}\n                >\n                    <Box>\n                        <DoctorListingNavbar />\n                    </Box>\n                    <div className=\"\">\n                        <CustomButton\n                            label=\"Create New\"\n                            isTransaprent={\"True\"}\n                            buttonCss={{\n                                width: \"170px\",\n                                borderRadius: \"20px\",\n                            }}\n                            handleClick={() => {\n                                // Clear any existing editing state when creating new\n                                localStorage.removeItem(\"editing_listing_id\");\n                                navigate(\"/doctordashboard/doctorListing/listingdetails\");\n                            }}\n                        />\n                    </div>\n                </Box>\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"0\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box\n                        component={\"div\"}\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            width: \"100%\",\n                            height: \"80%\",\n                        }}\n                    >\n                        {loading ? (\n                            Array.from({ length: 3 }).map((_, index) => (\n                                <Skeleton\n                                    key={index}\n                                    variant=\"rectangular\"\n                                    width=\"100%\"\n                                    height={80}\n                                    sx={{ mb: 2, borderRadius: \"8px\" }}\n                                />\n                            ))\n                        ) : activeListing.length === 0 ? (\n                            <NoAppointmentCard text_one={\"No Listing found\"} />\n                        ) : (\n                            activeListing.map((card) => (\n                                <CustomDrActiveListingCard\n                                    buttonOneLabel={\"Delete\"}\n                                    key={card?.doctor_list_id}\n                                    label={card?.listing_name}\n                                    Idtype={\"Listing ID\"}\n                                    Idnumber={card?.doctor_list_id}\n                                    statusLabel={\"Active\"}\n                                    statusColor={\"success\"}\n                                    onhandleClickButtonOne={() =>\n                                        DeleteDoctorListing(card?.doctor_list_id)\n                                    }\n                                    buttonTwoLabel={\"Deactivate\"}\n                                    onhandleClickButtonTwo={() =>\n                                        ChangeActiveState(card?.doctor_id, card?.doctor_list_id)\n                                    }\n                                    onEditClick={() => handleEditListing(card?.doctor_list_id)}\n                                    showEditButton={true}\n                                />\n                            ))\n                        )}\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorActiveListing;\n"],"names":["DoctorActiveListing","activeListing","setActiveListing","useState","loading","setLoading","deleteDoctorListFlag","setDeleteDoctorListFlag","snackmessage","setSnackmessage","deleteListing","setDeleteListing","navigate","useNavigate","useEffect","localStorage","setItem","getItem","removeItem","fetchActiveListing","async","_response$data","_response$data2","response","axiosInstance","get","concat","data","DocListingPlanActive","message","err","React","CustomSnackBar","isOpen","type","Box","sx","display","width","height","flexDirection","justifyContent","alignItems","marginBottom","flexWrap","gap","DoctorListingNavbar","className","CustomButton","label","isTransaprent","buttonCss","borderRadius","handleClick","component","position","top","Array","from","length","map","_","index","Skeleton","key","variant","mb","NoAppointmentCard","text_one","card","CustomDrActiveListingCard","buttonOneLabel","doctor_list_id","listing_name","Idtype","Idnumber","statusLabel","statusColor","onhandleClickButtonOne","window","confirm","post","doctor_id","Number","listID","status","DeleteDoctorListing","buttonTwoLabel","onhandleClickButtonTwo","_response$data3","is_active","ChangeActiveState","onEditClick","handleEditListing","listingId","showEditButton"],"sourceRoot":""}