{"version":3,"file":"50.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/./src/HCFModule/Clinic/ClinicMyAppointments/ClinicCompleted/ClinicCompleted.js","webpack://sec-frontend/./src/HCFModule/Clinic/ClinicMyAppointments/ClinicCancelled/CancelledCard.js"],"sourcesContent":["import { Box, Skeleton, Typography, Pagination } from \"@mui/material\"; // Import Skeleton for loading placeholders\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport CancelledCard from \"../ClinicCancelled/CancelledCard\";\n\nconst ClinicCompleted = () => {\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"myappointment\");\n        localStorage.setItem(\"path\", \"cliniccompleted\");\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    }, []);\n\n    const [clinicAppointmentCompleted, setClinicAppointmentCompleted] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n    const doctor_id = localStorage.getItem(\"clinic_suid\");\n    const status_complete = \"completed\";\n\n    const fetchCancelledAppointments = async (doctor_id, status_complete) => {\n        setLoading(true); // Set loading to true\n        try {\n            const response = await axiosInstance.get(\n                `sec/hcf/${doctor_id}/${status_complete}/clinicAppointmentComplete`,\n            );\n            const appointments = response?.data?.response || [];\n            setClinicAppointmentCompleted(appointments);\n        } catch (error) {\n            console.error(\"Error fetching cancelled appointment data:\", error.response);\n        } finally {\n            setLoading(false); // Set loading to false\n        }\n    };\n\n    useEffect(() => {\n        if (doctor_id) {\n            fetchCancelledAppointments(doctor_id, status_complete);\n        }\n    }, [doctor_id]);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 5;\n\n    // Calculate paginated data\n    const totalPages = Math.ceil(clinicAppointmentCompleted.length / itemsPerPage);\n    const paginatedData = clinicAppointmentCompleted.slice(\n        (currentPage - 1) * itemsPerPage,\n        currentPage * itemsPerPage,\n    );\n\n    // Handle page change\n    const handlePageChange = (event, value) => {\n        setCurrentPage(value);\n    };\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", width: \"98%\", height: \"100%\", height: \"90%\" }}>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicrequest\"}>\n                        Requests\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicupcoming\"}>\n                        Upcoming\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/cliniccompleted\"}>\n                        Completed\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/cliniccancelled\"}>\n                        Cancelled\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmyappointment/clinicchats\"}>Chats</NavLink>\n                </nav>\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            border: \"1px solid #E6E1E5\",\n                            padding: \"1rem\",\n                        }}\n                    >\n                        {loading ? (\n                            // Display Skeleton loaders while data is loading\n                            Array.from({ length: 5 }).map((_, index) => (\n                                <Skeleton\n                                    key={index}\n                                    variant=\"rectangular\"\n                                    width=\"100%\"\n                                    height={100}\n                                    sx={{ marginBottom: \"1rem\", borderRadius: \"8px\" }}\n                                />\n                            ))\n                        ) : clinicAppointmentCompleted.length === 0 ? (\n                            <NoAppointmentCard text_one=\"No Data found\" />\n                        ) : (\n                            <>\n                                {paginatedData.map((appointment, index) => (\n                                    <CancelledCard\n                                        key={`${appointment.suid}_${index}`}\n                                        profile_picture={appointment.profile_picture}\n                                        name={`${appointment.first_name} ${appointment.last_name}`}\n                                        appointment_date={appointment.appointment_date}\n                                        patient_id={appointment.patient_id}\n                                        appointment_id={appointment.appointment_id}\n                                    />\n                                ))}\n                            </>\n                        )}\n                       \n                    </Box>\n                    <Pagination\n                            count={totalPages}\n                            page={currentPage}\n                            onChange={handlePageChange}\n                            color=\"primary\"\n                            sx={{\n                                marginTop: \"1.5rem\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                            }} />\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default ClinicCompleted;\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Typography, Box, IconButton, Skeleton } from \"@mui/material\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport profileImage from \"../../../../static/images/DrImages/profileImage.png\"; // Sample image\nimport CustomModal from \"../../../../components/CustomModal\";\nimport \"./CancelledCard.scss\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\n\nconst formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date\n        .toLocaleString(\"en-GB\", {\n            day: \"2-digit\",\n            month: \"2-digit\",\n            year: \"numeric\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n        })\n        .replace(\",\", \"\");\n};\n\nconst CancelledCard = ({ name, profile_picture, appointment_date, appointment_id, patient_id }) => {\n    const [openPatientModal, setOpenPatientModal] = useState(false);\n    const [loading, setLoading] = useState(true); // Loading state\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n    const [numPages, setNumPages] = useState(null);\n\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        setNumPages(numPages);\n    };\n\n    const [clinicAppointmentPatient, setClinicAppointmentPatient] = useState([]);\n    const handleViewClick = (patient_id, appointment_id) => {\n        clinicAppointmentRequestsList(patient_id, appointment_id);\n        setOpenPatientModal(true);\n\n    };;\n\n    const handleCloseModal = () => {\n        setOpenPatientModal(false);\n    };\n\n    const [openModal, setOpenModal] = useState(false);\n\n    const handleViewReport = () => {\n        setOpenModal(true);\n    };\n\n    const filepath =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_path;\n    const filename =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_name;\n\n    console.log(\"filepath\", filepath);\n\n    const handleDownloadReport = () => {\n        // Direct download link for Google Drive\n        const link = document.createElement(\"a\");\n        link.target = \"_blank\";\n        link.href = filepath;\n        link.download = filename;\n        link.click();\n    };\n\n    const clinicAppointmentRequestsList = async (patient_id, appointment_id) => {\n        setLoading(true); // Set loading to true\n        try {\n            const response = await axiosInstance.get(\n                `sec/hcf/${patient_id}/${appointment_id}/ClinicAppointmentPatient`,\n            );\n            const Count = response?.data?.response || [];\n            setClinicAppointmentPatient(Count);\n        } catch (error) {\n            console.error(\"Error fetching request data:\", error.response);\n        } finally {\n            setLoading(false); // Set loading to false\n        }\n    };\n    console.log(\"clinicAppointmentPatient---->\", clinicAppointmentPatient);\n    const fileUrl = filepath && (filepath.startsWith(\"http\") ? filepath : `/assets/${filepath}`);\n\n    return (\n        <Box className=\"request-main-container\" sx={{ padding: \"1rem\", borderRadius: \"8px\" }}>\n            <Box display=\"flex\" alignItems=\"center\">\n                {/* Profile Picture */}\n                <Box\n                    sx={{\n                        width: 50,\n                        height: 50,\n                        borderRadius: \"50%\",\n                        overflow: \"hidden\",\n                        marginRight: \"1rem\",\n                    }}\n                >\n                    <img\n                        src={profile_picture || profileImage}\n                        alt=\"Profile\"\n                        style={{ width: \"100%\", height: \"100%\" }}\n                    />\n                </Box>\n\n                {/* Details */}\n                <Box flex=\"1\" textAlign=\"left\">\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"1.125rem\",\n                            fontWeight: 500,\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Box display=\"flex\" alignItems=\"center\" gap=\"1rem\">\n                        <Typography\n                            sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}\n                        >\n                            Schedule | {formatTimestamp(appointment_date)} | Pataient Details\n                        </Typography>\n                        <Box\n                            component=\"a\"\n                            onClick={handleViewClick}\n                            sx={{ color: \"#E72B4A\", fontSize: \"0.875rem\", cursor: \"pointer\" }}\n                        >\n                            View\n                        </Box>\n\n                        <CustomModal\n                                style={{ display: \"flex\" }}\n                                isOpen={openPatientModal}\n                                conditionOpen={setOpenPatientModal}\n                                title={\n                                    <Box\n                                        sx={{\n                                            border: \"1px solid #E6E1E5\",\n                                            borderTop: \"1px\",\n                                            borderRight: \"1px\",\n                                            borderLeft: \"1px\",\n                                            width: \"570px\",\n                                            height: \"82px\",\n                                            display: \"flex\",\n                                            justifyContent: \"flex-start\",\n                                            alignItems: \"center\",\n                                            paddingLeft: \"16px\",\n                                        }}\n                                    >\n                                        {loading ? (\n                                            <Skeleton variant=\"text\" width=\"40%\" height={30} />\n                                        ) : (\n                                            <h2\n                                                style={{\n                                                    textAlign: \"left\",\n                                                    fontFamily: \"Poppins\",\n                                                    fontSize: \"20px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"500\",\n                                                    lineHeight: \"30px\",\n                                                    width: \"100%\",\n                                                    height: \"30px\",\n                                                }}\n                                            >\n                                                Patient Details\n                                            </h2>\n                                        )}\n                                    </Box>\n                                }\n                            >\n                                {loading ? (\n                                    // 🦴 Skeleton content for modal body\n                                    <Box sx={{ padding: 2 }}>\n                                        <Skeleton variant=\"text\" width=\"30%\" />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n                                        <Skeleton variant=\"text\" width=\"30%\" sx={{ mt: 2 }} />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n                                        <Skeleton variant=\"text\" width=\"30%\" sx={{ mt: 2 }} />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n\n                                        <Skeleton variant=\"text\" width=\"40%\" sx={{ mt: 4 }} />\n                                        <Skeleton variant=\"text\" width=\"90%\" />\n                                        <Skeleton variant=\"text\" width=\"90%\" />\n\n                                        <Skeleton variant=\"text\" width=\"40%\" sx={{ mt: 4 }} />\n                                        <Skeleton variant=\"text\" width=\"100%\" height={200} />\n                                    </Box>\n                                ) : (\n                                    <>\n                                        <div>Patient Details</div>\n                                        <div className=\"textfield-cont\">\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Name</Typography>\n                                                <Typography>{`${clinicAppointmentPatient[0]?.first_name} ${clinicAppointmentPatient[0]?.middle_name} ${clinicAppointmentPatient[0]?.last_name}`}</Typography>\n                                            </div>\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Age</Typography>\n                                                <Typography>{clinicAppointmentPatient[0]?.age}</Typography>\n                                            </div>\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Gender</Typography>\n                                                <Typography>{clinicAppointmentPatient[0]?.gender}</Typography>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div>Attached files</div>\n                                            <div className=\"textfield-cont\">\n                                                <div className=\"name-email\">\n                                                    <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>File name</Typography>\n                                                    <Typography>{clinicAppointmentPatient[0]?.attachments}</Typography>\n                                                </div>\n                                                <div className=\"name-email\">\n                                                    <Typography sx={{ color: \"#E72B4A\", cursor: \"pointer\" }} onClick={handleViewReport}>view</Typography>\n                                                </div>\n                                                <div className=\"name-email\">\n                                                    <Typography\n                                                        sx={{\n                                                            color: \"#E72B4A\",\n                                                            display: \"flex\",\n                                                            alignItems: \"center\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={handleDownloadReport}\n                                                    >\n                                                        <DownloadIcon sx={{ marginRight: \"5px\" }} /> Download\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <div>Questions Details</div>\n                                            <div className=\"textfield-cont\">\n                                                {[1, 2, 3, 4, 5].map((q) => (\n                                                    <div className=\"name-email\" key={q}>\n                                                        <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>\n                                                            Question {q}\n                                                        </Typography>\n                                                        <Typography>{clinicAppointmentPatient[0]?.[`answer_${q}`] || \"answer\"}</Typography>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            <CustomModal isOpen={openModal} conditionOpen={setOpenModal}>\n                                                <Box\n                                                    sx={{\n                                                        width: \"870px\",\n                                                        border: \"1px solid #E6E1E5\",\n                                                        height: \"80vh\",\n                                                        padding: \"20px\",\n                                                        backgroundColor: \"white\",\n                                                        overflowY: \"scroll\",\n                                                    }}\n                                                >\n                                                    <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                                                        Report\n                                                    </Typography>\n                                                    <Document\n                                                        // file={fileUrl}\n                                                        file={clinicAppointmentPatient[0]?.report_path}\n                                                        onLoadSuccess={onDocumentLoadSuccess}\n                                                        loading={<Typography>Loading PDF...</Typography>}\n                                                        error={<Typography color=\"error\">Failed to load PDF.</Typography>}\n                                                        noData={<Typography>No PDF file provided.</Typography>}\n                                                    >\n                                                        {Array.from(new Array(numPages), (el, index) => (\n                                                            <Page\n                                                                key={`page_${index + 1}`}\n                                                                pageNumber={index + 1}\n                                                                width={800}\n                                                            />\n                                                        ))}\n                                                    </Document>\n                                                </Box>\n                                            </CustomModal>\n                                        </div>\n                                    </>\n                                )}\n                            </CustomModal>\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default CancelledCard;\n"],"names":["ClinicCompleted","useEffect","localStorage","setItem","document","getElementById","style","display","clinicAppointmentCompleted","setClinicAppointmentCompleted","useState","loading","setLoading","doctor_id","getItem","async","status_complete","_response$data","response","axiosInstance","get","concat","appointments","data","error","fetchCancelledAppointments","currentPage","setCurrentPage","totalPages","Math","ceil","length","paginatedData","slice","React","Box","sx","width","height","className","NavLink","to","component","position","top","flexDirection","alignItems","border","padding","Array","from","map","_","index","Skeleton","key","variant","marginBottom","borderRadius","NoAppointmentCard","text_one","appointment","CancelledCard","suid","profile_picture","name","first_name","last_name","appointment_date","patient_id","appointment_id","Pagination","count","page","onChange","handlePageChange","event","value","color","marginTop","justifyContent","_ref","_clinicAppointmentPat","_clinicAppointmentPat2","_clinicAppointmentPat3","_clinicAppointmentPat4","_clinicAppointmentPat5","_clinicAppointmentPat6","_clinicAppointmentPat7","_clinicAppointmentPat8","_clinicAppointmentPat0","openPatientModal","setOpenPatientModal","pdfjs","workerSrc","numPages","setNumPages","clinicAppointmentPatient","setClinicAppointmentPatient","openModal","setOpenModal","filepath","isArray","report_path","filename","report_name","clinicAppointmentRequestsList","Count","startsWith","overflow","marginRight","src","profileImage","alt","flex","textAlign","Typography","fontFamily","fontSize","fontWeight","gap","Date","toLocaleString","day","month","year","hour","minute","hour12","replace","onClick","handleViewClick","cursor","CustomModal","isOpen","conditionOpen","title","borderTop","borderRight","borderLeft","paddingLeft","fontStyle","lineHeight","mt","middle_name","age","gender","attachments","handleViewReport","handleDownloadReport","link","createElement","target","href","download","click","DownloadIcon","q","_clinicAppointmentPat9","backgroundColor","overflowY","mb","Document","file","onLoadSuccess","_ref2","noData","el","Page","pageNumber"],"sourceRoot":""}