{"version":3,"file":"887.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/./src/DoctorModule/CustomDoctorComponent/Cards/CustomUpcomingCard/CustomUpcomingCard.js","webpack://sec-frontend/./src/DoctorModule/DoctorAppointmentDashboard/DoctorUpcoming/DoctorUpcoming.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport profileImage from \"../../../../static/images/DrImages/profileImage.png\";\nimport { Box, Skeleton, Typography } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport \"./customUpcomingCard.scss\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport CustomModal from \"../../../../components/CustomModal/custom-modal\";\nimport CustomRadioButton from \"../../../../components/CustomRadioButton/custom-radio-button\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport profileimg from \"../../../../static/images/DrImages/pat1.png\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport { convertTo12Hour, isAppointmentTimeReached } from \"../../../../utils/timeUtils\";\nimport { getProfileImageSrc } from \"../../../../utils/imageUtils\";\n\nconst CustomUpcomingCard = ({\n    data = {},\n    Joinlabel,\n    onClickJoinHandler,\n    StatusLabel,\n    AcceptOrRejectButtonClicked,\n    accAndRejClicked,\n    isDisabled\n}) => {\n    // Use backend join_status as primary source, with frontend fallback\n    const canJoin = isAppointmentTimeReached(\n        data?.appointment_date, \n        data?.appointment_time, \n        data?.join_status\n    );\n    const finalIsDisabled = isDisabled || !canJoin;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenDialogCancle(false);\n        setOpenDialogReschedule(false);\n    };\n    const [openDialog, setOpenDialog] = useState(false);\n    const [openPatientModal, setOpenPatientModal] = useState(false);\n    const [clinicAppointmentPatient, setClinicAppointmentPatient] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n    const [numPages, setNumPages] = useState(null);\n\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        setNumPages(numPages);\n    };\n    const [rejectAppointment, setRejectAppointment] = useState({\n        appointment_id: data?.appointment_id,\n        patient_id: data?.patient_id,\n        doctor_id: data?.doctor_id,\n        reason: \"\",\n        status: \"in_progress\",\n        option: \"reject\",\n    });\n    console.log(\"Reject appointment : \", rejectAppointment);\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    console.log(\"upcoming cards data : \", data);\n    const [openDialogCancle, setOpenDialogCancle] = useState(false);\n    const [openDialogReschedule, setOpenDialogReschedule] = useState(false);\n\n    const radioValues = [\n        \"I have a schedule clash\",\n        \"I am not available at the schedule\",\n        \"I have some other plans\",\n        \"Reason4\",\n        \"Reason5\",\n    ];\n    const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n\n    // function to reject the appointment\n    // const RejectAppointment = async () => {\n    //     console.log(\"Rejecting appointment in upcoming card\");\n    //     try {\n    //         const response = await axiosInstance.post(\n    //             \"/sec/Doctor/AppointmentsRequestsReject\",\n    //             rejectAppointment,\n    //         );\n    //         // Add Snack Bar\n    //         console.log(\"RESPONSE : \", response?.data);\n    //     } catch (error) {\n    //         console.log(error);\n    //     }\n    // };\n\n    const RejectAppointment = async () => {\n        // setRejectClicked(true);\n        console.log(\"Hitting reject request\");\n        try {\n            console.log(\"Sending reject appointment data:\", rejectAppointment);\n            const response = await axiosInstance.post(\n                \"/sec/Doctor/AppointmentsRequestsReject\",\n                rejectAppointment,\n            );\n            // Add Snack Bar\n            console.log(\"Reject API Response:\", response?.data);\n            alert(`Appointment ${response?.data?.response?.status || 'rejected successfully'}`);\n            AcceptOrRejectButtonClicked(!accAndRejClicked);\n            setRejectAppointmentFlag(false);\n        } catch (error) {\n            console.error(\"Reject appointment error:\", error);\n            console.error(\"Error response:\", error.response?.data);\n            alert(`Error: ${error.response?.data?.error || error.message || 'Failed to reject appointment'}`);\n            setRejectAppointmentFlag(false);\n        }\n    };\n\n    const [rejectAppointmentFlag, setRejectAppointmentFlag] = useState(false);\n\n    useEffect(() => {\n        if (rejectAppointmentFlag) {\n            RejectAppointment();\n        }\n    }, [rejectAppointmentFlag]);\n\n    const handleViewClick = (patient_id, appointment_id) => {\n        clinicAppointmentRequestsList(patient_id, appointment_id);\n        setOpenPatientModal(true);\n\n    };\n\n    const [openModal, setOpenModal] = useState(false);\n\n    const handleViewReport = () => {\n        setOpenModal(true);\n    };\n\n    const filepath =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_path;\n    const filename =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_name;\n\n    console.log(\"filepath\", filepath);\n\n    const handleDownloadReport = () => {\n        // Direct download link for Google Drive\n        const link = document.createElement(\"a\");\n        link.target = \"_blank\";\n        link.href = filepath;\n        link.download = filename;\n        link.click();\n    };\n\n    const clinicAppointmentRequestsList = async (patient_id, appointment_id) => {\n        setLoading(true); // Set loading to true\n        try {\n            const response = await axiosInstance.get(\n                `sec/hcf/${patient_id}/${appointment_id}/ClinicAppointmentPatient`,\n            );\n            const Count = response?.data?.response || [];\n            setClinicAppointmentPatient(Count);\n        } catch (error) {\n            console.error(\"Error fetching request data:\", error.response);\n        } finally {\n            setLoading(false); // Set loading to false\n        }\n    };\n    console.log(\"clinicAppointmentPatient---->\", clinicAppointmentPatient);\n    const fileUrl = filepath && (filepath.startsWith(\"http\") ? filepath : `/assets/${filepath}`);\n\n    return (\n        <>\n            <div className=\"Request-main-container\">\n                <div className=\"Request-inner-container\">\n                    {/* -----Image Container-------- */}\n                    <div style={{ width: \"3.13981rem\", height: \"4.71831rem\" }}>\n                        <div className=\"RequestimageContainer\">\n                            <Box\n                                className=\"image-container\"\n                                component={\"img\"}\n                                sx={{ width: \"100%\", height: \"100%\" }}\n                                src={getProfileImageSrc(data?.profile_picture, profileimg)} // Fallback for no image\n                                alt=\"Profile Image\"\n                            ></Box>\n                        </div>\n                    </div>\n\n                    {/* --------- Details Container-------- */}\n                    <div style={{ marginLeft: \"2%\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                            <Typography\n                                sx={{\n                                    color: \"#313033\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"1.125rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.75rem\",\n                                }}\n                            >\n                                {data?.patientBookedName === null ? null : data?.patientBookedName}\n                            </Typography>\n                        </div>\n                        <Box\n                            sx={{\n                                width: \"100%\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                marginTop: \"2%\",\n                                marginBottom: \"2%\",\n                            }}\n                        >\n                            <Typography\n                                sx={{\n                                    color: \"#313033\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"12px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"18px\",\n                                    letterSpacing: \"0.096px\",\n                                }}\n                            >\n                                {StatusLabel}\n                            </Typography>\n                            <CustomButton\n                                buttonCss={{\n                                    marginLeft: \"10%\",\n                                    borderRadius: \"50px\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"14px\",\n                                    height: \"32px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"600\",\n                                    lineHeight: \"22px\",\n                                }}\n                                isTransaprent={true}\n                                label={data?.status}\n                                className={\"upcomingButton\"}\n                            ></CustomButton>\n                        </Box>\n                        <div className=\"card-details-container\">\n                            <Typography\n                                sx={{\n                                    color: \"#787579\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"0.75rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.125rem\",\n                                    letterSpacing: \"0.006rem\",\n                                    width: \"16rem\",\n                                    whiteSpace: \"nowrap\", // Prevent wrapping\n                                    overflow: \"hidden\", // Handle overflow\n                                    textOverflow: \"ellipsis\", // Show ellipsis\n                                    flex: \"1\",\n                                }}\n                            >\n                                Schedule | {data?.appointment_date.split(\"T\")[0]} | {convertTo12Hour(data?.appointment_time)} |\n                                {data?.report_name || \"Attachments\"}\n                            </Typography>\n                            <Box\n                                component=\"a\"\n                                onClick={() => handleViewClick(data?.patient_id, data?.appointment_id)}\n                                sx={{\n                                    color: \"#E72B4A\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"0.75rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.125rem\",\n                                    letterSpacing: \"0.006rem\",\n                                    textDecoration: \"none\",\n                                    whiteSpace: \"nowrap\", // Prevent wrapping\n                                    \"&:hover\": {\n                                        textDecoration: \"underline\",\n                                        cursor: \"pointer\"\n\n                                    },\n                                }}\n                            >\n                                View Report\n                            </Box>\n\n                            <CustomModal\n                                style={{ display: \"flex\" }}\n                                isOpen={openPatientModal}\n                                conditionOpen={setOpenPatientModal}\n                                title={\n                                    <Box\n                                        sx={{\n                                            border: \"1px solid #E6E1E5\",\n                                            borderTop: \"1px\",\n                                            borderRight: \"1px\",\n                                            borderLeft: \"1px\",\n                                            width: \"570px\",\n                                            height: \"82px\",\n                                            display: \"flex\",\n                                            justifyContent: \"flex-start\",\n                                            alignItems: \"center\",\n                                            paddingLeft: \"16px\",\n                                        }}\n                                    >\n                                        {loading ? (\n                                            <Skeleton variant=\"text\" width=\"40%\" height={30} />\n                                        ) : (\n                                            <h2\n                                                style={{\n                                                    textAlign: \"left\",\n                                                    fontFamily: \"Poppins\",\n                                                    fontSize: \"20px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"500\",\n                                                    lineHeight: \"30px\",\n                                                    width: \"100%\",\n                                                    height: \"30px\",\n                                                }}\n                                            >\n                                                Patient Details\n                                            </h2>\n                                        )}\n                                    </Box>\n                                }\n                            >\n                                {loading ? (\n                                    // 🦴 Skeleton content for modal body\n                                    <Box sx={{ padding: 2 }}>\n                                        <Skeleton variant=\"text\" width=\"30%\" />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n                                        <Skeleton variant=\"text\" width=\"30%\" sx={{ mt: 2 }} />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n                                        <Skeleton variant=\"text\" width=\"30%\" sx={{ mt: 2 }} />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n\n                                        <Skeleton variant=\"text\" width=\"40%\" sx={{ mt: 4 }} />\n                                        <Skeleton variant=\"text\" width=\"90%\" />\n                                        <Skeleton variant=\"text\" width=\"90%\" />\n\n                                        <Skeleton variant=\"text\" width=\"40%\" sx={{ mt: 4 }} />\n                                        <Skeleton variant=\"text\" width=\"100%\" height={200} />\n                                    </Box>\n                                ) : (\n                                    <>\n                                        <div>Patient Details</div>\n                                        <div className=\"textfield-cont\">\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Name</Typography>\n                                                <Typography>{`${clinicAppointmentPatient[0]?.first_name} ${clinicAppointmentPatient[0]?.middle_name} ${clinicAppointmentPatient[0]?.last_name}`}</Typography>\n                                            </div>\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Age</Typography>\n                                                <Typography>{clinicAppointmentPatient[0]?.age}</Typography>\n                                            </div>\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Gender</Typography>\n                                                <Typography>{clinicAppointmentPatient[0]?.gender}</Typography>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div>Attached files</div>\n                                            <div className=\"textfield-cont\">\n                                                <div className=\"name-email\">\n                                                    <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>File name</Typography>\n                                                    <Typography>{clinicAppointmentPatient[0]?.attachments}</Typography>\n                                                </div>\n                                                <div className=\"name-email\">\n                                                    <Typography sx={{ color: \"#E72B4A\", cursor: \"pointer\" }} onClick={handleViewReport}>view</Typography>\n                                                </div>\n                                                <div className=\"name-email\">\n                                                    <Typography\n                                                        sx={{\n                                                            color: \"#E72B4A\",\n                                                            display: \"flex\",\n                                                            alignItems: \"center\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={handleDownloadReport}\n                                                    >\n                                                        <DownloadIcon sx={{ marginRight: \"5px\" }} /> Download\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <div>Questions Details</div>\n                                            <div className=\"textfield-cont\">\n                                                {[1, 2, 3, 4, 5].map((q) => (\n                                                    <div className=\"name-email\" key={q}>\n                                                        <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>\n                                                            Question {q}\n                                                        </Typography>\n                                                        <Typography>{clinicAppointmentPatient[0]?.[`answer_${q}`] || \"answer\"}</Typography>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            <CustomModal isOpen={openModal} conditionOpen={setOpenModal}>\n                                                <Box\n                                                    sx={{\n                                                        width: \"870px\",\n                                                        border: \"1px solid #E6E1E5\",\n                                                        height: \"80vh\",\n                                                        padding: \"20px\",\n                                                        backgroundColor: \"white\",\n                                                        overflowY: \"scroll\",\n                                                    }}\n                                                >\n                                                    <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                                                        Report\n                                                    </Typography>\n                                                    <Document\n                                                        // file={fileUrl}\n                                                        file={clinicAppointmentPatient[0]?.report_path}\n                                                        onLoadSuccess={onDocumentLoadSuccess}\n                                                        loading={<Typography>Loading PDF...</Typography>}\n                                                        error={<Typography color=\"error\">Failed to load PDF.</Typography>}\n                                                        noData={<Typography>No PDF file provided.</Typography>}\n                                                    >\n                                                        {Array.from(new Array(numPages), (el, index) => (\n                                                            <Page\n                                                                key={`page_${index + 1}`}\n                                                                pageNumber={index + 1}\n                                                                width={800}\n                                                            />\n                                                        ))}\n                                                    </Document>\n                                                </Box>\n                                            </CustomModal>\n                                        </div>\n                                    </>\n                                )}\n                            </CustomModal>\n\n                        </div>\n                    </div>\n                </div>\n                {/* ------------ Button Container------------ */}\n                <div className=\"request-button-container\">\n                    <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"2%\" }}>\n                        <CustomButton\n                            buttonCss={{\n                                display: \"flex\",\n                                width: \"9.3125rem\",\n                                height: \"2.5rem\",\n                                padding: \"0.5rem 1rem\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                gap: \"0.5rem\",\n                                flexShrink: \"0\",\n                                borderRadius: \"6.25rem\",\n                                backgroundColor: finalIsDisabled ? \"#f5f5f5\" : undefined,\n                                color: finalIsDisabled ? \"#999\" : undefined,\n                            }}\n                            isDisabled={finalIsDisabled}\n                            label={canJoin ? Joinlabel : \"Not Available\"}\n                            isTransaprent={false}\n                            handleClick={canJoin ? onClickJoinHandler : () => {}}\n                        />\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <MoreHorizIcon\n                            sx={{\n                                cursor: \"pointer\",\n                                color: \"#E6E1E5\",\n                                border: \"1px solid #E6E1E5\",\n                                borderRadius: \"50px\",\n                            }}\n                            onClick={handleClick}\n                        />\n                        <Menu\n                            id=\"basic-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                            MenuListProps={{\n                                \"aria-labelledby\": \"basic-button\",\n                            }}\n                        >\n                            {/* ---------------------- Appointments and Re-Schedule--------------------------------------------------- */}\n                            <MenuItem onClick={() => setOpenDialog(!openDialog)}>Reject</MenuItem>\n                            <CustomModal\n                                isOpen={openDialog}\n                                title={\"Reject Appointment Request\"}\n                                conditionOpen={setOpenDialog}\n                                footer={\n                                    <Fragment>\n                                        <Box\n                                            sx={{\n                                                width: \"100%\",\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                            }}\n                                        ></Box>\n                                    </Fragment>\n                                }\n                            >\n                                <Box sx={{ textAlign: \"center\" }}>\n                                    <Typography>\n                                        Are you sure. you want to cancel the appointment\n                                    </Typography>\n                                </Box>\n                                <div style={{ marginTop: \"4%\" }}>\n                                    <>\n                                        <Box\n                                            sx={{\n                                                marginTop: \"5%\",\n                                                display: \"flex\",\n                                                flexWrap: \"wrap\",\n                                                flexDirection: \"column\",\n                                            }}\n                                        >\n                                            <Typography\n                                                sx={{\n                                                    fontWeight: \"600\",\n                                                    fontSize: \"16px\",\n                                                    lineHeight: \"24px\",\n                                                }}\n                                            >\n                                                Reason For Rejection\n                                            </Typography>\n                                            <CustomRadioButton\n                                                label={\"\"}\n                                                handleChange={({ target }) => {\n                                                    setRadioVal(target.value);\n                                                    setRejectAppointment({\n                                                        ...rejectAppointment,\n                                                        reason: target.value,\n                                                    });\n                                                }}\n                                                value={radioVal}\n                                                items={radioValues}\n                                            />\n                                            <Box sx={{ marginTop: \"5%\", width: \"100%\" }}>\n                                                <Typography>Add Note</Typography>\n                                                <TextField\n                                                    style={{ width: \"100%\", padding: \"3%\" }}\n                                                    placeholder=\"Reason for rejecting the appointment\"\n                                                    multiline\n                                                    rows={3}\n                                                    maxRows={4}\n                                                />\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    marginTop: \"6%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"center\",\n                                                }}\n                                            >\n                                                <CustomButton\n                                                    handleClick={() =>\n                                                        setRejectAppointmentFlag(true)\n                                                    }\n                                                    label=\"Reject Appoitment\"\n                                                />\n                                            </Box>\n                                        </Box>\n                                    </>\n                                </div>\n                            </CustomModal>\n                        </Menu>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CustomUpcomingCard;\n","import { Box, Skeleton, Pagination } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./doctorUpcoming.scss\";\nimport DoctorAppointmentNavbar from \"../../CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar\";\nimport CustomUpcomingCard from \"../../CustomDoctorComponent/Cards/CustomUpcomingCard/CustomUpcomingCard\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport { useNavigate } from \"react-router-dom\";\nimport { isAppointmentTimeReached } from \"../../../utils/timeUtils\";\n\nconst DoctorUpcoming = () => {\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"appointment\");\n        localStorage.setItem(\"path\", \"upcoming\");\n    }, []);\n\n    const navigate = useNavigate();\n\n    const [accAndRejClicked, setAccAndRejClicked] = useState(false);\n    const [upcomingData, setUpcomingData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState({\n        doctor_id: Number(localStorage.getItem(\"doctor_suid\")),\n        status_booked: \"booked\",\n    });\n\n    // Pagination state\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage] = useState(5); // Items per page\n    \n    // Real-time update state\n    const [timeUpdate, setTimeUpdate] = useState(0);\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/Doctor/UpcomingAppointmentsDoctor\",\n                data,\n            );\n            setUpcomingData(response?.data?.response || []);\n            console.log(\"Doctor upcoming data: \", response?.data?.response);\n        } catch (error) {\n            console.log(\"upcoming Error: \", error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n        fetchData();\n    }, [accAndRejClicked]);\n\n    // Real-time update for join button status\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTimeUpdate(prev => prev + 1);\n        }, 60000); // Update every minute\n\n        return () => clearInterval(interval);\n    }, []);\n\n    const handlePageChange = (_, newPage) => {\n        setCurrentPage(newPage);\n    };\n\n    function AcceptOrRejectButtonClicked(value) {\n        setAccAndRejClicked(value);\n    }\n\n    // Calculate the data to be displayed on the current page\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const paginatedData = upcomingData.slice(startIndex, endIndex);\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", width: \"95%\", height: \"100%\" }}>\n                <DoctorAppointmentNavbar />\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                            <Box\n                                sx={{\n                                    width: \"100%\",\n                                    border: \"1px solid #E6E1E5\",\n                                    height: \"80%\",\n                                    borderRadius: \"8px\",\n                                    padding: \"2%\",\n                                    marginLeft: \"2%\",\n                                }}\n                            >\n                                {loading ? (\n                                    Array.from({ length: 3 }).map((_, index) => (\n                                        <Skeleton\n                                            key={index}\n                                            variant=\"rectangular\"\n                                            width=\"100%\"\n                                            height={80}\n                                            sx={{ mb: 2 }}\n                                        />\n                                    ))\n                                ) : upcomingData.length === 0 ? (\n                                    <NoAppointmentCard text_one={\"No Appointment\"} />\n                                ) : (\n                                    paginatedData.map((data) => {\n                                        // Use backend join_status as primary source, with frontend fallback\n                                        const canJoin = isAppointmentTimeReached(\n                                            data?.appointment_date, \n                                            data?.appointment_time, \n                                            data?.join_status\n                                        );\n                                        const isDisabled = !canJoin;\n                                        \n                                        console.log(`Appointment ${data?.appointment_id}:`, {\n                                            appointment_date: data?.appointment_date,\n                                            appointment_time: data?.appointment_time,\n                                            backend_join_status: data?.join_status,\n                                            canJoin: canJoin,\n                                            isDisabled: isDisabled\n                                        });\n                                        \n                                        return (\n                                            <CustomUpcomingCard\n                                                key={data.id} // Ensure each item has a unique key\n                                                data={data}\n                                                Joinlabel={canJoin ? \"Join\" : \"Not Available\"}\n                                                StatusLabel={data?.plan_name}\n                                                AcceptOrRejectButtonClicked={\n                                                    AcceptOrRejectButtonClicked\n                                                }\n                                                onClickJoinHandler={() => {\n                                                    if (canJoin) {\n                                                        data?.plan_name === \"video\"\n                                                            ? navigate(\n                                                                  `/videocallingsdk/${data?.appointment_id}`,\n                                                              )\n                                                            : data?.plan_name === \"message\"\n                                                            ? navigate(\n                                                                  `/doctordashboard/doctorAppointment/chats/${\n                                                                      data.first_name +\n                                                                      data.middle_name +\n                                                                      data.last_name\n                                                                  }/${data.roomid}/${data?.appointment_id}`,\n                                                              )\n                                                            : null;\n                                                    }\n                                                }}\n                                                accAndRejClicked={accAndRejClicked}\n                                                isDisabled={isDisabled}\n                                            />\n                                        );\n                                    })\n                                )}\n                            </Box>\n                            {/* Pagination Component */}\n                            {!loading && upcomingData.length > 0 && (\n                                <Box\n                                    sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        mt: 2,\n                                    }}\n                                >\n                                    <Pagination\n                                        count={Math.ceil(upcomingData.length / itemsPerPage)}\n                                        page={currentPage}\n                                        onChange={handlePageChange}\n                                        color=\"primary\"\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorUpcoming;\n"],"names":["_ref","_clinicAppointmentPat","_clinicAppointmentPat2","_clinicAppointmentPat3","_clinicAppointmentPat4","_clinicAppointmentPat5","_clinicAppointmentPat6","_clinicAppointmentPat7","_clinicAppointmentPat8","_clinicAppointmentPat0","data","Joinlabel","onClickJoinHandler","StatusLabel","AcceptOrRejectButtonClicked","accAndRejClicked","isDisabled","canJoin","isAppointmentTimeReached","appointment_date","appointment_time","join_status","finalIsDisabled","anchorEl","setAnchorEl","React","open","Boolean","openDialog","setOpenDialog","useState","openPatientModal","setOpenPatientModal","clinicAppointmentPatient","setClinicAppointmentPatient","loading","setLoading","pdfjs","workerSrc","concat","numPages","setNumPages","rejectAppointment","setRejectAppointment","appointment_id","patient_id","doctor_id","reason","status","option","openDialogCancle","setOpenDialogCancle","openDialogReschedule","setOpenDialogReschedule","radioValues","radioVal","setRadioVal","rejectAppointmentFlag","setRejectAppointmentFlag","useEffect","async","_response$data","response","axiosInstance","post","alert","error","_error$response2","message","RejectAppointment","openModal","setOpenModal","filepath","Array","isArray","report_path","filename","report_name","clinicAppointmentRequestsList","_response$data2","get","Count","startsWith","className","style","width","height","Box","component","sx","src","getProfileImageSrc","profile_picture","profileimg","alt","marginLeft","display","justifyContent","Typography","color","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","patientBookedName","alignItems","marginTop","marginBottom","letterSpacing","CustomButton","buttonCss","borderRadius","isTransaprent","label","whiteSpace","overflow","textOverflow","flex","split","convertTo12Hour","onClick","handleViewClick","textDecoration","cursor","CustomModal","isOpen","conditionOpen","title","border","borderTop","borderRight","borderLeft","paddingLeft","Skeleton","variant","textAlign","padding","mt","first_name","middle_name","last_name","age","gender","attachments","handleViewReport","handleDownloadReport","link","document","createElement","target","href","download","click","DownloadIcon","marginRight","map","q","_clinicAppointmentPat9","key","backgroundColor","overflowY","mb","Document","file","onLoadSuccess","_ref2","noData","from","el","index","Page","pageNumber","gap","flexShrink","undefined","handleClick","MoreHorizIcon","event","currentTarget","Menu","id","onClose","handleClose","MenuListProps","MenuItem","footer","Fragment","flexWrap","flexDirection","CustomRadioButton","handleChange","_ref3","value","_objectSpread","items","TextField","placeholder","multiline","rows","maxRows","DoctorUpcoming","localStorage","setItem","navigate","useNavigate","setAccAndRejClicked","upcomingData","setUpcomingData","setData","Number","getItem","status_booked","currentPage","setCurrentPage","itemsPerPage","timeUpdate","setTimeUpdate","getElementById","fetchData","interval","setInterval","prev","clearInterval","startIndex","endIndex","paginatedData","slice","DoctorAppointmentNavbar","position","top","length","_","NoAppointmentCard","text_one","CustomUpcomingCard","plan_name","roomid","Pagination","count","Math","ceil","page","onChange","handlePageChange","newPage"],"sourceRoot":""}