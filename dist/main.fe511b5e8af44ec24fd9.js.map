{"version":3,"file":"main.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/webpack/runtime/chunk loaded","webpack://sec-frontend/webpack/runtime/create fake namespace object","webpack://sec-frontend/webpack/runtime/load script","webpack://sec-frontend/./src/PatientDashboard/Explore/Crousal.js","webpack://sec-frontend/./src/PatientDashboard/Explore/Explore.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminTransaction/TransactionDoctors/SuperAdminTranDoctors.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminPackage/PackageDoctor/PackageDoctor.js","webpack://sec-frontend/./src/DoctorModule/DoctorStatistics/DoctorPayout/DoctorPayout.js","webpack://sec-frontend/./src/components/FilterModal/FilterModal.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticManage/DiagnosticCenterAuditLog/AuditCards.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/ManageDashboard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminHistory/SuperAdminHistoryDoctor/DoctorDetail.js","webpack://sec-frontend/./src/components/NotFound/not-found.js","webpack://sec-frontend/./src/utils/timeUtils.js","webpack://sec-frontend/./src/components/CustomRadioButton/custom-radio-button.js","webpack://sec-frontend/./src/components/Card/Superadmindoctorcard/AdminDoctorCard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminAcessibility/SuperAdminDoctor/SuperAdminDoctor.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/Labs/HCFDrCard.js","webpack://sec-frontend/./src/constants/const.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/CreateNewListing/AddPlan/EditPlanModal.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/CreateNewListing/AddPlan/AddPlanCard.js","webpack://sec-frontend/./src/utils/validationUtils.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminPackage/PackagePatient/PackagePatient.js","webpack://sec-frontend/./src/components/EditListingButton/EditListingButton.js","webpack://sec-frontend/./src/DoctorModule/CustomDoctorComponent/Cards/CustomDrActiveListingCard/CustomDrActiveListingCard.js","webpack://sec-frontend/./src/services/paymentService.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/shared/SectionCard.js","webpack://sec-frontend/./src/components/PageLoader/page-loader.js","webpack://sec-frontend/./src/components/CustomChip/custom-chip.js","webpack://sec-frontend/./src/components/CustomProgress/circular-progress.js","webpack://sec-frontend/./src/components/CustomProgress/linear-progress.js","webpack://sec-frontend/./src/components/CustomTab/custom-tab.js","webpack://sec-frontend/./src/components/CustomToggleSwitch/custom-toggle-switch.js","webpack://sec-frontend/./src/components/CustomList/custom-list.js","webpack://sec-frontend/./src/constants/SearchBarModalCard/SearchBarModalCard.js","webpack://sec-frontend/./src/components/Navbar/searchBarModal.js","webpack://sec-frontend/./src/components/Navbar/locationModal.js","webpack://sec-frontend/./src/components/subcriptionContent/content2.js","webpack://sec-frontend/./src/loginComponent/UserProvider.js","webpack://sec-frontend/./src/components/Navbar/notificationmenu.js","webpack://sec-frontend/./src/api/endpoints.js","webpack://sec-frontend/./src/api/services/authService.js","webpack://sec-frontend/./src/hooks/useAuth.js","webpack://sec-frontend/./src/components/Navbar/profilemenu.js","webpack://sec-frontend/./src/components/CustomMenuDrawer/custom-menu-drawer.js","webpack://sec-frontend/./src/pages/Usage/usage.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientLogin/PatientLogin.js","webpack://sec-frontend/./src/Role/ForgotPassword/ForgotPassword.js","webpack://sec-frontend/./src/Role/ForgotPasswordOTP/ForgotPasswordOTP.js","webpack://sec-frontend/./src/Role/ForgotPasswordChange/ForgotPasswordChange.js","webpack://sec-frontend/./src/api/services/countryService.js","webpack://sec-frontend/./src/components/CustomCountryCodeSelector/CustomCountryCodeSelector.js","webpack://sec-frontend/./src/hooks/useMobileValidation.js","webpack://sec-frontend/./src/Role/LoginwithOTP/LoginWithOTP.js","webpack://sec-frontend/./src/Role/LoginWithOTPVerify/LoginWithOTPVerify.js","webpack://sec-frontend/./src/Role/Signup/SignupPage/SignupPage.js","webpack://sec-frontend/./src/Role/Signup/PatientCompleteProfile/PatientCompleteProfile.js","webpack://sec-frontend/./src/Role/EmailVerification/EmailVerification.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientPersonalInformation/patientpersonalinformation.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientContactInformation/patientcontactinformation.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientPaymentInformation/patientpaymentinformation.js","webpack://sec-frontend/./src/pages/HCFModule/HCFLogin/hcflogin.js","webpack://sec-frontend/./src/pages/HCFModule/HCFDashboard/hcfdashboard.js","webpack://sec-frontend/./src/pages/landingPage/Home/Homes.js","webpack://sec-frontend/./src/pages/landingPage/How it Works/Howitworks.js","webpack://sec-frontend/./src/pages/landingPage/About/AboutLanding.js","webpack://sec-frontend/./src/loginComponent/RequireAuthentication.js","webpack://sec-frontend/./src/PatientDashboard/MainDashboard/MainDashboard.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/AppointmentDashboard.js","webpack://sec-frontend/./src/PatientDashboard/BodyDashboard/BodyDashboard.js","webpack://sec-frontend/./src/PatientDashboard/Profile/Profile.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/ContainerOne.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/ContainerTwo.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/ContainerThree.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/ContainerFour.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/DrDetailsCard.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/Reports/Received/ReceiveTable.js","webpack://sec-frontend/./src/PatientDashboard/MyActivity/Received/Received.js","webpack://sec-frontend/./src/PatientDashboard/MyActivity/Shared/ShareTable.js","webpack://sec-frontend/./src/PatientDashboard/MyActivity/Shared/Shared.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/UpComing/Upcoming.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/Completed/Completed.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/Cancelled/Cancelled.js","webpack://sec-frontend/./src/PatientDashboard/Profile/Payment.js","webpack://sec-frontend/./src/PatientDashboard/Profile/ContactDetails.js","webpack://sec-frontend/./src/DoctorModule/DoctorMainDashboard/DoctorMainDashboard.js","webpack://sec-frontend/./src/DoctorModule/DoctorAppointmentDashboard/DoctorAppointmentDashboard.js","webpack://sec-frontend/./src/DoctorModule/DoctorManage/DoctorManage.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/DoctorListing.js","webpack://sec-frontend/./src/DoctorModule/DoctorStatistics/DoctorStatistics.js","webpack://sec-frontend/./src/DoctorModule/DoctorDashboard/doctordashboard.js","webpack://sec-frontend/./src/DoctorModule/DoctorLogin/doctorlogin.js","webpack://sec-frontend/./src/Role/RoleSelection/SelectHCFRoleLogin/SelectHCFRoleLogin.js","webpack://sec-frontend/./src/HCFModule/HCFLogin/DisgnostLogin/DiagnostLogin.js","webpack://sec-frontend/./src/HCFModule/HCFLogin/ClinicLogin/ClinicLogin.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticDashboard/HCFDiagnosticCenterMainDashboard/HCFDiagnosticCenterMainDashboard.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterReports.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticProfile/DiagnstCenterProfileDashboard.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticManage/DiagnosticCenterManage.js","webpack://sec-frontend/./src/HCFModule/HCFDashboard/DiagnosticCenterDashboard/DiagnosticCenterDashboard.js","webpack://sec-frontend/./src/HCFModule/Clinic/ClinicDashboard/ClinicDashboard.js","webpack://sec-frontend/./src/HCFModule/Clinic/ClinicMyAppointments/ClinicMyAppointments.js","webpack://sec-frontend/./src/HCFModule/Clinic/ClinicProfile/ClinicProfile.js","webpack://sec-frontend/./src/HCFModule/Clinic/ClinicManage/ClinicManage.js","webpack://sec-frontend/./src/HCFModule/HCFDashboard/ClinicDashboard/ClinicMainDashboard.js","webpack://sec-frontend/./src/constants/routes.js","webpack://sec-frontend/./src/hooks/useNavigation.js","webpack://sec-frontend/./src/Role/RoleSelection/SelectRoleSignup/SelectRoleSignup.js","webpack://sec-frontend/./src/components/VerificationLoader/VerificationLoader.js","webpack://sec-frontend/./src/hooks/useVerificationLoader.js","webpack://sec-frontend/./src/Role/Signup/DoctorCompleteProfile/DoctorCompleteProfile.js","webpack://sec-frontend/./src/Role/Signup/HCFCompleteProfile/SelectHCFSignup.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDashboard/AdminNotification.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AdminDoctor.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminDiagnosticCenter.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminManage/AdminManage.js","webpack://sec-frontend/./src/HCFModule/HCFDashboard/AdminDashboard/AdminDashboard.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/Blocked/Blocked.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AddDoctor/DoctorInfo.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AddDoctor/HCFAddQuestioner.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AddDoctor/HCFAddTerms.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AddDoctor/AddDoctor.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AddPackage/AddPackageTable.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AddPackage/AddPackage.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminManage/AdminManageAuditLog/AdminManageAuditLog.js","webpack://sec-frontend/./src/Role/Signup/HCFCompleteProfile/ClinicCompleteProfile/Step3/ServiceDetails.js","webpack://sec-frontend/./src/Role/Signup/HCFCompleteProfile/DiagnosticCompleteProfile/DiagnosticCompleteProfile.js","webpack://sec-frontend/./src/Role/Signup/HCFCompleteProfile/ClinicCompleteProfile/ClinicCompleteProfile.js","webpack://sec-frontend/./src/Role/Signup/HCFCompleteProfile/HCFAdminCompleteProfile/HCFAdminCompleteProfile.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/CreateNewListing/TermsAndCondition/TermsAndCondition.js","webpack://sec-frontend/./src/DoctorModule/DoctorProfile/DoctorProfileInfo/DoctorPersonalInfo.js","webpack://sec-frontend/./src/DoctorModule/DoctorProfile/DoctorProfessionalInfo/DoctorProfessionalInfo.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterChat/ShareList.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterChat/Shared.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterChat/DiagnostCenterChats.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterCharts/DiagnosticCenterCharts.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/BookingHistory/BookingHistoryDrCard.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/BookingHistory/BookingHistory.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/Transactions/Transactions.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/Reports/Reports.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticPatientSearch/PatientSearchTable.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/Reports/AllFiles/AllFiles.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/Reports/examined/Examined.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/Subscription/Subscription.js","webpack://sec-frontend/./src/static/images/DrImages/minimise.svg","webpack://sec-frontend/./src/static/images/DrImages/Mic.svg","webpack://sec-frontend/./src/static/images/DrImages/Videocam.svg","webpack://sec-frontend/./src/static/images/DrImages/Flip camera ios.svg","webpack://sec-frontend/./src/DoctorModule/DoctorAppointmentDashboard/DoctorChat/VideoCall.js","webpack://sec-frontend/./src/DoctorModule/DoctorAppointmentDashboard/DoctorChat/VoiceCall.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/Container1.js","webpack://sec-frontend/./src/static/images/DrImages/icon.svg","webpack://sec-frontend/./src/static/images/DrImages/message.svg","webpack://sec-frontend/./src/static/images/DrImages/bag.svg","webpack://sec-frontend/./src/static/images/DrImages/Group 92.svg","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/Container2.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/Container4.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/HCFDetailedCard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminDashboard/SuperAdminDashboard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminHistory/SuperAdminhistory.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminAcessibility/SuperAdminAccessibility.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminLogs/SuperAdminLogsBody.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminTransaction/SperAdminTransaction.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminPackage/SuperAdminPackage.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminBody/SuperAdminBody.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDiagnosticCenter/Labs/DiagnostLabs.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminLogs/SuperAdminAuditLogs/SuperAdminAuditLogs.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminDashboard/SuperAdminMainDashboard/TableData.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminDashboard/SuperAdminMainDashboard/DashboardTable.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminDashboard/SuperAdminMainDashboard/AdminDashboard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminHistory/SuperAdminHistoryPatient/PatientDetail.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminDashboard/SuperAdminMainDashboard/PatientDetailss.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminDashboard/SuperAdminMainDashboard/superadminmaindashboard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminHistory/SuperAdminHistoryPatient/SuperAdminHistoryPatient.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/About/About.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/Container3.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/Department/Department.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/Labs/Labs.js","webpack://sec-frontend/./src/Role/RoleSelection/SelectRoleLogin/SelectRoleLogin.js","webpack://sec-frontend/./src/Role/Login/PatientModule/HCFAdminLogin/HCFAdminLogin.js","webpack://sec-frontend/./src/Role/Login/PatientModule/SuperAdminLogin/SuperAdminLogin.js","webpack://sec-frontend/./src/VideoCalling/MeetingAppContextDef.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/MicOnIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/MicOffIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/WebcamOnIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/WebcamOffIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/ScreenShareIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/ChatIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/ParticipantsIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/EndIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/RaiseHandIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/Bottombar/PipIcon.js","webpack://sec-frontend/./src/VideoCalling/components/buttons/OutlinedButton.js","webpack://sec-frontend/./src/VideoCalling/hooks/useIsTab.js","webpack://sec-frontend/./src/VideoCalling/hooks/useIsMobile.js","webpack://sec-frontend/./src/VideoCalling/components/buttons/MobileIconButton.js","webpack://sec-frontend/./src/VideoCalling/utils/common.js","webpack://sec-frontend/./src/VideoCalling/hooks/useMediaStream.js","webpack://sec-frontend/./src/VideoCalling/meeting/components/BottomBar.js","webpack://sec-frontend/./src/VideoCalling/utils/helper.js","webpack://sec-frontend/./src/VideoCalling/components/sidebar/ChatPanel.js","webpack://sec-frontend/./src/VideoCalling/icons/ParticipantTabPanel/MicOffIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/ParticipantTabPanel/MicOnIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/ParticipantTabPanel/RaiseHand.js","webpack://sec-frontend/./src/VideoCalling/icons/ParticipantTabPanel/VideoCamOffIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/ParticipantTabPanel/VideoCamOnIcon.js","webpack://sec-frontend/./src/VideoCalling/components/sidebar/ParticipantPanel.js","webpack://sec-frontend/./src/VideoCalling/components/sidebar/SidebarContainer.js","webpack://sec-frontend/./src/VideoCalling/icons/MicOffSmallIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/NetworkIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/SpeakerIcon.js","webpack://sec-frontend/./src/VideoCalling/components/ParticipantView.js","webpack://sec-frontend/./src/VideoCalling/hooks/useWindowSize.js","webpack://sec-frontend/./src/VideoCalling/components/ParticipantGrid.js","webpack://sec-frontend/./src/VideoCalling/meeting/components/ParticipantView.js","webpack://sec-frontend/./src/VideoCalling/icons/ScreenShareIcon.js","webpack://sec-frontend/./src/VideoCalling/components/PresenterView.js","webpack://sec-frontend/./src/VideoCalling/components/screens/WaitingToJoinScreen.js","webpack://sec-frontend/./src/VideoCalling/components/ConfirmBox.js","webpack://sec-frontend/./src/VideoCalling/meeting/MeetingContainer.js","webpack://sec-frontend/./src/VideoCalling/components/screens/LeaveScreen.js","webpack://sec-frontend/./src/VideoCalling/components/MeetingDetailsScreen.js","webpack://sec-frontend/./src/VideoCalling/api.js","webpack://sec-frontend/./src/VideoCalling/icons/WebcamOffIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/MicOffIcon.js","webpack://sec-frontend/./src/VideoCalling/icons/MicPermissionDenied.js","webpack://sec-frontend/./src/VideoCalling/icons/CameraPermissionDenied.js","webpack://sec-frontend/./src/VideoCalling/components/screens/JoiningScreen.js","webpack://sec-frontend/./src/VideoCalling/VideoCallingSDK.js","webpack://sec-frontend/./src/ChatsScreen/ChatRoom.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminLabs/AdminLabDetails/AdminLabDetail.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/HcfDrDetailsCard.js","webpack://sec-frontend/./src/ChatsScreen/components/Home.js","webpack://sec-frontend/./src/ChatsScreen/components/ChatBar.js","webpack://sec-frontend/./src/ChatsScreen/components/ChatBody.js","webpack://sec-frontend/./src/ChatsScreen/components/ChatFooter.js","webpack://sec-frontend/./src/ChatsScreen/components/ChatPage.js","webpack://sec-frontend/./src/Role/Signup/HcfClinicSignup/HcfClinicSingup.js","webpack://sec-frontend/./src/AppRouter.js","webpack://sec-frontend/./src/ClearCache.js","webpack://sec-frontend/./src/config/theme.js","webpack://sec-frontend/./src/App.js","webpack://sec-frontend/./src/actions/index.js","webpack://sec-frontend/./src/reducers/reducer.js","webpack://sec-frontend/./src/reducers/index.js","webpack://sec-frontend/./src/reportWebVitals.js","webpack://sec-frontend/./src/index.js","webpack://sec-frontend/./src/store/configureStore.js","webpack://sec-frontend/./src/components/CustomButton/custom-button.js","webpack://sec-frontend/./src/components/CustomSnackBar/custom-sack-bar.js","webpack://sec-frontend/./src/DoctorModule/DoctorProfile/DoctorProfessionalInfo/WorkExperience.js","webpack://sec-frontend/./src/components/DateModal/DateModal.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/bookappointmentapihelperfunction.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/CreateNewListing/AddPlan/ListingModal.js","webpack://sec-frontend/./node_modules/moment/locale/ sync en%7Cit","webpack://sec-frontend/./src/DoctorModule/DoctorListing/shared/useListingMode.js","webpack://sec-frontend/./src/PatientDashboard/PatientManage/Transactions/TransactionCard.js","webpack://sec-frontend/./src/DoctorModule/CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar.js","webpack://sec-frontend/./src/components/DoctorCard/DoctorCard.js","webpack://sec-frontend/./src/components/CustomDropdown/custom-dropdown.js","webpack://sec-frontend/./src/components/StepContent/StepContent.js","webpack://sec-frontend/./src/components/EmptyState/EmptyState.js","webpack://sec-frontend/./src/hooks/useFormValidation.js","webpack://sec-frontend/./src/PatientDashboard/DrDetailsCard/BookingAppointmentModal.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/AppointmentSlider/RescheduleAppointmentSlider/RescheduleAppointmentSlider.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/AppointmentSlider/CancleAppointment/CancleAppointmentSlider.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/UpComing/CompletedModal/LeaveAReviewModal.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/PatientCards.js","webpack://sec-frontend/./src/ToModal/ToModal.js","webpack://sec-frontend/./src/DoctorModule/CustomDoctorComponent/DoctorListingNavbar/DoctorListingBavbar.js","webpack://sec-frontend/./src/DoctorModule/CustomDoctorComponent/CustomDoctorAppointment/DoctorAppointment.js","webpack://sec-frontend/./src/components/DatePickerModal/DatePickerModal.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminLabs/AdminLabDetails/Testlist.js","webpack://sec-frontend/./src/components/CustomTimePicker/CustomTimePicker.js","webpack://sec-frontend/./src/DoctorModule/DoctorProfile/DoctorProfessionalInfo/License.js","webpack://sec-frontend/./src/DoctorModule/DoctorProfile/DoctorProfessionalInfo/Awards.js","webpack://sec-frontend/./src/config/axiosInstance.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminTransaction/TransactionHCF/SuperAdminTranHCF.js","webpack://sec-frontend/./src/components/CustomModalMUI/CustomModalMUI.js","webpack://sec-frontend/./src/utils/jwtUtils.js","webpack://sec-frontend/./src/HCFModule/Clinic/ClinicManage/ClinicStaff/ClinicSalesActivities.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminHistory/SuperAdminHistoryDoctor/SuperAdminHistoryDoctor.js","webpack://sec-frontend/./src/components/OTPInput/OTPInput.js","webpack://sec-frontend/./src/HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterChat/DiagnostCenterTableCard.js","webpack://sec-frontend/./src/Role/Login/PatientModule/PatientHCF/DrDetailsCard/HCFStepper.js","webpack://sec-frontend/./src/constants/apiConstants.js","webpack://sec-frontend/./src/const_payment/Const_Payment.js","webpack://sec-frontend/./src/utils/imageUtils.js","webpack://sec-frontend/./src/components/CustomDatePicker/CustomDatePicker.js","webpack://sec-frontend/./src/DoctorModule/DoctorStatistics/DoctorBookingHistory/DoctorBookingCard.js","webpack://sec-frontend/./src/DoctorModule/CustomDoctorComponent/DoctorStatisticsNavbar/DoctorStatisticsNavbar.js","webpack://sec-frontend/./src/PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/DoctorSavedDraft/DoctorSavedDraft.js","webpack://sec-frontend/./src/DoctorModule/DoctorListing/shared/StepHeader.js","webpack://sec-frontend/./src/components/Card/PatientCard/PatientadminCard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminAcessibility/SuperAdminpatient/SuperAdminPatient.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminDoctor/AllDoctors/AllDoctorTable.js","webpack://sec-frontend/./src/HCFModule/HCFAdmin/AdminProfile/AdminProfile.js","webpack://sec-frontend/./src/components/CustomTextField/custom-text-field.js","webpack://sec-frontend/./src/components/CustomModal/custom-modal.js","webpack://sec-frontend/./src/components/CustomCheckBox/custom-check-box.js","webpack://sec-frontend/./src/static/images/DrImages/Pen.svg","webpack://sec-frontend/./src/components/Card/HCFadminCard/HCFAdminCard.js","webpack://sec-frontend/./src/SuperAdmin/SuperAdminAcessibility/SuperAdminHCF/SuperAdminHCF.js","webpack://sec-frontend/webpack/bootstrap","webpack://sec-frontend/webpack/runtime/amd options","webpack://sec-frontend/webpack/runtime/compat get default export","webpack://sec-frontend/webpack/runtime/define property getters","webpack://sec-frontend/webpack/runtime/ensure chunk","webpack://sec-frontend/webpack/runtime/get javascript chunk filename","webpack://sec-frontend/webpack/runtime/get mini-css chunk filename","webpack://sec-frontend/webpack/runtime/getFullHash","webpack://sec-frontend/webpack/runtime/global","webpack://sec-frontend/webpack/runtime/hasOwnProperty shorthand","webpack://sec-frontend/webpack/runtime/make namespace object","webpack://sec-frontend/webpack/runtime/node module decorator","webpack://sec-frontend/webpack/runtime/publicPath","webpack://sec-frontend/webpack/runtime/css loading","webpack://sec-frontend/webpack/runtime/jsonp chunk loading","webpack://sec-frontend/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; (typeof current == 'object' || typeof current == 'function') && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"sec-frontend:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import React, { useRef, useEffect, useCallback, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Box, Typography, ImageListItem, ImageList } from \"@mui/material\";\nimport image1 from \"../../static/images/DrImages/CardDoctor1.png\";\nimport image2 from \"../../static/images/DrImages/CardDoctor2.png\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport \"./Crousal.scss\";\nimport Skeleton from \"@mui/material/Skeleton\";\n\nconst useStyles = makeStyles(() => ({\n  // CSS classes are now handled in Crousal.scss\n}));\n\n// Define card data to avoid repetition\nconst cardData = [\n  {\n    title: \"Take control of your health Experience seamless healthcare management with our app.\",\n    image: image1,\n  },\n  {\n    title: \"Your health, our priority Discover personalized healthcare solutions today.\",\n    image: image2,\n  },\n  {\n    title: \"Book an appointment easily Access top healthcare professionals with one click.\",\n    image: image1,\n  },\n];\n\nconst Card = ({ title, image, isLoading }) => {\n  const classes = useStyles();\n\n  if (isLoading) {\n    return (\n      <Box className=\"carousel-skeleton\">\n        <Skeleton variant=\"text\" width=\"60%\" height={40} />\n        <Skeleton variant=\"rectangular\" width=\"35%\" height={100} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box className=\"carousel-card\">\n      <Box className=\"carousel-card-content\">\n        <Typography className=\"carousel-card-title\">\n          {title}\n        </Typography>\n        <CustomButton\n          className=\"carousel-button\"\n          buttonCss={{ \n            border: \"none\", \n            mt: 1,\n            fontSize: \"12px\",\n            padding: \"6px 16px\"\n          }}\n          label=\"Book Now\"\n          isTransaprent={true}\n        />\n      </Box>\n      <Box className=\"carousel-card-image\">\n        <img\n          src={image}\n          alt=\"Doctor\"\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default function SingleLineGridList({ isLoading = false }) {\n  const classes = useStyles();\n  const sliderRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const [isScrolling, setIsScrolling] = useState(false);\n\n  // Smooth scrolling with requestAnimationFrame\n  const scrollCarousel = useCallback(() => {\n    const slider = sliderRef.current;\n    if (!slider) {\n      return;\n    }\n\n    // Check if we can scroll\n    if (slider.scrollWidth <= slider.clientWidth) {\n      return;\n    }\n\n    // Smooth scroll with better speed control\n    slider.scrollLeft += 0.5; // Even slower for smoother effect\n    \n    // Reset to start when we reach the end (with some buffer)\n    if (slider.scrollLeft >= slider.scrollWidth - slider.clientWidth - 10) {\n      slider.scrollLeft = 0; // Reset to start\n    }\n    \n    animationFrameRef.current = requestAnimationFrame(scrollCarousel);\n  }, []);\n\n  // Pause animation on hover\n  const handleMouseEnter = useCallback(() => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      setIsScrolling(false);\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    if (!isLoading && !isScrolling) {\n      setIsScrolling(true);\n      animationFrameRef.current = requestAnimationFrame(scrollCarousel);\n    }\n  }, [isLoading, scrollCarousel, isScrolling]);\n\n  useEffect(() => {\n    if (!isLoading && !isScrolling) {\n      setIsScrolling(true);\n      animationFrameRef.current = requestAnimationFrame(scrollCarousel);\n    }\n    \n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n        setIsScrolling(false);\n      }\n    };\n  }, [isLoading, scrollCarousel, isScrolling]);\n\n  // Duplicate cardData for seamless looping\n  const extendedCardData = [...cardData, ...cardData, ...cardData];\n\n  return (\n    <Box \n      className=\"carousel-container\"\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <ImageList \n        className=\"carousel-slider\" \n        id=\"slider\" \n        cols={2.5} \n        ref={sliderRef}\n        sx={{\n          '& .MuiImageListItem-root': {\n            transition: 'transform 0.3s ease',\n            '&:hover': {\n              transform: 'scale(1.02)',\n            }\n          },\n          '@media (max-width: 600px)': {\n            '&': {\n              cols: 1.5,\n            }\n          },\n          '@media (min-width: 900px)': {\n            '&': {\n              cols: 3,\n            }\n          },\n        }}\n      >\n        {extendedCardData.map((card, index) => (\n          <ImageListItem \n            key={`${card.title}-${index}`} \n            className=\"carousel-item\"\n            sx={{ \n              minWidth: { xs: '250px', sm: '300px', md: '350px' },\n              maxWidth: { xs: '250px', sm: '300px', md: '350px' }\n            }}\n          >\n            <Card title={card.title} image={card.image} isLoading={isLoading} />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </Box>\n  );\n}\n\n// // import React from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n// import KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\n// import { Box, Typography , ImageListItem , ImageList } from \"@mui/material\";\n// import image1 from \"../../static/images/DrImages/image1.png\";\n// import image2 from \"../../static/images/DrImages/image2.png\";\n// import image3 from \"../../static/images/DrImages/image3.png\";\n// import CustomButton from \"../../components/CustomButton/custom-button\";\n// import \"./Crousal.scss\";\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         display: \"flex\",\n//         flexWrap: \"wrap\",\n//         justifyContent: \"space-around\",\n//         overflow: \"hidden\",\n//     },\n//     gridList: {\n//         flexWrap: \"nowrap\",\n//         width: \"100%\",\n//         overflowX: \"hidden\",\n//     },\n// }));\n\n// const tileData = [\n//     {\n//         img: image1,\n//         title: \"title\",\n//     },\n//     {\n//         img: image2,\n//         title: \"title\",\n//     },\n//     {\n//         img: image3,\n//         title: \"title\",\n//     },\n//     {\n//         img: image1,\n//         title: \"title\",\n//     },\n//     {\n//         img: image2,\n//         title: \"title\",\n//     },\n//     {\n//         img: image3,\n//         title: \"title\",\n//     },\n// ];\n\n// export default function SingleLineGridList() {\n//     const classes = useStyles();\n\n//     // const scrollable = document.querySelector(\"slider\");\n//     // console.log(scrollable.addEventListener(\"wheel\"));\n//     const slideLeft = () => {\n//         const slider = document.getElementById(\"slider\");\n//         slider.scrollLeft -= 100;\n//     };\n\n//     const slideRight = () => {\n//         const slider = document.getElementById(\"slider\");\n//         slider.scrollLeft += 100;\n//     };\n\n//     return (\n//         <Box sx={{ display: \"flex\", width: \"100%\" }}>\n//             <Box sx={{ width: \"fit-content\", display: \"flex\", alignItems: \"center\" }}>\n//                 <KeyboardArrowLeftIcon onClick={slideLeft} />\n//             </Box>\n\n//             <ImageList className={classes.gridList} id=\"slider\" cols={2.5}>\n//                 {tileData.map((index) => (\n//                     <ImageListItem key={index}>\n//                         <Box\n//                             sx={{\n//                                 borderRadius: \"8px\",\n//                                 border: \"1px solid #E6E1E5\",\n//                                 height: \"100%\",\n//                                 display: \"flex\",\n//                                 justifyContent: \"space-between\",\n//                             }}\n//                         >\n//                             {/* content Box */}\n//                             <Box\n//                                 sx={{\n//                                     width: \"60%\",\n//                                     display: \"flex\",\n//                                     flexDirection: \"column\",\n//                                     alignItems: \"flex-start\",\n//                                     justifyContent: \"space-around\",\n//                                 }}\n//                             >\n//                                 <Box sx={{ marginLeft: \"5%\" }}>\n//                                     <Typography sx={{ textAlign: \"start\" }}>\n//                                         Take control of your health with our user-friendly health\n//                                         care app.\n//                                     </Typography>\n//                                 </Box>\n//                                 <Box sx={{ marginLeft: \"5%\" }}>\n//                                     <CustomButton\n//                                         buttonCss={{ border: \"none\" }}\n//                                         label=\"Book Now\"\n//                                         isTransaprent={true}\n//                                     />\n//                                 </Box>\n//                             </Box>\n//                             {/* Image Box */}\n//                             <Box sx={{ width: \"40%\" }}>\n//                                 {/* <Box component={'img'} src={tileData.image1} ></Box> */}\n//                                 <img\n//                                     src={tileData[0].img}\n//                                     alt=\"/\"\n//                                     style={{\n//                                         width: \"100%\",\n//                                         height: \"100%\",\n//                                         borderRadius: \"14px\",\n//                                         padding: \"4px\",\n//                                     }}\n//                                 ></img>\n//                             </Box>\n//                         </Box>\n//                     </ImageListItem>\n//                 ))}\n//             </ImageList>\n\n//             <Box sx={{ width: \"fit-content\", display: \"flex\", alignItems: \"center\" }}>\n//                 <KeyboardArrowRightIcon onClick={slideRight} />\n//             </Box>\n//         </Box>\n//     );\n// }\n","import { Box, Typography } from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"@mui/material\";\nimport { data, CallCardData, baseURL } from \"../../constants/const\";\n// import Drcard from \"../../constants/drcard/drcard\";\nimport PromotionalBanner from \"../../components/PromotionalBanner\";\nimport HorizontalScrollCards from \"../../components/HorizontalScrollCards\";\nimport CategoryFilter from \"../../components/CategoryFilter\";\nimport DoctorCard from \"../../components/DoctorCard\";\nimport HealthcareFacilityCard from \"../../components/HealthcareFacilityCard\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport SingleLineGridList from \"./Crousal\";\nimport \"./Explore.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport NoAppointmentCard from \"../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst Explore = () => {\n    const [cardData, setCardData] = useState([]);\n    const [hcfData, setHCFData] = useState([]);\n    const [docnearme, setDocnearme] = useState([]);\n    const [populardoc, setPopularDoc] = useState([]);\n    const [fetureddoc, setFeturedDoc] = useState([]);\n    const [nav_specialization, setNav_spelization] = useState([]);\n    const [specializationDoc, setSpecializationDoc] = useState(\"CARDIOLOGIST\");\n    const [specializationCardData, setspecializationCardData] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n\n    const fetchDataNew = async () => {\n        try {\n            const response = await axiosInstance.get(\"/sec/patient/DashboardDoctordetail\");\n            setCardData(response?.data?.response);\n        } catch (error) {\n            console.log(error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchDoctorNearme = async (zipcodes) => {\n        if (!zipcodes || zipcodes.length === 0) {\n            console.error(\"Zipcodes are required\");\n            return;\n        }\n    \n        setLoading(true); // Set loading state to true\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/doctornearme\",\n                JSON.stringify({\n                    zipcodes, // Pass array of zipcodes\n                    type: \"Good\",\n                    page: 1,\n                    limit: 5,\n                })\n            );\n            setDocnearme(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching doctors near me:\", error.response);\n        } finally {\n            setLoading(false); // Always set loading to false after the request\n        }\n    };\n    \n    const fetchPopularDoctor = async (zipcodes) => {\n        if (!zipcodes || zipcodes.length === 0) {\n            console.error(\"Zipcodes are required\");\n            return;\n        }\n    \n        setLoading(true); // Set loading state to true\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/doctor/populardoctors\",\n                JSON.stringify({\n                    zipcodes, // Pass array of zipcodes\n                    type: \"Good\",\n                    page: 1,\n                    limit: 5,\n                })\n            );\n            setPopularDoc(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching doctors near me:\", error.response);\n        } finally {\n            setLoading(false); // Always set loading to false after the request\n        }\n    };\n    const fetchfeaturedoctors = async (zipcodes) => {\n        if (!zipcodes || zipcodes.length === 0) {\n            console.error(\"Zipcodes are required\");\n            return;\n        }\n    \n        setLoading(true); // Set loading state to true\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/doctor/featureddoctors\",\n                JSON.stringify({\n                    zipcodes, // Pass array of zipcodes\n                    type: \"Good\",\n                    page: 1,\n                    limit: 5,\n                })\n            );\n            setFeturedDoc(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching doctors near me:\", error.response);\n        } finally {\n            setLoading(false); // Always set loading to false after the request\n        }\n    };\n\n    const fetchZipcodeFromCurrentLocation = async () => {\n        if (!navigator.geolocation) {\n            console.error(\"Geolocation is not supported by this browser\");\n            return;\n        }\n    \n        setLoading(true);\n        navigator.geolocation.getCurrentPosition(\n            async (position) => {\n                const { latitude, longitude } = position.coords;\n    \n                try {\n                    // Use Nominatim API for reverse geocoding\n                    const geoResponse = await axios.get(\n                        `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`\n                    );\n    \n                    // Extract zip code from the response\n                    const zipCode = geoResponse?.data?.address?.postcode;\n    \n                    if (zipCode) {\n                        // Call the fetchDoctorNearme function with the zip code in an array\n                        await fetchDoctorNearme([zipCode]);\n                        await fetchPopularDoctor([zipCode]);\n                        await fetchfeaturedoctors([zipCode]);\n                    } else {\n                        console.error(\"Zipcode not found in the location data\");\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching zip code:\", error);\n                } finally {\n                    setLoading(false);\n                }\n            },\n            (error) => {\n                console.error(\"Error getting location:\", error.message);\n                setLoading(false);\n            }\n        );\n    };\n    const fetchDataHCFCards = async () => {\n        try {\n            const response = await axiosInstance.get(\"/sec/patient/DashboardHcfdetails\");\n            setHCFData(response?.data?.response);\n        } catch (error) {\n            console.log(error.response);\n        }\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"dashboard\");\n        fetchDataNew();\n        fetchDataHCFCards();\n        fetchZipcodeFromCurrentLocation();\n        fetchDoctorNearme();\n    }, []);\n\n    const navSpecializtion = async () => {\n        try {\n            const resp = await axiosInstance(`/sec/patient/doctorDepartments`);\n            setNav_spelization(resp?.data?.response);\n        } catch (err) {\n            console.log(\"Nav specialization error : \", err);\n        }\n    };\n\n    useEffect(() => {\n        navSpecializtion();\n    }, []);\n\n    const scrollContainerRef = useRef(null);\n\n    const handleScrollLeft = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft -= 100; // Adjust scroll distance as needed\n        }\n    };\n\n    const handleScrollRight = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft += 100; // Adjust scroll distance as needed\n        }\n    };\n\n    const DoctorSpecialization = async (specialist) => {\n        try {\n            const response = await axiosInstance(`/sec/patient/getdoctorsByDept/${specialist}/3`);\n            setspecializationCardData(response?.data?.response[`${specializationDoc}`]);\n        } catch (err) {\n            console.log(\"specialization error : \", err);\n        }\n    };\n\n    useEffect(() => {\n        if (specializationDoc !== \"\") {\n            DoctorSpecialization(specializationDoc);\n        }\n    }, [specializationDoc]);\n\n    return (\n        <Box sx={{ width: \"90%\" }}>\n            <Box className=\"NavBar-Box\" sx={{ marginLeft: 0, marginBottom: 0 }}>\n                <NavLink to={\"/patientdashboard/dashboard/explore\"}>Explore</NavLink>\n                <NavLink to={\"/patientdashboard/dashboard/myactivity\"}>My Activity</NavLink>\n            </Box>\n            <Box sx={{ width: \"100%\" }}>\n                {/* Horizontal slider starts */}\n                {/* <Box sx={{ width: \"100%\", height: \"fit-content\", overflow: \"hidden\" }}>\n                <HorizontalScrollCards\n                    title=\"\"\n                    subtitle=\"Most booked doctors in your area\"\n                    loading={loading}\n                />\n                </Box>\n                <Box sx={{ width: \"100%\", height: \"fit-content\", overflow: \"hidden\" }}>\n                    <SingleLineGridList\n                        loading={loading} // Add this line to pass the loading prop\n                    />\n                </Box> */}\n                {/* Popular Field starts */}\n\n                <CallCardData\n                    linkPath={`/patientdashboard/drdetailscard/`}\n                    sendCardData={populardoc}\n                    CardData={data}\n                    textField={\"Popular\"}\n                    loading={loading} // Add this line to pass the loading prop\n                />\n                {/* Featured Fields starts */}\n\n                <CallCardData\n                    linkPath={`/patientdashboard/drdetailscard/`}\n                    sendCardData={cardData}\n                    CardData={data}\n                    textField={\"Featured\"}\n                    loading={loading} // Add this line to pass the loading prop\n                />\n                {/* Category component starts */}\n                <Box>\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"flex-start\",\n                            alignItems: \"flex-start\",\n                            position: \"relative\",\n                            paddingBottom: \"10px\",\n                        }}\n                    >\n                        <h4 sx={{ fontWeight: \"bold\", position: \"absolute\", top: 0, left: 0 }}>\n                            Categories\n                        </h4>\n                    </Box>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                        <div onClick={handleScrollLeft}>\n                            <ChevronLeftIcon />\n                        </div>\n                        <Box\n                            sx={{ display: \"flex\", position: \"relative\" }}\n                            className={\"horizontal-scroll-container NavBar-Container-one\"}\n                        >\n                            <div\n                                ref={scrollContainerRef}\n                                style={{ overflowX: \"auto\", display: \"flex\" }}\n                            >\n                                {Array.isArray(nav_specialization) &&\n                                    nav_specialization.map((specialization, index) => (\n                                        <CustomButton\n                                            key={index}\n                                            to={`/patientdashboard/${specialization?.department_name.toLowerCase()}`}\n                                            label={`${specialization?.department_name}`}\n                                            isTransaprent={\n                                                specialization.department_name.toLowerCase() ===\n                                                specializationDoc.toLowerCase()\n                                                    ? false\n                                                    : true\n                                            }\n                                            buttonCss={{\n                                                borderRadius: \"50px\",\n                                                padding: \"0 6.5%\",\n                                                marginRight: \"1%\",\n                                                whiteSpace: \"normal\",\n                                            }}\n                                            handleClick={() => {\n                                                setSpecializationDoc(\n                                                    specialization?.department_name,\n                                                );\n                                            }}\n                                        />\n                                    ))}\n                            </div>\n                        </Box>\n                        <div onClick={handleScrollRight}>\n                            <ChevronRightIcon />\n                        </div>\n                    </Box>\n                    {loading ? (\n                        <div style={{ display: \"flex\", flexWrap: \"overflow\", gap: \"10px\" }}>\n                            {[...Array(4)].map((_, index) => (\n                                <Skeleton\n                                    key={index}\n                                    height=\"8rem\"\n                                    width=\"20em\"\n                                    style={{ borderRadius: \"8px\" }}\n                                />\n                            ))}\n                        </div>\n                    ) : (specializationCardData?.length || 0) > 0 ? (\n                        <CallCardData\n                            linkPath={`/patientdashboard/drdetailscard/`}\n                            sendCardData={specializationCardData}\n                            loading={loading}\n                        />\n                    ) : (\n                        <NoAppointmentCard style={{ height: \"8rem\" }} text_one=\"No Data found\" />\n                    )}\n                </Box>\n                {/* Near you component starts */}\n\n                <CallCardData\n                    linkPath={`/patientdashboard/drdetailscard/`}\n                    sendCardData={docnearme}\n                    CardData={data}\n                    textField={\"Near You\"}\n                    loading={loading} // Add this line to pass the loading prop\n                />\n                {/* Hcf Cards component starts */}\n\n                <CallCardData\n                    linkPath={`/patientdashboard/hcfDetailCard/`}\n                    sendCardData={hcfData}\n                    CardData={data}\n                    textField={\"Healthcare Facility\"}\n                    loading={loading} // Add this line to pass the loading prop\n                />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Explore;\n","import {\n    Box,\n    Stack,\n    Typography,\n    // Box,\n    Paper,\n    // Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Card,\n    CardContent,\n    Skeleton,\n    // Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerModal from \"../../../components/DatePickerModal/DatePickerModal\";\nimport \"./SuperAdminTranDoctor.scss\";\nimport doc1 from \"../../../static/images/DrImages/doc1.png\";\nimport doc2 from \"../../../static/images/DrImages/doc2.png\";\nimport doc3 from \"../../../static/images/DrImages/doc3.png\";\nimport { DoctorDetail } from \"../../SuperAdminHistory/SuperAdminHistoryDoctor/DoctorDetail\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst SuperAdminTranDoctors = () => {\n    const [cardData, setCardData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    \n    const fetchData = async () => {\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/transction/doctor');\n            console.log(\"Dashboard Response from API: \",resp?.data);\n            setCardData(resp?.data?.response);\n        }catch(err){\n            console.log(\"Error : \", err)\n        }finally {\n            setLoading(false);\n        }\n      };\n      \n      useEffect( () => {\n        fetchData();\n      },[] )\n    \n      React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"transaction\");\n        localStorage.setItem(\"path\", \"hcf\");\n    }, []);\n    \n    return (\n        <>\n            <div className=\"search-date-filter\">\n                <Box\n                    display={\"flex\"}\n                    margin={\"10px\"}\n                    flexWrap={\"wrap\"}\n                    border={1}\n                    borderColor=\"#AEAAAE\"\n                    borderRadius={\"25px\"}\n                    width={\"26em\"}\n                    height=\"38px\"\n                    backgroundColor=\"#E6E1E5\"\n                >\n                    <Stack direction=\"row\" alignItems=\"center\" gap={1} padding={\"10px\"}>\n                        <SearchIcon sx={{ margin: \"0 0 0 0%\", color: \"#AEAAAE\" }} />\n                        <Typography variant=\"body1\" sx={{ textAlign: \"left\", color: \"#AEAAAE\" }}>\n                            Search Patient Name / ID\n                        </Typography>\n                    </Stack>\n                </Box>\n                <DatePickerModal />\n            </div>\n            <div className=\"superadmin-trandoctor-navbar\" style={{ marginTop: \"2rem\" }}>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/superadmin/transaction/doctor\"}>Doctor</NavLink>\n                    <NavLink to={\"/superadmin/transaction/hcf\"}>HCF</NavLink>\n                </nav>\n            </div>\n            <div className=\"tran-doc-table\">\n                <TableContainer component={Paper} style={{ background: \"white\" }}>\n                    <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow style={{ fontWeight: \"bold\" }}>\n                                <TableCell><strong>Dr.Name & Details</strong></TableCell>\n                                <TableCell align=\"right\"><strong>Doctor ID</strong></TableCell>\n                                <TableCell align=\"right\"><strong>Doctor%</strong></TableCell>\n                                <TableCell align=\"center\"><strong>SuperAdmin%</strong></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {loading ? (\n                                Array.from(new Array(5)).map((_, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell><Skeleton variant=\"text\" width={150} /></TableCell>\n                                        <TableCell align=\"right\"><Skeleton variant=\"text\" width={80} /></TableCell>\n                                        <TableCell align=\"right\"><Skeleton variant=\"text\" width={60} /></TableCell>\n                                        <TableCell align=\"right\"><Skeleton variant=\"text\" width={60} /></TableCell>\n                                    </TableRow>\n                                ))\n                            ) : cardData.length === 0 ? (\n                                <TableRow>\n                                    <TableCell colSpan={4} align=\"center\">\n                                        <NoAppointmentCard message=\"No Doctor Data Found\" />\n                                    </TableCell>\n                                </TableRow>\n                            ) : (\n                            cardData?.map((data) => (\n                                <TableRow\n                                    key={data?.user_id}\n                                    sx={{\n                                        \"&:last-child td, &:last-child th\": { border: 0 },\n                                    }}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                                        {data?.name}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{data?.user_id}</TableCell>\n                                    <TableCell align=\"center\">{data?.user_percentage}</TableCell>\n                                    {/* <TableCell align=\"right\">{data?.fat}</TableCell> */}\n                                    <TableCell align=\"right\">{data?.superadmin_percentage}</TableCell>\n                                    {/* <TableCell align=\"center\">{data?.}</TableCell> */}\n                                </TableRow>\n                            ))\n                        )}\n                                     \n                            </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    );\n};\n\nexport default SuperAdminTranDoctors;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n    Box,\n    Paper,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    Skeleton,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport ToModal from \"../../../ToModal/ToModal\";\nimport \"./PackageDoctor.scss\";\nimport { DoctorDetail } from \"../../SuperAdminHistory/SuperAdminHistoryDoctor/DoctorDetail\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport doc1 from \"../../../static/images/DrImages/doc1.png\";\nimport doc2 from \"../../../static/images/DrImages/doc2.png\";\nimport doc3 from \"../../../static/images/DrImages/doc3.png\";\n\nfunction createData(name, calories, fat, carbs, protein, action) {\n    return { name, calories, fat, carbs, protein, action };\n}\n\nconst rows = [\n    createData(\n        <DoctorDetail image={doc3} name={\"Dr. James k\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            30 min, messaging plan\n        </Typography>,\n    ),\n    createData(\n        <DoctorDetail image={doc2} name={\"Dr. Jennifer\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            60min, voice plan\n        </Typography>,\n    ),\n    createData(\n        <DoctorDetail image={doc1} name={\"Dr. Maria Gracia\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            90min, video plan\n        </Typography>,\n    ),\n];\nconst PackageDoctor = () => {\n    const [loading, setLoading] = useState(true);\n    const [value, setValue] = useState([null, null]);\n    \n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"package\");\n        localStorage.setItem(\"path\", \"packagedoctor\");\n    // const [value, setValue] = useState([null, null]);\n    // function getWeeksAfter(date, amount) {\n    //     return date ? date.add(amount, \"week\") : undefined;\n    // }\n\n    setTimeout(() => {\n        setLoading(false);\n    }, 1000); \n\n}, []);\n    \nreturn (\n        <>\n            <nav className=\"NavBar-Container-Appoinement\">\n                <NavLink to={\"/superadmin/package/packagedoctor\"}>Doctor</NavLink>\n                <NavLink to={\"/superadmin/package/packagepatient\"}>Patient</NavLink>\n            </nav>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"98%\",\n                    height: \"100%\",\n                    height: \"90%\",\n                    flexDirection: \"row\",\n                }}\n            >\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"block\",\n                        height: \"100%\",\n                    }}\n                >\n                    <div className=\"search-date\">\n                        <Box\n                            display={\"flex\"}\n                            margin={\"10px\"}\n                            flexWrap={\"wrap\"}\n                            border={1}\n                            borderColor=\"#AEAAAE\"\n                            borderRadius={\"25px\"}\n                            width={\"20em\"}\n                            height=\"38px\"\n                            backgroundColor=\"#E6E1E5\"\n                        >\n                            <Stack direction=\"row\" alignItems=\"center\" gap={1} padding={\"10px\"}>\n                                <SearchIcon sx={{ margin: \"0 0 0 0%\", color: \"#AEAAAE\" }} />\n                                <Typography\n                                    variant=\"body1\"\n                                    sx={{ textAlign: \"left\", color: \"#AEAAAE\" }}\n                                >\n                                    Search Patient Name / ID\n                                </Typography>\n                            </Stack>\n                        </Box>\n                        <div style={{ display: \"flex\", marginLeft: \"100px\" }}>\n                            <ToModal label={\"Date\"} tagname={\"Date\"} />\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <TableContainer component={Paper} style={{ background: \"white\" }}>\n                            <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow style={{ fontWeight: \"bold\" }}>\n                                        <TableCell><strong>Name & Details</strong></TableCell>\n                                        <TableCell align=\"left\" style={{ marginRight: \"5rem\" }}>\n                                            <strong>Doctor ID</strong>\n                                        </TableCell>\n                                        <TableCell align=\"center\"><strong>Package</strong></TableCell>\n                                        {/* <TableCell align=\"right\">Contact Details</TableCell>\n                                        <TableCell align=\"right\">Time</TableCell> */}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {loading ? (\n                                        // Skeleton loader\n                                        Array.from({ length: 3 }).map((_, index) => (\n                                            <TableRow key={index}>\n                                                <TableCell>\n                                                    <Skeleton variant=\"rectangular\" width={150} height={30} />\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Skeleton variant=\"rectangular\" width={80} height={30} />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <Skeleton variant=\"rectangular\" width={150} height={30} />\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : rows.length > 0 ? (\n                                     rows.map((row) => (\n                                        <TableRow\n                                            key={row.name}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\": { border: 0 },\n                                            }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.calories}</TableCell>\n                                            <TableCell align=\"center\">{row.fat}</TableCell>\n                                            {/* <TableCell align=\"right\">{row.carbs}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell> */}\n                                        </TableRow>\n                                     ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={3} align=\"center\">\n                                                <NoAppointmentCard />\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default PackageDoctor;\n","import React, { Fragment, useState, useCallback, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n    Typography,\n    Box,\n    Skeleton,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Stack,\n} from \"@mui/material\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport CustomModal from \"../../../components/CustomModal\";\nimport DoctorStatisticsNavbar from \"../../CustomDoctorComponent/DoctorStatisticsNavbar/DoctorStatisticsNavbar\";\nimport \"./doctorPayout.scss\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst Payout = () => {\n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"statistics\");\n        localStorage.setItem(\"path\", \"doctorPayout\");\n    }, []);\n\n    const dropdownItems = [\"item1\", \"item2\", \"item3\"];\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n\n    const [openDialog, setOpenDialog] = useState(false);\n    const [listItems, setListItems] = useState([{ name: \"item1\", checked: false }]);\n\n    const handleCheckList = useCallback((updatedItem) => {\n        const updatedItems = listItems.map((item) =>\n            item.name === updatedItem.name ? updatedItem : item,\n        );\n        setListItems(updatedItems);\n    });\n\n    const [value, setValue] = useState([null, null]);\n    const [loading, setLoading] = useState(true);\n    const [snackOpen, setSnackOpen] = useState(false);\n    const [snackMsg, setSnackMsg] = useState(\"\");\n    const [snackType, setSnackType] = useState(\"success\");\n    const [balance, setBalance] = useState({ settled: 0, paid: 0, balance: 0 });\n    const [rows, setRows] = useState([]);\n    // Simulating pagination data\n    const [page, setPage] = useState(0); // starting at page 0 for TablePagination\n    const [rowsPerPage, setRowsPerPage] = useState(5); // Set how many rows per page\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0); // Reset to the first page when changing rows per page\n    };\n\n    useEffect(() => {\n        const doctorId = Number(localStorage.getItem(\"doctor_suid\"));\n        const load = async () => {\n            try {\n                setLoading(true);\n                const balRes = await axiosInstance.get(`/sec/payment/doctor/balance`, { params: { doctor_id: doctorId } });\n                if (balRes?.data) setBalance(balRes.data);\n                const listRes = await axiosInstance.get(`/sec/payment/payouts`, { params: { doctor_id: doctorId, limit: 50, offset: 0 } });\n                if (Array.isArray(listRes?.data?.response)) setRows(listRes.data.response);\n            } catch (e) {\n                setSnackType(\"error\");\n                setSnackMsg(e?.response?.data?.error || e?.message || \"Failed to load payouts\");\n                setSnackOpen(true);\n            } finally {\n                setLoading(false);\n            }\n        };\n        load();\n    }, []);\n\n    const [toEmail, setToEmail] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const onRequestPayout = async () => {\n        try {\n            const doctorId = Number(localStorage.getItem(\"doctor_suid\"));\n            const amt = Number(amount);\n            if (!toEmail || !amt || isNaN(amt) || amt <= 0) {\n                setSnackType(\"error\");\n                setSnackMsg(\"Enter a valid email and amount\");\n                setSnackOpen(true);\n                return;\n            }\n            const res = await axiosInstance.post(`/sec/payment/payout`, { toEmail, amount: amt, doctor_id: doctorId, memo: \"Doctor cashout\" });\n            setSnackType(\"success\");\n            setSnackMsg(`Payout requested. Batch: ${res?.data?.response?.batch_id || \"created\"}`);\n            setSnackOpen(true);\n            setOpenDialog(false);\n        } catch (e) {\n            setSnackType(\"error\");\n            setSnackMsg(e?.response?.data?.error || e?.message || \"Payout failed\");\n            setSnackOpen(true);\n        }\n    };\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", width: \"98%\", height: \"100%\", height: \"90%\" }}>\n                <DoctorStatisticsNavbar />\n                <Box className=\"payout-main-container\">\n                    <div className=\"Cash-out\">\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"20px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"500\",\n                                lineHeight: \"30px\",\n                                color: \"#313033\",\n                            }}\n                        >\n                            Cash Out\n                        </Typography>\n                    </div>\n\n                    <div className=\"Text-Amount\">\n                        <Typography\n                            style={{\n                                color: \"white\",\n                            }}\n                        >\n                            Earning Balance Sales Overview ${balance?.settled?.toFixed ? balance.settled.toFixed(2) : balance.settled}\n                            <br></br>\n                            Amount you earned from Sales, Custom order and Affiliation Balance. You\n                            can cashout this balance.\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"white\",\n                            }}\n                        >\n                            ${balance?.balance?.toFixed ? balance.balance.toFixed(2) : balance.balance}\n                        </Typography>\n                    </div>\n                    <div className=\"Request-cashout\">\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                width: \"100%\",\n                            }}\n                        >\n                            <Typography\n                                style={{\n                                    fontFamily: \"poppins\",\n                                    fontSize: \"20px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"500\",\n                                    lineHeight: \"30px\",\n                                    color: \"#313033\",\n                                }}\n                            >\n                                Request Cashout\n                            </Typography>\n                        </Box>\n                        <div className=\"Text\">\n                            <Typography\n                                style={{\n                                    fontFamily: \"poppins\",\n                                    fontSize: \"16px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    color: \"#AEAAAE\",\n                                }}\n                            >\n                                Your earning balance is below $100. You need to make another More\n                                $99.33 in Sales or Affiliation Balance to request cashout.\n                                <br></br>\n                                Upload more assets or Invite your friends to earn more.\n                            </Typography>\n                        </div>\n                        <Box\n                            sx={{\n                                width: \"100%\",\n                                display: \"flex\",\n                                justifyContent: \"flex-end\",\n                            }}\n                        >\n                            <CustomButton\n                                label=\"Request\"\n                                isElevated\n                                handleClick={() => setOpenDialog(!openDialog)}\n                            ></CustomButton>\n                            <CustomModal isOpen={openDialog} conditionOpen={() => setOpenDialog(false)} title={<Typography variant=\"h6\">Request Payout</Typography>}>\n                                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, p: 1 }}>\n                                    <input type=\"email\" placeholder=\"PayPal Email\" value={toEmail} onChange={(e)=>setToEmail(e.target.value)} style={{ padding: 10, borderRadius: 8, border: '1px solid #E6E1E5' }} />\n                                    <input type=\"number\" placeholder=\"Amount\" value={amount} onChange={(e)=>setAmount(e.target.value)} style={{ padding: 10, borderRadius: 8, border: '1px solid #E6E1E5' }} />\n                                    <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\n                                        <CustomButton label=\"Cancel\" isTransaprent handleClick={()=>setOpenDialog(false)} />\n                                        <CustomButton label=\"Send\" handleClick={onRequestPayout} />\n                                    </Box>\n                                </Box>\n                            </CustomModal>\n                        </Box>\n                    </div>\n\n                    <div className=\"Table-t\">\n                        <TableContainer component={Paper} style={{ background: \"white\" }}>\n                            <Table sx={{ minWidth: 650 }} size=\"large\">\n                                <TableHead\n                                    sx={{\n                                        fontFamily: \"poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"500\",\n                                        lineHeight: \"22px\",\n                                        letterSpacing: \"0.07px\",\n                                        color: \"#313033\",\n                                    }}\n                                >\n                                    <TableRow>\n                                        <TableCell>Date</TableCell>\n                                        <TableCell align=\"left\">Batch ID</TableCell>\n                                        <TableCell align=\"left\">Amount</TableCell>\n                                        <TableCell align=\"left\">Status</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {loading ? (\n                                        Array(5)\n                                            .fill(0)\n                                            .map((_, index) => (\n                                                <TableRow key={index}>\n                                                    <TableCell>\n                                                        <Skeleton width=\"100px\" />\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <Skeleton width=\"150px\" />\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <Skeleton width=\"80px\" />\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <Skeleton width=\"120px\" />\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                    ) : rows.length === 0 ? (\n                                        <TableRow>\n                                            <TableCell colSpan={4} align=\"center\">\n                                                <NoAppointmentCard text_one={\"No Data Found\"} />{\" \"}\n                                            </TableCell>\n                                        </TableRow>\n                                    ) : (\n                                        rows\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                            .map((row) => (\n                                                <TableRow key={row.payout_id}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {new Date(row.created_at).toLocaleString()}\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{row.payout_batch_id || '-'}</TableCell>\n                                                    <TableCell align=\"left\">{row.currency || 'INR'} {row.amount}</TableCell>\n                                                    <TableCell align=\"left\">{row.status}</TableCell>\n                                                </TableRow>\n                                            ))\n                                    )}\n                                </TableBody>\n                            </Table>\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                component=\"div\"\n                                count={rows.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                onPageChange={handleChangePage}\n                                onRowsPerPageChange={handleChangeRowsPerPage}\n                            />\n                        </TableContainer>\n                    </div>\n                </Box>\n            </Box>\n            <CustomSnackBar isOpen={snackOpen} message={snackMsg} type={snackType} />\n        </>\n    );\n};\n\nexport default Payout;\n","import React, { useState } from \"react\";\nimport { Box, Button, Modal } from \"@mui/material\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport CustomRadioButton from \"../CustomRadioButton\";\nimport CustomDropdown from \"../CustomDropdown\";\nimport CustomModalMUI from \"../CustomModalMUI/CustomModalMUI\";\nimport \"./FilterModal.scss\";\n// import CustomTextField from \"../CustomTextField\";\nimport CustomButton from \"../CustomButton\";\n\nconst FilterModal = () => {\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const [radioVal, setRadioVal] = useState(true);\n    const dropdownItems = [\"Staff\", \"Doctor\", \"View\", \"Owner\"];\n    const radioValues = [\"Active\", \"In-Active\"];\n    return (\n        <>\n            <CustomModalMUI\n                label=\"Filter\"\n                rightIcon={<KeyboardArrowDownIcon />}\n                modalCss={{\n                    position: \"relative\",\n                    top: \"35%\",\n                    left: \"83%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: 450,\n                    bgcolor: \"background.paper\",\n                    borderRadius: \"10px\",\n                    boxShadow: 24,\n                    pt: 2,\n                    px: 2,\n                    pb: 1,\n                }}\n                modaltitle={\n                    <>\n                        <Box\n                            sx={{\n                                border: \"1px solid #E6E1E5\",\n                                borderTop: \"1px\",\n                                borderRight: \"1px\",\n                                borderLeft: \"1px\",\n                                width: \"570px\",\n                                height: \"50px\",\n                                display: \"flex\",\n                                justifycontent: \"flexstart\",\n                            }}\n                        >\n                            <h2\n                                style={{\n                                    textAlign: \"left\",\n                                    fontfamily: \"poppins\",\n                                    fontSize: \"18px\",\n                                    fontstyle: \"normal\",\n                                    fontweight: \"500\",\n                                    lineheight: \"30px\",\n                                    width: \"100%\",\n                                    // height: \"30px\",\n                                }}\n                            >\n                                Filter\n                            </h2>\n                        </Box>\n                    </>\n                }\n                modalcontent={\n                    <>\n                        <CustomDropdown\n                            items={dropdownItems}\n                            activeItem={activeDropdown}\n                            handleChange={(item) => setActiveDropdown(item)}\n                            label={\"Access Level\"}\n                            dropdowncss={{\n                                width: \"400px\",\n                            }}\n                        ></CustomDropdown>\n                        <div className=\"radio-select\">\n                            <CustomRadioButton\n                                label={\"\"}\n                                handleChange={({ target }) => setRadioVal(target.value)}\n                                value={radioVal}\n                                items={radioValues}\n                                radioGroupCss={{ display: \"flex\", flexDirection: \"row\" }}\n                            ></CustomRadioButton>\n                        </div>\n                        <div className=\"apply-clear-bttns\">\n                            <CustomButton\n                                label=\"Apply\"\n                                buttonCss={{\n                                    width: \"170px\",\n                                    borderRadius: \"20px\",\n                                }}\n                            ></CustomButton>\n\n                            <CustomButton\n                                label=\"Clear\"\n                                isTransaprent={\"True\"}\n                                buttonCss={{\n                                    width: \"170px\",\n                                    borderTop: \"1px\",\n                                    borderBottom: \"1px\",\n                                    borderLeft: \"1px\",\n                                    borderRight: \"1px\",\n                                    borderRadius: \"20px\",\n                                }}\n                            ></CustomButton>\n                        </div>\n                    </>\n                }\n            ></CustomModalMUI>\n        </>\n    );\n};\n\nexport default FilterModal;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport img from \"../../../../static/images/DrImages/image10.png\";\nimport MedicalServicesIcon from \"@mui/icons-material/MedicalServices\";\n\nexport const AuditCards = ({ name, specialist, Id }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    {/* <img src={img} style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }} /> */}\n                    <MedicalServicesIcon style={{ fontSize: 40, color: \"#E72B4A\" }}/>\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        {specialist}  ID : {Id}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\n\nconst ManageDashboard = () => {\n    const navigate = useNavigate();\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"bookinghistory\"\n            ? \"/patientdashboard/manage/bookinghistory\"\n            : localStorage.getItem(\"path\") == \"transactions\"\n            ? \"/patientdashboard/manage/transactions\"\n            : localStorage.getItem(\"path\") == \"reports\"\n            ? \"/patientdashboard/manage/reports\"\n            : localStorage.getItem(\"path\") == \"subscriptions\"\n            ? \"/patientdashboard/manage/subscriptions\"\n            : \"/patientdashboard/manage/bookinghistory\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    // console.log(\"Entered dashboard manage\");\n\n    return (\n        <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n            {\" \"}\n            {/* Explore and My activity navbar start */}\n            <Box sx={{ width: \"100%\" }}>\n                <Outlet />\n            </Box>\n        </Box>\n    );\n};\n\nexport default ManageDashboard;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport const DoctorDetail = ({ image, name, Id }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img\n                        src={image}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./not-found.scss\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"not-found\">\n            <h1>404</h1>\n            <p>Oops! Something is wrong.</p>\n            <Link className=\"btn btn-primary\" to=\"/\">\n                Back to Home\n            </Link>\n        </div>\n    );\n};\n\nexport default NotFound;\n","const convertTo12Hour = (time24) => {\n    if (!time24) return \"\";\n    \n    // Extract time part if it's a datetime string\n    const timeOnly = time24.includes('T') ? time24.split('T')[1] : time24;\n    const [hours, minutes] = timeOnly.split(':');\n    \n    const hour = parseInt(hours);\n    const minute = minutes || '00';\n    \n    if (hour === 0) {\n        return `12:${minute} AM`;\n    } else if (hour < 12) {\n        return `${hour}:${minute} AM`;\n    } else if (hour === 12) {\n        return `12:${minute} PM`;\n    } else {\n        return `${hour - 12}:${minute} PM`;\n    }\n};\n\nconst isAppointmentTimeReached = (appointmentDate, appointmentTime, backendJoinStatus = null) => {\n    // If backend already calculated join_status, use it as primary source\n    if (backendJoinStatus !== null && backendJoinStatus !== undefined) {\n        console.log(\"Using backend join_status:\", backendJoinStatus);\n        return backendJoinStatus === 1;\n    }\n    \n    // Fallback to frontend calculation if backend status not available\n    if (!appointmentDate || !appointmentTime) return false;\n    \n    try {\n        // Determine timezone based on environment\n        const isDevelopment = process.env.NODE_ENV === 'development' || process.env.REACT_APP_ENV === 'development';\n        const now = new Date();\n        \n        let currentDate, currentTime;\n        \n        if (isDevelopment) {\n            // Use local time for development\n            currentDate = now.toISOString().split('T')[0]; // YYYY-MM-DD format\n            currentTime = now.toTimeString().split(' ')[0]; // HH:MM:SS format\n            console.log(\"Frontend Development Mode: Using local time\");\n        } else {\n            // Convert to IST timezone for production (same as backend)\n            const istOffset = 5.5 * 60; // IST is UTC+5:30\n            const utc = now.getTime() + (now.getTimezoneOffset() * 60000);\n            const istTime = new Date(utc + (istOffset * 60000));\n            \n            currentDate = istTime.toISOString().split('T')[0]; // YYYY-MM-DD format\n            currentTime = istTime.toTimeString().split(' ')[0]; // HH:MM:SS format\n            console.log(\"Frontend Production Mode: Using IST time\");\n        }\n        \n        // Parse appointment date and time\n        const appointmentDateStr = appointmentDate.split('T')[0]; // Extract date part\n        const appointmentTimeStr = appointmentTime.includes('T') \n            ? appointmentTime.split('T')[1].split('.')[0] // Extract time part and remove milliseconds\n            : appointmentTime.split('.')[0]; // Remove milliseconds if present\n        \n        console.log(\"Current date:\", currentDate, \"Current time:\", currentTime);\n        console.log(\"Appointment date:\", appointmentDateStr, \"Appointment time:\", appointmentTimeStr);\n        \n        // Check if it's the same date\n        if (currentDate !== appointmentDateStr) {\n            console.log(\"Date mismatch - appointment not today\");\n            return false;\n        }\n        \n        // Compare times (HH:MM:SS format)\n        const currentTimeMinutes = timeToMinutes(currentTime);\n        const appointmentTimeMinutes = timeToMinutes(appointmentTimeStr);\n        \n        console.log(\"Current time in minutes:\", currentTimeMinutes);\n        console.log(\"Appointment time in minutes:\", appointmentTimeMinutes);\n        \n        // Allow joining 5 minutes before the appointment time (matching backend logic)\n        const timeDifference = appointmentTimeMinutes - currentTimeMinutes;\n        const canJoin = timeDifference <= 5 && timeDifference >= -30; // 5 minutes before to 30 minutes after\n        \n        console.log(\"Time difference (minutes):\", timeDifference);\n        console.log(\"Can join:\", canJoin);\n        \n        return canJoin;\n    } catch (error) {\n        console.error(\"Error checking appointment time:\", error);\n        return false;\n    }\n};\n\nconst timeToMinutes = (timeStr) => {\n    const [hours, minutes, seconds] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes + (seconds || 0) / 60;\n};\n\nexport { convertTo12Hour, isAppointmentTimeReached };\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Radio, RadioGroup, FormControlLabel, FormControl, FormLabel, Typography } from \"@mui/material\";\n\nconst CustomRadioButton = ({ \n    label, \n    radiocss, \n    handleChange, \n    value, \n    items, \n    radioGroupCss,\n    color = \"primary\",\n    size = \"medium\",\n    orientation = \"vertical\"\n}) => {\n    return (\n        <FormControl sx={{ width: \"100%\" }}>\n            {label && (\n                <FormLabel \n                    id=\"custom-radio-buttons-group\"\n                    sx={{\n                        fontFamily: \"Poppins, sans-serif\",\n                        fontSize: \"16px\",\n                        fontWeight: 600,\n                        color: \"#333\",\n                        marginBottom: \"12px\",\n                        \"&.Mui-focused\": {\n                            color: \"#1976d2\",\n                        }\n                    }}\n                >\n                    {label}\n                </FormLabel>\n            )}\n            <RadioGroup\n                aria-labelledby=\"custom-radio-buttons-group\"\n                name=\"custom-radio-buttons-group\"\n                value={value}\n                sx={{\n                    ...radioGroupCss,\n                    fontFamily: \"Poppins, sans-serif\",\n                }}\n                onChange={handleChange}\n                row={orientation === \"horizontal\"}\n            >\n                {items.map((item, idx) => (\n                    <FormControlLabel\n                        key={idx}\n                        sx={{\n                            margin: orientation === \"horizontal\" ? \"0 16px 0 0\" : \"0 0 8px 0\",\n                            \"& .MuiFormControlLabel-label\": {\n                                fontFamily: \"Poppins, sans-serif\",\n                                fontSize: \"14px\",\n                                fontWeight: 500,\n                                color: \"#333\",\n                            },\n                            ...radiocss\n                        }}\n                        value={item}\n                        control={\n                            <Radio \n                                color={color}\n                                size={size}\n                                sx={{\n                                    transition: \"all 0.2s ease\",\n                                    \"&:hover\": {\n                                        transform: \"scale(1.1)\",\n                                    },\n                                    \"&.Mui-checked\": {\n                                        animation: \"pulse 0.3s ease-in-out\",\n                                    },\n                                    \"@keyframes pulse\": {\n                                        \"0%\": {\n                                            transform: \"scale(1)\",\n                                        },\n                                        \"50%\": {\n                                            transform: \"scale(1.1)\",\n                                        },\n                                        \"100%\": {\n                                            transform: \"scale(1)\",\n                                        },\n                                    }\n                                }}\n                            />\n                        }\n                        label={item}\n                    />\n                ))}\n            </RadioGroup>\n        </FormControl>\n    );\n};\n\nCustomRadioButton.defaultProps = {\n    label: \"Select Option\",\n    handleChange: () => {},\n    value: \"\",\n    items: [\"Option 1\", \"Option 2\", \"Option 3\"],\n    color: \"primary\",\n    size: \"medium\",\n    orientation: \"vertical\",\n};\n\nCustomRadioButton.propTypes = {\n    items: PropTypes.array,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    handleChange: PropTypes.func,\n    radiocss: PropTypes.object,\n    radioGroupCss: PropTypes.object,\n    color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]),\n    size: PropTypes.oneOf([\"small\", \"medium\"]),\n    orientation: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n};\n\nexport default CustomRadioButton;","// import { Box } from '@mui/material'\nimport React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport SuperAdminImage from \"../../../static/images/DrImages/rectangle.png\";\nimport CustomButton from \"../../CustomButton\";\nimport \"./AdminDoctorCard.scss\";\n\nconst AdminDoctorCard = () => {\n    return (\n        <>\n            <div className=\"superadmindoctor-card\">\n                <Box\n                    component={\"img\"}\n                    src={SuperAdminImage}\n                    sx={{\n                        width: \"128px\",\n                        height: \"128px\",\n                    }}\n                ></Box>\n                <div className=\"buttons-texts\">\n                    <div className=\"name-approve\">\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"20px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"500\",\n                                lineHeight: \"30px\",\n                            }}\n                        >\n                            Dr. James Karl\n                        </Typography>\n                        <CustomButton\n                            label=\"Approve\"\n                            isTransaprent={\"true\"}\n                            buttonCss={{\n                                width: \"149px\",\n                                height: \"48px\",\n                            }}\n                        ></CustomButton>\n                    </div>\n                    <div className=\"name-approve\">\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"12px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"18px\",\n                                letterSpacing: \"0.096px\",\n                            }}\n                        >\n                            Today | 10:00AM\n                        </Typography>\n                        <CustomButton\n                            label=\"Block\"\n                            buttonCss={{\n                                width: \"149px\",\n                                height: \"48px\",\n                            }}\n                        ></CustomButton>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AdminDoctorCard;\n","import React, { useState } from \"react\";\nimport \"./SuperAdminDoctor.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport {CircularProgress, Pagination, Skeleton } from \"@mui/material\";\nimport DateModal from \"../../../components/DateModal/DateModal\";\nimport FilterModal from \"../../../components/FilterModal/FilterModal\";\nimport AdminDoctorCard from \"../../../components/Card/Superadmindoctorcard/AdminDoctorCard\";\nimport { PaginationCard } from \"../../../PatientDashboard/PatientAppointment/PatientCards\";\n\nconst SuperAdminDoctor = () => {\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 3;\n    const totalCards = 9; \n    const totalPages = Math.ceil(totalCards / itemsPerPage);\n\n    const doctorCards = Array.from({ length: totalCards }, (_, index) => (\n        <AdminDoctorCard key={index} />\n    ));\n    \n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"acessibility\");\n        localStorage.setItem(\"path\", \"doctors\");\n\n        const timer = setTimeout(() => {\n            setLoading(false);\n        }, 1000);\n\n        return () => clearTimeout(timer);\n    }, []);\n\n    const handlePageChange = (event, value) => {\n        setCurrentPage(value);\n    };\n\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentCards = doctorCards.slice(startIndex, endIndex);\n\n    const renderSkeletons = () => (\n        Array.from({ length: itemsPerPage }).map((_, index) => (\n            <Skeleton \n                key={index}\n                variant=\"rectangular\"\n                height={200}\n                style={{ marginBottom: '1rem', borderRadius: '10px' }}\n            />\n        ))\n    );\n\n    return (\n        <>\n           {loading ? (\n                   <div className=\"loader-container\">\n                   <Skeleton variant=\"rectangular\" height={40} width=\"100%\" style={{ marginBottom: '1rem' }} />\n                   <div className=\"nav-d-f-container\">\n                       <div className=\"NavBar-Container-Appoinement\">\n                           <Skeleton variant=\"text\" width=\"30%\" height={30} style={{ marginRight: '1rem' }} />\n                           <Skeleton variant=\"text\" width=\"30%\" height={30} style={{ marginRight: '1rem' }} />\n                           <Skeleton variant=\"text\" width=\"30%\" height={30} />\n                       </div>\n                       <div className=\"date-filter1\">\n                           <Skeleton variant=\"rectangular\" width={80} height={40} style={{ marginRight: '1rem' }} />\n                           <Skeleton variant=\"rectangular\" width={80} height={40} />\n                       </div>\n                   </div>\n                   <div className=\"doctor-container\">\n                       {renderSkeletons()}\n                   </div>\n                   <div style={{ display: \"flex\", justifyContent: \"Right\" }}>\n                       <Skeleton variant=\"rectangular\" width={120} height={40} />\n                   </div>\n               </div>\n            ) : (\n                <>\n            <div className=\"nav-d-f-container\">\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/superadmin/accessibility/doctors\"}>Doctor</NavLink>\n                    <NavLink to={\"/superadmin/accessibility/patient\"}>Patient</NavLink>\n                    <NavLink to={\"/superadmin/accessibility/hcf\"}>HCF</NavLink>\n                </nav>\n                <div className=\"date-filter1\">\n                    <DateModal />\n                    <FilterModal />\n                </div>\n            </div>\n            <div className=\"doctor-container\">\n            {currentCards} \n                <AdminDoctorCard />\n                <AdminDoctorCard />\n                <AdminDoctorCard />\n                <div style={{ marginTop: \"2rem\", display: \"flex\", justifyContent: \"Right\" }}>\n                    <Pagination\n                       count={totalPages}\n                       page={currentPage}\n                       onChange={handlePageChange}\n                       color=\"primary\"\n                       size=\"large\"\n                     />\n                </div>\n            </div>\n        </>\n    )} \n    </>\n    );\n};\nexport default SuperAdminDoctor;\n","import { Box, Typography, Divider } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomButton from \"../../../../../../components/CustomButton/custom-button\";\nimport CustomModal from \"../../../../../../components/CustomModal/custom-modal\";\nimport HCFStepper from \"../HCFStepper\";\n\nconst HCFDrCard = ({\n  data,\n  test_id = \"\",\n  about = \"\",\n  amount = \"\",\n  service_day_from = \"\",\n  service_day_to = \"\",\n  sx,\n}) => {\n  const [openDialog, setOpenDialog] = useState(false);\n  const navigate = useNavigate();\n\n  const handleBuyClick = () => {\n    setOpenDialog(true);\n  };\n\n  const handleModalClose = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <Box \n      sx={{\n        width: \"560px\", // Fixed width\n        minHeight: \"240px\", // Fixed minimum height\n        borderRadius: \"12px\",\n        border: \"1px solid #E6E1E5\",\n        padding: 3,\n        backgroundColor: \"#FFFFFF\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.05)\",\n        transition: \"transform 0.2s ease-in-out\",\n        \"&:hover\": {\n          transform: \"translateY(-4px)\",\n        },\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        flexShrink: 0, // Prevent shrinking in flex container\n        ...sx\n      }}\n    >\n      <Box>\n        <Box sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: 2,\n        }}>\n          <Typography sx={{\n            fontFamily: \"Poppins\",\n            fontSize: \"18px\",\n            fontWeight: 600,\n            color: \"#333\",\n          }}>\n            {data?.sub_exam_name || \"Test Name\"}\n          </Typography>\n          <Typography sx={{\n            fontFamily: \"Poppins\",\n            fontSize: \"16px\",\n            fontWeight: 500,\n            color: \"#4CAF50\",\n          }}>\n            Price: {data?.test_price || amount || \"N/A\"}\n          </Typography>\n        </Box>\n        <Divider sx={{ marginBottom: 2 }} />\n        <Box>\n          <Typography sx={{\n            fontFamily: \"Poppins\",\n            fontSize: \"14px\",\n            color: \"#666\",\n            lineHeight: \"1.6\",\n          }}>\n            <strong>Working Days:</strong>{\" \"}\n            {data?.lab_working_days_from && data?.lab_working_days_to\n              ? `${data.lab_working_days_from} to ${data.lab_working_days_to}`\n              : service_day_from && service_day_to\n              ? `${service_day_from} to ${service_day_to}`\n              : \"Not specified\"}\n          </Typography>\n          <Typography sx={{\n            fontFamily: \"Poppins\",\n            fontSize: \"14px\",\n            color: \"#666\",\n            lineHeight: \"1.6\",\n          }}>\n            <strong>Working Time:</strong>{\" \"}\n            {data?.lab_working_time_from && data?.lab_working_time_to\n              ? `${data.lab_working_time_from} to ${data.lab_working_time_to}`\n              : \"Not specified\"}\n          </Typography>\n          {about && (\n            <Typography sx={{\n              fontFamily: \"Poppins\",\n              fontSize: \"14px\",\n              color: \"#666\",\n              lineHeight: \"1.6\",\n            }}>\n              <strong>Description:</strong> {about}\n            </Typography>\n          )}\n        </Box>\n      </Box>\n      <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", marginTop: 3 }}>\n        <CustomButton\n          label=\"Buy Now\"\n          isElevated\n          buttonCss={{\n            height: \"44px\",\n            width: \"120px\",\n            fontSize: \"14px\",\n            fontWeight: 500,\n          }}\n          handleClick={handleBuyClick}\n        />\n      </Box>\n      <CustomModal\n        isOpen={openDialog}\n        title={data?.sub_exam_name || \"Purchase Test\"}\n        conditionOpen={setOpenDialog}  // ✅ Pass the setter function as expected\n        disableBackdropClick={true}\n      >\n        <HCFStepper data={data} />\n      </CustomModal>\n    </Box>\n  );\n};\n\nexport default HCFDrCard;","import React, { useRef } from \"react\";\nimport { Box, IconButton, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport image1 from \"../static/images/DrImages/image1.png\";\nimport image2 from \"../static/images/DrImages/image2.png\";\n// import image3 from \"../../static/images/DrImages/image3.png\";\nimport image3 from \"../static/images/DrImages/image3.png\"\n// import Drcard from \"./drcard/drcard\";\nimport DoctorCard from \"../components/DoctorCard/DoctorCard\";\nimport CustomButton from \"../components/CustomButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport Skeleton from \"react-loading-skeleton\";\nimport NoAppointmentCard from \"../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n// import HCFDrCard from \"../pages/PatientModule/PatientHCF/DrDetailsCard/Labs/HCFDrCard\";\nimport HCFDrCard from \"../Role/Login/PatientModule/PatientHCF/DrDetailsCard/Labs/HCFDrCard\";\n\n// Re-export constants from apiConstants to maintain backward compatibility\nexport { baseURL, front_end_url, emailRegex, passwordRegex, numberRegex } from \"./apiConstants\";\n\nexport const data = [\n    {\n        id: 1,\n        drimage: image1,\n        name: \"Dr. Elizabeth Davis\",\n        hospital: \"Xyz Hospital\",\n        specialist: \"Neurologist\",\n        rating: \"4.5\",\n        reviews: \"(200) Review\",\n    },\n    {\n        id: 2,\n        drimage: image2,\n        name: \"Dr. William\",\n        hospital: \"Gangaram Hospital\",\n        specialist: \"Pediatric\",\n        rating: \"4.3\",\n        reviews: \"(400) Review\",\n    },\n    {\n        id: 3,\n        drimage: image3,\n        name: \"Dr. Arbaaz Khan\",\n        hospital: \"RML Hospital\",\n        specialist: \"Nutritionist\",\n        rating: \"3.9\",\n        reviews: \"(900) Review\",\n    },\n];\n\nexport const CallCardData = ({ sendCardData, textField, linkPath, loading, hcfID=null }) => {\n    const containerRef = useRef(null);\n\n    const scrollLeft = () => {\n        if (containerRef.current) {\n            containerRef.current.scrollLeft -= 200;\n        }\n    };\n\n    const scrollRight = () => {\n        if (containerRef.current) {\n            containerRef.current.scrollLeft += 200;\n        }\n    };\n\n    console.log(\"this is the hcf id : \",hcfID?.hcfID);\n\n    return (\n        <Box sx={{ width: \"100%\", marginTop: \"1%\" }}>\n                        {textField && textField.trim() && ( // Only render if textField is not null or empty\n\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"flex-start\", position: \"relative\", paddingBottom: \"10px\" }}>\n                <h4 sx={{ fontWeight: \"bold\", position: \"absolute\", top: 0, left: 0 }}>\n                    {textField}\n                </h4>\n            </Box>\n                        )}\n            <div\n                style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    overflow: \"hidden\",\n                }}\n            >\n                <IconButton aria-label=\"Scroll left\" onClick={scrollLeft}>\n                    <ChevronLeftIcon />\n                </IconButton>\n                <div\n                    ref={containerRef}\n                    style={{\n                        width: \"calc(100% - 48px)\",\n                        overflowX: \"auto\",\n                        display: \"flex\",\n                        scrollbarWidth: \"none\",\n                        scrollBehavior: \"smooth\",\n                        padding: \"8px 0\",\n                    }}\n                >\n                    <Box sx={{ \n                        borderRadius: 1, \n                        display: \"flex\",\n                        gap: 2,\n                        minWidth: \"fit-content\"\n                    }}>\n                        {loading ? (\n                            [...Array(4)].map((_, index) => (\n                                <Skeleton\n                                    key={index}\n                                    height=\"200px\"\n                                    width=\"300px\"\n                                    sx={{ \n                                        borderRadius: \"12px\", \n                                        flexShrink: 0 \n                                    }}\n                                />\n                            ))\n                        ) : sendCardData?.length === 0 ? (\n                            <Box sx={{ \n                                display: \"flex\", \n                                alignItems: \"center\", \n                                justifyContent: \"center\",\n                                height: \"200px\",\n                                width: \"100%\",\n                                minWidth: \"300px\"\n                            }}>\n                                <NoAppointmentCard\n                                    text_one=\"No Data found\"\n                                />\n                            </Box>\n                        ) : (\n                            sendCardData?.slice(0, 10).map((dataprop, index) => (\n                                <Link\n                                    to={hcfID === null || undefined ? `${linkPath}${dataprop.suid}` : `${linkPath}${dataprop.suid}/${hcfID?.hcfID}`}\n                                    style={{\n                                        width: \"300px\",\n                                        textDecoration: \"none\",\n                                        flexShrink: 0,\n                                    }}\n                                    key={index}\n                                >\n                                    <DoctorCard DrData={dataprop}/>\n                                </Link>\n                            ))\n                        )}\n                    </Box>\n                </div>\n                <IconButton aria-label=\"Scroll right\" onClick={scrollRight}>\n                    <ChevronRightIcon />\n                </IconButton>\n            </div>\n        </Box>\n    );\n};\n\nexport const currencysign = \"₹\";\nexport const patient_suid = localStorage.getItem(\"patient_suid\");\n\nexport const HCFCardsData = ({ sendCardData, textField, linkPath, loading }) => {\n    const containerRef = useRef(null);\n\n    const scrollLeft = () => {\n        if (containerRef.current) {\n            containerRef.current.scrollLeft -= 200;\n        }\n    };\n\n    const scrollRight = () => {\n        if (containerRef.current) {\n            containerRef.current.scrollLeft += 200;\n        }\n    };\n\n    return (\n        <Box sx={{ width: \"100%\", marginTop: \"1%\" }}>\n            <div\n                style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    overflow: \"hidden\",\n                }}\n            >\n                <IconButton aria-label=\"Scroll left\" onClick={scrollLeft}>\n                    <ChevronLeftIcon />\n                </IconButton>\n                <div\n      ref={containerRef}\n      style={{\n        width: \"calc(100% - 48px)\",\n        overflowX: \"auto\",\n        display: \"flex\",\n        scrollbarWidth: \"none\",\n        scrollBehavior: \"smooth\",\n        padding: \"8px 0\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"nowrap\", // Prevent wrapping to ensure horizontal scrolling\n          gap: 2, // Consistent spacing between cards\n          minWidth: \"fit-content\", // Ensure the container respects card widths\n        }}\n      >\n        {loading ? (\n          [...Array(10)].map((_, index) => (\n            <Skeleton\n              key={index}\n              height=\"240px\" // Match HCFDrCard minHeight\n              width=\"360px\" // Match HCFDrCard width\n              sx={{ marginRight: 2, borderRadius: \"12px\", flexShrink: 0 }}\n            />\n          ))\n        ) : sendCardData?.length === 0 ? (\n          <NoAppointmentCard\n            style={{ height: \"240px\", width: \"360px\", flexShrink: 0 }}\n            text_one=\"No Data Found\"\n          />\n        ) : (\n          sendCardData?.slice(0, 10).map((dataprop, index) => (\n            <HCFDrCard\n              key={index}\n              data={dataprop}\n              sx={{ flexShrink: 0 }} // Prevent card from shrinking\n            />\n          ))\n        )}\n      </Box>\n    </div>\n                <IconButton aria-label=\"Scroll right\" onClick={scrollRight}>\n                    <ChevronRightIcon />\n                </IconButton>\n            </div>\n        </Box>\n    );\n};\n\nexport const formatDate = (isoDate) => {\n    const date = new Date(isoDate);\n    return date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true,\n    });\n};\n\nexport const formatOnlyDate = (isoDate) => {\n    const date = new Date(isoDate);\n    return date.toLocaleString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n    });\n};\n\nexport const formatDateDay = (isoDate) => {\n    if (!isoDate) {\n        return \"\"; // Return an empty string or any default message you prefer\n    }\n\n    try {\n        const date = new Date(isoDate);\n        if (isNaN(date)) {\n            return \"\"; // Return empty string if the date is invalid\n        }\n\n        return date.toLocaleString(\"en-US\", {\n            weekday: \"short\", // Short form of the day, e.g., \"Fri\"\n            year: \"numeric\",\n            month: \"short\",\n            day: \"numeric\",\n        });\n    } catch (error) {\n        return \"\"; // Fallback for unexpected errors\n    }\n};\n\nexport const formatTime = (timeString) => {\n    if (!timeString || typeof timeString !== 'string') {\n        return 'Invalid Time'; // Fallback for undefined or invalid input\n    }\n\n    const [hours, minutes] = timeString.split(':');\n    const hour = parseInt(hours, 10);\n    const isPM = hour >= 12;\n    const formattedHour = hour % 12 || 12; // Convert 0 or 12 to 12 for 12-hour format\n    return `${formattedHour}:${minutes}${isPM ? 'PM' : 'AM'}`;\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport { CircularProgress, Typography } from \"@mui/material\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport CustomModal from \"../../../../components/CustomModal\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomDropdown from \"../../../../components/CustomDropdown\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\nimport \"./addplan.scss\";\n\nconst EditPlanModal = ({\n    isOpen,\n    onClose,\n    planData,\n    onPlanUpdated,\n}) => {\n    const [formData, setFormData] = useState({\n        plan_name: \"\",\n        plan_fee: \"\",\n        plan_duration: \"\",\n        plan_description: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const [snackOpen, setSnackOpen] = useState(false);\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackType, setSnackType] = useState(\"success\");\n    const [isLoadingPlanData, setIsLoadingPlanData] = useState(false);\n    const [renderKey, setRenderKey] = useState(0);\n\n    const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n\n    // Fetch plan data when modal opens\n    const fetchPlanData = async (planId) => {\n        setIsLoadingPlanData(true);\n        try {\n            console.log(\"EditPlanModal - Fetching plan data for ID:\", planId);\n            const response = await axiosInstance.get(`/sec/createUpdatedoctorlisting/planById/${planId}`);\n            \n            console.log(\"EditPlanModal - API Response:\", response.data);\n            const planData = response.data.response?.DocListingPlan?.[0];\n            if (planData) {\n                const plan = planData;\n                \n                console.log(\"EditPlanModal - Plan data received:\", plan);\n                console.log(\"EditPlanModal - plan.plan_name:\", plan?.plan_name);\n                console.log(\"EditPlanModal - plan.plan_fee:\", plan?.plan_fee);\n                console.log(\"EditPlanModal - plan.plan_duration:\", plan?.plan_duration);\n                console.log(\"EditPlanModal - plan.plan_description:\", plan?.plan_description);\n                \n                // Keep the full duration format (e.g., \"30 minutes\")\n                const duration = plan?.plan_duration || \"\";\n                const newFormData = {\n                    plan_name: plan?.plan_name || \"\",\n                    plan_fee: plan?.plan_fee || \"\",\n                    plan_duration: duration,\n                    plan_description: plan?.plan_description || \"\"\n                };\n                \n                console.log(\"EditPlanModal - Setting form data to:\", newFormData);\n                setFormData(newFormData);\n                // Force re-render by updating render key\n                setRenderKey(prev => prev + 1);\n            } else {\n                console.error(\"EditPlanModal - No plan data found in response\");\n                setSnackMessage(\"Failed to load plan data\");\n                setSnackType(\"error\");\n                setSnackOpen(true);\n            }\n        } catch (error) {\n            console.error(\"EditPlanModal - Error fetching plan data:\", error);\n            setSnackMessage(\"Failed to load plan data\");\n            setSnackType(\"error\");\n            setSnackOpen(true);\n        } finally {\n            setIsLoadingPlanData(false);\n        }\n    };\n\n    useEffect(() => {\n        console.log(\"EditPlanModal - useEffect triggered, isOpen:\", isOpen, \"planData:\", planData);\n        \n        if (planData && isOpen) {\n            // Extract plan ID from planData\n            const planId = planData?.doctor_fee_plan_id || planData?.plan_id;\n            console.log(\"EditPlanModal - Plan ID extracted:\", planId);\n            \n            if (planId) {\n                fetchPlanData(planId);\n            } else {\n                console.error(\"EditPlanModal - No plan ID found in planData\");\n                setSnackMessage(\"No plan ID found\");\n                setSnackType(\"error\");\n                setSnackOpen(true);\n            }\n        }\n    }, [planData, isOpen]);\n\n    const handleInputChange = (field, value) => {\n        setFormData(prev => ({\n            ...prev,\n            [field]: value\n        }));\n    };\n\n    const handleSubmit = async () => {\n        if (!formData.plan_name || !formData.plan_fee || !formData.plan_duration) {\n            setSnackMessage(\"Please fill in all required fields\");\n            setSnackType(\"error\");\n            setSnackOpen(true);\n            return;\n        }\n\n        setLoading(true);\n        try {\n            // The planData comes directly from the allPlan array\n            const plan = planData;\n            \n            const payload = {\n                doctor_id: parseInt(plan?.doctor_id),\n                doctor_list_id: parseInt(plan?.doctor_list_id),\n                doctor_fee_plan_id: parseInt(plan?.doctor_fee_plan_id),\n                plan_name: formData.plan_name,\n                plan_fee: parseFloat(formData.plan_fee),\n                plan_duration: formData.plan_duration,\n                plan_description: formData.plan_description\n            };\n\n            console.log(\"Updating plan with payload:\", payload);\n\n            const response = await axiosInstance.post(\n                \"/sec/createUpdatedoctorlisting/planUpdate\",\n                payload\n            );\n\n            setSnackMessage(response?.data?.response?.message || \"Plan updated successfully\");\n            setSnackType(\"success\");\n            setSnackOpen(true);\n            \n            // Call the callback to refresh the plans list\n            if (onPlanUpdated) {\n                onPlanUpdated();\n            }\n            \n            // Close the modal after a short delay\n            setTimeout(() => {\n                onClose();\n            }, 1500);\n\n        } catch (error) {\n            console.error(\"Error updating plan:\", error);\n            setSnackMessage(error?.response?.data?.error || \"Failed to update plan\");\n            setSnackType(\"error\");\n            setSnackOpen(true);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleClose = () => {\n        if (!loading) {\n            onClose();\n        }\n    };\n\n    console.log(\"EditPlanModal - Rendering modal, isOpen:\", isOpen);\n    console.log(\"EditPlanModal - Current formData:\", formData);\n    console.log(\"EditPlanModal - isLoadingPlanData:\", isLoadingPlanData);\n    \n    return (\n        <>\n            <CustomSnackBar isOpen={snackOpen} message={snackMessage} type={snackType} />\n            \n            <CustomModal\n                isOpen={isOpen}\n                onClose={handleClose}\n                disableBackdropClick={loading}\n                style={{ zIndex: 9999 }}\n                title={\n                    <Typography variant=\"h6\" fontFamily=\"poppins\" fontWeight=\"500\">\n                        Edit Plan\n                    </Typography>\n                }\n                footer={\n                    <div style={{ display: \"flex\", gap: \"12px\", justifyContent: \"flex-end\" }}>\n                        <CustomButton\n                            label=\"Cancel\"\n                            isTransaprent={true}\n                            handleClick={handleClose}\n                            disabled={loading || isLoadingPlanData}\n                            buttonCss={{\n                                border: \"1px solid #E72B4A\",\n                                color: \"#E72B4A\",\n                                fontFamily: \"poppins\",\n                                fontSize: \"16px\",\n                                fontWeight: \"500\"\n                            }}\n                        />\n                        <CustomButton\n                            label={loading ? \"Updating...\" : \"Update Plan\"}\n                            handleClick={handleSubmit}\n                            disabled={loading || isLoadingPlanData}\n                            buttonCss={{\n                                backgroundColor: \"#E72B4A\",\n                                color: \"white\",\n                                fontFamily: \"poppins\",\n                                fontSize: \"16px\",\n                                fontWeight: \"500\",\n                                \"&:hover\": {\n                                    backgroundColor: \"#d61e3f\"\n                                }\n                            }}\n                        />\n                    </div>\n                }\n            >\n                <div style={{ padding: \"20px\", minWidth: \"400px\" }}>\n                    {isLoadingPlanData ? (\n                        <div style={{ \n                            display: \"flex\", \n                            justifyContent: \"center\", \n                            alignItems: \"center\", \n                            height: \"200px\",\n                            flexDirection: \"column\",\n                            gap: \"16px\"\n                        }}>\n                            <CircularProgress size={40} />\n                            <Typography variant=\"body1\" fontFamily=\"poppins\">\n                                Loading plan data...\n                            </Typography>\n                        </div>\n                    ) : (\n                        <div key={renderKey}>\n                            {console.log(\"EditPlanModal - Rendering form with data:\", formData, \"renderKey:\", renderKey)}\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <CustomTextField\n                                    key={`plan_name_${formData.plan_name}_${renderKey}`}\n                                    label=\"Plan Name\"\n                                    CustomValue={formData.plan_name || \"\"}\n                                    onChange={(e) => handleInputChange('plan_name', e.target.value)}\n                                    textcss={{\n                                        width: \"100%\",\n                                        height: \"56px\",\n                                        fontFamily: \"poppins\",\n                                        fontSize: \"16px\"\n                                    }}\n                                    required\n                                />\n                            </div>\n\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <CustomTextField\n                                    key={`plan_fee_${formData.plan_fee}_${renderKey}`}\n                                    label=\"Plan Fee\"\n                                    type=\"number\"\n                                    CustomValue={formData.plan_fee || \"\"}\n                                    onChange={(e) => handleInputChange('plan_fee', e.target.value)}\n                                    textcss={{\n                                        width: \"100%\",\n                                        height: \"56px\",\n                                        fontFamily: \"poppins\",\n                                        fontSize: \"16px\"\n                                    }}\n                                    required\n                                />\n                            </div>\n\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <CustomDropdown\n                                    key={`plan_duration_${formData.plan_duration}_${renderKey}`}\n                                    label=\"Duration (minutes)\"\n                                    items={dropdownItems}\n                                    activeItem={formData.plan_duration || \"\"}\n                                    handleChange={(value) => handleInputChange('plan_duration', value)}\n                                    dropdowncss={{\n                                        width: \"100%\",\n                                        height: \"56px\",\n                                        fontFamily: \"poppins\",\n                                        fontSize: \"16px\"\n                                    }}\n                                />\n                            </div>\n\n                            <div style={{ marginBottom: \"20px\" }}>\n                                <CustomTextField\n                                    key={`plan_description_${formData.plan_description}_${renderKey}`}\n                                    label=\"Plan Description\"\n                                    CustomValue={formData.plan_description || \"\"}\n                                    onChange={(e) => handleInputChange('plan_description', e.target.value)}\n                                    multiline\n                                    rows={3}\n                                    textcss={{\n                                        width: \"100%\",\n                                        fontFamily: \"poppins\",\n                                        fontSize: \"16px\"\n                                    }}\n                                />\n                            </div>\n\n                            {loading && (\n                                <div style={{ \n                                    display: \"flex\", \n                                    justifyContent: \"center\", \n                                    alignItems: \"center\", \n                                    marginTop: \"20px\" \n                                }}>\n                                    <CircularProgress size={24} />\n                                    <Typography style={{ marginLeft: \"12px\", fontFamily: \"poppins\" }}>\n                                        Updating plan...\n                                    </Typography>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </CustomModal>\n        </>\n    );\n};\n\nexport default EditPlanModal;\n","import React, { useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport \"./addplan.scss\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar\";\nimport EditPlanModal from \"./EditPlanModal\";\n\nconst AddPlanCard = ({ planCardData, index, RendenDataAfterDelete, isDeleteVisible = true, isEditVisible = true, onPlanUpdated }) => {\n\n    const [snackOpen, setSnackOpen] = useState(false);\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackType, setSnackType] = useState(\"success\");\n    const [editModalOpen, setEditModalOpen] = useState(false);\n\n    const [deletePlan] = useState({\n        doctor_id: planCardData?.doctor_id,\n        doctor_list_id: planCardData?.doctor_list_id,\n        doctor_fee_plan_id: planCardData?.doctor_fee_plan_id\n    });\n\n    const DeleteDoctorPlan = async () => {\n        RendenDataAfterDelete(false);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/createUpdatedoctorlisting/planDelete\",\n                JSON.stringify(deletePlan),\n            );\n            RendenDataAfterDelete(true);\n            setSnackMessage(\"Plan deleted successfully.\");\n            setSnackType(\"success\");\n            setSnackOpen(true);\n            console.log(\"Delete API Response:\", response);\n        } catch (error) {\n            console.error(\"Delete API Error:\", error);\n            setSnackMessage(\"Failed to delete plan. Please try again.\");\n            setSnackType(\"error\");\n            setSnackOpen(true);\n            RendenDataAfterDelete(false);\n        }\n    };\n\n    const handleEditClick = () => {\n        console.log(\"EditPlanModal - Plan data being passed:\", planCardData);\n        console.log(\"EditPlanModal - Opening modal, current state:\", editModalOpen);\n        setEditModalOpen(true);\n        console.log(\"EditPlanModal - Modal state after setting:\", true);\n    };\n\n    const handlePlanUpdated = () => {\n        if (onPlanUpdated) {\n            onPlanUpdated();\n        }\n        setEditModalOpen(false);\n    };\n\n    return (\n        <>\n            <CustomSnackBar type={snackType} isOpen={snackOpen} message={snackMessage} />\n            \n            <EditPlanModal\n                isOpen={editModalOpen}\n                onClose={() => setEditModalOpen(false)}\n                planData={planCardData}\n                onPlanUpdated={handlePlanUpdated}\n            />\n\n            <div className=\"Box1\">\n                <div>\n                    <div className=\"detail-type1\" key={index}>\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"18px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"28px\",\n                                color: \"#313033\",\n                            }}\n                        >\n                            {planCardData?.plan_name}\n                        </Typography>\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"12px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"18px\",\n                                color: \"#787579\",\n                            }}\n                        >\n                            {planCardData?.plan_fee} | {planCardData?.plan_duration}\n                        </Typography>\n                    </div>\n                </div>\n                <div className=\"Delete-Edit\">\n                    <div className=\"Delete-Icon\" style={{ display: isDeleteVisible ? 'block' : 'none' }}>\n                        <Box sx={{ marginTop: \"0.5rem\", marginLeft: \"5%\" }}>\n                            <DeleteIcon />\n                        </Box>\n                        <CustomButton\n                            label=\"Delete\"\n                            isTransaprent={true}\n                            handleClick={DeleteDoctorPlan}\n                            buttonCss={{\n                                borderBottom: \"1px\",\n                                borderLeft: \"1px\",\n                                borderRight: \"1px\",\n                                borderTop: \"1px\",\n                            }}\n                        />\n                    </div>\n                    <div className=\"Edit-Icon\" style={{ display: isEditVisible ? 'block' : 'none' }}>\n                        <Box sx={{ marginTop: \"0.5rem\", marginLeft: \"5%\" }}>\n                            <EditIcon />\n                        </Box>\n                        <CustomButton\n                            label=\"Edit\"\n                            isTransaprent={true}\n                            handleClick={handleEditClick}\n                            buttonCss={{\n                                borderBottom: \"1px\",\n                                borderLeft: \"1px\",\n                                borderRight: \"1px\",\n                                borderTop: \"1px\",\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AddPlanCard;\n    ","// Validation utility functions for booking appointment\n\nexport const validateStep = (step, data, questions = null) => {\n    switch (step) {\n        case 0: // Details step\n            return validateDetailsStep(data);\n        case 1: // Date & Time step\n            return validateDateTimeStep(data);\n        case 2: // Duration step\n            return validateDurationStep(data);\n        case 3: // Questions step\n            return validateQuestionsStep(data, questions);\n        case 4: // Payment step\n            return validatePaymentStep(data);\n        default:\n            return { isValid: true, errors: [] };\n    }\n};\n\nconst validateDetailsStep = (data) => {\n    const errors = [];\n    \n    if (!data.patient_type) {\n        errors.push(\"Please select patient type\");\n    }\n    \n    if (!data.name || data.name.trim() === \"\") {\n        errors.push(\"Full name is required\");\n    } else if (data.name.trim().length < 2) {\n        errors.push(\"Full name must be at least 2 characters\");\n    }\n    \n    if (!data.gender) {\n        errors.push(\"Please select gender\");\n    }\n    \n    if (!data.age) {\n        errors.push(\"Please select age\");\n    } else if (data.age < 0 || data.age > 120) {\n        errors.push(\"Please enter a valid age\");\n    }\n    \n    if (!data.problem || data.problem.trim() === \"\") {\n        errors.push(\"Please describe your problem\");\n    } else if (data.problem.trim().length < 10) {\n        errors.push(\"Problem description must be at least 10 characters\");\n    }\n    \n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n};\n\nconst validateDateTimeStep = (data) => {\n    const errors = [];\n    \n    if (!data.appointment_date) {\n        errors.push(\"Please select an appointment date\");\n    }\n    \n    if (!data.duration) {\n        errors.push(\"Please select appointment duration\");\n    }\n    \n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n};\n\nconst validateDurationStep = (data) => {\n    const errors = [];\n    \n    if (!data.appointment_time) {\n        errors.push(\"Please select a time slot\");\n    }\n    \n    if (!data.doctor_fee_plan_id) {\n        errors.push(\"Please select a package plan\");\n    }\n    \n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n};\n\nconst validateQuestionsStep = (data, questions = null) => {\n    const errors = [];\n    \n    // If no questions are provided or questions array is empty, skip validation\n    if (!questions || questions.length === 0) {\n        return {\n            isValid: true,\n            errors: []\n        };\n    }\n    \n    // Check if all required questions are answered\n    const questionKeys = Object.keys(data).filter(key => key.startsWith('answer_'));\n    const answeredQuestions = questionKeys.filter(key => data[key] && data[key].trim() !== '');\n    \n    // If there are questions but not all are answered\n    if (questions.length > 0 && answeredQuestions.length !== questions.length) {\n        const unansweredCount = questions.length - answeredQuestions.length;\n        errors.push(`Please answer all questions (${unansweredCount} remaining)`);\n    }\n    \n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n};\n\nconst validatePaymentStep = (data) => {\n    const errors = [];\n    \n    if (!data.payment_method_nonce) {\n        errors.push(\"Please complete payment\");\n    }\n    \n    return {\n        isValid: errors.length === 0,\n        errors\n    };\n};\n\nexport const getStepTitle = (step) => {\n    const titles = [\n        \"Patient Details\",\n        \"Select Date & Time\",\n        \"Choose Package\",\n        \"Answer Questions\",\n        \"Payment\"\n    ];\n    return titles[step] || \"Step\";\n};\n\nexport const getStepSubtitle = (step) => {\n    const subtitles = [\n        \"Tell us about yourself and your health concern\",\n        \"Pick a convenient date and time for your appointment\",\n        \"Select the consultation package that suits your needs\",\n        \"Help us understand your condition better\",\n        \"Complete your payment to confirm the appointment\"\n    ];\n    return subtitles[step] || \"\";\n};\n\n// Mobile number validation functions\nexport const validateMobileNumber = (mobile, countryCode = \"+1\") => {\n    if (!mobile || mobile.trim() === \"\") {\n        return { isValid: false, message: \"Mobile number is required\" };\n    }\n    \n    // Clean the mobile number\n    const cleanedMobile = cleanMobileNumber(mobile);\n    \n    // Basic length validation based on country code\n    const minLength = getMinLengthForCountry(countryCode);\n    const maxLength = getMaxLengthForCountry(countryCode);\n    \n    if (cleanedMobile.length < minLength) {\n        return { \n            isValid: false, \n            message: `Mobile number must be at least ${minLength} digits` \n        };\n    }\n    \n    if (cleanedMobile.length > maxLength) {\n        return { \n            isValid: false, \n            message: `Mobile number must not exceed ${maxLength} digits` \n        };\n    }\n    \n    // Check if it contains only digits\n    if (!/^\\d+$/.test(cleanedMobile)) {\n        return { \n            isValid: false, \n            message: \"Mobile number should contain only digits\" \n        };\n    }\n    \n    // Country-specific validation patterns\n    const pattern = getValidationPattern(countryCode);\n    if (pattern && !pattern.test(cleanedMobile)) {\n        return { \n            isValid: false, \n            message: getMobileHelperText(countryCode) \n        };\n    }\n    \n    return { isValid: true, message: \"\" };\n};\n\nexport const cleanMobileNumber = (mobile) => {\n    if (!mobile) return \"\";\n    \n    // Remove all non-digit characters\n    return mobile.replace(/\\D/g, \"\");\n};\n\nexport const getMobileHelperText = (countryCode) => {\n    const helperTexts = {\n        \"+1\": \"Enter a valid US/Canada mobile number (10 digits)\",\n        \"+91\": \"Enter a valid Indian mobile number (10 digits)\",\n        \"+44\": \"Enter a valid UK mobile number (10-11 digits)\",\n        \"+61\": \"Enter a valid Australian mobile number (9 digits)\",\n        \"+49\": \"Enter a valid German mobile number (10-11 digits)\",\n        \"+33\": \"Enter a valid French mobile number (10 digits)\",\n        \"+86\": \"Enter a valid Chinese mobile number (11 digits)\",\n        \"+81\": \"Enter a valid Japanese mobile number (10-11 digits)\",\n        \"+82\": \"Enter a valid Korean mobile number (10-11 digits)\",\n        \"+55\": \"Enter a valid Brazilian mobile number (10-11 digits)\"\n    };\n    \n    return helperTexts[countryCode] || \"Enter a valid mobile number\";\n};\n\n// Helper functions for mobile validation\nconst getMinLengthForCountry = (countryCode) => {\n    const minLengths = {\n        \"+1\": 10,   // US/Canada\n        \"+91\": 10,  // India\n        \"+44\": 10,  // UK\n        \"+61\": 9,   // Australia\n        \"+49\": 10,  // Germany\n        \"+33\": 10,  // France\n        \"+86\": 11,  // China\n        \"+81\": 10,  // Japan\n        \"+82\": 10,  // Korea\n        \"+55\": 10   // Brazil\n    };\n    \n    return minLengths[countryCode] || 7;\n};\n\nconst getMaxLengthForCountry = (countryCode) => {\n    const maxLengths = {\n        \"+1\": 10,   // US/Canada\n        \"+91\": 10,  // India\n        \"+44\": 11,  // UK\n        \"+61\": 9,   // Australia\n        \"+49\": 11,  // Germany\n        \"+33\": 10,  // France\n        \"+86\": 11,  // China\n        \"+81\": 11,  // Japan\n        \"+82\": 11,  // Korea\n        \"+55\": 11   // Brazil\n    };\n    \n    return maxLengths[countryCode] || 15;\n};\n\nconst getValidationPattern = (countryCode) => {\n    const patterns = {\n        \"+1\": /^[2-9]\\d{9}$/,           // US/Canada: starts with 2-9, 10 digits\n        \"+91\": /^[6-9]\\d{9}$/,          // India: starts with 6-9, 10 digits\n        \"+44\": /^[1-9]\\d{9,10}$/,       // UK: starts with 1-9, 10-11 digits\n        \"+61\": /^[2-9]\\d{8}$/,          // Australia: starts with 2-9, 9 digits\n        \"+49\": /^[1-9]\\d{9,10}$/,       // Germany: starts with 1-9, 10-11 digits\n        \"+33\": /^[1-9]\\d{8}$/,          // France: starts with 1-9, 9 digits\n        \"+86\": /^1[3-9]\\d{9}$/,         // China: starts with 1, second digit 3-9, 11 digits\n        \"+81\": /^[789]\\d{9,10}$/,       // Japan: starts with 7-9, 10-11 digits\n        \"+82\": /^[1-9]\\d{9,10}$/,       // Korea: starts with 1-9, 10-11 digits\n        \"+55\": /^[1-9]\\d{9,10}$/        // Brazil: starts with 1-9, 10-11 digits\n    };\n    \n    return patterns[countryCode] || null;\n};","import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n    Box,\n    Paper,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    Skeleton,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport ToModal from \"../../../ToModal/ToModal\";\nimport \"./PackagePatient.scss\";\nimport { DoctorDetail } from \"../../SuperAdminHistory/SuperAdminHistoryDoctor/DoctorDetail\";\nimport doc1 from \"../../../static/images/DrImages/doc1.png\";\nimport doc2 from \"../../../static/images/DrImages/doc2.png\";\nimport doc3 from \"../../../static/images/DrImages/doc3.png\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\n\nconst PackagePatient = () => {\n    const [cardData, setCardData] = useState();\n    const [loading, setLoading] = useState(true);\n    \n    const fetchData = async () => {\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/packages/patient');\n            console.log(\"Dashboard Response from API: \",resp?.data);\n            setCardData(resp?.data?.response);\n        }catch(err){\n            console.log(\"Error : \", err)\n        }finally {\n            setLoading(false);\n        }\n      };\n      \n      useEffect( () => {\n        fetchData();\n      },[] )\n    \n      React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"package\");\n        localStorage.setItem(\"path\", \"packagedoctor\");\n    }, []);\n    // const [value, setValue] = useState([null, null]);\n    // function getWeeksAfter(date, amount) {\n    //     return date ? date.add(amount, \"week\") : undefined;\n    // }\n    return (\n        <>\n            <nav className=\"NavBar-Container-Appoinement\">\n                <NavLink to={\"/superadmin/package/packagedoctor\"}>Doctor</NavLink>\n                <NavLink to={\"/superadmin/package/packagepatient\"}>Patient</NavLink>\n            </nav>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"98%\",\n                    height: \"100%\",\n                    height: \"90%\",\n                    flexDirection: \"row\",\n                }}\n            >\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"block\",\n                        height: \"100%\",\n                    }}\n                >\n                    <div className=\"search-date\">\n                        <Box\n                            display={\"flex\"}\n                            margin={\"10px\"}\n                            flexWrap={\"wrap\"}\n                            border={1}\n                            borderColor=\"#AEAAAE\"\n                            borderRadius={\"25px\"}\n                            width={\"20em\"}\n                            height=\"38px\"\n                            backgroundColor=\"#E6E1E5\"\n                        >\n                            <Stack direction=\"row\" alignItems=\"center\" gap={1} padding={\"10px\"}>\n                                <SearchIcon sx={{ margin: \"0 0 0 0%\", color: \"#AEAAAE\" }} />\n                                <Typography\n                                    variant=\"body1\"\n                                    sx={{ textAlign: \"left\", color: \"#AEAAAE\" }}\n                                >\n                                    Search Patient Name / ID\n                                </Typography>\n                            </Stack>\n                        </Box>\n                        <div style={{ display: \"flex\", marginLeft: \"100px\" }}>\n                            <ToModal label={\"Date\"} tagname={\"Date\"} />\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <TableContainer component={Paper} style={{ background: \"white\" }}>\n                            <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow style={{ fontWeight: \"bold\" }}>\n                                        <TableCell><strong>Name & Details</strong></TableCell>\n                                        <TableCell align=\"left\" style={{ marginRight: \"5rem\" }}>\n                                            <strong>Patient ID</strong>\n                                        </TableCell>\n                                        <TableCell align=\"center\"><strong>Package</strong></TableCell>\n                                        {/* <TableCell align=\"right\">Contact Details</TableCell>\n                                        <TableCell align=\"right\">Time</TableCell> */}\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {loading ? (\n                                        Array.from({ length: 3 }).map((_, index) => (\n                                            <TableRow key={index}>\n                                                <TableCell>\n                                                    <Skeleton variant=\"rectangular\" width={150} height={30} />\n                                                </TableCell>\n                                                <TableCell align=\"left\">\n                                                    <Skeleton variant=\"rectangular\" width={100} height={30} />\n                                                </TableCell>\n                                                <TableCell align=\"center\">\n                                                    <Skeleton variant=\"rectangular\" width={150} height={30} />\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : cardData && cardData.length > 0 ? (\n                                    cardData.map((data) => (\n                                        <TableRow\n                                            key={data?.suid}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\": { border: 0 },\n                                            }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                                                {data?.name}\n                                            </TableCell>\n                                            <TableCell align=\"left\">{data?.patient_id}</TableCell>\n                                            <TableCell align=\"center\">{data?.package}</TableCell>\n                                            {/* <TableCell align=\"right\">{row.carbs}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell> */}\n                                        </TableRow>\n                                    ))\n                                    ) : (\n                                    <TableRow>\n                                            <TableCell colSpan={3} align=\"center\">\n                                                <NoAppointmentCard />\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default PackagePatient;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport { Edit as EditIcon } from \"@mui/icons-material\";\nimport \"./EditListingButton.scss\";\n\nconst EditListingButton = ({\n    onEditClick = () => {},\n    disabled = false,\n    size = \"medium\",\n    variant = \"contained\",\n    className = \"\",\n    tooltip = \"Edit Listing\",\n    ...props\n}) => {\n    const getSizeStyles = () => {\n        switch (size) {\n            case \"small\":\n                return {\n                    padding: \"8px\",\n                    fontSize: \"16px\"\n                };\n            case \"large\":\n                return {\n                    padding: \"16px\",\n                    fontSize: \"24px\"\n                };\n            default: // medium\n                return {\n                    padding: \"12px\",\n                    fontSize: \"20px\"\n                };\n        }\n    };\n\n    const getVariantStyles = () => {\n        switch (variant) {\n            case \"outlined\":\n                return {\n                    border: \"2px solid #e72b49\",\n                    backgroundColor: \"transparent\",\n                    color: \"#e72b49\",\n                    \"&:hover\": {\n                        backgroundColor: \"#e72b49\",\n                        color: \"white\",\n                        transform: \"translateY(-2px)\",\n                        boxShadow: \"0 4px 12px rgba(231, 43, 73, 0.3)\"\n                    }\n                };\n            case \"text\":\n                return {\n                    backgroundColor: \"transparent\",\n                    color: \"#e72b49\",\n                    \"&:hover\": {\n                        backgroundColor: \"rgba(231, 43, 73, 0.1)\",\n                        transform: \"translateY(-1px)\"\n                    }\n                };\n            default: // contained\n                return {\n                    backgroundColor: \"#e72b49\",\n                    color: \"white\",\n                    \"&:hover\": {\n                        backgroundColor: \"#d32f2f\",\n                        transform: \"translateY(-2px)\",\n                        boxShadow: \"0 4px 12px rgba(231, 43, 73, 0.3)\"\n                    }\n                };\n        }\n    };\n\n    return (\n        <Tooltip title={tooltip} arrow placement=\"top\">\n            <IconButton\n                onClick={onEditClick}\n                disabled={disabled}\n                className={`edit-listing-button ${className}`}\n                sx={{\n                    ...getSizeStyles(),\n                    ...getVariantStyles(),\n                    borderRadius: \"8px\",\n                    transition: \"all 0.3s ease\",\n                    \"&:disabled\": {\n                        opacity: 0.5,\n                        cursor: \"not-allowed\",\n                        transform: \"none\"\n                    },\n                    \"&:active\": {\n                        transform: \"translateY(0)\"\n                    }\n                }}\n                aria-label={tooltip}\n                {...props}\n            >\n                <EditIcon />\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nEditListingButton.propTypes = {\n    onEditClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n    variant: PropTypes.oneOf([\"contained\", \"outlined\", \"text\"]),\n    className: PropTypes.string,\n    tooltip: PropTypes.string,\n};\n\nexport default EditListingButton;\n","import { Box, Typography, Chip } from \"@mui/material\";\nimport React from \"react\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport EditListingButton from \"../../../../components/EditListingButton\";\n// import \"./CustomDrActiveListing.scss\";\n\nconst CustomDrActiveListingCard = ({ \n    label, \n    Idtype, \n    Idnumber, \n    onhandleClickButtonOne, \n    buttonOneLabel, \n    buttonTwoLabel, \n    onhandleClickButtonTwo,\n    onEditClick,\n    showEditButton = true,\n    statusLabel,\n    statusColor = \"default\"\n}) => {\n    return (\n        <>\n            <Box\n                sx={{\n                    border: \"1px solid #E6E1E5\",\n                    margin: \"0.5%\",\n                    padding: \"1%\",\n                    borderRadius: \" 0.5rem\",\n                }}\n            >\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"flex-start\" }}>\n                    <Box\n                        sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", flex: 1 }}\n                    >\n                        <Typography\n                            style={{\n                                color: \"black\",\n                                fontFamily: \"poppins\",\n                                fontSize: \"22px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"28px\",\n                                whiteSpace: \"nowrap\",\n                            }}\n                        >\n                            {label}\n                        </Typography>\n                        {statusLabel && (\n                            <Chip\n                                label={statusLabel}\n                                color={statusColor}\n                                size=\"small\"\n                                sx={{ mt: 0.5, mb: 0.5, fontFamily: \"poppins\" }}\n                            />\n                        )}\n                        <Typography\n                            style={{\n                                color: \"#787579\",\n                                fontFamily: \"poppins\",\n                                fontSize: \"17px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"18px\",\n                                letterSpacing: \"0.096px\",\n                                whiteSpace: \"nowrap\",\n                            }}\n                        >\n                            {Idtype} : {Idnumber}\n                        </Typography>\n                    </Box>\n                    \n                    {/* Edit Button */}\n                    {showEditButton && (\n                        <Box sx={{ marginLeft: \"16px\", marginRight: \"16px\" }}>\n                            <EditListingButton\n                                onEditClick={onEditClick}\n                                size=\"medium\"\n                                variant=\"outlined\"\n                                tooltip=\"Edit Listing\"\n                            />\n                        </Box>\n                    )}\n                    \n                    <div className=\"bttns\">\n                        <CustomButton\n                            label={buttonOneLabel}\n                            isTransaprent={\"True\"}\n                            buttonCss={{\n                                width: \"120px\",\n                                height: \"48px\",\n                                borderRadius: \"20px\",\n                                fontSize: \"14px\",\n                            }}\n                            handleClick={onhandleClickButtonOne}\n                        ></CustomButton>\n                        <CustomButton\n                            label={buttonTwoLabel}\n                            buttonCss={{\n                                width: \"120px\",\n                                height: \"48px\",\n                                borderRadius: \"20px\",\n                                fontSize: \"14px\",\n                            }}\n                            handleClick={onhandleClickButtonTwo}\n                        ></CustomButton>\n                    </div>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default CustomDrActiveListingCard;\n","import axiosInstance from '../config/axiosInstance';\nimport axios from 'axios';\n// Import from lightweight constants to avoid circular imports\nimport { baseURL } from '../constants/apiConstants';\n\n// Create a separate axios instance for Braintree token generation (no auth headers)\nconst braintreeAxios = axios.create({\n  baseURL: baseURL,\n  timeout: 10000,\n});\n\n/**\n * Payment Service with Environment-Based Handling\n * Development: Mock payment processing\n * Production: Real Braintree payment processing\n */\n\n/**\n * Generate client token for payment gateway\n * @returns {Promise<string>} Client token\n */\nexport const generateClientToken = async () => {\n  try {\n    console.log(\"Fetching Braintree client token from paymentService\");\n    const response = await braintreeAxios.get('/sec/payment/generateToken'); // Use axios without auth headers\n    console.log(\"Braintree client token response from paymentService:\", response?.data);\n    return response?.data?.clientToken || response?.data;\n  } catch (error) {\n    console.error('Error generating client token:', error);\n    console.error('Error response:', error.response?.data);\n    console.error('Error status:', error.response?.status);\n    throw error;\n  }\n};\n\n/**\n * Process payment with environment-based handling\n * @param {Object} paymentData - Payment data\n * @param {string} paymentData.amount - Payment amount\n * @param {string} paymentData.user_id - User ID\n * @param {string} paymentData.doctor_fee_plan_id - Doctor fee plan ID\n * @param {string} paymentData.payment_method_nonce - Payment method nonce\n * @returns {Promise<Object>} Payment result\n */\nexport const processPayment = async (paymentData) => {\n  try {\n    const response = await axiosInstance.post('/sec/payment/processPayment', paymentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error processing payment:', error);\n    throw error;\n  }\n};\n\n/**\n * Get payment method nonce from Braintree Drop-In instance\n * @param {Object} instance - Braintree Drop-In instance\n * @returns {Promise<string>} Payment method nonce\n */\nexport const getPaymentMethodNonce = async (instance) => {\n  try {\n    if (!instance) {\n      throw new Error('Braintree instance not available');\n    }\n    \n    const requestPaymentResponse = await instance.requestPaymentMethod();\n    console.log('Payment method nonce generated:', requestPaymentResponse);\n    return requestPaymentResponse.nonce;\n  } catch (error) {\n    console.error('Error getting payment method nonce:', error);\n    throw error;\n  }\n};\n\n/**\n * Check if running in development mode\n * @returns {boolean} True if development mode\n */\nexport const isDevelopmentMode = () => {\n  return process.env.NODE_ENV === 'development' || \n         process.env.REACT_APP_ENV === 'development' ||\n         window.location.hostname === 'localhost';\n};\n\n/**\n * Mock payment processing for development\n * @param {Object} paymentData - Payment data\n * @returns {Promise<Object>} Mock payment result\n */\nexport const mockPaymentProcessing = async (paymentData) => {\n  console.log('Mock payment processing:', paymentData);\n  \n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  \n  const mockTransactionId = `mock_txn_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  \n  return {\n    success: true,\n    transaction: {\n      id: mockTransactionId,\n      status: 'authorized',\n      amount: paymentData.amount,\n      paymentMethodNonce: paymentData.payment_method_nonce\n    },\n    message: 'Payment processed successfully (Development Mode)',\n    transdata: mockTransactionId\n  };\n};\n","import React from 'react';\nimport { Paper, Box, Typography } from '@mui/material';\n\nconst SectionCard = ({ title, subtitle, actions, children, sx }) => {\n  return (\n    <Paper elevation={0} sx={{ border: '1px solid #E6E1E5', borderRadius: '12px', p: 3, mb: 3, ...sx }}>\n      {(title || actions) && (\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 2 }}>\n          <Box>\n            {title && (\n              <Typography variant=\"h6\" sx={{ fontFamily: 'poppins', fontWeight: 500, color: '#313033' }}>\n                {title}\n              </Typography>\n            )}\n            {subtitle && (\n              <Typography variant=\"body2\" sx={{ fontFamily: 'poppins', color: '#787579' }}>\n                {subtitle}\n              </Typography>\n            )}\n          </Box>\n          {actions && <Box>{actions}</Box>}\n        </Box>\n      )}\n      <Box>{children}</Box>\n    </Paper>\n  );\n};\n\nexport default SectionCard;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import Spinner from \"../Spinner\";\nimport \"./page-loader.scss\";\n\nconst PageLoader = ({ text }) => {\n    return (\n        <div className=\"page-loader\">\n            {/* <Spinner className=\"main-loader\" /> */}\n            <div className=\"info-text\">{text}</div>\n        </div>\n    );\n};\n\nPageLoader.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default PageLoader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Chip } from \"@mui/material\";\nimport { MyLocationOutlined } from \"@mui/icons-material\";\n\nconst CustomChip = ({\n    label,\n    isTransparent,\n    isDisabled,\n    isElevated,\n    leftIcon,\n    rightIcon,\n    onChipClick,\n    onRightIconClick,\n    color = \"primary\",\n    size = \"medium\",\n    variant = \"filled\"\n}) => {\n    const chipVariant = isTransparent ? \"outlined\" : variant;\n    \n    return (\n        <Chip\n            label={label}\n            color={color}\n            variant={chipVariant}\n            size={size}\n            disabled={isDisabled}\n            onClick={onChipClick}\n            onDelete={onRightIconClick}\n            icon={leftIcon}\n            deleteIcon={rightIcon}\n            sx={{\n                fontFamily: \"Poppins, sans-serif\",\n                fontWeight: 500,\n                fontSize: size === \"small\" ? \"12px\" : \"14px\",\n                borderRadius: \"20px\",\n                transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                boxShadow: isElevated ? \"0 4px 12px rgba(0, 0, 0, 0.15)\" : \"none\",\n                \"&:hover\": {\n                    transform: \"translateY(-2px)\",\n                    boxShadow: isElevated ? \"0 8px 20px rgba(0, 0, 0, 0.2)\" : \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n                },\n                \"&:active\": {\n                    transform: \"translateY(0px)\",\n                },\n                \"&.MuiChip-outlined\": {\n                    borderWidth: \"2px\",\n                    \"&:hover\": {\n                        borderWidth: \"2px\",\n                    }\n                },\n                \"& .MuiChip-icon\": {\n                    fontSize: size === \"small\" ? \"16px\" : \"18px\",\n                },\n                \"& .MuiChip-deleteIcon\": {\n                    fontSize: size === \"small\" ? \"16px\" : \"18px\",\n                    transition: \"all 0.2s ease\",\n                    \"&:hover\": {\n                        transform: \"scale(1.1)\",\n                    }\n                }\n            }}\n        />\n    );\n};\n\nCustomChip.defaultProps = {\n    label: \"Chip\",\n    leftIcon: <MyLocationOutlined />,\n    rightIcon: <MyLocationOutlined />,\n    isTransparent: false,\n    isDisabled: false,\n    isElevated: false,\n    onChipClick: () => {},\n    onRightIconClick: () => {},\n    color: \"primary\",\n    size: \"medium\",\n    variant: \"filled\",\n};\n\nCustomChip.propTypes = {\n    label: PropTypes.string.isRequired,\n    leftIcon: PropTypes.node,\n    rightIcon: PropTypes.node,\n    isTransparent: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isElevated: PropTypes.bool,\n    onChipClick: PropTypes.func,\n    onRightIconClick: PropTypes.func,\n    color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]),\n    size: PropTypes.oneOf([\"small\", \"medium\"]),\n    variant: PropTypes.oneOf([\"filled\", \"outlined\"]),\n};\n\nexport default CustomChip;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, Typography, Fade } from \"@mui/material\";\nimport \"./CustomProgress.scss\";\n\nexport const CustomCircularProgress = ({\n    size = 120,\n    progress = 0,\n    trackWidth = 8,\n    indicatorWidth = 8,\n    trackColor = \"#e0e0e0\",\n    indicatorColor = \"#ff6b9d\",\n    indicatorCap = \"round\",\n    spinnerMode = false,\n    spinnerSpeed = 1,\n    label = \"\",\n    showPercentage = true,\n    animated = true,\n    className = \"\"\n}) => {\n    const center = size / 2;\n    const radius = center - Math.max(trackWidth, indicatorWidth) - 2;\n    const dashArray = 2 * Math.PI * radius;\n    const dashOffset = dashArray * ((100 - progress) / 100);\n\n    const getSizeStyles = () => {\n        if (size <= 60) return { fontSize: \"10px\", fontWeight: 600 };\n        if (size <= 100) return { fontSize: \"14px\", fontWeight: 600 };\n        return { fontSize: \"18px\", fontWeight: 700 };\n    };\n\n    return (\n        <Box className={`custom-circular-progress ${className}`}>\n            <Box className=\"circular-progress-container\" style={{ width: size, height: size }}>\n                <svg \n                    className=\"circular-progress-svg\" \n                    style={{ width: size, height: size }}\n                    viewBox={`0 0 ${size} ${size}`}\n                >\n                    {/* Background track */}\n                    <circle\n                        className=\"circular-track\"\n                        cx={center}\n                        cy={center}\n                        fill=\"transparent\"\n                        r={radius}\n                        stroke={trackColor}\n                        strokeWidth={trackWidth}\n                        opacity={0.3}\n                    />\n                    \n                    {/* Progress indicator */}\n                    <circle\n                        className={`circular-indicator ${spinnerMode ? \"spinner-mode\" : \"\"} ${animated ? \"animated\" : \"\"}`}\n                        style={{ \n                            animationDuration: spinnerMode ? `${spinnerSpeed}s` : \"0.4s\",\n                            animationTimingFunction: \"cubic-bezier(0.4, 0, 0.2, 1)\"\n                        }}\n                        cx={center}\n                        cy={center}\n                        fill=\"transparent\"\n                        r={radius}\n                        stroke={indicatorColor}\n                        strokeWidth={indicatorWidth}\n                        strokeDasharray={dashArray}\n                        strokeDashoffset={dashOffset}\n                        strokeLinecap={indicatorCap}\n                        transform={`rotate(-90 ${center} ${center})`}\n                        filter=\"drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1))\"\n                    />\n                    \n                    {/* Gradient definition for animated effect */}\n                    <defs>\n                        <linearGradient id={`gradient-${size}`} x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                            <stop offset=\"0%\" stopColor={indicatorColor} stopOpacity=\"0.8\" />\n                            <stop offset=\"50%\" stopColor={indicatorColor} stopOpacity=\"1\" />\n                            <stop offset=\"100%\" stopColor={indicatorColor} stopOpacity=\"0.8\" />\n                        </linearGradient>\n                        <filter id={`glow-${size}`}>\n                            <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\"/>\n                            <feMerge> \n                                <feMergeNode in=\"coloredBlur\"/>\n                                <feMergeNode in=\"SourceGraphic\"/>\n                            </feMerge>\n                        </filter>\n                    </defs>\n                </svg>\n                \n                {/* Center content */}\n                <Box className=\"circular-progress-content\">\n                    {showPercentage && !spinnerMode && (\n                        <Fade in={true} timeout={500}>\n                            <Typography \n                                variant=\"h6\" \n                                className=\"circular-percentage\"\n                                sx={{\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontWeight: getSizeStyles().fontWeight,\n                                    fontSize: getSizeStyles().fontSize,\n                                    color: indicatorColor,\n                                    textAlign: \"center\",\n                                    lineHeight: 1,\n                                    textShadow: \"0 1px 2px rgba(0, 0, 0, 0.1)\"\n                                }}\n                            >\n                                {Math.round(progress)}%\n                            </Typography>\n                        </Fade>\n                    )}\n                    \n                    {label && (\n                        <Typography \n                            variant=\"caption\" \n                            className=\"circular-label\"\n                            sx={{\n                                fontFamily: \"Poppins, sans-serif\",\n                                fontWeight: 500,\n                                fontSize: size <= 60 ? \"8px\" : size <= 100 ? \"10px\" : \"12px\",\n                                color: \"#6c757d\",\n                                textAlign: \"center\",\n                                lineHeight: 1.2,\n                                marginTop: \"4px\"\n                            }}\n                        >\n                            {label}\n                        </Typography>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nCustomCircularProgress.defaultProps = {\n    size: 120,\n    progress: 0,\n    trackWidth: 8,\n    indicatorWidth: 8,\n    trackColor: \"#e0e0e0\",\n    indicatorColor: \"#ff6b9d\",\n    indicatorCap: \"round\",\n    spinnerMode: false,\n    spinnerSpeed: 1,\n    label: \"\",\n    showPercentage: true,\n    animated: true,\n    className: \"\"\n};\n\nCustomCircularProgress.propTypes = {\n    size: PropTypes.number,\n    progress: PropTypes.number,\n    trackWidth: PropTypes.number,\n    indicatorWidth: PropTypes.number,\n    trackColor: PropTypes.string,\n    indicatorColor: PropTypes.string,\n    indicatorCap: PropTypes.oneOf([\"round\", \"square\", \"butt\"]),\n    spinnerMode: PropTypes.bool,\n    spinnerSpeed: PropTypes.number,\n    label: PropTypes.string,\n    showPercentage: PropTypes.bool,\n    animated: PropTypes.bool,\n    className: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, LinearProgress, Typography, Fade } from \"@mui/material\";\nimport \"./CustomProgress.scss\";\n\nexport const CustomLinearProgress = ({ \n    progress = 0, \n    label = \"\", \n    showPercentage = true, \n    size = \"medium\",\n    variant = \"determinate\",\n    color = \"primary\",\n    thickness = 4,\n    animated = true,\n    className = \"\"\n}) => {\n    const getSizeStyles = () => {\n        switch (size) {\n            case \"small\":\n                return {\n                    height: 4,\n                    fontSize: \"12px\"\n                };\n            case \"large\":\n                return {\n                    height: 8,\n                    fontSize: \"16px\"\n                };\n            default:\n                return {\n                    height: 6,\n                    fontSize: \"14px\"\n                };\n        }\n    };\n\n    const getColorStyles = () => {\n        switch (color) {\n            case \"secondary\":\n                return {\n                    backgroundColor: \"rgba(255, 107, 157, 0.2)\",\n                    \"& .MuiLinearProgress-bar\": {\n                        background: \"linear-gradient(135deg, #ff6b9d 0%, #ff8fab 100%)\"\n                    }\n                };\n            case \"success\":\n                return {\n                    backgroundColor: \"rgba(76, 175, 80, 0.2)\",\n                    \"& .MuiLinearProgress-bar\": {\n                        background: \"linear-gradient(135deg, #4caf50 0%, #66bb6a 100%)\"\n                    }\n                };\n            case \"warning\":\n                return {\n                    backgroundColor: \"rgba(255, 152, 0, 0.2)\",\n                    \"& .MuiLinearProgress-bar\": {\n                        background: \"linear-gradient(135deg, #ff9800 0%, #ffb74d 100%)\"\n                    }\n                };\n            case \"error\":\n                return {\n                    backgroundColor: \"rgba(244, 67, 54, 0.2)\",\n                    \"& .MuiLinearProgress-bar\": {\n                        background: \"linear-gradient(135deg, #f44336 0%, #ef5350 100%)\"\n                    }\n                };\n            default:\n                return {\n                    backgroundColor: \"rgba(25, 118, 210, 0.2)\",\n                    \"& .MuiLinearProgress-bar\": {\n                        background: \"linear-gradient(135deg, #1976d2 0%, #42a5f5 100%)\"\n                    }\n                };\n        }\n    };\n\n    return (\n        <Box className={`custom-linear-progress ${className}`}>\n            {(label || showPercentage) && (\n                <Box className=\"progress-header\">\n                    {label && (\n                        <Typography \n                            variant=\"body2\" \n                            className=\"progress-label\"\n                            sx={{\n                                fontFamily: \"Poppins, sans-serif\",\n                                fontWeight: 600,\n                                color: \"#495057\",\n                                fontSize: getSizeStyles().fontSize\n                            }}\n                        >\n                            {label}\n                        </Typography>\n                    )}\n                    {showPercentage && variant === \"determinate\" && (\n                        <Typography \n                            variant=\"body2\" \n                            className=\"progress-percentage\"\n                            sx={{\n                                fontFamily: \"Poppins, sans-serif\",\n                                fontWeight: 700,\n                                color: color === \"primary\" ? \"#1976d2\" : \n                                       color === \"secondary\" ? \"#ff6b9d\" :\n                                       color === \"success\" ? \"#4caf50\" :\n                                       color === \"warning\" ? \"#ff9800\" :\n                                       color === \"error\" ? \"#f44336\" : \"#1976d2\",\n                                fontSize: getSizeStyles().fontSize\n                            }}\n                        >\n                            {Math.round(progress)}%\n                        </Typography>\n                    )}\n                </Box>\n            )}\n            \n            <Box className=\"progress-container\">\n                <LinearProgress\n                    variant={variant}\n                    value={progress}\n                    sx={{\n                        height: getSizeStyles().height,\n                        borderRadius: \"10px\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n                        overflow: \"hidden\",\n                        ...getColorStyles(),\n                        \n                        \"& .MuiLinearProgress-bar\": {\n                            borderRadius: \"10px\",\n                            transition: animated ? \"transform 0.4s cubic-bezier(0.4, 0, 0.2, 1)\" : \"none\",\n                            position: \"relative\",\n                            \n                            \"&::after\": animated ? {\n                                content: '\"\"',\n                                position: \"absolute\",\n                                top: 0,\n                                left: 0,\n                                right: 0,\n                                bottom: 0,\n                                background: \"linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent)\",\n                                animation: \"shimmer 2s infinite\",\n                                borderRadius: \"10px\"\n                            } : {}\n                        }\n                    }}\n                />\n            </Box>\n        </Box>\n    );\n};\n\nCustomLinearProgress.defaultProps = {\n    progress: 0,\n    label: \"\",\n    showPercentage: true,\n    size: \"medium\",\n    variant: \"determinate\",\n    color: \"primary\",\n    thickness: 4,\n    animated: true,\n    className: \"\"\n};\n\nCustomLinearProgress.propTypes = {\n    progress: PropTypes.number,\n    label: PropTypes.string,\n    showPercentage: PropTypes.bool,\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n    variant: PropTypes.oneOf([\"determinate\", \"indeterminate\", \"buffer\", \"query\"]),\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"success\", \"warning\", \"error\"]),\n    thickness: PropTypes.number,\n    animated: PropTypes.bool,\n    className: PropTypes.string,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Tabs, Tab, Box, Typography, Chip, Badge } from \"@mui/material\";\nimport \"./CustomTab.scss\";\n\nconst CustomTab = ({ \n    items = [], \n    value = 0, \n    onChange = () => {},\n    variant = \"scrollable\",\n    orientation = \"horizontal\",\n    size = \"medium\",\n    color = \"primary\",\n    centered = false,\n    fullWidth = false,\n    showScrollButtons = true,\n    allowScrollButtonsMobile = true,\n    className = \"\",\n    tabProps = {},\n    indicatorProps = {}\n}) => {\n    const [currentIdx, setCurrentIdx] = useState(value);\n\n    const handleChange = (event, newValue) => {\n        setCurrentIdx(newValue);\n        if (onChange) {\n            onChange(event, newValue);\n        }\n    };\n\n    const getSizeStyles = () => {\n        switch (size) {\n            case \"small\":\n                return {\n                    fontSize: \"12px\",\n                    minHeight: \"40px\",\n                    padding: \"6px 12px\"\n                };\n            case \"large\":\n                return {\n                    fontSize: \"16px\",\n                    minHeight: \"56px\",\n                    padding: \"12px 24px\"\n                };\n            default:\n                return {\n                    fontSize: \"14px\",\n                    minHeight: \"48px\",\n                    padding: \"8px 16px\"\n                };\n        }\n    };\n\n    const getColorStyles = () => {\n        switch (color) {\n            case \"secondary\":\n                return {\n                    color: \"#ff6b9d\",\n                    \"&.Mui-selected\": {\n                        color: \"#ff6b9d\"\n                    }\n                };\n            case \"success\":\n                return {\n                    color: \"#4caf50\",\n                    \"&.Mui-selected\": {\n                        color: \"#4caf50\"\n                    }\n                };\n            case \"warning\":\n                return {\n                    color: \"#ff9800\",\n                    \"&.Mui-selected\": {\n                        color: \"#ff9800\"\n                    }\n                };\n            case \"error\":\n                return {\n                    color: \"#f44336\",\n                    \"&.Mui-selected\": {\n                        color: \"#f44336\"\n                    }\n                };\n            default:\n                return {\n                    color: \"#1976d2\",\n                    \"&.Mui-selected\": {\n                        color: \"#1976d2\"\n                    }\n                };\n        }\n    };\n\n    return (\n        <Box className={`custom-tab ${className}`}>\n        <Tabs\n            value={currentIdx}\n            onChange={handleChange}\n                variant={variant}\n                orientation={orientation}\n                centered={centered}\n                scrollButtons={showScrollButtons ? \"auto\" : false}\n                allowScrollButtonsMobile={allowScrollButtonsMobile}\n                aria-label=\"custom tabs\"\n                sx={{\n                    fontFamily: \"Poppins, sans-serif\",\n                    minHeight: getSizeStyles().minHeight,\n                    \n                    \"& .MuiTabs-indicator\": {\n                        height: 3,\n                        borderRadius: \"2px\",\n                        background: color === \"primary\" ? \"linear-gradient(135deg, #1976d2 0%, #42a5f5 100%)\" :\n                                   color === \"secondary\" ? \"linear-gradient(135deg, #ff6b9d 0%, #ff8fab 100%)\" :\n                                   color === \"success\" ? \"linear-gradient(135deg, #4caf50 0%, #66bb6a 100%)\" :\n                                   color === \"warning\" ? \"linear-gradient(135deg, #ff9800 0%, #ffb74d 100%)\" :\n                                   color === \"error\" ? \"linear-gradient(135deg, #f44336 0%, #ef5350 100%)\" :\n                                   \"linear-gradient(135deg, #1976d2 0%, #42a5f5 100%)\",\n                        boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\n                        transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                        ...indicatorProps\n                    },\n                    \n                    \"& .MuiTabs-scrollButtons\": {\n                        color: color === \"primary\" ? \"#1976d2\" :\n                               color === \"secondary\" ? \"#ff6b9d\" :\n                               color === \"success\" ? \"#4caf50\" :\n                               color === \"warning\" ? \"#ff9800\" :\n                               color === \"error\" ? \"#f44336\" : \"#1976d2\",\n                        \n                        \"&:hover\": {\n                            backgroundColor: \"rgba(0, 0, 0, 0.04)\",\n                            borderRadius: \"8px\"\n                        },\n                        \n                        \"&.Mui-disabled\": {\n                            opacity: 0.3\n                        }\n                    },\n                    \n                    \"& .MuiTabs-flexContainer\": {\n                        gap: orientation === \"horizontal\" ? \"8px\" : \"0px\"\n                    }\n                }}\n                {...tabProps}\n            >\n                {items.map((item, idx) => {\n                    const tabItem = typeof item === \"object\" ? item : { label: item };\n                    const { \n                        label, \n                        icon, \n                        disabled = false, \n                        badge = null, \n                        chip = null,\n                        sx = {} \n                    } = tabItem;\n\n                    return (\n                        <Tab\n                            key={idx}\n                            label={\n                                <Box className=\"tab-content\">\n                                    {icon && (\n                                        <Box className=\"tab-icon\">\n                                            {icon}\n                                        </Box>\n                                    )}\n                                    <Typography \n                                        variant=\"body2\" \n                                        className=\"tab-label\"\n                                        sx={{\n                                            fontFamily: \"Poppins, sans-serif\",\n                                            fontWeight: currentIdx === idx ? 600 : 500,\n                                            fontSize: getSizeStyles().fontSize,\n                                            textTransform: \"none\",\n                                            transition: \"all 0.3s ease\"\n                                        }}\n                                    >\n                                        {label}\n                                    </Typography>\n                                    {badge && (\n                                        <Badge \n                                            badgeContent={badge.count} \n                                            color={badge.color || \"primary\"}\n                                            className=\"tab-badge\"\n                                        >\n                                            <Box />\n                                        </Badge>\n                                    )}\n                                    {chip && (\n                                        <Chip \n                                            label={chip.label}\n                                            size=\"small\"\n                                            color={chip.color || \"primary\"}\n                                            variant={chip.variant || \"filled\"}\n                                            className=\"tab-chip\"\n                                            sx={{\n                                                fontSize: \"10px\",\n                                                height: \"20px\",\n                                                marginLeft: \"4px\"\n                                            }}\n                                        />\n                                    )}\n                                </Box>\n                            }\n                            disabled={disabled}\n                            sx={{\n                                ...getSizeStyles(),\n                                ...getColorStyles(),\n                                fontFamily: \"Poppins, sans-serif\",\n                                fontWeight: currentIdx === idx ? 600 : 500,\n                                textTransform: \"none\",\n                                borderRadius: \"12px\",\n                                margin: \"0 4px\",\n                                transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                                position: \"relative\",\n                                overflow: \"hidden\",\n                                \n                                \"&:hover\": {\n                                    backgroundColor: color === \"primary\" ? \"rgba(25, 118, 210, 0.08)\" :\n                                                   color === \"secondary\" ? \"rgba(255, 107, 157, 0.08)\" :\n                                                   color === \"success\" ? \"rgba(76, 175, 80, 0.08)\" :\n                                                   color === \"warning\" ? \"rgba(255, 152, 0, 0.08)\" :\n                                                   color === \"error\" ? \"rgba(244, 67, 54, 0.08)\" :\n                                                   \"rgba(25, 118, 210, 0.08)\",\n                                    transform: \"translateY(-1px)\",\n                                    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n                                },\n                                \n                                \"&.Mui-selected\": {\n                                    backgroundColor: color === \"primary\" ? \"rgba(25, 118, 210, 0.12)\" :\n                                                   color === \"secondary\" ? \"rgba(255, 107, 157, 0.12)\" :\n                                                   color === \"success\" ? \"rgba(76, 175, 80, 0.12)\" :\n                                                   color === \"warning\" ? \"rgba(255, 152, 0, 0.12)\" :\n                                                   color === \"error\" ? \"rgba(244, 67, 54, 0.12)\" :\n                                                   \"rgba(25, 118, 210, 0.12)\",\n                                    transform: \"translateY(-2px)\",\n                                    boxShadow: \"0 6px 12px rgba(0, 0, 0, 0.15)\",\n                                    \n                                    \"&::before\": {\n                                        content: '\"\"',\n                                        position: \"absolute\",\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        background: color === \"primary\" ? \"linear-gradient(135deg, rgba(25, 118, 210, 0.1) 0%, rgba(66, 165, 245, 0.1) 100%)\" :\n                                                   color === \"secondary\" ? \"linear-gradient(135deg, rgba(255, 107, 157, 0.1) 0%, rgba(255, 143, 171, 0.1) 100%)\" :\n                                                   color === \"success\" ? \"linear-gradient(135deg, rgba(76, 175, 80, 0.1) 0%, rgba(102, 187, 106, 0.1) 100%)\" :\n                                                   color === \"warning\" ? \"linear-gradient(135deg, rgba(255, 152, 0, 0.1) 0%, rgba(255, 183, 77, 0.1) 100%)\" :\n                                                   color === \"error\" ? \"linear-gradient(135deg, rgba(244, 67, 54, 0.1) 0%, rgba(239, 83, 80, 0.1) 100%)\" :\n                                                   \"linear-gradient(135deg, rgba(25, 118, 210, 0.1) 0%, rgba(66, 165, 245, 0.1) 100%)\",\n                                        borderRadius: \"12px\",\n                                        zIndex: -1\n                                    }\n                                },\n                                \n                                \"&.Mui-disabled\": {\n                                    opacity: 0.5,\n                                    cursor: \"not-allowed\"\n                                },\n                                \n                                ...sx\n                            }}\n                        />\n                    );\n                })}\n        </Tabs>\n        </Box>\n    );\n};\n\nCustomTab.defaultProps = {\n    items: [\"item 1\", \"item 2\", \"item 3\"],\n    value: 0,\n    onChange: () => {},\n    variant: \"scrollable\",\n    orientation: \"horizontal\",\n    size: \"medium\",\n    color: \"primary\",\n    centered: false,\n    fullWidth: false,\n    showScrollButtons: true,\n    allowScrollButtonsMobile: true,\n    className: \"\",\n    tabProps: {},\n    indicatorProps: {}\n};\n\nCustomTab.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            icon: PropTypes.node,\n            disabled: PropTypes.bool,\n            badge: PropTypes.shape({\n                count: PropTypes.number,\n                color: PropTypes.string\n            }),\n            chip: PropTypes.shape({\n                label: PropTypes.string,\n                color: PropTypes.string,\n                variant: PropTypes.string\n            }),\n            sx: PropTypes.object\n        })\n    ])),\n    value: PropTypes.number,\n    onChange: PropTypes.func,\n    variant: PropTypes.oneOf([\"standard\", \"scrollable\", \"fullWidth\"]),\n    orientation: PropTypes.oneOf([\"horizontal\", \"vertical\"]),\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n    color: PropTypes.oneOf([\"primary\", \"secondary\", \"success\", \"warning\", \"error\"]),\n    centered: PropTypes.bool,\n    fullWidth: PropTypes.bool,\n    showScrollButtons: PropTypes.bool,\n    allowScrollButtonsMobile: PropTypes.bool,\n    className: PropTypes.string,\n    tabProps: PropTypes.object,\n    indicatorProps: PropTypes.object,\n};\n\nexport default CustomTab;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./toggle-switch.scss\";\n\nconst CustomToggleSwitch = ({\n    id,\n    name,\n    checked,\n    onChange,\n    optionLabels,\n    small,\n    disabled,\n    icon,\n}) => {\n    return (\n        <div className={`toggle-switch${small ? \" small-switch\" : \"\"}`}>\n            <input\n                type=\"checkbox\"\n                name={name}\n                className=\"toggle-switch-checkbox\"\n                id={id}\n                checked={checked}\n                onChange={(e) => onChange(e.target.checked)}\n                disabled={disabled}\n            />\n            {id ? (\n                <label className=\"toggle-switch-label\" htmlFor={id}>\n                    <span\n                        className={\n                            disabled\n                                ? \"toggle-switch-inner toggle-switch-disabled\"\n                                : \"toggle-switch-inner\"\n                        }\n                        data-yes={optionLabels[0]}\n                        data-no={optionLabels[1]}\n                    />\n                    <span\n                        className={\n                            disabled\n                                ? \"toggle-switch-switch toggle-switch-disabled\"\n                                : \"toggle-switch-switch\"\n                        }\n                    >\n                        {icon && (\n                            <span\n                                className={`material-symbols-outlined${\n                                    disabled ? \" disabled\" : \"\"\n                                }`}\n                            >\n                                {icon}\n                            </span>\n                        )}\n                    </span>\n                </label>\n            ) : null}\n        </div>\n    );\n};\n\n// Set optionLabels for rendering.\nCustomToggleSwitch.defaultProps = {\n    optionLabels: [\"Yes\", \"No\"],\n    icon: \"check\",\n};\n\nCustomToggleSwitch.propTypes = {\n    id: PropTypes.string.isRequired,\n    checked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    optionLabels: PropTypes.array,\n    small: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n};\n\nexport default CustomToggleSwitch;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    List,\n    ListItem,\n    ListItemButton,\n    ListItemText,\n    ListItemAvatar,\n    Checkbox,\n    Avatar,\n} from \"@mui/material\";\n\nconst CustomList = ({\n    items,\n    handleToggle,\n    showDescription,\n    showAvatar,\n    maxWidth,\n    labelText = \" I will be in your neighborhood doing errands\",\n    descriptionText,\n}) => {\n    return (\n        <List sx={{ width: \"100%\", maxWidth }}>\n            {items.map((item, idx) => {\n                const { name, checked } = item;\n                const labelId = `checkbox-list-label-${name}`;\n                return (\n                    <ListItem\n                        key={idx}\n                        secondaryAction={\n                            <Checkbox\n                                edge=\"end\"\n                                onChange={() => handleToggle({ ...item, checked: !item.checked })}\n                                checked={checked}\n                                inputProps={{ \"aria-labelledby\": labelId }}\n                            />\n                        }\n                        disablePadding\n                    >\n                        <ListItemButton>\n                            <ListItemAvatar>\n                                {showAvatar && (\n                                    <Avatar\n                                        alt={`Avatar n°${idx + 1}`}\n                                        src={`/static/images/avatar/${idx + 1}.jpg`}\n                                    />\n                                )}\n                            </ListItemAvatar>\n                            <ListItemText\n                                id={labelId}\n                                primary={`Line item ${idx + 1}`}\n                                secondary={\n                                    showDescription ? (\n                                        <Fragment>{descriptionText || labelText}</Fragment>\n                                    ) : null\n                                }\n                            />\n                        </ListItemButton>\n                    </ListItem>\n                );\n            })}\n        </List>\n    );\n};\n\nCustomList.defaultProps = {\n    items: [\n        { name: \"item1\", checked: false },\n        { name: \"item2\", checked: true },\n        { name: \"item3\", checked: false },\n    ],\n    handleToggle: () => {},\n    showDescription: false,\n    descriptionText: \"\",\n    showAvatar: false,\n    maxWidth: 360,\n};\n\nCustomList.propTypes = {\n    items: PropTypes.array,\n    handleToggle: PropTypes.func,\n    showDescription: PropTypes.bool,\n    showAvatar: PropTypes.bool,\n    maxWidth: PropTypes.number,\n    descriptionText: PropTypes.string,\n};\n\nexport default CustomList;\n","import React from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n} from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport DefaultDoctorImage from \"../../static/images/DrImages/doctor_alter.jpeg\";\n// import StarIcon from \"../static/images/DrImages/ShiningStar.png\";\nimport StarIcon from \"../../static/images/DrImages/ShiningStar.png\"\nimport \"./searchbarmodalcard.scss\";\n\nconst SearchBarModalCard = ({ DrData }) => {\n  const {\n    first_name: name = \"\",\n    middle_name = \"\",\n    last_name = \"\",\n    suid: id,\n    qualification = \"N/A\",\n    department_name: specialist = \"N/A\",\n    average_review: rating = \"No Reviews\",\n    hospital_org: hospital = \"N/A\",\n    profile_picture: profilePicture,\n  } = DrData || {};\n\n  return (\n    <Box key={id} sx={{ width: \"100%\", marginBottom: 2 }}>\n      <Card\n        sx={{\n          display: \"flex\",\n          height: 128,\n          padding: 1,\n          backgroundColor: \"#fff\",\n          borderRadius: 4,\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n          transition: \"box-shadow 0.3s ease-in-out\",\n          \"&:hover\": {\n            boxShadow: \"0px 4px 10px #E72B4A\",\n          },\n        }}\n      >\n        {/* Image Section */}\n        <Box sx={{ width: \"120px\", height: \"100%\", flexShrink: 0 }}>\n          <CardMedia\n            component=\"img\"\n            src={profilePicture || DefaultDoctorImage}\n            alt=\"Doctor Profile\"\n            sx={{\n              width: \"100%\",\n              height: \"100%\",\n              borderRadius: 2,\n              objectFit: \"cover\",\n            }}\n          />\n        </Box>\n\n        {/* Content Section */}\n        <CardContent\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            flexGrow: 1,\n            padding: \"8px 16px\",\n          }}\n        >\n          {/* Doctor Name */}\n          <Typography\n            variant=\"h6\"\n            sx={{\n              fontWeight: \"bold\",\n              fontSize: \"14px\",\n              marginBottom: \"4px\",\n            }}\n          >\n            {`${name} ${middle_name} ${last_name}`.trim() || \"N/A\"}\n          </Typography>\n          <Divider sx={{ my: 1 }} />\n\n          {/* Qualification and Hospital */}\n          <Typography\n            variant=\"body2\"\n            sx={{\n              color: \"#787579\",\n              fontSize: \"12px\",\n              lineHeight: \"18px\",\n            }}\n          >\n            {qualification} {hospital && `| ${hospital}`}\n          </Typography>\n\n          {/* Specialist */}\n          <Typography\n            variant=\"body2\"\n            sx={{\n              color: \"#787579\",\n              fontSize: \"12px\",\n              lineHeight: \"18px\",\n              marginBottom: \"8px\",\n            }}\n          >\n            {specialist}\n          </Typography>\n\n          {/* Review Section */}\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n            <Box\n              component=\"span\"\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginRight: \"8px\",\n              }}\n            >\n              <img src={StarIcon} alt=\"Star\" style={{ height: \"16px\" }} />\n            </Box>\n            <Typography\n              variant=\"body2\"\n              sx={{ fontSize: \"12px\", color: \"#787579\" }}\n            >\n              {`Reviews | ${rating}`}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nSearchBarModalCard.propTypes = {\n  DrData: PropTypes.shape({\n    first_name: PropTypes.string,\n    middle_name: PropTypes.string,\n    last_name: PropTypes.string,\n    suid: PropTypes.string,\n    qualification: PropTypes.string,\n    department_name: PropTypes.string,\n    average_review: PropTypes.string,\n    hospital_org: PropTypes.string,\n    profile_picture: PropTypes.string,\n  }),\n};\n\nSearchBarModalCard.defaultProps = {\n  DrData: {},\n};\n\nexport default SearchBarModalCard;\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport {\n  Box,\n  Typography,\n  Modal,\n  IconButton,\n  TextField,\n  InputAdornment,\n  Stack,\n  CircularProgress,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Link } from \"react-router-dom\";\nimport CustomDropdown from \"../CustomDropdown/custom-dropdown\";\nimport SearchBarModalCard from \"../../constants/SearchBarModalCard/SearchBarModalCard\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport { front_end_url } from \"../../constants/const\";\nimport frontimg from \"../../static/images/DrImages/searchIcon.png\";\nimport PropTypes from \"prop-types\";\n\n// Utility: Debounce function\nconst debounce = (func, delay = 350) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => func(...args), delay);\n  };\n};\n\nconst SearchBarModal = () => {\n  const [open, setOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [cardData, setCardData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const searchInputRef = useRef(null);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    setSearchValue(\"\");\n    setCardData([]);\n    setError(null);\n  };\n\n  // Fetch search results\n  const fetchSearchResult = useCallback(async (value) => {\n    if (!value) {\n      setCardData([]);\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const resp = await axiosInstance.get(`/sec/patient/getPatientSearchAPI/${value}`);\n      const data = resp?.data?.response;\n      setCardData(Array.isArray(data) ? data : []);\n    } catch (err) {\n      console.error(\"Search API error:\", err);\n      setError(\"Failed to fetch search results. Please try again.\");\n      setCardData([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Debounced input handler\n  const handleInputChange = useCallback(\n    debounce((value) => {\n      setSearchValue(value.trim().toLowerCase());\n    }, 350),\n    []\n  );\n\n  // Effect to fetch results when searchValue changes\n  useEffect(() => {\n    fetchSearchResult(searchValue);\n  }, [searchValue, fetchSearchResult]);\n\n  // Focus input when modal opens\n  useEffect(() => {\n    if (open && searchInputRef.current) {\n      searchInputRef.current.focus();\n    }\n  }, [open]);\n\n  return (\n    <div className=\"search_bar_modal\">\n      {/* Search Trigger */}\n      <Box\n        onClick={handleOpen}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        border={1}\n        borderColor=\"#AEAAAE\"\n        borderRadius=\"25px\"\n        width={{ xs: \"100%\", sm: \"27em\" }}\n        height=\"38px\"\n        backgroundColor=\"#E6E1E5\"\n        paddingX={2}\n        sx={{ cursor: \"pointer\" }}\n        role=\"button\"\n        aria-label=\"Open search modal\"\n        tabIndex={0}\n        onKeyDown={(e) => e.key === \"Enter\" && handleOpen()}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n          <SearchIcon sx={{ color: \"#AEAAAE\" }} />\n          <Typography variant=\"body1\" sx={{ color: \"#AEAAAE\" }}>\n            Search here…\n          </Typography>\n        </Stack>\n      </Box>\n\n      {/* Modal */}\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"search-modal-title\"\n        aria-describedby=\"search-modal-description\"\n      >\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: { xs: \"90%\", sm: \"60%\" },\n            bgcolor: \"background.paper\",\n            boxShadow: 24,\n            borderRadius: \"8px\",\n            p: 4,\n            maxHeight: \"80vh\",\n            overflowY: \"auto\",\n            outline: \"none\",\n          }}\n        >\n          {/* Close Button */}\n          <IconButton\n            onClick={handleClose}\n            sx={{ position: \"absolute\", top: 8, right: 8, color: \"grey.500\" }}\n            aria-label=\"Close search modal\"\n          >\n            <CloseIcon />\n          </IconButton>\n\n          {/* Search Input */}\n          <TextField\n            inputRef={searchInputRef}\n            fullWidth\n            placeholder=\"Search here\"\n            variant=\"outlined\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            onChange={(e) => handleInputChange(e.target.value)}\n            sx={{\n              mb: 3,\n              mt: 5,\n              backgroundColor: \"#EFEFEF\",\n              borderRadius: \"25px\",\n              \"& .MuiOutlinedInput-root\": {\n                \"& fieldset\": { border: \"none\" },\n              },\n            }}\n            aria-label=\"Search input\"\n          />\n\n          {/* Uncomment if dropdown is needed\n          <CustomDropdown\n            label=\"Select state\"\n            items={[\"Andaman and Nicobar Islands\", \"Andhra Pradesh\", ...]}\n            activeItem=\"\"\n            handleChange={(item) => console.log(item)}\n          />\n          */}\n\n          <Box sx={{ borderBottom: \"1px solid #E6E1E5\", my: 2 }} />\n\n          {/* Search Results */}\n          <Box display=\"flex\" flexWrap=\"wrap\" gap={2} justifyContent=\"center\">\n            {loading ? (\n              <Stack alignItems=\"center\" spacing={2}>\n                <CircularProgress size={24} />\n                <Typography>Searching...</Typography>\n              </Stack>\n            ) : error ? (\n              <Typography color=\"error\">{error}</Typography>\n            ) : cardData.length === 0 ? (\n              <Stack alignItems=\"center\" spacing={2}>\n                <img\n                  style={{ maxWidth: \"200px\", height: \"auto\" }}\n                  src={frontimg}\n                  alt=\"No results found\"\n                />\n                <Typography>No Doctors Found</Typography>\n              </Stack>\n            ) : (\n              cardData.map((data, index) => (\n                <Link\n                  key={data?.suid || index}\n                  to={`${front_end_url}/patientdashboard/drdetailscard/${data?.suid}`}\n                  onClick={handleClose}\n                  style={{\n                    textDecoration: \"none\",\n                    width: { xs: \"100%\", sm: \"45%\" },\n                    height: \"auto\",\n                  }}\n                >\n                  <SearchBarModalCard DrData={data} />\n                </Link>\n              ))\n            )}\n          </Box>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\n\nexport default SearchBarModal;","import React, { useState } from \"react\";\nimport {\n    Box,\n    IconButton,\n    InputAdornment,\n    Stack,\n    TextField,\n    Typography,\n    CircularProgress,\n} from \"@mui/material\";\n// import { makeStyles } from \"@mui/styles\"; // Using sx prop instead for MUI v5\nimport Modal from \"@mui/material/Modal\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport GpsFixedIcon from \"@mui/icons-material/GpsFixed\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n// import Drcard from \"../../constants/drcard/drcard\";\nimport DoctorCard from \"../DoctorCard/DoctorCard\";\nimport frontimg from \"../../static/images/DrImages/locationIcon.png\";\nimport { Link } from \"react-router-dom\";\n\n// Removed makeStyles - using sx prop instead for MUI v5 compatibility\n\nconst LocationModal = () => {\n    // Removed useStyles - using sx prop instead\n    const [open, setOpen] = useState(false);\n    const [postalCodes, setPostalCodes] = useState([]);\n    const [isButtonClicked, setIsButtonClicked] = useState(false);\n    const [loadingCurrentLocation, setLoadingCurrentLocation] = useState(false);\n    const [searchLocation, setSearchLocation] = useState(\"\"); // State for storing user search location\n    const [centerCoordinates, setCenterCoordinates] = useState(null); // State for storing center coordinates\n    const [doctors, setDoctors] = useState([]); // State for storing doctor list\n    const [locname, setLocname] = useState(\"\");\n    const [geolocationError, setGeolocationError] = useState(null); // State for geolocation error\n    const geofenceRadius = 2000; // Radius in meters (2 km)\n\n    // Popular cities as fallback options\n    const popularCities = [\n        { name: \"New York, NY\", lat: 40.7128, lon: -74.0060 },\n        { name: \"Los Angeles, CA\", lat: 34.0522, lon: -118.2437 },\n        { name: \"Chicago, IL\", lat: 41.8781, lon: -87.6298 },\n        { name: \"Houston, TX\", lat: 29.7604, lon: -95.3698 },\n        { name: \"Phoenix, AZ\", lat: 33.4484, lon: -112.0740 },\n        { name: \"Philadelphia, PA\", lat: 39.9526, lon: -75.1652 },\n        { name: \"San Antonio, TX\", lat: 29.4241, lon: -98.4936 },\n        { name: \"San Diego, CA\", lat: 32.7157, lon: -117.1611 },\n        { name: \"Dallas, TX\", lat: 32.7767, lon: -96.7970 },\n        { name: \"San Jose, CA\", lat: 37.3382, lon: -121.8863 }\n    ];\n\n    const handleOpen = () => {\n        setOpen(true);\n        setGeolocationError(null); // Clear any previous errors\n    };\n    const handleClose = () => setOpen(false);\n\n    const fetchPostalCodesWithinGeofence = async (center, gridSize) => {\n        console.log(\"🗺️ Fetching postal codes for center:\", center, \"gridSize:\", gridSize);\n        const postalCodesSet = new Set();\n        const latLngPoints = generateGridPoints(center, geofenceRadius, gridSize);\n        console.log(\"📍 Generated grid points:\", latLngPoints.length);\n\n        for (let i = 0; i < latLngPoints.length; i++) {\n            const point = latLngPoints[i];\n            const postcode = await fetchPostalCode(point[0], point[1]);\n            if (postcode) {\n                postalCodesSet.add(postcode);\n                console.log(\"📮 Found postal code:\", postcode);\n            }\n        }\n\n        const postalCodes = Array.from(postalCodesSet);\n        console.log(\"📮 All postal codes found:\", postalCodes);\n        return postalCodes;\n    };\n\n    const fetchPostalCode = async (latitude, longitude) => {\n        try {\n            const url = `https://nominatim.openstreetmap.org/reverse?lat=${latitude}&lon=${longitude}&format=json`;\n            const response = await fetch(url);\n            const data = await response.json();\n            return data?.address?.postcode || null;\n        } catch (error) {\n            console.error(\"Error fetching reverse geocoding data:\", error);\n            return null;\n        }\n    };\n\n    const generateGridPoints = (center, radius, gridSize) => {\n        const latLngPoints = [];\n        const lat = center[0];\n        const lng = center[1];\n\n        for (let x = -radius; x <= radius; x += gridSize) {\n            for (let y = -radius; y <= radius; y += gridSize) {\n                if (Math.sqrt(x * x + y * y) <= radius) {\n                    const latLng = [\n                        lat + y * 0.0000089,\n                        lng + (x * 0.0000089) / Math.cos(lat * 0.018),\n                    ];\n                    latLngPoints.push(latLng);\n                }\n            }\n        }\n\n        return latLngPoints;\n    };\n\n    const handleUseCurrentLocation = async () => {\n        try {\n            setIsButtonClicked(true);\n            setLoadingCurrentLocation(true);\n\n            if (\"geolocation\" in navigator) {\n                navigator.geolocation.getCurrentPosition(\n                    async (position) => {\n                        const userCoordinates = {\n                            latitude: position.coords.latitude,\n                            longitude: position.coords.longitude,\n                        };\n\n                        // Fetch location name using reverse geocoding\n                        const response = await fetch(\n                            `https://nominatim.openstreetmap.org/reverse?lat=${userCoordinates.latitude}&lon=${userCoordinates.longitude}&format=json`,\n                        );\n                        const locationData = await response.json();\n                        const locationName = locationData.display_name || \"Unknown Location\";\n\n                        // Update state with coordinates and location name\n                        setCenterCoordinates([userCoordinates.latitude, userCoordinates.longitude]);\n                        setLocname(locationName);\n\n                        // Fetch postal codes within geofence\n                        console.log(\"🌍 User coordinates:\", userCoordinates);\n                        const postalCodes = await fetchPostalCodesWithinGeofence(\n                            [userCoordinates.latitude, userCoordinates.longitude],\n                            1000, // Radius in meters\n                        );\n                        console.log(\"📮 Postal codes from geofence:\", postalCodes);\n                        setPostalCodes(postalCodes);\n\n                        // Fetch doctors based on postal codes\n                        console.log(\"👨‍⚕️ About to fetch doctors with postal codes:\", postalCodes);\n                        await fetchDoctors(postalCodes);\n\n                        setLoadingCurrentLocation(false);\n                    },\n                    (error) => {\n                        console.error(\"❌ Geolocation error:\", error);\n                        console.error(\"❌ Error code:\", error.code);\n                        console.error(\"❌ Error message:\", error.message);\n                        \n                        setLoadingCurrentLocation(false);\n                        \n                        // Handle different geolocation errors\n                        if (error.code === 1) {\n                            console.warn(\"⚠️ User denied geolocation permission\");\n                            setGeolocationError(\"Location access denied. Please search for a city or try again.\");\n                        } else if (error.code === 2) {\n                            console.warn(\"⚠️ Location unavailable\");\n                            setGeolocationError(\"Location unavailable. Please search for a city.\");\n                        } else if (error.code === 3) {\n                            console.warn(\"⚠️ Geolocation request timed out\");\n                            setGeolocationError(\"Location request timed out. Please search for a city.\");\n                        }\n                    },\n                );\n            } else {\n                console.error(\"Geolocation is not supported by this browser.\");\n                setLoadingCurrentLocation(false);\n            }\n        } catch (error) {\n            console.error(\"Error fetching current location:\", error);\n            setLoadingCurrentLocation(false);\n        }\n    };\n\n    const fetchDoctors = async (zipcode) => {\n        try {\n            console.log(\"🔍 Fetching doctors for zipcodes:\", zipcode);\n            \n            if (!zipcode || zipcode.length === 0) {\n                console.warn(\"⚠️ No zipcodes provided to fetchDoctors\");\n                setDoctors([]);\n                return;\n            }\n\n            const requestData = {\n                zipcodes: zipcode,\n                type: \"Good\", // Or you can dynamically set this\n                page: 1,\n                limit: 5,\n            };\n\n            console.log(\"📤 Request data:\", requestData);\n\n            const response = await axiosInstance.post(\n                \"/sec/patient/doctornearme\",\n                JSON.stringify(requestData),\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                }\n            );\n            \n            console.log(\"📥 API Response:\", response);\n            console.log(\"📥 Response data:\", response?.data);\n            console.log(\"📥 Response response:\", response?.data?.response);\n            \n            const doctorsData = response?.data?.response || [];\n            console.log(\"👨‍⚕️ Doctors found:\", doctorsData.length, doctorsData);\n            \n            setDoctors(doctorsData);\n        } catch (error) {\n            console.error(\"❌ Error fetching doctors:\", error);\n            console.error(\"❌ Error response:\", error.response);\n            console.error(\"❌ Error status:\", error.response?.status);\n            console.error(\"❌ Error data:\", error.response?.data);\n            setDoctors([]);\n        }\n    };\n    console.log(\"this location doctors\", doctors);\n\n    // Test function to verify API endpoint\n    const testDoctorAPI = async () => {\n        try {\n            console.log(\"🧪 Testing doctor API endpoint...\");\n            const testData = {\n                zipcodes: [\"10001\"], // Test with a known postal code\n                type: \"Good\",\n                page: 1,\n                limit: 5,\n            };\n            \n            const response = await axiosInstance.post(\n                \"/sec/patient/doctornearme\",\n                JSON.stringify(testData),\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                }\n            );\n            \n            console.log(\"🧪 Test API Response:\", response);\n            console.log(\"🧪 Test API Data:\", response?.data);\n        } catch (error) {\n            console.error(\"🧪 Test API Error:\", error);\n        }\n    };\n\n    // Uncomment the line below to test the API when component mounts\n    // testDoctorAPI(); // Enable this to test API with known postal code\n\n    // Handle popular city selection\n    const handlePopularCitySelect = async (city) => {\n        try {\n            setLoadingCurrentLocation(true);\n            setGeolocationError(null);\n            \n            console.log(\"🏙️ Selected popular city:\", city.name);\n            \n            // Update state with coordinates and location name\n            setCenterCoordinates([city.lat, city.lon]);\n            setLocname(city.name);\n\n            // Fetch postal codes within geofence\n            console.log(\"🌍 City coordinates:\", city.lat, city.lon);\n            const postalCodes = await fetchPostalCodesWithinGeofence(\n                [city.lat, city.lon],\n                1000, // Radius in meters\n            );\n            console.log(\"📮 Postal codes from city:\", postalCodes);\n            setPostalCodes(postalCodes);\n\n            // Fetch doctors based on postal codes\n            console.log(\"👨‍⚕️ About to fetch doctors for city with postal codes:\", postalCodes);\n            await fetchDoctors(postalCodes);\n\n            setLoadingCurrentLocation(false);\n        } catch (error) {\n            console.error(\"❌ Error handling popular city selection:\", error);\n            setLoadingCurrentLocation(false);\n        }\n    };\n    const handleSearch = async () => {\n        try {\n            setLoadingCurrentLocation(true);\n\n            const url = `https://nominatim.openstreetmap.org/search?q=${searchLocation}&format=json&limit=1`;\n            const response = await fetch(url);\n            const data = await response.json();\n\n            if (data && data.length > 0) {\n                const { lat, lon, display_name } = data[0];\n                setCenterCoordinates([parseFloat(lat), parseFloat(lon)]);\n                setLocname(display_name);\n\n                const postalCodes = await fetchPostalCodesWithinGeofence(\n                    [parseFloat(lat), parseFloat(lon)],\n                    1000,\n                );\n                console.log(\"📮 Postal codes from search:\", postalCodes);\n                setPostalCodes(postalCodes);\n\n                // Fetch doctors based on the location\n                console.log(\"👨‍⚕️ About to fetch doctors from search with postal codes:\", postalCodes);\n                await fetchDoctors(postalCodes); // Assuming you use the first postal code for the API\n            } else {\n                console.error(\"Location not found\");\n            }\n\n            setLoadingCurrentLocation(false);\n        } catch (error) {\n            console.error(\"Error searching location:\", error);\n            setLoadingCurrentLocation(false);\n        }\n    };\n\n    return (\n        <>\n            <Box sx={{ display: \"inline\", width: \"40%\" }} onClick={handleOpen}>\n                <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n                    <LocationOnIcon\n                        sx={{\n                            color: locname ? \"#E72B4A\" : \"#AEAAAE\",\n                            width: \"32px\",\n                            height: \"32px\",\n                        }}\n                    />\n                    <Typography\n                        variant=\"body1\"\n                        sx={{\n                            fontWeight: 600,\n                            fontSize: \"14px\",\n                            color: locname ? \"#E72B4A\" : \"#AEAAAE\", // Change color if location is set\n                            marginTop: \"5%\",\n                            lineHeight: \"22px\",\n                        }}\n                    >\n                        {locname ? locname.split(\",\")[0] : \"Set Location..\"}\n                    </Typography>\n                </Stack>\n            </Box>\n\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={open}\n                onClose={handleClose}\n            >\n                <Box\n                    sx={{\n                        position: \"absolute\",\n                        width: \"40vw\",\n                        height: \"85vh\",\n                        background: \"#ffff\",\n                        boxShadow: \"0px 4px 10px 0px rgba(0, 0, 0, 0.25)\",\n                        padding: \"16px 32px 24px\", // Equivalent to theme.spacing(2, 4, 3)\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                        overflow: \"auto\",\n                        borderRadius: \"5px\",\n                    }}\n                >\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                        <Typography\n                            variant=\"h1\"\n                            sx={{\n                                fontWeight: 500,\n                                fontSize: \"20px\",\n                                color: \"#313033\",\n                                marginTop: \"2%\",\n                                lineHeight: \"20px\",\n                            }}\n                        >\n                            Add Your Location\n                        </Typography>\n                        <IconButton onClick={handleClose} sx={{ marginRight: \"-1rem\" }}>\n                            <CloseIcon sx={{ width: \"21px\", height: \"25px\", color: \"#313033\" }} />\n                        </IconButton>\n                    </Box>\n                    {/* Search Location */}\n                    <TextField\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon\n                                        sx={{ color: \"#AEAAAE\", width: \"24px\", height: \"24px\" }}\n                                    />\n                                </InputAdornment>\n                            ),\n                            disableUnderline: true,\n                        }}\n                        sx={{\n                            background: \"#EFEFEF\",\n                            borderRadius: \"50px\",\n                            border: \"none\",\n                            padding: \"2% 2%\",\n                            width: \"100%\",\n                            marginTop: \"10%\",\n                        }}\n                        placeholder=\"Search location here\"\n                        id=\"outlined-basic\"\n                        variant=\"standard\"\n                        value={searchLocation}\n                        onChange={(e) => {\n                            setIsButtonClicked(false);\n                            setSearchLocation(e.target.value);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === \"Enter\") {\n                                handleSearch();\n                            }\n                        }}\n                    />\n                    <Box onClick={handleUseCurrentLocation} sx={{ marginTop: \"5%\" }}>\n                        <Stack\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            gap={1}\n                            sx={{\n                                marginLeft: \"3%\",\n                                color: isButtonClicked ? \"#E72B4A\" : \"#313033\",\n                                transition: \"color 0.3s ease\",\n                            }}\n                        >\n                            <GpsFixedIcon sx={{ width: \"24px\", height: \"24px\" }} />\n                            <Typography\n                                variant=\"body1\"\n                                sx={{\n                                    textAlign: \"left\",\n                                    fontWeight: \"500\",\n                                    fontSize: \"14px\",\n                                    lineHeight: \"22px\",\n                                    cursor: \"pointer\",\n                                }}\n                            >\n                                Use Current Location\n                            </Typography>\n                        </Stack>\n                    </Box>\n\n                    {/* Show geolocation error if any */}\n                    {geolocationError && (\n                        <Box sx={{ marginTop: \"3%\", padding: \"10px\", backgroundColor: \"#ffebee\", borderRadius: \"4px\" }}>\n                            <Typography variant=\"body2\" sx={{ color: \"#d32f2f\", fontSize: \"12px\" }}>\n                                {geolocationError}\n                            </Typography>\n                        </Box>\n                    )}\n\n                    {/* Popular Cities Section */}\n                    <Box sx={{ marginTop: \"5%\" }}>\n                        <Typography\n                            variant=\"h6\"\n                            sx={{\n                                fontSize: \"16px\",\n                                fontWeight: \"600\",\n                                color: \"#313033\",\n                                marginBottom: \"10px\",\n                            }}\n                        >\n                            Popular Cities\n                        </Typography>\n                        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: \"8px\" }}>\n                            {popularCities.slice(0, 6).map((city, index) => (\n                                <Box\n                                    key={index}\n                                    onClick={() => handlePopularCitySelect(city)}\n                                    sx={{\n                                        padding: \"8px 12px\",\n                                        backgroundColor: \"#f5f5f5\",\n                                        borderRadius: \"20px\",\n                                        cursor: \"pointer\",\n                                        transition: \"all 0.2s ease\",\n                                        \"&:hover\": {\n                                            backgroundColor: \"#E72B4A\",\n                                            color: \"white\",\n                                        },\n                                    }}\n                                >\n                                    <Typography\n                                        variant=\"body2\"\n                                        sx={{\n                                            fontSize: \"12px\",\n                                            fontWeight: \"500\",\n                                        }}\n                                    >\n                                        {city.name}\n                                    </Typography>\n                                </Box>\n                            ))}\n                        </Box>\n                    </Box>\n                    \n\n                    {loadingCurrentLocation ? (\n                        // Show loader only when location is loading\n                        <Box sx={{ display: \"flex\", justifyContent: \"center\", marginTop: 3 }}>\n                            <CircularProgress />\n                        </Box>\n                    ) : doctors.length > 0 ? (\n                        // Render doctors only if they exist\n                        doctors.map((doctor, index) => (\n                            <Link\n                                to={`/patientdashboard/drdetailscard/` + doctor.suid}\n                                style={{\n                                    width: \"20em\",\n                                    textDecoration: \"none\",\n                                    marginRight: \"10px\",\n                                }}\n                                key={index}\n                            >\n                                <DoctorCard DrData={doctor} />\n                            </Link>\n                        ))\n                    ) : (\n                        // Show \"No Doctors Found\" card only when doctors list is empty\n                        <Box>\n                        <img\n                            style={{ width: \"50%\",height: \"30%\", marginLeft: \"14%\", marginTop: \"14%\" }}\n                            src={frontimg}\n                            alt=\"\"\n                        />\n                        <Typography>No Doctors Found</Typography>\n                    </Box>\n                    )}\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default LocationModal;\n\n// import {\n//     Box,\n//     ButtonBase,\n//     IconButton,\n//     InputAdornment,\n//     Stack,\n//     TextField,\n//     Typography,\n// } from \"@mui/material\";\n// import React, { useCallback, useEffect, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Modal from \"@material-ui/core/Modal\";\n// import LocationOnIcon from \"@mui/icons-material/LocationOn\";\n// import SearchIcon from \"@mui/icons-material/Search\";\n// import GpsFixedIcon from \"@mui/icons-material/GpsFixed\";\n// // import { styled } from \"@mui/material/styles\";\n// // import InputBase from \"@mui/material/InputBase\";\n// import CloseIcon from \"@mui/icons-material/Close\";\n// import \"./locationModal.scss\";\n// import axios from \"axios\";\n\n// function rand() {\n//     return Math.round(Math.random() * 20) - 10;\n// }\n// function getModalStyle() {\n//     const top = 50 + rand();\n//     const left = 50 + rand();\n//     return {\n//         top: `${top}%`,\n//         left: `${left}%`,\n//         transform: `translate(-${top}%, -${left}%)`,\n//     };\n// }\n// const useStyles = makeStyles((theme) => ({\n//     modal: {\n//         display: \"flex\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//     },\n//     paper: {\n//         position: \"absolute\",\n//         width: \"400px\",\n//         height: \"450px\",\n//         // backgroundColor: theme.palette.background.paper,\n//         // boxShadow: theme.shadows[5],\n//         background: \"#ffff\",\n//         boxShadow: \"0px 4px 10px 0px rgba(0, 0, 0, 0.25)\",\n//         padding: theme.spacing(2, 4, 3),\n//     },\n// }));\n\n// const locationModal = () => {\n//     const classes = useStyles();\n//     const [modalStyle] = React.useState(getModalStyle);\n//     const [open, setOpen] = React.useState(false);\n//     const handleOpen = () => {\n//         setOpen(true);\n//     };\n//     const handleClose = () => {\n//         setOpen(false);\n//     };\n\n//     const [position, setPosition] = useState({\n//         latitude: null,\n//         longitude: null,\n//     });\n//     const [address, setAddress] = useState([]);\n//     const [area, setArea] = useState(\"\");\n//     const [query, setQuery] = useState(\"\");\n//     const [results, setResults] = useState([]);\n//     const [error, setError] = useState(null);\n\n//     function getLocation() {\n//         if (navigator.geolocation) {\n//             navigator.geolocation.getCurrentPosition(showPosition);\n//         } else {\n//             alert(\"Geolocation is not supported by this browser.\");\n//         }\n//     }\n\n//     function showPosition(position) {\n//         setPosition({\n//             ...position,\n//             latitude: position?.coords?.latitude,\n//             longitude: position?.coords?.longitude,\n//         });\n//         getPincode(position?.coords?.latitude, position?.coords?.longitude);\n//         // getPincode(28.636589, 77.274315);\n//     }\n\n//     // for fetching current location\n//     const getPincode = async (lat, lon) => {\n//         try {\n//             const response = await axios.get(\n//                 `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`,\n//             );\n//             localStorage.setItem(\"pincode\", response?.data?.address?.postcode);\n//             setAddress(response?.data?.address);\n//         } catch (err) {\n//             console.log(\"Location error : \", err);\n//         }\n//     };\n\n//     // Debounce function\n//     const debounce = (func, delay) => {\n//         let timeoutId;\n//         return function (...args) {\n//             clearTimeout(timeoutId);\n//             timeoutId = setTimeout(() => {\n//                 func.apply(this, args);\n//             }, delay);\n//         };\n//     };\n\n//     // Function to search the area\n//     const SearchTheArea = async (area) => {\n//         try {\n//             const response = await axios.get(\n//                 `https://nominatim.openstreetmap.org/search.php?q=${area}&format=jsonv2`,\n//             );\n//             setResults(response?.data);\n//             //   localStorage.setItem('pincode',response?.data[0]);\n//         } catch (err) {\n//             setError(err);\n//         }\n//     };\n\n//     // Debounced search function\n//     const debouncedSearch = useCallback(\n//         debounce((searchQuery) => {\n//             if (searchQuery) {\n//                 SearchTheArea(searchQuery);\n//             }\n//         }, 500),\n//         [],\n//     );\n\n//     // Effect to handle the debounced search\n//     useEffect(() => {\n//         debouncedSearch(query);\n//         if (query === \"\" || query === \" \") {\n//             setResults([]);\n//         }\n//     }, [query, debouncedSearch]);\n\n//     //   console.log(\"result : \", results);\n//     //   console.log(query);\n\n//     return (\n//         <>\n//             <Box sx={{ diplay: \"inline\", width: \"50%\" }} onClick={handleOpen}>\n//                 <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n//                     <LocationOnIcon sx={{ color: \"#AEAAAE\", width: \"32px\", height: \"32px\" }} />\n//                     <Typography\n//                         variant=\"body1\"\n//                         sx={{\n//                             fontWeight: 600,\n//                             fontSize: \"14px\",\n//                             color: \"#AEAAAE\",\n//                             marginTop: \"5%\",\n//                             lineHeight: \"22px\",\n//                         }}\n//                     >\n//                         Set Location..\n//                     </Typography>\n//                 </Stack>\n//             </Box>\n\n//             <Box>\n//                 <Modal\n//                     aria-labelledby=\"simple-modal-title\"\n//                     aria-describedby=\"simple-modal-description\"\n//                     open={open}\n//                     onClose={handleClose}\n//                 >\n//                     <div\n//                         style={{\n//                             position: \"fixed\",\n//                             top: \"50%\",\n//                             left: \"50%\",\n//                             transform: \"translate( -50% , -50% )\",\n//                         }}\n//                         className={classes.paper}\n//                     >\n//                         {/* Add Location */}\n//                         <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n//                             <Typography\n//                                 variant=\"h1\"\n//                                 sx={{\n//                                     fontWeight: 500,\n//                                     fontSize: \"20px\",\n//                                     color: \"#313033\",\n//                                     marginTop: \"2%\",\n//                                     lineHeight: \"20px\",\n//                                     marginLeft: \"-4%\",\n//                                 }}\n//                             >\n//                                 Add your Location\n//                             </Typography>\n//                             <IconButton onClick={handleClose} sx={{ marginRight: \"-1rem\" }}>\n//                                 <CloseIcon\n//                                     sx={{ width: \"21px\", height: \"25px\", color: \"#313033\" }}\n//                                 />\n//                             </IconButton>\n//                         </Box>\n//                         {/* search box */}\n//                         <TextField\n//                             InputProps={{\n//                                 startAdornment: (\n//                                     <InputAdornment position=\"start\">\n//                                         <SearchIcon\n//                                             sx={{ color: \"#AEAAAE\", width: \"24px\", height: \"24px\" }}\n//                                         ></SearchIcon>\n//                                     </InputAdornment>\n//                                 ),\n//                                 endAdornment: (\n//                                     <InputAdornment position=\"end\">\n//                                         <CloseIcon\n//                                             sx={{ width: \"21px\", height: \"21px\", color: \"#AEAAAE\" }}\n//                                         ></CloseIcon>\n//                                     </InputAdornment>\n//                                 ),\n//                                 disableUnderline: true,\n//                             }}\n//                             sx={{\n//                                 background: \"#EFEFEF\",\n//                                 borderRadius: \"50px\",\n//                                 border: \"none\",\n//                                 padding: \"2% 2%\",\n//                                 width: \"342px\",\n//                                 height: \"41px\",\n//                                 marginTop: \"5%\",\n//                             }}\n//                             placeholder=\"Search here\"\n//                             id=\"outlined-basic\"\n//                             variant=\"standard\"\n//                             onChange={(e) => setQuery(e.target.value)}\n//                         />\n//                         <Box onClick={handleOpen} sx={{ marginTop: \"2%\", cursor: \"pointer\" }}>\n//                             <Stack\n//                                 direction=\"row\"\n//                                 alignItems=\"center\"\n//                                 gap={1}\n//                                 sx={{ marginLeft: \"3%\" }}\n//                             >\n//                                 <GpsFixedIcon\n//                                     sx={{ color: \"#E72B4A\", width: \"24px\", height: \"24px\" }}\n//                                 ></GpsFixedIcon>\n//                                 <Typography\n//                                     variant=\"body1\"\n//                                     className={\"location-btn\"}\n//                                     sx={{\n//                                         textAlign: \"left\",\n//                                         color: \"#313033\",\n//                                         fontWeight: \"500\",\n//                                         fontSize: \"14px\",\n//                                         lineHeight: \"22px\",\n//                                     }}\n//                                     onClick={() => getLocation()}\n//                                 >\n//                                     Use Current Location\n//                                 </Typography>\n//                             </Stack>\n//                         </Box>\n//                     </div>\n//                 </Modal>\n//             </Box>\n//         </>\n//     );\n// };\n\n// export default locationModal;\n","import { Box, Card, CardContent, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\";\nimport CustomButton from \"../CustomButton/custom-button\";\n\nconst content2 = () => {\n    return (\n        <Card sx={{ width: 175, height: 360, marginBottom: 0.5, border: \"1px solid black\" }}>\n            <CardContent sx={{ flex: \"1 0 auto\" }}>\n                <Typography gutterBottom variant=\"h9\" component=\"div\" color=\"#313033\">\n                    Monthly\n                </Typography>\n                <Typography\n                    gutterBottom\n                    variant=\"h7\"\n                    component=\"div\"\n                    color=\"#313033\"\n                    fontWeight=\"bold\"\n                >\n                    19$ / Month\n                </Typography>\n                {/* <Typography component=\"div\" variant=\"h9\" fontWeight=\"bold\">\n                Free / 14 Days Left\n            </Typography> */}\n                <Typography variant=\"body2\" color=\"#AEAAAE\">\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, Sed ut tellus quis\n                    sapien\n                </Typography>\n\n                <Stack marginTop={3} direction=\"row\" alignItems=\"center\" gap={1} padding={-2}>\n                    <CheckCircleRoundedIcon style={{ color: \"#F8BFC9\", fontSize: \"15px\" }} />\n                    <Typography fontSize=\"10px\">Unlimited Consultations</Typography>\n                </Stack>\n                <Stack marginTop={1} direction=\"row\" alignItems=\"center\" gap={1} padding={-2}>\n                    <CheckCircleRoundedIcon style={{ color: \"#F8BFC9\", fontSize: \"15px\" }} />\n                    <Typography fontSize=\"10px\">Option 2</Typography>\n                </Stack>\n                <Stack marginTop={1} direction=\"row\" alignItems=\"center\" gap={1} padding={-2}>\n                    <CheckCircleRoundedIcon style={{ color: \"#F8BFC9\", fontSize: \"15px\" }} />\n                    <Typography fontSize=\"10px\">Option 3</Typography>\n                </Stack>\n                <Stack\n                    marginTop={1}\n                    marginBottom={3}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    gap={1}\n                    padding={-2}\n                >\n                    <CheckCircleRoundedIcon style={{ color: \"#F8BFC9\", fontSize: \"15px\" }} />\n                    <Typography fontSize=\"10px\">Option 4</Typography>\n                </Stack>\n\n                <CustomButton\n                    label={\"Choose Plan\"}\n                    isTransaprent={false}\n                    isDisabled={false}\n                    isElevated={false}\n                    style={{\n                        marginTop: \"30px\",\n                        padding: \"18px\",\n                    }}\n                />\n            </CardContent>\n\n            <Box sx={{ display: \"flex\", alignItems: \"center\", pl: 1, pb: 1 }}></Box>\n        </Card>\n    );\n};\n\nexport default content2;\n","import React, { createContext, useContext, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nconst UserContextProvider = createContext(null);\n\n// Here we will store the user credentials and pass it to the whole tree\nexport const UserProvider = ({ children }) => {\n    // Here we are maintaining the state and defined the function of login and logout\n    const [doctor, setDoctor] = useState();\n    const [patient, setPatient] = useState();\n    const [hcf, setHcf] = useState();\n    const [clinic, setClinic] = useState();\n    const [diagnost, setDiagnost] = useState();\n\n    const DoctorLogin = (user) => {\n        setDoctor(user);\n    };\n\n    const PatientLogin = (user) => {\n        setPatient(user);\n    };\n\n    const HealthCare = (user) => {\n        setHcf(user);\n    };\n\n    const ClinicLogin = (user) => {\n        setClinic(user);\n    };\n\n    const DiagnostLogin = (user) => {\n        setDiagnost(user);\n    };\n\n    const LogoutDoctor = () => {\n        setDoctor(null);\n    };\n\n    const LogoutPatient = () => {\n        setPatient(null);\n    };\n\n    const LoginHcf = () => {\n        setHcf(null);\n    };\n\n    const LogoutClinic = () => {\n        setClinic(null);\n    };\n    \n    const LogoutDiagnost = () => {\n        setHcf(null);\n    };\n\n    // using the UserContextProvider provider we will provide the values\n    // Will wrap this component with the children props\n    return (\n        <UserContextProvider.Provider\n            value={{\n                doctor,\n                DoctorLogin,\n                patient,\n                PatientLogin,\n                LogoutDoctor,\n                LogoutPatient,\n                HealthCare,\n                LoginHcf,\n                hcf,\n                DiagnostLogin,\n                LogoutClinic,\n                LogoutDiagnost,\n                ClinicLogin,\n                clinic,\n                diagnost,\n\n            }}\n        >\n            {children}\n        </UserContextProvider.Provider>\n    );\n};\n// we will define a function that returns a value of UserContextProvider\nexport const useAuthentication = () => {\n    return useContext(UserContextProvider);\n};\n//We will wrap the entire component tree with the UserProvider\n","import React, { useState, useEffect } from \"react\";\nimport { Box, IconButton, Typography, List, ListItem, ListItemText, Badge, Button } from \"@mui/material\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport CustomModal from \"../CustomModal\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport { formatDateDay } from \"../../constants/const\";\n\nconst NotificationMenu = () => {\n    const [openDialog, setOpenDialog] = useState(false);\n    const [notifications, setNotifications] = useState([]);\n\n    const getNotification = async () => {\n        try {\n            const signUpType = localStorage.getItem(\"signUp\");\n            const patientId = localStorage.getItem(\"patient_suid\");\n            const staffId = localStorage.getItem(\"diagnostic_suid\");\n            const docId = localStorage.getItem(\"doctor_suid\");\n            const clinicId = localStorage.getItem(\"clinic_suid\");\n\n            let endpoint = \"\";\n            if (signUpType === \"patient\") {\n                endpoint = `sec/patient/patientNotification/${patientId}`;\n            } else if (signUpType === \"diagnostic_center\") {\n                endpoint = `sec/hcf/${staffId}/StaffNotification/`;\n            } else if (signUpType === \"clinic\") {\n                endpoint = `sec/hcf/${clinicId}/clinicNotification`;\n            } else if (signUpType === \"doctor\") {\n                endpoint = `sec/Doctor/DoctorNotification/${docId}`;\n            } else {\n                console.error(\"Unknown signUp type:\", signUpType);\n                return;\n            }\n\n            const response = await axiosInstance.get(endpoint);\n            const Notify = response?.data?.response || [];\n            setNotifications(Notify);\n        } catch (error) {\n            console.error(\"Error fetching notifications:\", error.response);\n        }\n    };\n\n    const markAsRead = async (notification_id) => {\n        try {\n            // Assume there's an API endpoint to mark a notification as read\n            await axiosInstance.put(`sec/notification/status/${notification_id}/0`);\n\n            // Update local state after marking as read\n            setNotifications((prev) =>\n                prev.map((notification) =>\n                    notification.notification_id === notification_id\n                        ? { ...notification, is_read: true }\n                        : notification\n                )\n            );\n        } catch (error) {\n            console.error(\"Error marking notification as read:\", error.response);\n        }\n    };\n\n    useEffect(() => {\n        getNotification();\n    }, []);\n\n    const handleProfileMenuOpen = () => {\n        getNotification();\n        setOpenDialog(true);\n    };\n\n    return (\n        <Box>\n            <IconButton\n                size=\"large\"\n                aria-label=\"show new notifications\"\n                color=\"#AEAAAE\"\n                onClick={handleProfileMenuOpen}\n            >\n                <Badge\n                    badgeContent={notifications.filter((n) => !n.is_read).length}\n                    color=\"error\"\n                >\n                    <NotificationsIcon sx={{ color: \"#AEAAAE\" }} />\n                </Badge>\n            </IconButton>\n\n            <CustomModal\n                isOpen={openDialog}\n                conditionOpen={setOpenDialog}\n                footer={\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            padding: \"8px\",\n                        }}\n                    >\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            You have {notifications.length} notifications\n                        </Typography>\n                    </Box>\n                }\n            >\n                <Box\n                    sx={{\n                        width: \"500px\",\n                        height: \"500px\",\n                        overflowY: \"auto\",\n                        padding: \"16px\",\n                    }}\n                >\n                    <Typography variant=\"h6\" gutterBottom>\n                        Notifications\n                    </Typography>\n                    {notifications.length > 0 ? (\n                        <List>\n                            {notifications.map((notification) => (\n                                <ListItem\n                                    key={notification.notification_id}\n                                    divider\n                                    sx={{\n                                        backgroundColor: notification.is_read ? \"transparent\" : \"#F4F4F4\",\n                                    }}\n                                >\n                                    <ListItemText\n                                        primary={notification.type}\n                                        secondary={\n                                            <>\n                                                <Typography variant=\"body2\">You have Appointment on {formatDateDay(notification.parameters?.appointment_date) || \"appointment date\"}</Typography>\n                                                    <Typography variant=\"caption\" color=\"textSecondary\">\n                                                    with {localStorage.getItem(\"signUp\") === \"patient\" ? `Dr ${notification?.recipient || \"Doctor Name\"}` : notification?.recipient || \"patient Name\"}\n                                                    </Typography>\n                                                {notification.parameters?.fourth && (\n                                                    <Typography variant=\"caption\" color=\"textSecondary\">\n                                                        {notification.parameters?.fourth}\n                                                    </Typography>\n                                                )}\n                                            </>\n                                        }\n                                    />\n                                    {!notification.is_read && (\n                                        <Button\n                                            size=\"small\"\n                                            color=\"primary\"\n                                            onClick={() => markAsRead(notification.notification_id)}\n                                        >\n                                            Mark as Read\n                                        </Button>\n                                    )}\n                                </ListItem>\n                            ))}\n                        </List>\n                    ) : (\n                        <Box>\n                            <NoAppointmentCard text_one={\"No Notifications\"} />\n                        </Box>\n                    )}\n                </Box>\n            </CustomModal>\n        </Box>\n    );\n};\n\nexport default NotificationMenu;\n","/**\n * Centralized API Endpoints Configuration\n * \n * This file contains all API endpoints used throughout the application.\n * Benefits:\n * - Single source of truth for all API endpoints\n * - Easy to maintain and update\n * - Consistent naming and organization\n * - Environment-specific configurations\n */\n\nimport { baseURL } from '../constants/const';\n\n// API Base Configuration\nconst API_BASE = baseURL;\n\n// API Endpoints Object\nexport const API_ENDPOINTS = {\n  // Authentication & User Management\n  AUTH: {\n    LOGIN: `${API_BASE}/sec/auth/login`,\n    REGISTER: `${API_BASE}/sec/auth/register`,\n    VERIFY_OTP: `${API_BASE}/sec/auth/verifyOtp`,\n    RESEND_CODE: `${API_BASE}/sec/auth/resendCode`,\n    VERIFY_EMAIL: `${API_BASE}/sec/auth/verifyEmail`,\n    FORGOT_PASSWORD: `${API_BASE}/sec/auth/forgotPassword`,\n    CHANGE_PASSWORD: `${API_BASE}/sec/auth/changePassword`,\n    UPDATE_PROFILE: `${API_BASE}/sec/auth/updateProfile`,\n    LOGOUT: `${API_BASE}/sec/auth/logout`,\n    CHECK_FORCE_LOGOUT: `${API_BASE}/sec/auth/checkForceLogout`,\n    REFRESH_TOKEN: `${API_BASE}/sec/auth/refresh`,\n    RESET_PASSWORD: `${API_BASE}/sec/auth/reset-password`,\n  },\n\n  // Patient Module Endpoints\n  PATIENT: {\n    // Dashboard & Explore\n    DASHBOARD_DOCTOR_DETAIL: `${API_BASE}/sec/patient/DashboardDoctordetail`,\n    DOCTOR_NEAR_ME: `${API_BASE}/sec/patient/doctornearme`,\n    POPULAR_DOCTORS: `${API_BASE}/sec/patient/doctor/populardoctors`,\n    FEATURED_DOCTORS: `${API_BASE}/sec/patient/doctor/featureddoctors`,\n    DASHBOARD_HCF_DETAILS: `${API_BASE}/sec/patient/DashboardHcfdetails`,\n    DOCTOR_DEPARTMENTS: `${API_BASE}/sec/patient/doctorDepartments`,\n    DOCTORS_BY_DEPT: `${API_BASE}/sec/patient/getdoctorsByDept`,\n    \n    // Doctor Details\n    DOCTOR_DETAILS_BY_ID: `${API_BASE}/sec/patient/DashboardDoctordetailsbyId`,\n    \n    // Appointments\n    GET_APPOINTMENT_SLOTS: `${API_BASE}/sec/patient/getAppointmentSlots`,\n    CREATE_APPOINTMENT: `${API_BASE}/sec/patient/createAppointment/`,\n    CREATE_APPOINTMENT_HCF_DOCTOR: `${API_BASE}/sec/patient/createAppointmentHcfDoctor`,\n    GET_AVAILABLE_APPOINTMENT_DATES: `${API_BASE}/sec/patient/getAvailableAppointmentDates`,\n    CREATE_APPOINTMENT_PACKAGE_SELECT: `${API_BASE}/sec/patient/createAppointmentPackageSelect/`,\n    CREATE_APPOINTMENT_PACKAGE_QUESTION: `${API_BASE}/sec/patient/createAppointmentPackageQuestion/`,\n    UPCOMING_APPOINTMENTS: `${API_BASE}/sec/patient/UpcomingAppointments`,\n    REJECT_APPOINTMENT: `${API_BASE}/sec/patient/RejectAppointment`,\n    CANCELLED_APPOINTMENTS: `${API_BASE}/sec/patient/CancelledAppointments`,\n    COMPLETED_APPOINTMENTS: `${API_BASE}/sec/patient/CompletedAppointments`,\n    LEAVE_REVIEW: `${API_BASE}/sec/patient/LeaveReview`,\n    \n    // Profile Management\n    PATIENT_PROFILE: `${API_BASE}/sec/patientprofile`,\n    UPDATE_PATIENT_PROFILE: `${API_BASE}/sec/updatePateintProfile`,\n    \n    // Socket Management\n    PUT_SOCKET_ID: `${API_BASE}/sec/patient/putSocketId/`,\n  },\n\n  // Doctor Module Endpoints\n  DOCTOR: {\n    // Dashboard & Statistics\n    DASHBOARD_COUNT: `${API_BASE}/sec/Doctor/DocDashoardCount`,\n    DASHBOARD_APP_IN_PROGRESS: `${API_BASE}/sec/Doctor/DocDashoardApp/in_progress`,\n    DASHBOARD_APP_BOOKED: `${API_BASE}/sec/Doctor/DocDashoardApp/booked`,\n    DASHBOARD_APP_COMPLETED: `${API_BASE}/sec/Doctor/DocDashoardApp/completed`,\n    EARNING_COUNT: `${API_BASE}/sec/doctor/DocEarningCount`,\n    AFFILIATE_EARNING_COUNT: `${API_BASE}/sec/doctor/DocAffiliateEarningCount`,\n    TOTAL_EARNING_COUNT: `${API_BASE}/sec/doctor/DocTotalEarningCount`,\n    ALL_EARNING_LIST: `${API_BASE}/sec/doctor/DocAllEarningList`,\n    \n    // Appointments\n    APPOINTMENT_REQUESTS: `${API_BASE}/sec/Doctor/AppointmentsRequests`,\n    APPOINTMENT_REQUESTS_ACCEPT: `${API_BASE}/sec/Doctor/AppointmentsRequestsAccept`,\n    APPOINTMENT_REQUESTS_REJECT: `${API_BASE}/sec/Doctor/AppointmentsRequestsReject`,\n    UPCOMING_APPOINTMENTS: `${API_BASE}/sec/Doctor/UpcomingAppointmentsDoctor`,\n    CANCELLED_APPOINTMENTS: `${API_BASE}/sec/Doctor/CancelledAppointmentsDoctor`,\n    COMPLETED_APPOINTMENTS: `${API_BASE}/sec/Doctor/CompletedAppointmentsDoctor/`,\n    \n    // Doctor Listing Management\n    LISTING_CREATE_UPDATE: `${API_BASE}/sec/createUpdatedoctorlisting/listing`,\n    PLAN_CREATE: `${API_BASE}/sec/createUpdatedoctorlisting/planCreate`,\n    PLAN_ALL: `${API_BASE}/sec/createUpdatedoctorlisting/planAll`,\n    PLAN_UPDATE: `${API_BASE}/sec/createUpdatedoctorlisting/planUpdate`,\n    PLAN_DELETE: `${API_BASE}/sec/createUpdatedoctorlisting/planDelete`,\n    PLAN_BY_ID: `${API_BASE}/sec/createUpdatedoctorlisting/planById`,\n    QUESTION_CREATE: `${API_BASE}/sec/createUpdatedoctorlisting/questionCreate`,\n    QUESTION_UPDATE: `${API_BASE}/sec/createUpdatedoctorlisting/questionUpdate`,\n    QUESTION_DELETE: `${API_BASE}/sec/createUpdatedoctorlisting/questionDelete`,\n    QUESTION_ALL: `${API_BASE}/sec/createUpdatedoctorlisting/questionAll`,\n    QUESTION_BY_ID: `${API_BASE}/sec/createUpdatedoctorlisting/questionById`,\n    TERMS_CREATE_UPDATE: `${API_BASE}/sec/createUpdatedoctorlisting/terms`,\n    \n    // Doctor Management\n    LISTING_PLAN_ACTIVE: `${API_BASE}/sec/doctor/DocListingPlanActive`,\n    LISTING_PLAN_DEACTIVE: `${API_BASE}/sec/doctor/DocListingPlanDeactive`,\n    DELETE_DOC_LISTING_PLAN: `${API_BASE}/sec/doctor/deleteDocListingPlan`,\n    DOC_LISTING_ACTIVE_DEACTIVE: `${API_BASE}/sec/doctor/docListingActiveDeactive`,\n    AUDIT_LOGS: `${API_BASE}/sec/doctor/DoctorAuditlogs`,\n    APPOINTMENT_HISTORY: `${API_BASE}/sec/doctor/DocAppointmentHistoryId`,\n    TRANSACTIONS: `${API_BASE}/sec/doctor/DocTransaction/`,\n  },\n\n  // HCF (Healthcare Facility) Module Endpoints\n  HCF: {\n    ADD_DOCTOR: `${API_BASE}/sec/hcf/addDoctor`,\n    ADD_DOCTOR_WORKING_DETAILS_AND_PLAN: `${API_BASE}/sec/hcf/addDoctorWorkingDetailsAndPlan`,\n    CLINIC_APPOINTMENT_ACCEPT: `${API_BASE}/sec/hcf/clinicAppointmentAccept`,\n    CLINIC_APPOINTMENT_REJECT: `${API_BASE}/sec/hcf/clinicAppointmentReject`,\n    JOIN_APPOINTMENT_CLINIC: `${API_BASE}/sec/hcf/joinAppointmentClinic`,\n    LAB_DEPARTMENTS: `${API_BASE}/sec/labDepartments`,\n  },\n\n  // Payment Endpoints\n  PAYMENT: {\n    GENERATE_TOKEN: `${API_BASE}/sec/payment/generateToken`,\n    DOCTOR_BALANCE: `${API_BASE}/sec/payment/doctor/balance`,\n    PAYOUTS: `${API_BASE}/sec/payment/payouts`,\n    PAYOUT: `${API_BASE}/sec/payment/payout`,\n  },\n\n  // Reports & Files\n  REPORTS: {\n    UPLOAD_APPOINTMENT_FILE_TO_S3: `${API_BASE}/sec/reports/uploadAppointmentFileToS3`,\n  },\n\n  // Master Data Endpoints\n  MASTER_DATA: {\n    COUNTRIES: `${API_BASE}/sec/countries`,\n    DEPARTMENTS: `${API_BASE}/sec/departments`,\n  },\n};\n\n// External API Endpoints\nexport const EXTERNAL_API_ENDPOINTS = {\n  GEOLOCATION: {\n    NOMINATIM_REVERSE: 'https://nominatim.openstreetmap.org/reverse',\n    NOMINATIM_SEARCH: 'https://nominatim.openstreetmap.org/search',\n  },\n};\n\n// Helper function to get endpoint by category and key\nexport const getEndpoint = (category, key) => {\n  if (!API_ENDPOINTS[category]) {\n    throw new Error(`API category '${category}' not found`);\n  }\n  if (!API_ENDPOINTS[category][key]) {\n    throw new Error(`API endpoint '${key}' not found in category '${category}'`);\n  }\n  return API_ENDPOINTS[category][key];\n};\n\n// Helper function to get endpoint with parameters\nexport const getEndpointWithParams = (category, key, params = {}) => {\n  let endpoint = getEndpoint(category, key);\n  \n  // Replace URL parameters\n  Object.keys(params).forEach(param => {\n    endpoint = endpoint.replace(`{${param}}`, params[param]);\n  });\n  \n  return endpoint;\n};\n\n// Helper function to get auth-related endpoints\nexport const getAuthEndpoints = () => API_ENDPOINTS.AUTH;\n\n// Helper function to get patient-related endpoints\nexport const getPatientEndpoints = () => API_ENDPOINTS.PATIENT;\n\n// Helper function to get doctor-related endpoints\nexport const getDoctorEndpoints = () => API_ENDPOINTS.DOCTOR;\n\n// Helper function to get HCF-related endpoints\nexport const getHCFEndpoints = () => API_ENDPOINTS.HCF;\n\n// Helper function to get payment-related endpoints\nexport const getPaymentEndpoints = () => API_ENDPOINTS.PAYMENT;\n\n// Helper function to get master data endpoints\nexport const getMasterDataEndpoints = () => API_ENDPOINTS.MASTER_DATA;\n\n// Helper function to get external API endpoints\nexport const getExternalEndpoints = () => EXTERNAL_API_ENDPOINTS;\n\n// Helper function to get country-related endpoints (for backward compatibility)\nexport const getCountryEndpoints = () => API_ENDPOINTS.MASTER_DATA;\n\n// Default export for easy importing\nexport default API_ENDPOINTS;","/**\n * Authentication Service - API calls for authentication-related operations\n */\n\nimport axios from 'axios';\nimport axiosInstance from '../../config/axiosInstance';\nimport { API_ENDPOINTS } from '../endpoints';\nimport { baseURL } from '../../constants/const';\n\nexport class AuthService {\n  // Login\n  static async login(loginData) {\n    const response = await axios.post(\n      API_ENDPOINTS.AUTH.LOGIN,\n      JSON.stringify(loginData),\n      { Accept: \"Application/json\" }\n    );\n    return response.data;\n  }\n\n  // Register\n  static async register(data) {\n    const response = await axios.post(\n      API_ENDPOINTS.AUTH.REGISTER,\n      JSON.stringify(data)\n    );\n    return response.data;\n  }\n\n  // OTP Verification\n  static async verifyOtp(mobile, otp) {\n    const response = await axios.post(API_ENDPOINTS.AUTH.VERIFY_OTP, {\n      mobile,\n      otp_code: otp,\n    });\n    return response.data;\n  }\n\n  // Resend Code\n  static async resendCode(data) {\n    const response = await axios.post(API_ENDPOINTS.AUTH.RESEND_CODE, data);\n    return response.data;\n  }\n\n  // Email Verification\n  static async verifyEmail(payload) {\n    const response = await axios.post(\n      API_ENDPOINTS.AUTH.VERIFY_EMAIL,\n      JSON.stringify(payload),\n      { Accept: \"Application/json\" }\n    );\n    return response.data;\n  }\n\n  // Forgot Password\n  static async forgotPassword(email) {\n    const response = await axios.post(\n      API_ENDPOINTS.AUTH.FORGOT_PASSWORD,\n      JSON.stringify({ email })\n    );\n    return response.data;\n  }\n\n  // Change Password\n  static async changePassword(data) {\n    const response = await axios.post(\n      API_ENDPOINTS.AUTH.CHANGE_PASSWORD,\n      JSON.stringify(data)\n    );\n    return response.data;\n  }\n\n  // Update Profile\n  static async updateProfile(data) {\n    const response = await axiosInstance.post(\n      API_ENDPOINTS.AUTH.UPDATE_PROFILE,\n      JSON.stringify(data)\n    );\n    return response.data;\n  }\n\n  // Logout\n  static async logout() {\n    const response = await axiosInstance.post(API_ENDPOINTS.AUTH.LOGOUT);\n    return response.data;\n  }\n\n  // Check Force Logout\n  static async checkForceLogout() {\n    const response = await axiosInstance.get(API_ENDPOINTS.AUTH.CHECK_FORCE_LOGOUT);\n    return response.data;\n  }\n\n  // Refresh Token\n  static async refreshToken() {\n    const response = await axiosInstance.post(API_ENDPOINTS.AUTH.REFRESH_TOKEN);\n    return response.data;\n  }\n\n  // Reset Password\n  static async resetPassword(data) {\n    const response = await axiosInstance.post(\n      API_ENDPOINTS.AUTH.RESET_PASSWORD,\n      JSON.stringify(data)\n    );\n    return response.data;\n  }\n}\n\n// Individual function exports for backward compatibility\nexport const loginUser = AuthService.login;\nexport const registerUser = AuthService.register;\nexport const logoutUser = AuthService.logout;\nexport const forceLogout = AuthService.logout;\nexport const isUserLoggedIn = () => {\n  // Check if user is logged in based on localStorage/sessionStorage\n  const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n  return !!token;\n};\nexport const checkForceLogout = AuthService.checkForceLogout;\n\nexport default AuthService;","import { useState, useEffect } from 'react';\nimport { getCurrentUser, isTokenValid, clearAuthData } from '../utils/jwtUtils';\nimport { logoutUser, forceLogout, isUserLoggedIn, checkForceLogout } from '../api/services/authService';\n\n/**\n * Custom hook for authentication state management\n * @returns {Object} - Authentication state and methods\n */\nexport const useAuth = () => {\n    const [user, setUser] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const checkAuth = () => {\n            try {\n                const userInfo = getCurrentUser();\n                const isValid = isTokenValid();\n                \n                if (userInfo && isValid) {\n                    setUser(userInfo);\n                    setIsAuthenticated(true);\n                } else {\n                    setUser(null);\n                    setIsAuthenticated(false);\n                    // Clear invalid auth data\n                    if (!isValid) {\n                        clearAuthData();\n                    }\n                }\n            } catch (error) {\n                console.error('Error checking authentication:', error);\n                setUser(null);\n                setIsAuthenticated(false);\n                clearAuthData();\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        checkAuth();\n    }, []);\n\n    const logout = async (options = {}) => {\n        try {\n            const result = await logoutUser(options);\n            \n            if (result.success) {\n                setUser(null);\n                setIsAuthenticated(false);\n                console.log('Logout successful:', result.message);\n            } else {\n                console.error('Logout failed:', result.message);\n                // Even if server logout fails, clear local data\n                setUser(null);\n                setIsAuthenticated(false);\n            }\n            \n            return result;\n        } catch (error) {\n            console.error('Logout error:', error);\n            // Fallback to local logout\n            clearAuthData();\n            setUser(null);\n            setIsAuthenticated(false);\n            return {\n                success: false,\n                message: 'Logout failed',\n                error: error\n            };\n        }\n    };\n\n    const refreshUser = () => {\n        const userInfo = getCurrentUser();\n        const isValid = isTokenValid();\n        \n        if (userInfo && isValid) {\n            setUser(userInfo);\n            setIsAuthenticated(true);\n        } else {\n            setUser(null);\n            setIsAuthenticated(false);\n        }\n    };\n\n    const forceLogoutUser = async () => {\n        try {\n            const result = await forceLogout();\n            setUser(null);\n            setIsAuthenticated(false);\n            return result;\n        } catch (error) {\n            console.error('Force logout error:', error);\n            setUser(null);\n            setIsAuthenticated(false);\n            return {\n                success: false,\n                message: 'Force logout failed',\n                error: error\n            };\n        }\n    };\n\n    const checkLoginStatus = () => {\n        return isUserLoggedIn();\n    };\n\n    const checkForceLogoutStatus = async () => {\n        try {\n            const result = await checkForceLogout();\n            \n            if (result.success && result.data.is_logged_out) {\n                console.log('User was force logged out from server');\n                // Clear local data and update state\n                clearAuthData();\n                setUser(null);\n                setIsAuthenticated(false);\n                \n                return {\n                    success: true,\n                    forceLoggedOut: true,\n                    message: 'User was force logged out from server',\n                    data: result.data\n                };\n            } else if (result.success) {\n                return {\n                    success: true,\n                    forceLoggedOut: false,\n                    message: 'User is still logged in',\n                    data: result.data\n                };\n            } else {\n                return {\n                    success: false,\n                    forceLoggedOut: false,\n                    message: result.message || 'Failed to check force logout status',\n                    error: result.error\n                };\n            }\n        } catch (error) {\n            console.error('Error checking force logout status:', error);\n            return {\n                success: false,\n                forceLoggedOut: false,\n                message: 'Error checking force logout status',\n                error: error\n            };\n        }\n    };\n\n    return {\n        user,\n        isAuthenticated,\n        loading,\n        logout,\n        forceLogoutUser,\n        refreshUser,\n        checkLoginStatus,\n        checkForceLogoutStatus,\n        // Convenience getters\n        userId: user?.userId || null,\n        roleId: user?.roleId || null,\n        email: user?.email || null,\n        isTokenExpired: user?.isExpired || false,\n    };\n};\n","import React, { useState, useEffect } from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport { \n    Box, \n    Button, \n    IconButton, \n    Link, \n    Typography, \n    Divider,\n    Avatar,\n    Chip,\n    Tooltip,\n    Fade,\n    Backdrop\n} from \"@mui/material\";\nimport LocalAtmIcon from \"@mui/icons-material/LocalAtm\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuthentication } from \"../../loginComponent/UserProvider\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport { processProfileImage } from \"../../utils/imageUtils\";\nimport \"./profilemenu.scss\";\n// import DocImg from \"../../static/images/DrImages/doctor_alter.jpeg\";\nimport DocImg from \"../../static/images/DrImages/doctor_alter.jpeg\";\n\nconst profilemenu = ({ profilepath }) => {\n    const navigate = useNavigate();\n    console.log(\"Profile path inner : \", profilepath);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n    const [isLoggingOut, setIsLoggingOut] = React.useState(false);\n    const [profileImage, setProfileImage] = useState(null);\n    const [isLoadingProfile, setIsLoadingProfile] = useState(false);\n    \n    // Get profile from localStorage as fallback\n    const profile = localStorage.getItem(\"profile\");\n\n    const isMenuOpen = Boolean(anchorEl);\n\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    const Authentication = useAuthentication();\n    const { logout, isAuthenticated } = useAuth();\n\n    // Function to fetch user profile image from API\n    const fetchUserProfileImage = async () => {\n        setIsLoadingProfile(true);\n        try {\n            let response;\n            \n            // Use different API endpoints based on user type\n            if (profilepath === \"doctor\") {\n                const doctor_id = localStorage.getItem(\"doctor_suid\");\n                if (!doctor_id) {\n                    console.log(\"No doctor SUID found, skipping profile fetch\");\n                    return;\n                }\n                response = await axiosInstance.get(`/sec/Doctor/doctorProfileDetailsbyId?doctor_id=${doctor_id}`);\n                console.log(\"Doctor profile image fetch response:\", response?.data);\n            } else if (profilepath === \"hcfadmin\") {\n                const hcf_id = localStorage.getItem(\"hcfadmin_suid\");\n                if (!hcf_id) {\n                    console.log(\"No HCF admin SUID found, skipping profile fetch\");\n                    return;\n                }\n                response = await axiosInstance.get(`/sec/hcf/getHcfprofile/${hcf_id}`);\n                console.log(\"HCF admin profile image fetch response:\", response?.data);\n            } else {\n                // Default to patient/user API\n                response = await axiosInstance.get(\"/sec/auth/getUserDetails/\");\n                console.log(\"User profile image fetch response:\", response?.data);\n            }\n            \n            // Extract profile picture based on response structure\n            let profilePicture = null;\n            if (profilepath === \"doctor\" && response?.data?.profile_picture) {\n                profilePicture = response.data.profile_picture;\n            } else if (profilepath === \"hcfadmin\" && response?.data?.response && response.data.response.length > 0) {\n                // HCF admin response structure: { response: [{ profile_picture: \"...\" }] }\n                profilePicture = response.data.response[0].profile_picture;\n            } else if (response?.data?.profile_picture) {\n                profilePicture = response.data.profile_picture;\n            }\n            \n            if (profilePicture) {\n                console.log(\"Raw profile picture data:\", profilePicture);\n                \n                // Use utility function to process and convert to base64\n                const processedImage = await processProfileImage(profilePicture, DocImg);\n                \n                if (processedImage && processedImage !== DocImg) {\n                    setProfileImage(processedImage);\n                    localStorage.setItem(\"profile\", processedImage);\n                    console.log(\"✅ Profile image processed and set successfully\");\n                } else {\n                    console.log(\"⚠️ Using fallback image\");\n                }\n            } else {\n                console.log(\"❌ No profile picture found in response\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching profile image:\", error);\n        } finally {\n            setIsLoadingProfile(false);\n        }\n    };\n\n    // Fetch profile image on component mount\n    useEffect(() => {\n        fetchUserProfileImage();\n    }, []);\n\n    // Listen for profile updates from other components\n    useEffect(() => {\n        const handleStorageChange = (e) => {\n            if (e.key === 'profile') {\n                setProfileImage(e.newValue);\n            }\n        };\n\n        window.addEventListener('storage', handleStorageChange);\n        \n        // Also listen for custom events (for same-tab updates)\n        const handleProfileUpdate = (e) => {\n            if (e.detail?.profile) {\n                setProfileImage(e.detail.profile);\n            }\n        };\n\n        window.addEventListener('profileUpdated', handleProfileUpdate);\n\n        return () => {\n            window.removeEventListener('storage', handleStorageChange);\n            window.removeEventListener('profileUpdated', handleProfileUpdate);\n        };\n    }, []);\n\n    const HandleLogout = async () => {\n        try {\n            console.log(\"Starting logout process from profile menu...\");\n            setIsLoggingOut(true);\n            \n            // Show confirmation dialog\n            const confirmed = window.confirm('Are you sure you want to logout?');\n            if (!confirmed) {\n                console.log(\"Logout cancelled by user\");\n                setIsLoggingOut(false);\n                return;\n            }\n            \n            // Call our comprehensive logout function\n            const result = await logout({\n                clearLocalData: true,\n                callServer: true\n            });\n            \n            if (result.success) {\n                console.log(\"Logout successful from profile menu:\", result.message);\n                \n                // Call the existing authentication logout methods for compatibility\n                if (Authentication.LogoutPatient) {\n                    Authentication.LogoutPatient();\n                }\n                if (Authentication.LogoutDoctor) {\n                    Authentication.LogoutDoctor();\n                }\n                if (Authentication.LoginHcf) {\n                    Authentication.LoginHcf();\n                }\n                \n                // Clear additional storage (for backward compatibility)\n                sessionStorage.clear();\n                Cookies.remove(\"token\");\n                Cookies.remove(\"patientEmail\");\n                \n                // Navigate to login page\n                navigate(\"/\");\n                \n                // Show success message\n                console.log(\"Logout completed successfully!\");\n            } else {\n                console.error(\"Logout failed from profile menu:\", result.message);\n                \n                // Even if server logout fails, clear local data for security\n                localStorage.clear();\n                sessionStorage.clear();\n                Cookies.remove(\"token\");\n                Cookies.remove(\"patientEmail\");\n                \n                // Call authentication logout methods\n                if (Authentication.LogoutPatient) {\n        Authentication.LogoutPatient();\n                }\n                if (Authentication.LogoutDoctor) {\n        Authentication.LogoutDoctor();\n                }\n                if (Authentication.LoginHcf) {\n        Authentication.LoginHcf();\n                }\n                \n                navigate(\"/\");\n                console.log(\"Local logout completed due to server error\");\n            }\n        } catch (error) {\n            console.error(\"Logout error from profile menu:\", error);\n            \n            // Fallback to local logout\n            localStorage.clear();\n            sessionStorage.clear();\n        Cookies.remove(\"token\");\n        Cookies.remove(\"patientEmail\");\n            \n            if (Authentication.LogoutPatient) {\n                Authentication.LogoutPatient();\n            }\n            if (Authentication.LogoutDoctor) {\n                Authentication.LogoutDoctor();\n            }\n            if (Authentication.LoginHcf) {\n                Authentication.LoginHcf();\n            }\n            \n            navigate(\"/\");\n            console.log(\"Fallback logout completed\");\n        } finally {\n            setIsLoggingOut(false);\n        }\n    };\n\n    const menuId = \"primary-search-account-menu\";\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n            TransitionComponent={Fade}\n            PaperProps={{\n                style: {\n                    borderRadius: 12,                    // More rounded corners\n                    padding: \"8px 0\",                    // Better padding\n                    boxShadow: \"0px 8px 24px rgba(0, 0, 0, 0.15)\", // Enhanced shadow\n                    minWidth: 200,                       // Wider for better content\n                    backgroundColor: \"#fff\", \n                    marginTop: 8,                        // Better spacing\n                    border: \"1px solid rgba(0, 0, 0, 0.05)\", // Subtle border\n                    backdropFilter: \"blur(10px)\",       // Modern glass effect\n                }\n            }}\n        >\n            {/* User Info Header */}\n            <Box sx={{ \n                padding: \"12px 16px 8px\", \n                borderBottom: \"1px solid rgba(0, 0, 0, 0.05)\",\n                marginBottom: \"4px\"\n            }}>\n                <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                    <Avatar\n                        src={profileImage || profile || DocImg}\n                        alt=\"Profile\"\n                        sx={{\n                            width: 40,\n                            height: 40,\n                            border: \"2px solid #E72B4A\",\n                            boxShadow: \"0 2px 8px rgba(231, 43, 74, 0.2)\"\n                        }}\n                        onError={(e) => {\n                            e.target.src = DocImg;\n                        }}\n                    />\n                    <Box>\n                        <Typography variant=\"subtitle2\" sx={{ \n                            fontWeight: 600, \n                            color: \"#313033\",\n                            fontSize: \"14px\"\n                        }}>\n                            {profilepath === \"patient\" ? \"Patient\" : \n                             profilepath === \"doctor\" ? \"Doctor\" :\n                             profilepath === \"clinic\" ? \"Clinic\" :\n                             profilepath === \"diagnostic\" ? \"Diagnostic\" :\n                             profilepath === \"hcfadmin\" ? \"HCF Admin\" : \"User\"}\n                        </Typography>\n                        <Typography variant=\"caption\" sx={{ \n                            color: \"#666\",\n                            fontSize: \"11px\"\n                        }}>\n                            {localStorage.getItem(\"patient_Email\") || \"user@example.com\"}\n                        </Typography>\n                    </Box>\n                </Box>\n            </Box>\n\n            {/* Profile Menu Item */}\n            <MenuItem\n                onClick={handleMenuClose}\n                sx={{\n                    display: profilepath === \"hcfadmin\" ? \"block\" : \n                             profilepath === 'superadmin' ? \"none\" : \"block\",\n                    padding: \"12px 16px\",\n                    borderRadius: \"8px\",\n                    margin: \"4px 8px\",\n                    transition: \"all 0.2s ease\",\n                    \"&:hover\": {\n                        backgroundColor: \"#f8f9fa\",\n                        transform: \"translateX(4px)\"\n                    }\n                }}\n            >\n                <Box\n                    onClick={() => {\n                        profilepath === \"patient\"\n                            ? localStorage.getItem(\"activeComponent\") === \"dashboard\"\n                                ? navigate(\"/patientdashboard/dashboard/profile\")\n                                : localStorage.getItem(\"activeComponent\") === \"appointment\"\n                                ? navigate(\"/patientdashboard/appointment/profile\")\n                                : localStorage.getItem(\"activeComponent\") === \"manage\"\n                                ? navigate(\"/patientdashboard/manage/profile\")\n                                : null\n                            : profilepath === \"doctor\"\n                            ? localStorage.getItem(\"activeComponent\") === \"dashboard\"\n                                ? navigate(\"/doctordashboard/doctorpersonalinfo\")\n                                : localStorage.getItem(\"activeComponent\") === \"appointment\"\n                                ? navigate(\"/doctordashboard/doctorAppointment/doctorpersonalinfo\")\n                                : localStorage.getItem(\"activeComponent\") === \"manage\"\n                                ? navigate(\"/doctordashboard/doctorManage/doctorpersonalinfo\")\n                                : localStorage.getItem(\"activeComponent\") === \"listing\"\n                                ? navigate(\"/doctordashboard/doctorListing/doctorpersonalinfo\")\n                                : localStorage.getItem(\"activeComponent\") === \"statistics\"\n                                ? navigate(\"/doctordashboard/doctorStatistics/doctorpersonalinfo\")\n                                : null\n                            : profilepath === \"clinic\"\n                            ? navigate(\"/clinicDashboard/clinicprofile/profileinformation\")\n                            : profilepath === \"diagnostic\"\n                            ? navigate(\"/diagnostCenterDashboard/diagnostcenterprofile/diagnostcenterprofileinfo\")\n                            : profilepath === \"hcfadmin\"\n                            ? navigate(\"adminprofile\")\n                            : console.log(\"this is null\");\n                    }}\n                    sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 2,\n                        width: \"100%\",\n                        cursor: \"pointer\"\n                    }}\n                >\n                    <PersonIcon sx={{ \n                        color: \"#E72B4A\", \n                        fontSize: \"20px\" \n                    }} />\n                    <Typography sx={{ \n                        color: \"#313033\",\n                        fontWeight: 500,\n                        fontSize: \"14px\"\n                    }}>\n                    Profile\n                    </Typography>\n                </Box>\n            </MenuItem>\n\n{/* \n        ternary operator\n        condition ?  true : false;\n        num === 1 ?  \"yes\" : \"No\"\n*/}\n\n            {/* <MenuItem onClick={handleMenuClose}>\n                <LocalAtmIcon />\n                Payment\n            </MenuItem> */}\n            {/* Debug info - remove in production */}\n            {process.env.NODE_ENV === 'development' && (\n                <>\n                    <Divider sx={{ margin: \"8px 0\" }} />\n                    <MenuItem \n                        onClick={handleMenuClose}\n                        sx={{ \n                            padding: \"8px 16px\",\n                            \"&:hover\": { backgroundColor: \"transparent\" }\n                        }}\n                    >\n                        <Box sx={{ \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            gap: 1,\n                            width: \"100%\"\n                        }}>\n                            <Chip \n                                label={`Auth: ${isAuthenticated ? '✅' : '❌'}`}\n                                size=\"small\"\n                                sx={{ \n                                    fontSize: \"10px\",\n                                    height: \"20px\",\n                                    backgroundColor: isAuthenticated ? \"#e8f5e8\" : \"#ffeaea\",\n                                    color: isAuthenticated ? \"#2e7d32\" : \"#d32f2f\"\n                                }}\n                            />\n                            <Chip \n                                label={`Loading: ${isLoggingOut ? '⏳' : '✅'}`}\n                                size=\"small\"\n                                sx={{ \n                                    fontSize: \"10px\",\n                                    height: \"20px\",\n                                    backgroundColor: isLoggingOut ? \"#fff3e0\" : \"#e8f5e8\",\n                                    color: isLoggingOut ? \"#f57c00\" : \"#2e7d32\"\n                                }}\n                            />\n                            <Chip \n                                label={`Profile: ${profileImage ? '✅' : '❌'}`}\n                                size=\"small\"\n                                sx={{ \n                                    fontSize: \"10px\",\n                                    height: \"20px\",\n                                    backgroundColor: profileImage ? \"#e8f5e8\" : \"#ffeaea\",\n                                    color: profileImage ? \"#2e7d32\" : \"#d32f2f\"\n                                }}\n                            />\n                            <Chip \n                                label={isLoadingProfile ? '⏳' : '🔄'}\n                                size=\"small\"\n                                onClick={fetchUserProfileImage}\n                                sx={{ \n                                    fontSize: \"10px\",\n                                    height: \"20px\",\n                                    backgroundColor: \"#e3f2fd\",\n                                    color: \"#1976d2\",\n                                    cursor: \"pointer\",\n                                    \"&:hover\": {\n                                        backgroundColor: \"#bbdefb\"\n                                    }\n                                }}\n                            />\n                        </Box>\n                    </MenuItem>\n                </>\n            )}\n            \n            {/* Logout Menu Item */}\n            <MenuItem \n                onClick={handleMenuClose}\n                sx={{\n                    padding: \"12px 16px\",\n                    borderRadius: \"8px\",\n                    margin: \"4px 8px\",\n                    transition: \"all 0.2s ease\",\n                    \"&:hover\": {\n                        backgroundColor: \"#ffebee\",\n                        transform: \"translateX(4px)\"\n                    }\n                }}\n            >\n                <Box \n                    onClick={HandleLogout}\n                    sx={{ \n                        display: \"flex\", \n                        alignItems: \"center\", \n                        gap: 2,\n                        width: \"100%\",\n                        cursor: isLoggingOut ? \"not-allowed\" : \"pointer\",\n                        opacity: isLoggingOut ? 0.6 : 1\n                    }}\n                >\n                    <LogoutIcon sx={{ \n                        color: isLoggingOut ? \"#f57c00\" : \"#d32f2f\",\n                        fontSize: \"20px\"\n                    }} />\n                    <Typography sx={{ \n                        color: isLoggingOut ? \"#f57c00\" : \"#d32f2f\",\n                        fontWeight: 500,\n                        fontSize: \"14px\"\n                    }}>\n                        {isLoggingOut ? \"Logging out...\" : \"Log Out\"}\n                    </Typography>\n                </Box>\n            </MenuItem>\n        </Menu>\n    );\n\n    return (\n        <Box>\n            <Tooltip title=\"Profile Menu\" arrow>\n   <IconButton\n    size=\"large\"\n    edge=\"end\"\n    aria-label=\"account of current user\"\n    aria-controls={menuId}\n    aria-haspopup=\"true\"\n    onClick={handleProfileMenuOpen}\n                    sx={{\n                        padding: \"8px\",\n                        transition: \"all 0.2s ease\",\n                        \"&:hover\": {\n                            backgroundColor: \"rgba(231, 43, 74, 0.1)\",\n                            transform: \"scale(1.05)\"\n                        }\n                    }}\n                >\n                    {(profileImage || profile) ? (\n                        <Avatar\n                            src={profileImage || profile}\n            alt=\"Profile\"\n                            sx={{\n                                width: 40,\n                                height: 40,\n                                border: \"2px solid #E72B4A\",\n                                boxShadow: \"0 2px 8px rgba(231, 43, 74, 0.2)\",\n                                transition: \"all 0.2s ease\",\n                                \"&:hover\": {\n                                    boxShadow: \"0 4px 12px rgba(231, 43, 74, 0.3)\",\n                                    transform: \"scale(1.05)\"\n                                }\n            }}\n            onError={(e) => {\n                                e.target.src = DocImg;\n            }}\n        />\n    ) : (\n                        <Avatar\n                            sx={{\n                                width: 40,\n                                height: 40,\n                                backgroundColor: \"#E72B4A\",\n                                border: \"2px solid #E72B4A\",\n                                boxShadow: \"0 2px 8px rgba(231, 43, 74, 0.2)\",\n                                transition: \"all 0.2s ease\",\n                                \"&:hover\": {\n                                    boxShadow: \"0 4px 12px rgba(231, 43, 74, 0.3)\",\n                                    transform: \"scale(1.05)\"\n                                }\n                            }}\n                        >\n                            <AccountCircle sx={{ color: \"white\", fontSize: \"24px\" }} />\n                        </Avatar>\n    )}\n</IconButton>\n            </Tooltip>\n\n    {renderMenu}\n</Box>\n    );\n};\n\nexport default profilemenu;\n","import React, { useState, Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { styled, useTheme, alpha } from \"@mui/material/styles\";\nimport {\n    Box,\n    Toolbar,\n    List,\n    CssBaseline,\n    Typography,\n    Divider,\n    IconButton,\n    ListItem,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Grid,\n    useMediaQuery,\n    SwipeableDrawer,\n    Tooltip,\n} from \"@mui/material\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport { ChevronLeft, ChevronRight, Menu as MenuIcon } from \"@mui/icons-material\";\n\n// import CardContent from \"@mui/material/CardContent\";\n// import Card from \"@mui/material/Card\";\n// import Stack from \"@mui/material/Stack\";\n// import CheckCircleRoundedIcon from \"@mui/icons-material/CheckCircleRounded\";\n\n// import {CustomButton} from \"../CustomModal\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport LocalAtmIcon from \"@mui/icons-material/LocalAtm\";\nimport InputBase from \"@mui/material/InputBase\";\nimport Badge from \"@mui/material/Badge\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\n// import { makeStyles, createStyles } from \"@mui/styles\"; // Using sx prop instead for MUI v5\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport CustomButton from \"../CustomButton\"; // this\nimport CustomModal from \"../CustomModal\"; // this\nimport SearchBarModal from \"../Navbar/searchBarModal\";\nimport LocationModal from \"../Navbar/locationModal\";\nimport Content1 from \"../subcriptionContent/content1\";\nimport Content2 from \"../subcriptionContent/content2\";\nimport Content3 from \"../subcriptionContent/content3\";\nimport { useAuthentication } from \"../../loginComponent/UserProvider\";\nimport Notificationmenu from \"../Navbar/notificationmenu\";\nimport Profilemenu from \"../Navbar/profilemenu\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport \"./custom-menu-drawer.scss\";\nimport CustomTextField from \"../CustomTextField\";\nimport dig_logo from \"../../static/images/logos/diagnosit_logo.png\";\nimport hcf_logo from \"../../static/images/logos/hcf_admin_logo.png\";\nimport doc_logo from \"../../static/images/logos/Doctor_logo.png\";\nimport clinic_logo from \"../../static/images/logos/clinic_logo.png\";\nimport icon from \"../../static/images/logos/bergerIcon.png\"\n\n/// /from here\n\n/// /till here\n\nconst drawerWidth = 270;\nconst mobileDrawerWidth = 280;\n\nconst openedMixin = (theme) => ({\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme) => ({\n    transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: `calc(${theme.spacing(11)} + 1px)`,\n    [theme.breakpoints.up(\"sm\")]: {\n        width: `calc(${theme.spacing(9)} + 1px)`, // Reduced from 12 to 9\n    },\n});\n\nconst DrawerHeader = styled(\"div\")(({ theme }) => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    minHeight: \"64px\", // Minimized to reduce spacing below navbar\n    // necessary for content to be below app bar\n}));\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create([\"width\", \"margin\"], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== \"open\" })(\n    ({ theme, open }) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: \"nowrap\",\n        boxSizing: \"border-box\",\n        ...(open && {\n            ...openedMixin(theme),\n            \"& .MuiDrawer-paper\": openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            \"& .MuiDrawer-paper\": closedMixin(theme),\n        }),\n    }),\n);\n\n// Removed makeStyles - using sx prop instead for MUI v5 compatibility\n\nconst CustomMenuDrawer = ({ list1, list2, children, handleOnMenuSelect, profilepath }) => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    \n    // Responsive breakpoints\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n    const isTablet = useMediaQuery(theme.breakpoints.between('md', 'lg'));\n    const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\n    \n    // State management\n    const [open, setOpen] = useState(!isMobile); // Closed on mobile by default\n    const [selectedItem, setSeletedItem] = useState(list1[0].name);\n    const [mobileOpen, setMobileOpen] = useState(false);\n    \n    // Update drawer state based on screen size\n    useEffect(() => {\n        if (isMobile) {\n            setOpen(false);\n        } else {\n            setOpen(true);\n        }\n    }, [isMobile]);\nconsole.log(\"this is the profile path : \",profilepath)\n    /// from here\n    // const useStyles = makeStyles({\n    //     gridContainer: {\n    //         paddingLeft: \"-20px\",\n    //         paddingRight: \"-20px\",\n    //     },\n    // });\n    const [openDialog, setOpenDialog] = useState(false);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const role_id = localStorage.getItem(\"signUp\");\n    const handleProfileMenuOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\nconst profile = localStorage.getItem(\"profile\")\n\n    const handleMobileMenuClose = () => {\n        setMobileMoreAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n        handleMobileMenuClose();\n    };\n\n    // const handleMobileMenuOpen = (event) => {\n    //     setMobileMoreAnchorEl(event.currentTarget);\n    // };\n    const Authentication = useAuthentication();\n    const { logout, isAuthenticated } = useAuth();\n\n    const HandleLogout = async () => {\n        try {\n            console.log(\"Starting logout process...\");\n            \n            // Show confirmation dialog\n            const confirmed = window.confirm('Are you sure you want to logout?');\n            if (!confirmed) {\n                console.log(\"Logout cancelled by user\");\n                return;\n            }\n            \n            // Call our logout function\n            const result = await logout({\n                clearLocalData: true,\n                callServer: true\n            });\n            \n            if (result.success) {\n                console.log(\"Logout successful:\", result.message);\n                \n                // Call the existing authentication logout methods\n                if (Authentication.LogoutPatient) {\n                    Authentication.LogoutPatient();\n                }\n                if (Authentication.LogoutDoctor) {\n                    Authentication.LogoutDoctor();\n                }\n                if (Authentication.LoginHcf) {\n                    Authentication.LoginHcf();\n                }\n                \n                // Navigate to login page\n                navigate(\"/\");\n                \n                // Show success message\n                alert(\"Logged out successfully!\");\n            } else {\n                console.error(\"Logout failed:\", result.message);\n                alert(\"Logout failed. Please try again.\");\n            }\n        } catch (error) {\n            console.error(\"Logout error:\", error);\n            alert(\"An error occurred during logout. Please try again.\");\n        }\n    };\n\n    const menuId = \"primary-search-account-menu\";\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n            }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n            }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuClose}>\n                <AccountCircle />\n                <NavLink>Profile</NavLink>\n            </MenuItem>\n            {/* <MenuItem onClick={handleMenuClose}>\n                <LocalAtmIcon />\n                <NavLink to={\"/patientdashboard/dashboard/payment\"}>Payment</NavLink>\n            </MenuItem> */}\n            <MenuItem onClick={handleMenuClose}>\n                <Box component={\"span\"} onClick={HandleLogout}>\n                    <LogoutIcon />\n                    Log Out\n                </Box>\n            </MenuItem>\n        </Menu>\n    );\n\n    const mobileMenuId = \"primary-search-account-menu-mobile\";\n    const renderMobileMenu = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n            }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n            }}\n            open={isMobileMenuOpen}\n            onClose={handleMobileMenuClose}\n        >\n            <MenuItem>\n                <IconButton size=\"large\" aria-label=\"show 17 new notifications\" color=\"inherit\">\n                    <Badge badgeContent={17} color=\"error\">\n                        <NotificationsIcon />\n                    </Badge>\n                </IconButton>\n            </MenuItem>\n            <MenuItem onClick={handleProfileMenuOpen}>\n                <IconButton\n                    size=\"large\"\n                    aria-label=\"account of current user\"\n                    aria-controls=\"primary-search-account-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                >\n                    <AccountCircle />\n                </IconButton>\n                <p>Profile</p>\n            </MenuItem>\n        </Menu>\n    );\n\n    /// /till  here\n\n    const handleDrawerOpen = () => {\n        if (isMobile) {\n            setMobileOpen(true);\n        } else {\n            setOpen(true);\n        }\n    };\n\n    const handleDrawerClose = () => {\n        if (isMobile) {\n            setMobileOpen(false);\n        } else {\n            setOpen(false);\n        }\n    };\n\n    const handleMobileDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const handleSelectItem = (item) => {\n        setSeletedItem(item);\n        handleOnMenuSelect(item);\n    };\n\n    // FROM HERE\n\n    // Removed useStyles - using sx prop instead\n\n    const handleOpen = (condition) => {\n        setOpenDialog(condition);\n    };\n    const logos = {\n        hcf_admin: hcf_logo, // Directly use the imported image path\n        doctor: doc_logo,\n        diagnostic_center: dig_logo,\n        clinic: clinic_logo,\n        patient: \"images/logo.png\", // Use a string for paths not imported\n        default: \"images/logo.png\",\n    };\n\n    // Determine the logo based on the user's role\n    const logoSrc = logos[role_id] || logos.default;\n    return (\n        <Box sx={{ display: \"flex\", width: \"100%\" }}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" open={open}>\n                <Toolbar sx={{ \n                    backgroundColor: \"#ffff\",\n                    minHeight: { xs: \"48px\", sm: \"56px\" },\n                    padding: { xs: \"0 8px\", sm: \"0 16px\" }\n                }}>\n                    {/* Mobile Menu Button */}\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleMobileDrawerToggle}\n                        edge=\"start\"\n                        sx={{\n                            marginRight: 2,\n                            display: { xs: \"flex\", md: \"none\" },\n                            color: \"#333\"\n                        }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    {/* Desktop Logo Button */}\n                    <Box\n                        sx={{\n                            display: { xs: \"none\", md: \"flex\" },\n                            alignItems: \"center\",\n                            marginRight: 5,\n                            ...(open && { display: \"none\" }),\n                            cursor: \"pointer\",\n                        }}\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                    >\n                        <Box>\n                            <img src={icon} alt=\"Logo\" width=\"40\" padding=\" 2px 1px\" />\n                        </Box>\n                    </Box>\n\n                    {/* Mobile Logo */}\n                    <Box\n                        sx={{\n                            display: { xs: \"flex\", md: \"none\" },\n                            alignItems: \"center\",\n                            marginRight: 2,\n                        }}\n                    >\n                        <img src={icon} alt=\"Logo\" width=\"32\" />\n                    </Box>\n                    {/* //fromhere */}\n\n                    {/* Search and Location Container */}\n                    <Box\n                        id=\"location-search-container\"\n                        sx={{\n                            display: { xs: \"none\", sm: \"flex\" },\n                            alignItems: \"center\",\n                            flexGrow: { xs: 0, sm: 1 },\n                            justifyContent: { xs: \"flex-end\", sm: \"flex-start\" },\n                            marginLeft: { xs: 0, sm: 2 }\n                        }}\n                    >\n                        <Box sx={{ marginRight: { xs: 1, sm: 2 } }}>\n                            <LocationModal />\n                        </Box>\n                        <SearchBarModal />\n                    </Box>\n\n                    <Box sx={{ flexGrow: 1 }} />\n                    \n                    {/* Desktop Header Actions */}\n                    <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n                        <Notificationmenu />\n                        <Profilemenu profilepath={profilepath} />\n                    </Box>\n\n                    {/* Mobile Header Actions */}\n                    <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\n                        <Notificationmenu />\n                        <Profilemenu profilepath={profilepath} />\n                    </Box>\n                        {/* <IconButton\n                            size=\"large\"\n                            aria-label=\"show 17 new notifications\"\n                            color=\"#AEAAAE\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                        >\n                            <Badge badgeContent={3} color=\"error\">\n                                <NotificationsIcon sx={{color:\"#AEAAAE\"}} />\n                            </Badge>\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            edge=\"end\"\n                            aria-label=\"account of current user\"\n                            aria-controls={menuId}\n                            aria-haspopup=\"true\"\n                            onClick={handleProfileMenuOpen}\n                            color=\"inherit\"\n                        >\n                            <AccountCircle  sx={{backgroundColor:\"#AEAAAE\"}}/>\n                        </IconButton> */}\n\n                    {/* till here */}\n                </Toolbar>\n            </AppBar>\n            \n            {/* Desktop Drawer */}\n            <Drawer \n                variant={isMobile ? \"temporary\" : \"permanent\"} \n                open={isMobile ? mobileOpen : open}\n                onClose={isMobile ? handleDrawerClose : undefined}\n                ModalProps={isMobile ? { keepMounted: true } : undefined}\n                sx={{\n                    display: { xs: \"none\", md: \"block\" },\n                    \"& .MuiDrawer-paper\": {\n                        boxSizing: \"border-box\",\n                        width: drawerWidth,\n                        position: \"fixed !important\",\n                        top: \"0 !important\",\n                        left: \"0 !important\",\n                        height: \"100vh !important\",\n                        zIndex: \"1200 !important\",\n                    },\n                }}\n            >\n                <DrawerHeader>\n                    {open && (\n                        <Box sx={{ \n                            display: \"flex\", \n                            alignItems: \"center\", \n                            flexGrow: 1,\n                            transition: \"opacity 0.3s ease\"\n                        }}>\n                            <img src={logoSrc} alt=\"Logo\" width=\"180\" sx={{ marginRight: 2 }} />\n                        </Box>\n                    )}\n                    <IconButton \n                        onClick={handleDrawerClose}\n                        sx={{\n                            transition: \"transform 0.3s ease\",\n                            \"&:hover\": {\n                                transform: \"scale(1.1)\",\n                                backgroundColor: \"rgba(0, 0, 0, 0.04)\"\n                            }\n                        }}\n                        title={open ? \"Collapse sidebar\" : \"Expand sidebar\"}\n                    >\n                        {theme.direction === \"rtl\" ? <ChevronRight /> : <ChevronLeft />}\n                    </IconButton>\n                </DrawerHeader>\n                <Divider />\n\n                <List>\n                    {list1.map((item, index) => (\n                        <Tooltip \n                            title={!open ? item.name : \"\"} \n                            placement=\"right\"\n                            arrow\n                            key={index}\n                        >\n                            <ListItem\n                                disablePadding\n                                sx={{ display: \"block\" }}\n                                onClick={() => handleSelectItem(item.name)}\n                                className={selectedItem === item.name ? \"active\" : \"\"}\n                            >\n                            <ListItemButton\n                                sx={{\n                                    minHeight: 48,\n                                    justifyContent: open ? \"initial\" : \"center\",\n                                    px: open ? 2.5 : 1.5,\n                                    mx: 1,\n                                    borderRadius: 2,\n                                    transition: \"all 0.3s ease\",\n                                    \"&:hover\": {\n                                        backgroundColor: \"rgba(0, 0, 0, 0.04)\",\n                                        transform: \"translateX(4px)\"\n                                    },\n                                    \"&.Mui-selected\": {\n                                        backgroundColor: \"rgba(25, 118, 210, 0.08)\",\n                                        \"&:hover\": {\n                                            backgroundColor: \"rgba(25, 118, 210, 0.12)\"\n                                        }\n                                    }\n                                }}\n                            >\n                                <ListItemIcon\n                                    sx={{\n                                        minWidth: 0,\n                                        mr: open ? 3 : 0,\n                                        justifyContent: \"center\",\n                                        transition: \"margin 0.3s ease\"\n                                    }}\n                                    className={selectedItem === item.name ? \"active\" : \"\"}\n                                >\n                                    {item.icon}\n                                </ListItemIcon>\n                                <ListItemText \n                                    primary={item.name} \n                                    sx={{ \n                                        opacity: open ? 1 : 0,\n                                        transition: \"opacity 0.3s ease\",\n                                        whiteSpace: \"nowrap\",\n                                        overflow: \"hidden\"\n                                    }} \n                                />\n                            </ListItemButton>\n                            </ListItem>\n                        </Tooltip>\n                    ))}\n                </List>\n                <Divider />\n                {/* <List>\n                    {list2.map((item, index) => (\n                        <ListItem\n                            key={index}\n                            disablePadding\n                            sx={{ display: \"block\" }}\n                            onClick={() => handleSelectItem(item.name)}\n                            className={selectedItem === item.name ? \"active\" : \"\"}\n                        >\n                            <ListItemButton\n                                sx={{\n                                    minHeight: 48,\n                                    justifyContent: open ? \"initial\" : \"center\",\n                                    px: 2.5,\n                                }}\n                            >\n                                <ListItemIcon\n                                    sx={{\n                                        minWidth: 0,\n                                        mr: open ? 3 : \"auto\",\n                                        justifyContent: \"center\",\n                                    }}\n                                    className={selectedItem === item.name ? \"active\" : \"\"}\n                                >\n                                    {item.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={item.name} sx={{ opacity: open ? 1 : 0 }} />\n                            </ListItemButton>\n                        </ListItem>\n                    ))} */}\n                {/* Upgrade now  */}\n                {/* <div className=\"component-library\">\n                        <div className=\"items\">\n                            <CustomButton\n                                label={\"Upgrage Now\"}\n                                isElevated\n                                handleClick={() => handleOpen(true)}\n                            />\n                            <CustomModal\n                                conditionOpen={handleOpen}\n                                isOpen={openDialog}\n                                title={\"Upgrade your plan\"}\n                                subtitle={\"14\"}\n                                footer={\n                                    <Fragment>\n                                        <CustomButton\n                                            label={\"action 1\"}\n                                            handleClick={() => setOpenDialog(true)}\n                                            isTransaprent\n                                            isText\n                                        />\n                                        <CustomButton\n                                            label={\"action 2\"}\n                                            isTransaprent\n                                            handleClick={() => setOpenDialog(false)}\n                                            isText\n                                        />\n                                    </Fragment>\n                                }\n                            >\n                                <Typography\n                                    gutterBottom\n                                    variant=\"h9\"\n                                    component=\"div\"\n                                    color=\"#787579\"\n                                    align=\"center\"\n                                >\n                                    14 Days Free Trail\n                                </Typography>\n                                <Grid \n                                    container \n                                    spacing={5} \n                                    sx={{\n                                        paddingLeft: \"-20px\",\n                                        paddingRight: \"-20px\",\n                                    }}\n                                >\n                                    <Grid item xs={12} sm={6} md={4}>\n                                        <Content1 />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6} md={4}>\n                                        <Content2 />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6} md={4}>\n                                        <Content3 />\n                                    </Grid>\n                                </Grid>\n                            </CustomModal>\n                        </div>\n                    </div> */}\n                {/* </List> */}\n            </Drawer>\n\n            {/* Mobile Drawer */}\n            <SwipeableDrawer\n                variant=\"temporary\"\n                anchor=\"left\"\n                open={mobileOpen}\n                onClose={handleDrawerClose}\n                onOpen={handleDrawerOpen}\n                ModalProps={{ keepMounted: true }}\n                sx={{\n                    display: { xs: \"block\", md: \"none\" },\n                    \"& .MuiDrawer-paper\": {\n                        boxSizing: \"border-box\",\n                        width: mobileDrawerWidth,\n                        backgroundColor: \"#fafafa\",\n                    },\n                }}\n            >\n                <DrawerHeader>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\n                        <img src={logoSrc} alt=\"Logo\" width=\"180\" sx={{ marginRight: 2 }} />\n                    </Box>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeft />\n                    </IconButton>\n                </DrawerHeader>\n                <Divider />\n\n                <List>\n                    {list1.map((item, index) => (\n                        <ListItem\n                            key={index}\n                            disablePadding\n                            sx={{ display: \"block\" }}\n                            onClick={() => {\n                                handleSelectItem(item.name);\n                                if (isMobile) {\n                                    handleDrawerClose();\n                                }\n                            }}\n                            className={selectedItem === item.name ? \"active\" : \"\"}\n                        >\n                            <ListItemButton\n                                sx={{\n                                    minHeight: 48,\n                                    justifyContent: \"initial\",\n                                    px: 2.5,\n                                }}\n                            >\n                                <ListItemIcon\n                                    sx={{\n                                        minWidth: 0,\n                                        mr: 3,\n                                        justifyContent: \"center\",\n                                    }}\n                                    className={selectedItem === item.name ? \"active\" : \"\"}\n                                >\n                                    {item.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={item.name} sx={{ opacity: 1 }} />\n                            </ListItemButton>\n                        </ListItem>\n                    ))}\n                </List>\n            </SwipeableDrawer>\n            <Box \n                component=\"main\" \n                sx={{ \n                    flexGrow: 1, \n                    width: \"100%\",\n                    marginLeft: { \n                        xs: 0, \n                        sm: 0, \n                        md: open ? `${drawerWidth}px` : \"57px\",\n                        lg: open ? `${drawerWidth}px` : \"57px\"\n                    },\n                    transition: theme.transitions.create([\"margin\"], {\n                        easing: theme.transitions.easing.sharp,\n                        duration: theme.transitions.duration.leavingScreen,\n                    }),\n                    minHeight: \"100vh\",\n                    backgroundColor: \"#fffff\",\n                    position: \"relative\",\n                    zIndex: 1,\n                    padding: { \n                        xs: \"0.25rem\", \n                        sm: \"0.5rem\", \n                        md: \"0.75rem\",\n                        lg: \"1rem\"\n                    },\n                    marginTop: { xs: \"48px\", sm: \"56px\" }\n                }}\n            >\n                <DrawerHeader />\n                {children}\n            </Box>\n\n            {renderMobileMenu}\n            {renderMenu}\n        </Box>\n    );\n};\n// sm={4.5} md={4}\n\nCustomMenuDrawer.defaultProps = {\n    headerLabel: \"items\",\n    list1: [\"item 1\", \"item 2\", \"item 3\"],\n    list2: [\"item 1\", \"item 2\", \"item 3\"],\n    handleOnMenuSelect: () => {},\n};\n\nCustomMenuDrawer.propTypes = {\n    headerLabel: PropTypes.string,\n    list1: PropTypes.array,\n    list2: PropTypes.array,\n    children: PropTypes.node,\n    handleOnMenuSelect: PropTypes.func,\n};\n\nexport default CustomMenuDrawer;\n","import React, { Fragment, useCallback, useState, useEffect } from \"react\";\nimport {\n    MyLocationOutlined,\n    CloseOutlined,\n    ArrowCircleLeftOutlined,\n    Inbox,\n    StarRate,\n    Drafts,\n    Delete,\n    Info,\n    Settings,\n} from \"@mui/icons-material\";\nimport { Stack, IconButton } from \"@mui/material\";\nimport CustomButton from \"../../components/CustomButton\";\nimport CustomChip from \"../../components/CustomChip\";\nimport CustomTextField from \"../../components/CustomTextField\";\nimport CustomRadioButton from \"../../components/CustomRadioButton\";\nimport { CustomCircularProgress, CustomLinearProgress } from \"../../components/CustomProgress\";\nimport CustomModal from \"../../components/CustomModal\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\n\nimport \"./usage.scss\";\nimport CustomTab from \"../../components/CustomTab\";\nimport CustomToggleSwitch from \"../../components/CustomToggleSwitch\";\nimport CustomCheckBox from \"../../components/CustomCheckBox\";\nimport CustomList from \"../../components/CustomList\";\nimport CustomDropdown from \"../../components/CustomDropdown\";\nimport CustomMenuDrawer from \"../../components/CustomMenuDrawer/custom-menu-drawer\";\n\nconst Usage = () => {\n    const radioValues = [\"radio1\", \"radio2\", \"radio3\"];\n    const dropdownItems = [\"item1\", \"item2\", \"item3\"];\n    const drawerList1 = [\n        { name: \"Usage\", icon: <Inbox /> },\n        { name: \"Starred\", icon: <StarRate /> },\n        { name: \"Drafts\", icon: <Drafts /> },\n    ];\n    const drawerList2 = [\n        { name: \"Trash\", icon: <Delete /> },\n        { name: \"Spam\", icon: <Info /> },\n    ];\n\n    const DrawerChildComponents = () => {\n        const [isOn, setIsOn] = useState(true);\n        const [radioVal, setRadioVal] = useState(radioValues[0]);\n        const [checkVal, setCheckVal] = useState(true);\n        const [listItems, setListItems] = useState([\n            { name: \"item1\", checked: false },\n            { name: \"item2\", checked: true },\n            { name: \"item3\", checked: false },\n        ]);\n        const [activeDropdown, setActiveDropdown] = useState(\"\");\n        const [activeFabDropdown, setActiveFabDropdown] = useState(dropdownItems[0]);\n        const [progress] = useState(10);\n        const [openDialog, setOpenDialog] = useState(false);\n        const [showSnack, setShowSnack] = useState(true);\n        const [textField1, setTextField1] = useState(\"\");\n        const [textField2, setTextField2] = useState(\"\");\n        const [textField3, setTextField3] = useState(\"\");\n        const [textField4, setTextField4] = useState(\"\");\n        const [textField5, setTextField5] = useState(\"\");\n        const [textField6, setTextField6] = useState(\"\");\n\n        const handleClickChips = useCallback(() => {\n            console.info(\"You clicked the Chip.\");\n        });\n\n        const handleDelete = useCallback(() => {\n            console.info(\"You clicked the delete icon.\");\n        });\n\n        const handleCheckList = useCallback((updatedItem) => {\n            // eslint-disable-next-line no-confusing-arrow\n            const updatedItems = listItems.map((item) =>\n                item.name === updatedItem.name ? updatedItem : item,\n            );\n            setListItems(updatedItems);\n        });\n\n        useEffect(() => {\n            // const timer = setInterval(() => {\n            //     setProgress((prevProgress) => (prevProgress >= 100 ? 0 : prevProgress + 10));\n            // }, 800);\n            // return () => {\n            //     clearInterval(timer);\n            // };\n        }, []);\n        return (\n            <Fragment>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomButton\n                            label={\"enabled\"}\n                            leftIcon={<MyLocationOutlined />}\n                            rightIcon={<MyLocationOutlined />}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                        />\n                        <CustomButton\n                            label={\"enabled\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                        />\n                        <CustomButton\n                            label={\"disabled\"}\n                            leftIcon={<MyLocationOutlined />}\n                            rightIcon={<MyLocationOutlined />}\n                            isTransaprent={false}\n                            isDisabled\n                            isElevated={false}\n                        />\n                        <CustomButton\n                            label={\"enabled\"}\n                            leftIcon={<MyLocationOutlined />}\n                            isTransaprent\n                        />\n\n                        <CustomChip\n                            label={\"enabled\"}\n                            isTransparent={false}\n                            leftIcon={<ArrowCircleLeftOutlined />}\n                            rightIcon={<CloseOutlined />}\n                            onChipClick={handleClickChips}\n                            onRightIconClick={handleDelete}\n                        />\n                        <CustomChip\n                            label={\"enabled\"}\n                            isTransparent\n                            leftIcon={<ArrowCircleLeftOutlined />}\n                            rightIcon={<CloseOutlined />}\n                            onChipClick={handleClickChips}\n                            onRightIconClick={handleDelete}\n                        />\n                        <CustomChip\n                            label={\"disabled\"}\n                            isDisabled\n                            leftIcon={<ArrowCircleLeftOutlined />}\n                            rightIcon={<CloseOutlined />}\n                            onChipClick={handleClickChips}\n                            onRightIconClick={handleDelete}\n                        />\n                        <CustomChip\n                            label={\"enabled\"}\n                            isElevated\n                            leftIcon={<ArrowCircleLeftOutlined />}\n                            rightIcon={<CloseOutlined />}\n                            onChipClick={handleClickChips}\n                            onRightIconClick={handleDelete}\n                        />\n                        <CustomChip\n                            label={\"disabled\"}\n                            isTransparent\n                            isDisabled\n                            leftIcon={<ArrowCircleLeftOutlined />}\n                            rightIcon={<CloseOutlined />}\n                            onChipClick={handleClickChips}\n                            onRightIconClick={handleDelete}\n                        />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomTextField\n                            id={\"standard-helperText1\"}\n                            label={\"username\"}\n                            defaultValue={textField1}\n                            helperText={\"valid username\"}\n                            onChange={(value) => setTextField1(value)}\n                        />\n                        <CustomTextField\n                            id={\"standard-helperText2\"}\n                            label={\"username\"}\n                            defaultValue={textField2}\n                            helperText={\"valid username\"}\n                            onChange={(value) => setTextField2(value)}\n                            isValid\n                        />\n                        <CustomTextField\n                            id={\"standard-helperText3\"}\n                            label={\"username\"}\n                            defaultValue={textField3}\n                            helperText={\"invalid username\"}\n                            onChange={(value) => setTextField3(value)}\n                            isInvalid\n                        />\n                        <CustomTextField\n                            id={\"standard-helperText4\"}\n                            label={\"username\"}\n                            defaultValue={textField4}\n                            helperText={\"valid username\"}\n                            onChange={(value) => setTextField4(value)}\n                            leftIcon={<MyLocationOutlined />}\n                        />\n                        <CustomTextField\n                            id={\"standard-helperText5\"}\n                            label={\"username\"}\n                            defaultValue={textField5}\n                            helperText={\"valid username\"}\n                            onChange={(value) => setTextField5(value)}\n                            rightIcon={<MyLocationOutlined />}\n                        />\n                        <CustomTextField\n                            id={\"filled-disabled\"}\n                            label={\"disabled\"}\n                            defaultValue={textField6}\n                            helperText={\"valid username\"}\n                            onChange={(value) => setTextField6(value)}\n                            isDisabled\n                        />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomTab items={[\"item 1\", \"item 2\", \"item 3\"]} />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomToggleSwitch\n                            id={\"switch-1\"}\n                            name={\"custom-switch\"}\n                            checked={isOn}\n                            onChange={() => setIsOn(!isOn)}\n                        />\n                        <CustomToggleSwitch\n                            id={\"switch-1\"}\n                            name={\"custom-switch\"}\n                            checked={isOn}\n                            onChange={() => setIsOn(!isOn)}\n                            disabled\n                        />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomRadioButton\n                            label={\"radio buttons\"}\n                            handleChange={({ target }) => setRadioVal(target.value)}\n                            value={radioVal}\n                            radioGroupCss={{ display: \"flex\", flexDirection: \"column\" }}\n                            items={radioValues}\n                        />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomCheckBox\n                            checked={checkVal}\n                            onChange={(e) => setCheckVal(e.target.checked)}\n                        />\n                        <CustomCheckBox checked={checkVal} disabled />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomList items={listItems} handleToggle={handleCheckList} />\n                        <CustomList\n                            items={listItems}\n                            handleToggle={handleCheckList}\n                            showDescription\n                            maxWidth={800}\n                            showAvatar\n                        />\n                        <CustomList items={listItems} handleToggle={handleCheckList} showAvatar />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomDropdown\n                            label={\"items1\"}\n                            items={dropdownItems}\n                            activeItem={activeDropdown}\n                            handleChange={(item) => setActiveDropdown(item)}\n                        />\n                        <CustomDropdown\n                            label={\"items2\"}\n                            items={dropdownItems}\n                            activeItem={activeFabDropdown}\n                            handleChange={(item) => setActiveFabDropdown(item)}\n                            isFabIcon\n                            fabIcon={\n                                <IconButton\n                                    aria-label=\"settings\"\n                                    sx={{\n                                        bgcolor: \"primary.main\",\n                                        color: \"white\",\n                                        borderRadius: \"50%\",\n                                        width: \"40px\",\n                                        height: \"40px\",\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        justifyContent: \"center\",\n                                    }}\n                                >\n                                    <Settings />\n                                </IconButton>\n                            }\n                        />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomCircularProgress progress={progress} />\n                        <CustomLinearProgress progress={progress} />\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomButton\n                            label={\"open modal\"}\n                            isElevated\n                            handleClick={() => setOpenDialog(true)}\n                        />\n                        <CustomModal\n                            isOpen={openDialog}\n                            title={\"dialog title\"}\n                            footer={\n                                <Fragment>\n                                    <CustomButton\n                                        label={\"action 1\"}\n                                        handleClick={() => setOpenDialog(false)}\n                                        isTransaprent\n                                        isText\n                                    />\n                                    <CustomButton\n                                        label={\"action 2\"}\n                                        isTransaprent\n                                        handleClick={() => setOpenDialog(false)}\n                                        isText\n                                    />\n                                </Fragment>\n                            }\n                        >\n                            <div>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                            </div>\n                            <div>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                            </div>\n                            <div>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n                            </div>\n                        </CustomModal>\n                    </div>\n                </div>\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomSnackBar isOpen={showSnack} message={\"Snack bar Message\"} />\n                            <CustomSnackBar\n                                isOpen={showSnack}\n                                actionLabel={\"action\"}\n                                handleAction={() => setShowSnack(false)}\n                                message={\"error Message\"}\n                                type=\"error\"\n                            />\n                        </Stack>\n                        <Stack spacing={20} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomSnackBar\n                                isOpen={showSnack}\n                                actionLabel={\"action\"}\n                                handleAction={() => setShowSnack(false)}\n                                message={\"success Message\"}\n                                type=\"success\"\n                            />\n                            <CustomSnackBar\n                                isOpen={showSnack}\n                                actionLabel={\"action\"}\n                                handleAction={() => setShowSnack(false)}\n                                message={\"caution Message\"}\n                                type=\"warning\"\n                            />\n                        </Stack>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    };\n\n    const StarredComponent = () => {\n        return <div>Starred component</div>;\n    };\n\n    const DraftsComponent = () => {\n        return <div>Drafts component</div>;\n    };\n\n    const TrashComponent = () => {\n        return <div>Trash component</div>;\n    };\n\n    const SpamComponent = () => {\n        return <div>Spam component</div>;\n    };\n\n    const drawerComponentList = {\n        usage: <DrawerChildComponents />,\n        starred: <StarredComponent />,\n        drafts: <DraftsComponent />,\n        trash: <TrashComponent />,\n        spam: <SpamComponent />,\n    };\n\n    const [activeComponent, setActiveComponent] = useState(drawerComponentList.usage);\n\n    return (\n        <div className=\"usage\">\n            <div className=\"component-library\">\n                <div className=\"items\">\n                    <CustomMenuDrawer\n                        headerLabel={\"custom drawer\"}\n                        list1={drawerList1}\n                        list2={drawerList2}\n                        handleOnMenuSelect={(item) =>\n                            setActiveComponent(drawerComponentList[item.toLowerCase()])\n                        }\n                    >\n                        {activeComponent}\n                    </CustomMenuDrawer>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Usage;\n","import React, { useState } from \"react\";\nimport { Box, CircularProgress } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./patientlogin.scss\";\n\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\n\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport { useAuthentication } from \"../../../../loginComponent/UserProvider\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\nimport { baseURL, emailRegex, passwordRegex } from \"../../../../constants/const\";\nimport { decodeJWT, getCurrentUser } from \"../../../../utils/jwtUtils\";\nimport Cookies from \"js-cookie\";\n\nconst PatientLogin = () => {\n    const [showPassword, setShowPassword] = useState(true);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showSnack, setShowSnack] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorMessageOpen, setErrorMessageOpen] = useState(false);\n    const [helperTextMessage, setHelperTextMessage] = useState(false);\n    const [passwordHelperTextMessage, setPasswordHelperTextMessage] = useState(false);\n    const [invalidUserMessage, setInvalidUserMessage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const { PatientLogin: authLogin } = useAuthentication();\n    const navigate = useNavigate();\n\n    const handleLogin = async () => {\n        if (!email && !password) {\n            setErrorMessage(\"Please enter email and password\");\n            setErrorMessageOpen(true);\n            return;\n        } else if (!email) {\n            setErrorMessage(\"Please enter your email\");\n            setErrorMessageOpen(true);\n            return;\n        } else if (!password) {\n            setErrorMessage(\"Please enter your password\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        const loginData = {\n            email,\n            password,\n            login_with_email: true,\n            mobile: null,\n            role_id: 5,\n        };\n\n        try {\n            setShowSnack(true);\n            setShowError(false);\n            setLoading(true);\n            setErrorMessageOpen(false);\n\n            const response = await axios.post(\n                `${baseURL}/sec/auth/login`,\n                JSON.stringify(loginData),\n                {\n                    headers: { Accept: \"Application/json\" },\n                },\n            );\n\n            const resData = response?.data?.response;\n            console.log(\"resData\", resData);\n\n            if (resData?.body === \"INCOMPLETE_PROFILE\") {\n                localStorage.setItem(\"patient_Email\", email);\n                navigate(\"/patientcompleteprofile\");\n            } else if (resData?.access_token) {\n                // Decode JWT to get user information\n                const userInfo = decodeJWT(resData.access_token);\n                console.log(\"Decoded user info from JWT:\", userInfo);\n                \n                // Store user information\n                localStorage.setItem(\"patient_Email\", email);\n                localStorage.setItem(\"access_token\", resData.access_token);\n                localStorage.setItem(\"patient_suid\", resData.suid);\n                localStorage.setItem(\"profile\", resData.profile_picture);\n                // Set cookie for auth guard persistence\n                Cookies.set(\"patientEmail\", email, { expires: 7 });\n                \n                // Store additional user info from JWT\n                localStorage.setItem(\"user_id\", userInfo.userId);\n                localStorage.setItem(\"role_id\", userInfo.roleId || \"\");\n                localStorage.setItem(\"jwt_email\", userInfo.email || email);\n\n\n                authLogin(resData.email);\n                navigate(\"/patientdashboard\", { replace: true });\n            } else {\n                setShowError(true);\n            }\n        } catch (error) {\n            const errMsg = error?.response?.data?.error || \"Login failed. Try again.\";\n            setErrorMessage(errMsg);\n            setErrorMessageOpen(true);\n            setShowSnack(false);\n            setShowError(true);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar\n                isOpen={showError}\n                message={\"Some error occurred, please try again later\"}\n                type=\"error\"\n            />\n            <CustomSnackBar\n                isOpen={showSnack}\n                message={\"Please wait while we are logging you in\"}\n                type=\"success\"\n            />\n            <CustomSnackBar isOpen={errorMessageOpen} message={errorMessage} type=\"error\" />\n\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <Box className=\"component-library\">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n                        <h2 className=\"text-center\" style={{ alignItems: \"center\" }}>\n                            <strong>Patient Login</strong>\n                        </h2>\n                    </Box>\n\n                    <CustomTextField\n                        id=\"email\"\n                        label=\"Email\"\n                        defaultValue={email}\n                        value={email}\n                        helperText={email && (helperTextMessage ? \"Valid Email\" : \"Invalid Email\")}\n                        onChange={(event) => {\n                            const value = event.target.value;\n                            setEmail(value);\n                            setHelperTextMessage(emailRegex.test(value));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                    />\n\n                    <CustomTextField\n                        id=\"password\"\n                        label=\"Password\"\n                        defaultValue={password}\n                        value={password}\n                        helperText={\n                            password &&\n                            (passwordHelperTextMessage ? \"Valid Password\" : \"Password must be 8+ characters with a number and special character\")\n                        }\n                        type={showPassword ? \"password\" : \"text\"}\n                        onChange={(event) => {\n                            const value = event.target.value;\n                            setPassword(value);\n                            setPasswordHelperTextMessage(passwordRegex.test(value));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                        rightIcon={\n                            showPassword ? (\n                                <VisibilityIcon onClick={() => setShowPassword(false)} />\n                            ) : (\n                                <VisibilityOffIcon onClick={() => setShowPassword(true)} />\n                            )\n                        }\n                    />\n\n                    {/* <CustomButton\n                        label=\"Log In\"\n                        isTransaprent={false}\n                        isDisabled={false}\n                        isElevated={false}\n                        handleClick={handleLogin}\n                        buttonCss={{\n                            width: \"22em\",\n                            padding: \"8px 16px\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            borderRadius: \"100px\",\n                            marginTop: \"35px\",\n                        }}\n                    /> */}\n                    <CustomButton\n                        label={loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Log In\"}\n                        isDisabled={loading}\n                        handleClick={handleLogin}\n                        buttonCss={{\n                            width: \"100%\",\n                            padding: \"10px\",\n                            borderRadius: \"100px\",\n                            mt: 2,\n                        }}\n                        aria-label=\"Submit login form\"\n                    />\n\n                    <div className=\"forgotpassword\" style={{ fontSize: \"small\" }}>\n                        <Link to=\"/forgotpassword\" className=\"link\">\n                            Forgot Password\n                        </Link>\n                    </div>\n                    <div className=\"mobile\" style={{ fontSize: \"small\" }}>\n                        <Link \n                            to=\"/loginwithotp\" \n                            className=\"link\"\n                            onClick={() => localStorage.setItem(\"signUp\", \"patient\")}\n                        >\n                            Log In with OTP\n                        </Link>\n                    </div>\n                    <div\n                        className=\"already\"\n                        style={{\n                            display: \"inline\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            fontSize: \"small\",\n                        }}\n                    >\n                        I Don&apos;t have an account &nbsp;\n                        <Link to=\"/SignupPage\" className=\"link\">\n                            Create Account\n                        </Link>\n                    </div>\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default PatientLogin;\n","// import React from 'react'\nimport React, { useState } from \"react\";\nimport \"./forgotpassword.scss\";\nimport { Box, CircularProgress, Stack } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CustomTextField from \"../../components/CustomTextField\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport { baseURL } from \"../../constants/const\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\n\nconst forgotpassword = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(null);\n    const [showSnack, setShowSnack] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [EmailValidation] = useState(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/);\n    const [disableButton, setDisableButton] = useState(true);\n    // from here\n    const PatientForgotPassword = async () => {\n        setLoading(true);\n        setShowSnack(false);\n        if (email) {\n            console.log(\"Email submit data : \", email);\n            sessionStorage.setItem(\"EmailForgotPassword\", email);\n            try {\n                const response = await axios.post(\n                    `${baseURL}/sec/auth/forgotPassword`,\n                    JSON.stringify({ email: email }),\n                );\n                navigate(\"/ForgotPasswordOTP\");\n            } catch (error) {\n                setErrorMessage(error?.response?.data?.error);\n                setShowSnack(true);\n                // console.log(error?.response?.data?.error);\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            setErrorMessage(\"Please enter email\");\n            setShowSnack(true);\n        }\n    };\n\n    // const handleSubmit = (e) => {\n    //     e.preventDefault();\n\n    //     navigate(\"/patientforgotpassword2\");\n    // };\n\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar\n                isOpen={showSnack}\n                // actionLabel={\"action\"}\n                // handleAction={() => setShowSnack(true)}\n                message={errorMessage}\n                type=\"error\"\n            />\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <Box className=\"component-library \">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n\n                        <h2 className=\"text-center\">\n                            <strong>Forgot Password</strong> <br />\n                            <strong>Please Enter Email</strong>\n                        </h2>\n                    </Box>\n                    <CustomTextField\n                        id={\"standard-helperText1\"}\n                        label={\"Enter Email\"}\n                        defaultValue={email}\n                        helperText={\"\"}\n                        isValid\n                        onInput={(e) => {\n                            setEmail(e.target.value);\n                            console.log(e.target.value);\n                            if (e.target.value.match(EmailValidation)) {\n                                setDisableButton(false);\n                            } else {\n                                setDisableButton(true);\n                            }\n                        }}\n                        textcss={{\n                            width: \"19.5em\",\n                            // height: \"56px\",\n                        }}\n                    />\n                    <CustomButton\n                        label={\n                            loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Continue\"\n                        }\n                        isTransaprent={false}\n                        isDisabled={loading || disableButton}\n                        isElevated={false}\n                        handleClick={PatientForgotPassword}\n                        buttonCss={{\n                            width: \"22em\",\n                            padding: \"8px 16px\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            borderRadius: \"100px\",\n                            marginTop: \"35px\",\n                        }}\n                    />\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default forgotpassword;\n","import React, { useState } from \"react\";\nimport \"./ForgotPasswordOTP.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CustomOTPInput from \"../../components/OTPInput\";\nimport { Box, CircularProgress } from \"@mui/material\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport { baseURL } from \"../../constants/const\";\nimport CustomTextField from \"../../components/CustomTextField\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\n\nconst ForgotPasswordOTP = () => {\n    const navigate = useNavigate();\n    const [otp, setOtp] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [fetchEmail] = useState(sessionStorage.getItem(\"EmailForgotPassword\"));\n    const [snackbarState, setSnackbarState] = useState({\n        open: false,\n        message: \"\",\n        type: \"success\", // success, error, warning, etc.\n    });\n\n    const verifyOTP = async () => {\n        console.log(\"fetchEmail : \", fetchEmail);\n        setLoading(true);\n        try {\n            const reponse = await axios.post(\n                `${baseURL}/sec/auth/verifyEmail`,\n                JSON.stringify({\n                    email: fetchEmail,\n                    activation_code: otp,\n                }),\n            );\n            console.log(reponse);\n            sessionStorage.setItem(\"forgotpasswordotp\", otp);\n            navigate(\"/ForgotPasswordChange\");\n        } catch (error) {\n            console.log(error);\n            setSnackbarState({\n                open: true,\n                message: \"Verification failed!\",\n                type: \"error\",\n            });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // from here\n    const handleResendCode = async () => {\n        try {\n            await axios.post(`${baseURL}/sec/auth/resendCode`, { email: fetchEmail });\n            setSnackbarState({\n                open: true,\n                message: \"Resend OTP successfully!\",\n                type: \"success\",\n            });\n        } catch (error) {\n            console.error(\"Resend OTP failed:\", error?.response?.data || error);\n            setSnackbarState({\n                open: true,\n                message: \"Resend OTP failed!\",\n                type: \"error\",\n            });\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        navigate(\"/forgotpasswordotpverify\");\n    };\n    console.log(\"otp\", otp);\n    return (\n        <Box className=\"register-photo\">\n            <Box\n                className=\"form-container\"\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    minHeight: \"100vh\", // Ensures it centers vertically\n                }}\n            >\n                <CustomSnackBar\n                    isOpen={snackbarState.open}\n                    message={snackbarState.message}\n                    hideDuration={4000}\n                    type={snackbarState.type}\n                />\n                <div className=\"image-holder\"></div>\n                <div className=\"forgotPassword\">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div>\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n\n                        <h2>\n                            <strong>Please enter OTP</strong>\n                        </h2>\n\n                        <div>\n                            <p>The OTP has been sent to - {fetchEmail} </p>\n                        </div>\n                    </Box>\n                    {/* <CustomTextField\n                            id={\"standard-helperText1\"}\n                            type={'number'}\n                            label={\"Email\"}\n                            defaultValue={otp}\n                            helperText={\"Mobile or Email\"}\n                            // isValid\n                            onChange={(event) => setOtp(event.target.value)}\n                            textcss={{\n                                width: \"22.5em\",\n                                height: \"56px\",\n                                WebkitAppearance : \"none\"\n                            }}\n                        /> */}\n\n                    <CustomOTPInput\n                        value={otp}\n                        onChange={setOtp}\n                        numInputs={6}\n                        placeholder=\"*\"\n                    />\n                    <CustomButton\n                        label={\n                            loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Continue\"\n                        }\n                        isTransaprent={false}\n                        isDisabled={loading}\n                        isElevated={false}\n                        handleClick={verifyOTP}\n                        buttonCss={{\n                            width: \"19em\",\n                            padding: \"8px 16px\",\n                            marginTop: \"3%\",\n                            borderRadius: \"100px\",\n                        }}\n                    />\n                    <div\n                        className=\"resend\"\n                        onClick={handleResendCode}\n                        style={{\n                            marginTop: \"1rem\",\n                            cursor: \"pointer\",\n                            fontWeight: 500,\n                        }}\n                    >\n                        Resend Code\n                    </div>\n                </div>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ForgotPasswordOTP;\n","// import React from 'react'\nimport React, { useState } from \"react\";\nimport \"./ForgotPasswordChange.scss\";\nimport { Box, CircularProgress, Stack } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CustomTextField from \"../../components/CustomTextField\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport { baseURL } from \"../../constants/const\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\n\nconst ForgotPasswordChange = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [isDisabledButton, setIsDisabledButton] = useState(true);\n    const [showSnack, setShowSnack] = useState(false);\n    const [showSnackError, setShowSnackError] = useState(false);\n    const [responseMessage, setResponseMessage] = useState(\"\");\n    const [error_responseMessage, setError_responseMessage] = useState();\n    const [loading, setLoading] = useState(false);\n    // from here\n    const [navigateionPath] = useState(\n        localStorage.getItem(\"signUp\") === \"doctor\"\n            ? \"/doctorlogin\"\n            : localStorage.getItem(\"signUp\") === \"patient\"\n            ? \"/patientlogin\"\n            : localStorage.getItem(\"signUp\") === \"diagnostic_center\"\n            ? \"/diagnostcenterlogin\"\n            : localStorage.getItem(\"signUp\") === \"clinic\"\n            ? \"/diagnostcliniclogin\"\n            : localStorage.getItem(\"signUp\") === \"hcf_admin\"\n            ? \"/hcfadminlogin\"\n            : localStorage.getItem(\"signUp\") === \"super_admin\"\n            ? \"/superadminlogin\"\n            : null,\n    );\n\n    const ChangePassword = async () => {\n        setLoading(true);\n        try {\n            console.log(\"ChangePassword\", sessionStorage.getItem(\"EmailForgotPassword\"), sessionStorage.getItem(\"forgotpasswordotp\"), confirmPassword);\n            const response = await axios.post(\n                `${baseURL}/sec/auth/changePassword`,\n                JSON.stringify({\n                    email: sessionStorage.getItem(\"EmailForgotPassword\"),\n                    new_password: confirmPassword,\n                    activation_code: sessionStorage.getItem(\"forgotpasswordotp\"),\n                }),\n            );\n            console.log(response?.data?.response?.message);\n            if (response?.data?.response?.message === \"PASSWORD_CHANGE_SUCCESS\") {\n                setShowSnack(true);\n                setResponseMessage(response?.data?.response?.message);\n                navigate(navigateionPath);\n            }\n            console.log(response);\n        } catch (error) {\n            setShowSnackError(true);\n            setError_responseMessage(error?.response?.data?.error);\n            console.log(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        navigate(\"/patientlogin\");\n    };\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar\n                isOpen={showSnack}\n                // actionLabel={\"action\"}\n                // handleAction={() => setShowSnack(true)}\n                message={responseMessage}\n                type=\"success\"\n            />\n            <CustomSnackBar\n                isOpen={showSnackError}\n                // actionLabel={\"action\"}\n                // handleAction={() => setShowSnack(true)}\n                message={error_responseMessage}\n                type=\"error\"\n            />\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <Box className=\"component-library\">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n\n                        <h2 className=\"text-center\">\n                            <strong>Please enter new password</strong>\n                        </h2>\n                    </Box>\n\n                    <div className=\"items \">\n                        <div className=\"field-center3\">\n                            {/* <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                               \n                            </Stack> */}\n\n                            <Stack spacing={3} alignItems=\"center\" flexDirection=\"column\">\n                                <CustomTextField\n                                    id={\"standard-helperText1\"}\n                                    label={\"New Password\"}\n                                    defaultValue={password}\n                                    helperText={\n                                        isDisabledButton\n                                            ? \"password does not match\"\n                                            : \"password matched\"\n                                    }\n                                    isValid={!isDisabledButton}\n                                    textcss={{\n                                        width: \"19em\",\n                                    }}\n                                    onInput={(event) => {\n                                        setPassword(event?.target?.value);\n                                        // console.log(event.target.value)\n                                        if (confirmPassword === event?.target?.value) {\n                                            // setConfirmPassword(event.target.value)\n                                            if (confirmPassword === \"\") {\n                                                setIsDisabledButton(true);\n                                                return;\n                                            }\n                                            setIsDisabledButton(false);\n                                        } else {\n                                            setIsDisabledButton(true);\n                                        }\n                                    }}\n                                />\n                                <CustomTextField\n                                    id={\"standard-helperText1\"}\n                                    label={\"Confirm Password\"}\n                                    defaultValue={confirmPassword}\n                                    helperText={\n                                        isDisabledButton\n                                            ? \"password does not match\"\n                                            : \"password matched\"\n                                    }\n                                    isValid={!isDisabledButton}\n                                    textcss={{\n                                        width: \"19em\",\n                                    }}\n                                    onInput={(event) => {\n                                        setConfirmPassword(event.target.value);\n                                        if (password === event?.target?.value) {\n                                            // setConfirmPassword(event.target.value)\n                                            if (confirmPassword === \"\") {\n                                                setIsDisabledButton(true);\n                                                return;\n                                            }\n                                            setIsDisabledButton(false);\n                                        } else {\n                                            setIsDisabledButton(true);\n                                        }\n                                    }}\n                                />\n                            </Stack>\n                        </div>\n                    </div>\n\n                    <CustomButton\n                        label={\n                            loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Continue\"\n                        }\n                        isTransaprent={false}\n                        isDisabled={loading || isDisabledButton}\n                        isElevated={false}\n                        handleClick={ChangePassword}\n                        buttonCss={{\n                            width: \"22em\",\n                            // height: \"3.5em\",\n                            padding: \"8px 16px\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n\n                            borderRadius: \"100px\",\n                            // marginLeft: \"-70px\",\n                            // marginTop: \"37px\",\n                        }}\n                    />\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default ForgotPasswordChange;\n","import axios from 'axios';\nimport { API_ENDPOINTS } from '../endpoints';\n\n/**\n * Country Service\n * \n * Handles all country-related API calls including:\n * - Fetching country dialing codes\n * - Getting country information\n * - Searching countries\n */\n\nclass CountryService {\n  constructor() {\n    this.baseURL = API_ENDPOINTS.MASTER_DATA.COUNTRIES;\n  }\n\n  /**\n   * Fetch all countries with dialing codes\n   * @returns {Promise<Object>} Countries data\n   */\n  async getCountries() {\n    try {\n      const response = await axios.get(this.baseURL);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching countries:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Search countries by name or code\n   * @param {string} query - Search query\n   * @returns {Promise<Array>} Filtered countries\n   */\n  async searchCountries(query) {\n    try {\n      const response = await axios.get(this.baseURL, {\n        params: { search: query }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error searching countries:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get country by ISO2 code\n   * @param {string} iso2Code - ISO2 country code\n   * @returns {Promise<Object>} Country data\n   */\n  async getCountryByCode(iso2Code) {\n    try {\n      const response = await axios.get(`${this.baseURL}/${iso2Code}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching country by code:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get country by dialing code\n   * @param {string} dialCode - Country dialing code\n   * @returns {Promise<Object>} Country data\n   */\n  async getCountryByDialCode(dialCode) {\n    try {\n      const response = await axios.get(this.baseURL, {\n        params: { dialCode: dialCode }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching country by dial code:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Transform API response to component-friendly format\n   * @param {Object} apiResponse - Raw API response\n   * @returns {Array} Transformed countries array\n   */\n  transformCountriesData(apiResponse) {\n    if (!apiResponse || !apiResponse.response) {\n      return [];\n    }\n\n    return Object.entries(apiResponse.response).map(([key, country]) => ({\n      code: `+${country.dialCode}`,\n      name: country.name,\n      iso2: country.iso2,\n      flag: this.getCountryFlag(country.iso2),\n      priority: country.priority || 0,\n      areaCodes: country.areaCodes || null,\n    }));\n  }\n\n  /**\n   * Get country flag emoji based on ISO2 country code\n   * @param {string} iso2Code - ISO2 country code\n   * @returns {string} Flag emoji\n   */\n  getCountryFlag(iso2Code) {\n    if (!iso2Code || iso2Code.length !== 2) {\n      return \"🌍\";\n    }\n\n    const codePoints = iso2Code\n      .toUpperCase()\n      .split('')\n      .map(char => 127397 + char.charCodeAt());\n\n    return String.fromCodePoint(...codePoints);\n  }\n\n  /**\n   * Get fallback countries for offline/error scenarios\n   * @returns {Array} Fallback countries data\n   */\n  getFallbackCountries() {\n    return [\n      {\n        code: \"+1\",\n        name: \"United States\",\n        iso2: \"US\",\n        flag: this.getCountryFlag(\"US\"),\n        priority: 0,\n        areaCodes: null,\n      },\n      {\n        code: \"+44\",\n        name: \"United Kingdom\",\n        iso2: \"GB\",\n        flag: this.getCountryFlag(\"GB\"),\n        priority: 1,\n        areaCodes: null,\n      },\n      {\n        code: \"+91\",\n        name: \"India\",\n        iso2: \"IN\",\n        flag: this.getCountryFlag(\"IN\"),\n        priority: 2,\n        areaCodes: null,\n      },\n      {\n        code: \"+86\",\n        name: \"China\",\n        iso2: \"CN\",\n        flag: this.getCountryFlag(\"CN\"),\n        priority: 3,\n        areaCodes: null,\n      },\n      {\n        code: \"+49\",\n        name: \"Germany\",\n        iso2: \"DE\",\n        flag: this.getCountryFlag(\"DE\"),\n        priority: 4,\n        areaCodes: null,\n      },\n    ];\n  }\n}\n\n// Create and export a singleton instance\nconst countryService = new CountryService();\nexport default countryService;\n\n// Also export the class for testing purposes\nexport { CountryService };\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    Box,\n    TextField,\n    MenuItem,\n    Select,\n    FormControl,\n    InputLabel,\n    InputAdornment,\n    CircularProgress,\n    Typography,\n    InputAdornment as MUIInputAdornment,\n} from \"@mui/material\";\nimport { KeyboardArrowDown } from \"@mui/icons-material\";\nimport countryService from \"../../api/services/countryService\";\nimport \"./CustomCountryCodeSelector.scss\";\n\nconst CustomCountryCodeSelector = ({\n    id,\n    label = \"Mobile Number\",\n    value = \"\",\n    onChange,\n    onInput,\n    helperText = \"Enter Valid Mobile Number\",\n    textcss = {},\n    isDisabled = false,\n    placeholder = \"Mobile number\",\n    defaultCountryCode = \"+1\",\n    defaultCountryName = \"United States\",\n    defaultCountryFlag = \"🇺🇸\",\n    error = false,\n    noSpacing = false, // New prop to disable default spacing\n    ...props\n}) => {\n    const [countries, setCountries] = useState(() => {\n        try {\n            return countryService.getFallbackCountries() || [];\n        } catch (error) {\n            console.error(\"Error initializing fallback countries:\", error);\n            return [];\n        }\n    });\n    const [selectedCountry, setSelectedCountry] = useState({\n        code: defaultCountryCode,\n        name: defaultCountryName,\n        flag: defaultCountryFlag,\n    });\n    const [mobileNumber, setMobileNumber] = useState(value);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    // Get country flag emoji based on ISO2 country code\n    const getCountryFlag = useCallback((iso2Code) => {\n        if (!iso2Code || iso2Code.length !== 2) {\n            return \"🌍\";\n        }\n        \n        // Convert ISO2 code to flag emoji using Unicode Regional Indicator Symbols\n        const codePoints = iso2Code\n            .toUpperCase()\n            .split('')\n            .map(char => 127397 + char.charCodeAt(0));\n        \n        return String.fromCodePoint(...codePoints);\n    }, []);\n\n    // Fetch countries data from API using centralized service\n    const fetchCountries = useCallback(async () => {\n        setIsLoading(true);\n        try {\n            const response = await countryService.getCountries();\n            const transformedCountries = countryService.transformCountriesData(response);\n            \n            // Validate that transformedCountries is an array and contains valid objects\n            if (Array.isArray(transformedCountries) && transformedCountries.length > 0) {\n                // Filter out any invalid country objects\n                const validCountries = transformedCountries.filter(country => \n                    country && \n                    typeof country === 'object' && \n                    country.name && \n                    country.code\n                );\n                \n                if (validCountries.length > 0) {\n                    setCountries(validCountries);\n                    \n                    // Set default country if not already set\n                    if (!selectedCountry.code || selectedCountry.code === defaultCountryCode) {\n                        const defaultCountry = validCountries.find(\n                            (country) => country.code === defaultCountryCode\n                        ) || validCountries[0];\n                        if (defaultCountry) {\n                            setSelectedCountry(defaultCountry);\n                        }\n                    }\n                } else {\n                    // If no valid countries, use fallback\n                    const fallbackCountries = countryService.getFallbackCountries();\n                    setCountries(fallbackCountries);\n                }\n            } else {\n                // If response is invalid, use fallback\n                const fallbackCountries = countryService.getFallbackCountries();\n                setCountries(fallbackCountries);\n            }\n        } catch (error) {\n            console.error(\"Error fetching countries:\", error);\n            // Use fallback data from service\n            const fallbackCountries = countryService.getFallbackCountries();\n            setCountries(fallbackCountries);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [defaultCountryCode, selectedCountry.code]);\n\n    // Filter countries based on search query\n    const filteredCountries = useMemo(() => {\n        if (!searchQuery) return countries;\n        return countries.filter((country) => {\n            // Safely check if country and its properties exist\n            if (!country) return false;\n            const name = country.name || '';\n            const code = country.code || '';\n            return name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                   code.includes(searchQuery);\n        });\n    }, [countries, searchQuery]);\n\n    // Handle country selection\n    const handleCountrySelect = useCallback((country) => {\n        setSelectedCountry(country);\n        setIsDropdownOpen(false);\n        setSearchQuery(\"\");\n        \n        // Trigger onChange with the full mobile number including country code\n        const fullMobileNumber = country.code + mobileNumber;\n        if (onChange) {\n            onChange({\n                target: {\n                    value: fullMobileNumber,\n                    countryCode: country.code,\n                    countryName: country.name,\n                    countryFlag: country.flag,\n                }\n            });\n        }\n    }, [mobileNumber, onChange]);\n\n    // Handle mobile number input\n    const handleMobileNumberChange = useCallback((event) => {\n        const value = event.target.value;\n        setMobileNumber(value);\n        \n        // Trigger onChange with the full mobile number including country code\n        const fullMobileNumber = selectedCountry.code + value;\n        if (onChange) {\n            onChange({\n                target: {\n                    value: fullMobileNumber,\n                    countryCode: selectedCountry.code,\n                    countryName: selectedCountry.name,\n                    countryFlag: selectedCountry.flag,\n                }\n            });\n        }\n        \n        // Also trigger onInput if provided\n        if (onInput) {\n            onInput(event);\n        }\n    }, [selectedCountry, onChange, onInput]);\n\n    // Load countries on component mount\n    useEffect(() => {\n        fetchCountries();\n    }, [fetchCountries]);\n\n    // Update mobile number when value prop changes\n    useEffect(() => {\n        if (value !== mobileNumber) {\n            setMobileNumber(value);\n        }\n    }, [value, mobileNumber]);\n\n    return (\n        <Box className=\"country-code-selector\" sx={{ \n            width: \"100%\", \n            marginBottom: noSpacing ? 0 : \"1.5rem\", // Consistent spacing between fields\n            ...textcss \n        }}>\n            <Box sx={{ display: \"flex\", alignItems: \"flex-start\", gap: 1 }}>\n                {/* Country Code Selector */}\n                <FormControl \n                    variant=\"standard\" \n                    sx={{ \n                        minWidth: 30,\n                        \"& .MuiInput-root\": {\n                            height: \"72px\",\n                            borderBottom: \"1px solid rgba(0, 0, 0, 0.42)\",\n                            \"&:hover\": {\n                                borderBottom: \"2px solid rgba(0, 0, 0, 0.87)\",\n                            },\n                            \"&.Mui-focused\": {\n                                borderBottom: \"2px solid #1976d2\",\n                            }\n                        }\n                    }}\n                >\n                    <Select\n                        value={selectedCountry.code}\n                        onChange={(e) => {\n                            const country = countries.find(c => c.code === e.target.value);\n                            if (country) handleCountrySelect(country);\n                        }}\n                        onOpen={() => setIsDropdownOpen(true)}\n                        onClose={() => setIsDropdownOpen(false)}\n                        disabled={isDisabled}\n                        displayEmpty\n                        disableUnderline\n                        renderValue={(selected) => (\n                            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, px: 1 }}>\n                                <span>{selectedCountry.flag}</span>\n                                {/* <span>{selectedCountry.code}</span> */}\n                                {/* <KeyboardArrowDown sx={{ fontSize: 16 }} /> */}\n                            </Box>\n                        )}\n                        MenuProps={{\n                            PaperProps: {\n                                style: {\n                                    maxHeight: 300,\n                                    width: 300,\n                                },\n                            },\n                        }}\n                    >\n                        {/* Search Input */}\n                        <Box sx={{ p: 1, borderBottom: \"1px solid #e0e0e0\" }}>\n                            <TextField\n                                size=\"small\"\n                                placeholder=\"Search countries...\"\n                                value={searchQuery}\n                                onChange={(e) => setSearchQuery(e.target.value)}\n                                fullWidth\n                                variant=\"standard\"\n                                InputProps={{\n                                    disableUnderline: true,\n                                }}\n                            />\n                        </Box>\n                        \n                        {/* Loading State */}\n                        {isLoading && (\n                            <Box sx={{ display: \"flex\", justifyContent: \"center\", p: 2 }}>\n                                <CircularProgress size={20} />\n                            </Box>\n                        )}\n                        \n                        {/* Country Options */}\n                        {filteredCountries.map((country) => (\n                            <MenuItem \n                                key={country.id || country.code} \n                                value={country.code}\n                                sx={{ display: \"flex\", alignItems: \"center\", gap: 1, py: 1 }}\n                            >\n                                <span>{country.flag}</span>\n                                <Box sx={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}>\n                                    <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                                        {country.name}\n                                    </Typography>\n                                    <Typography variant=\"caption\" color=\"text.secondary\">\n                                        {country.code}\n                                    </Typography>\n                                </Box>\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n\n                {/* Mobile Number Input */}\n                <TextField\n                    id={id}\n                    label={label}\n                    value={mobileNumber}\n                    onChange={handleMobileNumberChange}\n                    onInput={onInput}\n                    placeholder={placeholder}\n                    helperText={helperText}\n                    error={error}\n                    disabled={isDisabled}\n                    variant=\"standard\"\n                    fullWidth\n                    InputProps={{\n                        startAdornment: (\n                            <MUIInputAdornment position=\"start\">\n                                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ px: 1 }}>\n                                    {selectedCountry.code}\n                                </Typography>\n                            </MUIInputAdornment>\n                        ),\n                    }}\n                    sx={{\n                        \"& .MuiInput-root\": {\n                            height: \"56px\",\n                        },\n                        // Red error styling when error prop is true\n                        \"& .MuiFormHelperText-root\": {\n                            color: error ? \"#d32f2f !important\" : \"inherit\"\n                        },\n                        \"& .MuiInput-root\": {\n                            height: \"56px\",\n                            \"&:before\": {\n                                borderBottom: error ? \"2px solid #d32f2f !important\" : \"1px solid rgba(0, 0, 0, 0.42)\"\n                            },\n                            \"&:hover:not(.Mui-disabled):before\": {\n                                borderBottom: error ? \"2px solid #d32f2f !important\" : \"2px solid rgba(0, 0, 0, 0.87)\"\n                            },\n                            \"&.Mui-focused:after\": {\n                                borderBottom: error ? \"2px solid #d32f2f !important\" : \"2px solid #1976d2\"\n                            }\n                        },\n                        \"& .MuiInputLabel-root\": {\n                            color: error ? \"#d32f2f !important\" : \"inherit\"\n                        }\n                    }}\n                    {...props}\n                />\n            </Box>\n        </Box>\n    );\n};\n\nCustomCountryCodeSelector.propTypes = {\n    id: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    onInput: PropTypes.func,\n    helperText: PropTypes.string,\n    textcss: PropTypes.object,\n    isDisabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    defaultCountryCode: PropTypes.string,\n    defaultCountryName: PropTypes.string,\n    defaultCountryFlag: PropTypes.string,\n    error: PropTypes.bool,\n    noSpacing: PropTypes.bool,\n};\n\nexport default CustomCountryCodeSelector;\n","import { useState, useCallback, useEffect } from 'react';\nimport { validateMobileNumber, getMobileHelperText, cleanMobileNumber } from '../utils/validationUtils';\n\n/**\n * Custom hook for mobile number validation with country code support\n * @param {string} initialCountryCode - Initial country code (default: \"+1\")\n * @param {number} debounceDelay - Debounce delay in milliseconds (default: 500)\n */\nexport const useMobileValidation = (initialCountryCode = \"+1\", debounceDelay = 500) => {\n    const [mobile, setMobile] = useState(\"\");\n    const [countryCode, setCountryCode] = useState(initialCountryCode);\n    const [countryName, setCountryName] = useState(\"United States\");\n    const [countryFlag, setCountryFlag] = useState(\"🇺🇸\");\n    const [validationErrors, setValidationErrors] = useState({\n        mobile: { isValid: true, message: \"\" }\n    });\n    const [validationTimer, setValidationTimer] = useState(null);\n\n    // Debounced validation function\n    const debouncedValidateMobile = useCallback((mobileValue, countryCodeValue) => {\n        if (validationTimer) {\n            clearTimeout(validationTimer);\n        }\n        \n        const timer = setTimeout(() => {\n            const mobileValidation = validateMobileNumber(mobileValue, countryCodeValue);\n            setValidationErrors(prev => ({\n                ...prev,\n                mobile: mobileValidation\n            }));\n        }, debounceDelay);\n        \n        setValidationTimer(timer);\n    }, [validationTimer, debounceDelay]);\n\n    // Cleanup timer on unmount\n    useEffect(() => {\n        return () => {\n            if (validationTimer) {\n                clearTimeout(validationTimer);\n            }\n        };\n    }, [validationTimer]);\n\n    // Handle country code change\n    const handleCountryCodeChange = useCallback((event) => {\n        const { countryCode: newCountryCode, countryName: newCountryName, countryFlag: newCountryFlag, value } = event.target;\n        \n        // Update country info\n        setCountryCode(newCountryCode);\n        setCountryName(newCountryName);\n        setCountryFlag(newCountryFlag);\n        \n        // Extract mobile number without country code\n        const mobileNumber = value.replace(newCountryCode, '');\n        setMobile(mobileNumber);\n        \n        // Validate mobile number with new country code\n        const mobileValidation = validateMobileNumber(mobileNumber, newCountryCode);\n        setValidationErrors(prev => ({\n            ...prev,\n            mobile: mobileValidation\n        }));\n    }, []);\n\n    // Handle mobile number input\n    const handleMobileInput = useCallback((event) => {\n        const mobileNumber = event.target.value;\n        setMobile(mobileNumber);\n        \n        // Use debounced validation for better UX\n        debouncedValidateMobile(mobileNumber, countryCode);\n    }, [debouncedValidateMobile, countryCode]);\n\n    // Validate mobile number immediately (for form submission)\n    const validateMobile = useCallback((mobileValue = mobile, countryCodeValue = countryCode) => {\n        const mobileValidation = validateMobileNumber(mobileValue, countryCodeValue);\n        setValidationErrors(prev => ({\n            ...prev,\n            mobile: mobileValidation\n        }));\n        return mobileValidation;\n    }, [mobile, countryCode]);\n\n    // Reset validation\n    const resetValidation = useCallback(() => {\n        setValidationErrors({\n            mobile: { isValid: true, message: \"\" }\n        });\n    }, []);\n\n    // Reset all state\n    const resetAll = useCallback(() => {\n        setMobile(\"\");\n        setCountryCode(initialCountryCode);\n        setCountryName(\"United States\");\n        setCountryFlag(\"🇺🇸\");\n        setValidationErrors({\n            mobile: { isValid: true, message: \"\" }\n        });\n    }, [initialCountryCode]);\n\n    // Get helper text for the mobile field\n    const getHelperText = useCallback(() => {\n        return getMobileHelperText(\n            countryCode, \n            validationErrors.mobile.isValid, \n            validationErrors.mobile.message\n        );\n    }, [countryCode, validationErrors.mobile.isValid, validationErrors.mobile.message]);\n\n    // Check if form is valid for submission\n    const isFormValid = useCallback(() => {\n        return validationErrors.mobile.isValid && mobile && mobile.length >= 7;\n    }, [validationErrors.mobile.isValid, mobile]);\n\n    // Get cleaned mobile number\n    const getCleanMobileNumber = useCallback(() => {\n        return cleanMobileNumber(mobile);\n    }, [mobile]);\n\n    return {\n        // State\n        mobile,\n        countryCode,\n        countryName,\n        countryFlag,\n        validationErrors,\n        \n        // Setters\n        setMobile,\n        setCountryCode,\n        setCountryName,\n        setCountryFlag,\n        \n        // Handlers\n        handleCountryCodeChange,\n        handleMobileInput,\n        \n        // Validation functions\n        validateMobile,\n        resetValidation,\n        resetAll,\n        \n        // Utility functions\n        getHelperText,\n        isFormValid,\n        getCleanMobileNumber,\n        \n        // Computed values\n        isMobileValid: validationErrors.mobile.isValid,\n        mobileErrorMessage: validationErrors.mobile.message,\n        canSubmit: isFormValid()\n    };\n};\n\nexport default useMobileValidation;\n","import React, { useState } from \"react\";\nimport \"./LoginWithOTP.scss\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CustomTextField from \"../../components/CustomTextField\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport CustomCountryCodeSelector from \"../../components/CustomCountryCodeSelector\";\nimport { baseURL } from \"../../constants/const\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\nimport { useMobileValidation } from \"../../hooks/useMobileValidation\";\n\nconst LoginWithOtp = () => {\n    const navigate = useNavigate();\n    const typeOfUser = localStorage.getItem(\"signUp\");\n    const [loading, setLoading] = useState(false);\n    const [snackbar, setSnackbar] = useState({\n        isOpen: false,\n        message: \"\",\n        type: \"success\",\n    });\n    \n    // Use the centralized mobile validation hook\n    const {\n        mobile,\n        countryCode,\n        countryName,\n        countryFlag,\n        validationErrors,\n        handleCountryCodeChange,\n        handleMobileInput,\n        validateMobile,\n        getHelperText,\n        isFormValid,\n        getCleanMobileNumber\n    } = useMobileValidation(\"+1\", 500);\n\n    const roleID =\n        typeOfUser === \"super_admin\"\n            ? 1\n            : typeOfUser === \"hcf_admin\"\n            ? 2\n            : typeOfUser === \"doctor\"\n            ? 3\n            : typeOfUser === \"diagnostic_center\"\n            ? 4\n            : typeOfUser === \"patient\"\n            ? 5\n            : typeOfUser === \"clinic\"\n            ? 6\n            : null;\n\n    // Debug logging\n    console.log(\"=== MOBILE LOGIN ROLE DEBUG ===\");\n    console.log(\"typeOfUser from localStorage:\", typeOfUser);\n    console.log(\"Calculated roleID:\", roleID);\n    console.log(\"All localStorage keys:\", Object.keys(localStorage));\n\n    const roleRoutes = {\n        1: { path: \"/admindashboard\" },\n        2: { path: \"/hcfadminsignup\" },\n        3: { path: \"/doctorsignup\" },\n        4: { path: \"/diagnostCenterDashboard\" },\n        5: { path: \"/patientcompleteprofile\" },\n        6: { path: \"/clinicdoctorcompleteprofile\" },\n    };\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Check if role is determined correctly\n        if (!roleID) {\n            setSnackbar({\n                isOpen: true,\n                message: \"Role not determined. Please go back and select your role first.\",\n                type: \"error\",\n            });\n            return;\n        }\n\n        // Validate mobile number with current country code\n        const mobileValidation = validateMobile();\n\n        // Check if validation passes\n        if (!mobileValidation.isValid) {\n            setSnackbar({\n                isOpen: true,\n                message: mobileValidation.message,\n                type: \"error\",\n            });\n            return;\n        }\nconsole.log(\"mobile\", mobile, \"countryCode\", countryCode, \"countryName\", countryName, \"roleID\", roleID);\n        try {\n            setLoading(true);\n            const response = await axios.post(`${baseURL}/sec/auth/login`, {\n                mobile,\n                dialing_code: countryCode,\n                country_name: countryName,\n                login_with_email: false,\n                role_id: roleID,\n            });\n\n            const resData = response?.data?.response;\n\n            if (resData?.message === \"ACTIVATION_CODE_SENT\") {\n                sessionStorage.setItem(\"login_mobile\", mobile);\n                sessionStorage.setItem(\"login_country_code\", countryCode);\n                sessionStorage.setItem(\"login_country_name\", countryName);\n                navigate(\"/loginwithotpverify\");\n            } else if (resData?.body === \"INCOMPLETE_PROFILE\") {\n                localStorage.setItem(\"login_Email\", resData.email);\n                localStorage.setItem(\"login_mobile\", resData.mobile);\n                localStorage.setItem(\"login_country_code\", resData.countryCode);\n                localStorage.setItem(\"login_country_name\", resData.countryName);\n                const roleInfo = roleRoutes[roleID];\n                if (roleInfo?.path) {\n\n                    navigate(roleInfo.path);\n                } else {\n                    setSnackbar({\n                        isOpen: true,\n                        message: \"Unknown role. Cannot continue.\",\n                        type: \"error\",\n                    });\n                }\n            } else if (resData?.message === \"INVALID_USER\") {\n                setSnackbar({\n                    isOpen: true,\n                    message: \"This mobile number is not registered. Please sign up first.\",\n                    type: \"error\",\n                });\n            } else {\n                setSnackbar({\n                    isOpen: true,\n                    message: \"Login failed. Please try again.\",\n                    type: \"error\",\n                });\n            }\n        } catch (error) {\n            console.error(error);\n            setSnackbar({\n                isOpen: true,\n                message: error?.response?.data?.error || \"Something went wrong.\",\n                type: \"error\",\n            });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <Box className=\"form-container\">\n                <div className=\"image-holder\" />\n                <CustomSnackBar\n                    isOpen={snackbar.isOpen}\n                    message={snackbar.message}\n                    type={snackbar.type}\n                    // handleClose={() => setSnackbar({ ...snackbar, open: false })}\n                />\n                <Box className=\"component-library\">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n                        <h2 className=\"text-center\">\n                            <strong>Please enter Mobile Number</strong>\n                        </h2>\n                        {roleID && (\n                            <Typography \n                                variant=\"body2\" \n                                sx={{ \n                                    color: \"#666\", \n                                    marginBottom: \"20px\",\n                                    textAlign: \"center\"\n                                }}\n                            >\n                                Logging in as: {typeOfUser?.replace('_', ' ').toUpperCase()}\n                            </Typography>\n                        )}\n                        {!roleID && (\n                            <Typography \n                                variant=\"body2\" \n                                sx={{ \n                                    color: \"#e72b49\", \n                                    marginBottom: \"20px\",\n                                    textAlign: \"center\"\n                                }}\n                            >\n                                ⚠️ Role not determined. Please go back and select your role first.\n                            </Typography>\n                        )}\n\n                        <CustomCountryCodeSelector\n                            id=\"mobile-input\"\n                            label=\"Mobile Number\"\n                            value={mobile || \"\"}\n                            onChange={handleCountryCodeChange}\n                            onInput={handleMobileInput}\n                            helperText={getHelperText()}\n                            error={!validationErrors.mobile.isValid && validationErrors.mobile.message !== \"\"}\n                            placeholder=\"Mobile number\"\n                            textcss={{ width: \"19em\" }}\n                            defaultCountryCode=\"+1\"\n                            defaultCountryName=\"United States\"\n                            defaultCountryFlag=\"🇺🇸\"\n                        />\n\n                        <CustomButton\n                            label={loading ? \"Sending OTP...\" : \"Continue\"}\n                            isTransaprent={false}\n                            isDisabled={\n                                loading || \n                                !roleID ||\n                                !validationErrors.mobile.isValid || \n                                !mobile || \n                                mobile.length < 7\n                            }\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={{\n                                width: \"22em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                borderRadius: \"100px\",\n                                marginTop: \"35px\",\n                                opacity: (!roleID || !validationErrors.mobile.isValid || !mobile || mobile.length < 7) ? 0.6 : 1,\n                                transition: \"opacity 0.3s ease\",\n                            }}\n                        />\n                    </Box>\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default LoginWithOtp;\n","import React, { useState } from \"react\";\nimport \"./LoginWithOTPVerify.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport CustomOTPInput from \"../../components/OTPInput\";\nimport { Box } from \"@mui/material\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\nimport { baseURL } from \"../../constants/const\";\nimport axios from \"axios\";\n\nconst LoginWithOtpVerify = () => {\n    const navigate = useNavigate();\n    const [otp, setOtp] = useState(\"\");\n    const [snackbar, setSnackbar] = useState({ isOpen: false, message: \"\", type: \"error\" });\n    const [loading, setLoading] = useState(false);\n\n    const mobile = sessionStorage.getItem(\"login_mobile\");\n\n    const showSnackbar = (message, type = \"error\") => {\n        setSnackbar({ isOpen: true, message, type });\n    };\n\n    const handleLoginRedirect = (role_id, data) => {\n        const { access_token, suid, email, profile_picture } = data;\n\n        localStorage.setItem(\"access_token\", access_token);\n        localStorage.setItem(\"profile\", profile_picture);\n\n        const roleRoutes = {\n            1: { path: \"/admindashboard\", emailKey: \"admin_Email\", uidKey: \"admin_uid\" },\n            2: { path: \"/hcfadmin/notification\", emailKey: \"hcfadmin_Email\", uidKey: \"hcfadmin_suid\" },\n            3: { path: \"/doctordashboard\", emailKey: \"doctorEmail\", uidKey: \"doctor_suid\" },\n            4: { path: \"/diagnostCenterDashboard/notification\", emailKey: \"diagnostic_Email\", uidKey: \"diagnostic_suid\" },\n            5: { path: \"/patientdashboard\", emailKey: \"patientEmail\", uidKey: \"patient_suid\" },\n            6: { path: \"/clinicDashboard/clinicbodydashboard/clinirequests\", emailKey: \"clinicEmail\", cookieEmailkey: \"clinicEmail\", uidKey: \"clinic_suid\" },\n        };\n\n        const roleInfo = roleRoutes[role_id];\n        if (!roleInfo) {\n            showSnackbar(\"Unknown role. Please contact support.\");\n            return;\n        }\n\n        localStorage.setItem(roleInfo.emailKey, email);\n        localStorage.setItem(roleInfo.uidKey, suid);\n        Cookies.set(roleInfo.emailKey, email);\n        Cookies.set(roleInfo.uidKey, suid);\n\n        navigate(roleInfo.path, { replace: true });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (otp.length !== 6 || !/^[A-Za-z0-9]{6}$/.test(otp)) {\n            showSnackbar(\"Please enter a valid 6-digit OTP.\");\n            return;\n        }\n\n        try {\n            setLoading(true);\n            const response = await axios.post(`${baseURL}/sec/auth/verifyOtp`, {\n                mobile,\n                otp_code: otp,\n            });\n\n            if (response.status === 200) {\n                const resData = response.data?.response;\n                const message = resData?.message;\n                const role_id = resData?.role_id;\nconsole.log(\"resData verify otp\", resData);\n                if (message === \"ACTIVATION_CODE_EXPIRED\") {\n                    showSnackbar(\"Your OTP has expired. Please request a new one.\");\n                } else if (message === \"INVALID_OTP\") {\n                    showSnackbar(\"Invalid OTP. Please try again.\");\n                } else if (message === \"INCOMPLETE_PROFILE\") {\n                    // Store email and suid based on role\n                    localStorage.setItem(\"login_Email\", resData.email);\n                    localStorage.setItem(\"email\", resData.email);\n                    localStorage.setItem(\"mobile\", resData.mobile);\n                    \n                    // Store dialing code from sessionStorage (set during mobile login)\n                    const dialingCode = sessionStorage.getItem(\"login_country_code\");\n                    if (dialingCode) {\n                        localStorage.setItem(\"login_country_code\", dialingCode);\n                    }\n                    \n                    console.log(\"resData.mobile\", resData.mobile, resData.email, resData.suid);\n                    console.log(\"Stored dialing code:\", dialingCode);\n                    \n                    if(resData.mobile){\n                        if (role_id === 3) { // Doctor\n                            localStorage.setItem(\"doctor_suid\", resData.suid);\n                            navigate(\"/doctorsignup\");\n                        } else if (role_id === 2) { // HCF Admin\n                            localStorage.setItem(\"hcfadmin_suid\", resData.suid);\n                            navigate(\"/hcfadminsignup\");\n                        } else if (role_id === 4) { // Diagnostic Center\n                            localStorage.setItem(\"diagnostic_suid\", resData.suid);\n                            navigate(\"/diagnostCenterSignup\");\n                        } else if (role_id === 5) { // Patient\n                            localStorage.setItem(\"patient_suid\", resData.suid);\n                            navigate(\"/completeprofile\");\n                        } else if (role_id === 6) { // Clinic\n                            localStorage.setItem(\"clinic_suid\", resData.suid);\n                            navigate(\"/diagnostClinicSignup\");\n                        } else {\n                            navigate(\"/completeprofile\");\n                        }\n                    }\nif(resData.email)\n{\n    if (role_id === 3) { // Doctor\n        localStorage.setItem(\"doctor_suid\", resData.suid);\n        navigate(\"/doctorsignup\");\n    } else if (role_id === 2) { // HCF Admin\n        localStorage.setItem(\"hcfadmin_suid\", resData.suid);\n        navigate(\"/hcfadminsignup\");\n    } else if (role_id === 4) { // Diagnostic Center\n        localStorage.setItem(\"diagnostic_suid\", resData.suid);\n        navigate(\"/diagnostCenterSignup\");\n    } else if (role_id === 5) { // Patient\n        localStorage.setItem(\"patient_suid\", resData.suid);\n        navigate(\"/completeprofile\");\n    } else if (role_id === 6) { // Clinic\n        localStorage.setItem(\"clinic_suid\", resData.suid);\n        navigate(\"/diagnostClinicSignup\");\n    } else {\n        navigate(\"/completeprofile\");\n    }\n}                    // Store role-specific data\n                 \n                } else if (resData.access_token) {\n                    handleLoginRedirect(role_id, resData);\n                } else {\n                    showSnackbar(resData?.message || \"Something went wrong.\");\n                }\n            }\n        } catch (error) {\n            console.error(\"OTP verification error:\", error);\n            const errorMsg = error?.response?.data?.error || \"Something went wrong.\";\n            showSnackbar(errorMsg);\n        } finally {\n            setLoading(false);\n        }\n    };\n    const handleResendCode = async () => {\n        try {\n            await axios.post(`${baseURL}/sec/auth/resendCode`, { mobile: mobile });\n            showSnackbar(\"OTP has been Resent to your mobile number.\", \"success\");\n\n        } catch (error) {\n            console.error(\"Resend OTP failed:\", error?.response?.data || error);\n            showSnackbar(\"Resend OTP failed!\", \"error\");\n\n        }\n    };\n    return (\n        <div className=\"register-photo\">\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <Box id=\"container-2\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                    <Box id=\"container-2-inner\">\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                            <h2 className=\"text-center\"><strong>Please enter OTP</strong></h2>\n                        </div>\n\n                        <Box id=\"otp-box-container\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                            <CustomOTPInput\n                                value={otp}\n                                onChange={setOtp}\n                                numInputs={6}\n                                placeholder=\"*\"\n                            />\n\n                            <p>The OTP has been sent to - {mobile || \"Unknown\"}</p>\n\n                            <CustomButton\n                                label={loading ? \"Please wait...\" : \"Continue\"}\n                                isTransaprent={false}\n                                isDisabled={loading}\n                                isElevated={false}\n                                handleClick={handleSubmit}\n                                buttonCss={{\n                                    width: \"18em\",\n                                    padding: \"8px 16px\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    borderRadius: \"100px\",\n                                    marginTop: \"20px\",\n                                }}\n                            />\n\n                            <div\n                                className=\"resend-otp\"\n                                onClick={handleResendCode}\n                                style={{\n                                    marginTop: \"1rem\",\n                                    cursor: \"pointer\",\n                                    fontWeight: 500,\n                                }}\n                            >\n                                Resend Code\n                            </div>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n\n            <CustomSnackBar\n                isOpen={snackbar.isOpen}\n                message={snackbar.message}\n                type={snackbar.type}\n                handleClose={() => setSnackbar((prev) => ({ ...prev, isOpen: false }))}\n            />\n        </div>\n    );\n};\n\nexport default LoginWithOtpVerify;\n","// import React from 'react'\nimport React, { useEffect, useState } from \"react\";\nimport \"./SignupPage.scss\";\nimport { Box, colors, Stack } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CustomTextField from \"../../../components/CustomTextField\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport CustomCountryCodeSelector from \"../../../components/CustomCountryCodeSelector\";\nimport { useMobileValidation } from \"../../../hooks/useMobileValidation\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport qs from \"qs\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport { numberRegex, baseURL, emailRegex, passwordRegex } from \"../../../constants/const\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\n\nconst patientsignup = () => {\n    const [showPassword, setShowPassword] = useState(true);\n    const [showPasswordConfirm, setShowPasswordConfirm] = useState(true);\n    const [password, setPassword] = useState();\n    const [confirmPassword, setConfirmPassword] = useState();\n    // State for who is registering\n    const [module, setModule] = useState();\n    const [moduleName, setModuleName] = useState();\n    const [submitButtonEnable, setSubmitButtonEnable] = useState(true);\n    const typeOfUser = localStorage.getItem(\"signUp\");\n    const [snackbarState, setSnackbarState] = useState({\n        open: false,\n        message: \"\",\n        type: \"success\", // success, error, warning, etc.\n    });\n    \n    // Use the centralized mobile validation hook\n    const {\n        mobile,\n        countryCode,\n        countryName,\n        countryFlag,\n        validationErrors: mobileValidationErrors,\n        handleCountryCodeChange,\n        handleMobileInput,\n        validateMobile,\n        getHelperText,\n        isFormValid: isMobileFormValid,\n        getCleanMobileNumber\n    } = useMobileValidation(\"+1\", 500);\n    \n    // Validation states for other fields\n    const [validationErrors, setValidationErrors] = useState({\n        email: { isValid: true, message: \"\" },\n        password: { isValid: true, message: \"\" },\n        confirmPassword: { isValid: true, message: \"\" }\n    });\n\n    const navigateToLogin =\n        typeOfUser === \"super_admin\"\n            ? \"/superadminlogin\"\n            : typeOfUser === \"hcf_admin\"\n            ? \"/hcfadminlogin\"\n            : typeOfUser === \"doctor\"\n            ? \"/doctorlogin\"\n            : typeOfUser === \"diagnostic_center\"\n            ? \"/diagnostcenterlogin\"\n            : typeOfUser === \"patient\"\n            ? \"/patientlogin\"\n            : typeOfUser === \"clinic\"\n            ? \"/diagnostcliniclogin\"\n            : null;\n\n    const roleID =\n        typeOfUser === \"super_admin\"\n            ? 1\n            : typeOfUser === \"hcf_admin\"\n            ? 2\n            : typeOfUser === \"doctor\"\n            ? 3\n            : typeOfUser === \"diagnostic_center\"\n            ? 4\n            : typeOfUser === \"patient\"\n            ? 5\n            : typeOfUser === \"clinic\"\n            ? 6\n            : null;\n    // console.log(`Role ID : ${roleID}`);\n    // Need to change the role id based on the user type to register the user\n    const [data, setData] = useState({\n        email: null,\n        mobile: null,\n        password: null,\n        role_id: roleID,\n        dialing_code: \"+1\",\n        country_name: \"United States\",\n    });\n\n    // const [isloading , setIsloading] = useState(false);\n    // console.log(\"Send Data\",JSON.stringify(data));\n    // useNavigate hook for navigate\n\n    const navigate = useNavigate();\n    console.log(\"data : \", data);\n\n    // Validation functions\n    const validateEmail = (email) => {\n        if (!email) {\n            return { isValid: true, message: \"\" };\n        }\n        if (!emailRegex.test(email)) {\n            return { isValid: false, message: \"Enter Valid Email Address\" };\n        }\n        return { isValid: true, message: \"\" };\n    };\n\n    // Mobile validation is now handled by the useMobileValidation hook\n\n    const validatePassword = (password) => {\n        if (!password) {\n            return { isValid: true, message: \"\" };\n        }\n        if (!passwordRegex.test(password)) {\n            return { isValid: false, message: \"Password must have at least 8 characters, 1 uppercase, 1 lowercase, 1 number & 1 special character\" };\n        }\n        return { isValid: true, message: \"\" };\n    };\n\n    const validateConfirmPassword = (confirmPassword, originalPassword) => {\n        if (!confirmPassword) {\n            return { isValid: true, message: \"\" };\n        }\n        if (confirmPassword !== originalPassword) {\n            return { isValid: false, message: \"Passwords do not match\" };\n        }\n        return { isValid: true, message: \"\" };\n    };\n\n    // Country code change is now handled by the useMobileValidation hook\n    // We just need to update the data state when mobile changes\n    const handleMobileDataUpdate = (mobileValue, countryCodeValue, countryNameValue) => {\n        setData(prevData => ({\n            ...prevData,\n            mobile: mobileValue,\n            dialing_code: countryCodeValue,\n            country_name: countryNameValue,\n        }));\n    };\n\n    const fetchData = async () => {\n        setSnackbarState({\n            open: true,\n            message: \"Please wait while we are Registering your Details!\",\n            type: \"Info\",\n        });\n        try {\n            console.log(\"Data-\", data);\n            const response = await axios.post(`${baseURL}/sec/auth/register`, JSON.stringify(data));\n            console.log(\"Response Received\", response);\n            setSnackbarState({\n                open: true,\n                message: \"Registered successfully!\",\n                type: \"success\",\n            });\n            Cookies.set(\"email\", data?.email);\n            navigate(\"/emailVerification\");\n        } catch (error) {\n            console.log(error);\n            console.log(error?.response?.request?.status);\n            setSnackbarState({\n                open: true,\n                message: error.response?.data?.message || \"Something went wrong.\",\n                type: \"error\",\n            });\n            // if (error?.response?.request?.status === 403) {\n            //     alert(error?.response?.data?.error);\n            // }\n\n            // navigate(\"/patientverification\");\n        }\n    };\n\n    useEffect(() => {\n        const moduleType = localStorage.getItem(\"signUp\");\n        setModule(moduleType);\n        const NameOfModule =\n            moduleType === \"patient\"\n                ? \"Patient\"\n                : moduleType === \"doctor\"\n                ? \"Doctor\"\n                : moduleType === \"super_admin\"\n                ? \"Super Admin\"\n                : moduleType === \"diagnostic_center\"\n                ? \"Diagnostic Center\"\n                : moduleType === \"clinic\"\n                ? \"Clinic\"\n                : moduleType === \"hcf_admin\"\n                ? \"HCF Admin\"\n                : null;\n\n        setModuleName(NameOfModule);\n    }, []);\n\n    // Sync mobile data with the validation hook\n    useEffect(() => {\n        handleMobileDataUpdate(mobile, countryCode, countryName);\n    }, [mobile, countryCode, countryName]);\n\n    // useEffect(() => {\n    //     if(isloading === true){\n    //         fetchData();\n    //     }\n    // } ,[isloading]);\n\n    // from here\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        // Validate mobile number\n        const mobileValidation = validateMobile();\n        \n        // Check if all validations pass\n        const allValid = Object.values(validationErrors).every(error => error.isValid) && mobileValidation.isValid;\n        \n        if (!allValid) {\n            setSnackbarState({\n                open: true,\n                message: \"Please fix all validation errors before submitting\",\n                type: \"error\",\n            });\n            return;\n        }\n        \n        // Check if all required fields are filled\n        if (!data.email || !data.mobile || !data.password) {\n            setSnackbarState({\n                open: true,\n                message: \"Please fill in all required fields\",\n                type: \"error\",\n            });\n            return;\n        }\n        \n        fetchData();\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n                <CustomSnackBar\n                    isOpen={snackbarState.open}\n                    message={snackbarState.message}\n                    hideDuration={4000}\n                    type={snackbarState.type}\n                />\n                <Box className=\"component-library \">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n\n                        <h2 className=\"text-center\">\n                            <strong>{`${moduleName} `} Sign Up</strong>\n                        </h2>\n                    </Box>\n                    <CustomCountryCodeSelector\n                        id={\"mobile-number-with-country-code\"}\n                        label={\"\"}\n                        value={mobile || \"\"}\n                        helperText={getHelperText()}\n                        error={!mobileValidationErrors.mobile.isValid && mobileValidationErrors.mobile.message !== \"\"}\n                        onChange={handleCountryCodeChange}\n                        onInput={handleMobileInput}\n                        textcss={{\n                            width: \"19.5em\",\n                        }}\n                        defaultCountryCode=\"+1\"\n                        defaultCountryName=\"United States\"\n                        defaultCountryFlag=\"🇺🇸\"\n                    />\n\n                    <CustomTextField\n                        id={\"standard-helperText1\"}\n                        label={\"Email Address\"}\n                        defaultValue={data.email}\n                        helperText={validationErrors.email.isValid ? \"\" : validationErrors.email.message}\n                        error={!validationErrors.email.isValid && validationErrors.email.message !== \"\"}\n                        // Debug logging\n                        // console.log(\"Email error state:\", !validationErrors.email.isValid && validationErrors.email.message !== \"\")\n                        // isValid\n                        onChange={(event) => {\n                            const email = event?.target?.value;\n                            const emailValidation = validateEmail(email);\n                            console.log(\"Email validation:\", emailValidation); // Debug log\n                            setValidationErrors(prev => ({\n                                ...prev,\n                                email: emailValidation\n                            }));\n                            \n                            const copy = { ...data, email: email };\n                            setData(copy);\n                        }}\n                        textcss={{\n                            width: \"19.5em\",\n                            // height: \"56px\",\n                        }}\n                    />\n\n                    <CustomTextField\n                        id={\"standard-helperText1\"}\n                        label={\"Enter Password\"}\n                        defaultValue={password}\n                        helperText={validationErrors.password.isValid ? \"\" : validationErrors.password.message}\n                        error={!validationErrors.password.isValid && validationErrors.password.message !== \"\"}\n                        type={showPassword ? \"password\" : \"text\"}\n                        // isValid\n                        onInput={(event) => {\n                            const passwordValue = event.target.value;\n                            setPassword(passwordValue);\n                            \n                            // Validate password\n                            const passwordValidation = validatePassword(passwordValue);\n                            setValidationErrors(prev => ({\n                                ...prev,\n                                password: passwordValidation\n                            }));\n\n                            // Check if passwords match\n                            if (passwordValue === confirmPassword) {\n                                console.log(\"password matched\");\n                                setSubmitButtonEnable(false);\n                                setData({ ...data, password: passwordValue });\n                            } else {\n                                console.log(\"password does not match\");\n                                setSubmitButtonEnable(true);\n                            }\n                        }}\n                        inputType={showPassword ? \"password\" : \"text\"}\n                        textcss={{\n                            width: \"19.5em\",\n                            // height: \"56px\",\n                        }}\n                        rightIcon={\n                            showPassword ? (\n                                <VisibilityIcon\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => setShowPassword(false)}\n                                />\n                            ) : (\n                                <VisibilityOffIcon\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => setShowPassword(true)}\n                                />\n                            )\n                        }\n                    />\n\n                    <CustomTextField\n                        id={\"standard-helperText1\"}\n                        label={\"Confirm Password\"}\n                        defaultValue={data.password}\n                        helperText={validationErrors.confirmPassword.isValid ? \"\" : validationErrors.confirmPassword.message}\n                        error={!validationErrors.confirmPassword.isValid && validationErrors.confirmPassword.message !== \"\"}\n                        type={showPasswordConfirm ? \"password\" : \"text\"}\n                        // isValid\n                        onInput={(event) => {\n                            const confirmPasswordValue = event.target.value;\n                            setConfirmPassword(confirmPasswordValue);\n                            \n                            // Validate confirm password\n                            const confirmPasswordValidation = validateConfirmPassword(confirmPasswordValue, password);\n                            setValidationErrors(prev => ({\n                                ...prev,\n                                confirmPassword: confirmPasswordValidation\n                            }));\n\n                            if (password === confirmPasswordValue) {\n                                console.log(\"password matched\");\n                                setSubmitButtonEnable(false);\n                                setData({ ...data, password: confirmPasswordValue });\n                            } else {\n                                console.log(\"password does not match\");\n                                setSubmitButtonEnable(true);\n                            }\n                        }}\n                        inputType={confirmPassword ? \"password\" : \"text\"}\n                        textcss={{\n                            width: \"19.5em\",\n                            // height: \"56px\",\n                        }}\n                        rightIcon={\n                            showPasswordConfirm ? (\n                                <VisibilityIcon\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => setShowPasswordConfirm(false)}\n                                />\n                            ) : (\n                                <VisibilityOffIcon\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => setShowPasswordConfirm(true)}\n                                />\n                            )\n                        }\n                    />\n\n                    <CustomButton\n                        label={\"Continue\"}\n                        isTransaprent={false}\n                        isDisabled={submitButtonEnable || !isMobileFormValid()}\n                        isElevated={false}\n                        handleClick={handleSubmit}\n                        buttonCss={{\n                            width: \"22em\",\n                            // height: \"3.5em\",\n                            padding: \"8px 16px\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            borderRadius: \"100px\",\n                            marginTop: \"35px\",\n                        }}\n                    />\n                    <div className=\"login\">\n                        I have an account &nbsp;\n                        <Link to={navigateToLogin} className=\"link\">\n                            Log In\n                        </Link>\n                    </div>\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default patientsignup;\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport \"./patientcompleteprofile.scss\";\nimport Typography from \"@mui/material/Typography\";\nimport { TextField } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomTextField from \"../../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport { baseURL } from \"../../../constants/const\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\nimport ClassicFrame from \"../../../static/images/DrImages/Undraw.png\";\nimport ImageFrame from \"../../../static/images/DrImages/Frame1.png\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport { getCurrentUser, getCurrentUserId, getCurrentRoleId, getCurrentUserEmail } from \"../../../utils/jwtUtils\";\n\nconst steps = [\"\", \"\"];\n\nconst PatientCompleteProfile = () => {\n    const dropdownItems = [\"Male\", \"Female\", \"Others\"];\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const navigate = useNavigate();\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [value, setValue] = useState([null, null]);\n    const radioValues = [\"My self\"];\n    const [openSnackBar, setOpenSnackBar] = useState(false);\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n    const [snackBarType, setSnackBarType] = useState(\"success\");\n    const [countryValues, setCountryValue] = useState([]);\n    const [countryNames, setCountryNames] = useState([\"Please Wait\"]);\n    const [stateValue, setStateValue] = useState([]);\n    const [stateName, setStateName] = useState(\"\");\n    const [stateNames, setStateNames] = useState([\"Please Wait\"]);\n    const [cityValues, setCityValues] = useState([]);\n    const [cityNames, setCityNames] = useState([]);\n    const [selectedCountryFromDropDown, setSelectedCountryFromDropDown] = useState([]);\n    const [selectCityFromDropDown, setSelectCityFromDropDown] = useState([]);\n    const [citySelected, setCitySelected] = useState(\"\");\n    // Get user information from JWT token\n    const currentUser = getCurrentUser();\n    const userId = getCurrentUserId();\n    const roleId = getCurrentRoleId();\n    const userEmail = getCurrentUserEmail();\n    \n    console.log(\"Current user from JWT:\", currentUser);\n    console.log(\"User ID:\", userId, \"Role ID:\", roleId, \"Email:\", userEmail);\n    console.log(\"=== LOCALSTORAGE DEBUG ===\");\n    console.log(\"localStorage login_Email:\", localStorage.getItem(\"login_Email\"));\n    console.log(\"localStorage patient_Email:\", localStorage.getItem(\"patient_Email\"));\n    console.log(\"localStorage mobile:\", localStorage.getItem(\"mobile\"));\n    console.log(\"localStorage login_country_code:\", localStorage.getItem(\"login_country_code\"));\n    console.log(\"localStorage patient_suid:\", localStorage.getItem(\"patient_suid\"));\n    console.log(\"sessionStorage login_mobile:\", sessionStorage.getItem(\"login_mobile\"));\n    console.log(\"sessionStorage login_country_code:\", sessionStorage.getItem(\"login_country_code\"));\n\n    const [data, setData] = useState({\n        email: userEmail || localStorage.getItem(\"patient_Email\") || localStorage.getItem(\"login_Email\") || \"\",\n        mobile: localStorage.getItem(\"mobile\") || sessionStorage.getItem(\"login_mobile\") || \"\",\n        dialing_code: localStorage.getItem(\"login_country_code\") || sessionStorage.getItem(\"login_country_code\") || \"\",\n        user_id: userId,\n        role_id: roleId || 5, // Default to patient role\n        login_with_email: !localStorage.getItem(\"mobile\") && !sessionStorage.getItem(\"login_mobile\"), // true if no mobile data\n        first_name: null,\n        last_name: null,\n        middle_name: null,\n        added_by: \"self\",\n        gender: null,\n        DOB: null,\n        country_id: null,\n        state_id: null,\n        city_id: null,\n        street_address1: null,\n        street_address2: null,\n        zip_code: null,\n    });\n\n    const fetchData = async () => {\n        try {\n            // Ensure we have the required data for incomplete profiles\n            const patientSuid = localStorage.getItem(\"patient_suid\");\n            const patientEmail = localStorage.getItem(\"login_Email\") || localStorage.getItem(\"patient_Email\");\n            const patientMobile = localStorage.getItem(\"mobile\") || sessionStorage.getItem(\"login_mobile\");\n            const patientDialingCode = localStorage.getItem(\"login_country_code\") || sessionStorage.getItem(\"login_country_code\");\n            \n            // Clean up undefined values and ensure we have proper data\n            const cleanEmail = (data.email && data.email !== 'undefined') ? data.email : (patientEmail || \"\");\n            const cleanMobile = (data.mobile && data.mobile !== 'null') ? data.mobile : (patientMobile || \"\");\n            const cleanDialingCode = (data.dialing_code && data.dialing_code !== 'undefined') ? data.dialing_code : (patientDialingCode || \"\");\n            const cleanSuid = data.user_id || patientSuid;\n            \n            // Format the data for API submission\n            const formattedData = {\n                ...data,\n                suid: cleanSuid,\n                email: cleanEmail,\n                mobile: cleanMobile,\n                dialing_code: cleanDialingCode,\n                role_id: data.role_id || 5,\n                login_with_email: cleanMobile ? false : true, // false if mobile data exists\n                DOB: data.DOB ? new Date(data.DOB).toISOString().split('T')[0] : null, // Format date as YYYY-MM-DD\n            };\n            \n            console.log(\"=== PATIENT PROFILE UPDATE DEBUG ===\");\n            console.log(\"Original data:\", data);\n            console.log(\"Cleaned data:\");\n            console.log(\"- cleanEmail:\", cleanEmail);\n            console.log(\"- cleanMobile:\", cleanMobile);\n            console.log(\"- cleanDialingCode:\", cleanDialingCode);\n            console.log(\"- cleanSuid:\", cleanSuid);\n            console.log(\"Formatted data for API:\", formattedData);\n            console.log(\"Mobile data sources:\");\n            console.log(\"- localStorage mobile:\", localStorage.getItem(\"mobile\"));\n            console.log(\"- sessionStorage login_mobile:\", sessionStorage.getItem(\"login_mobile\"));\n            console.log(\"- localStorage login_country_code:\", localStorage.getItem(\"login_country_code\"));\n            console.log(\"- sessionStorage login_country_code:\", sessionStorage.getItem(\"login_country_code\"));\n            console.log(\"API Endpoint:\", `${baseURL}/sec/auth/updateProfile`);\n            \n            const response = await axiosInstance.post(\n                \"/sec/auth/updateProfile\",\n                formattedData,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Accept\": \"application/json\",\n                    },\n                }\n            );\n            \n            console.log(\"Profile update response:\", response);\n            setSnackBarMessage(\"Profile updated successfully!\");\n            setSnackBarType(\"success\");\n            setOpenSnackBar(true);\n            handleNext();\n        } catch (error) {\n            console.error(\"Profile update error:\", error);\n            setSnackBarMessage(\"Profile update failed. Please try again.\");\n            setSnackBarType(\"error\");\n            setOpenSnackBar(true);\n        }\n    };\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    console.log(\"Current form data:\", data);\n    console.log(\"=== JWT DEBUG INFO ===\");\n    console.log(\"Current user from JWT:\", currentUser);\n    console.log(\"User ID from JWT:\", userId);\n    console.log(\"Role ID from JWT:\", roleId);\n    console.log(\"Email from JWT:\", userEmail);\n    console.log(\"Access token in localStorage:\", localStorage.getItem(\"access_token\"));\n\n    useEffect(() => {\n        FetchCountryNames();\n        FetchStateNames();\n        \n        // Handle incomplete profile data from mobile login\n        const patientSuid = localStorage.getItem(\"patient_suid\");\n        const patientEmail = localStorage.getItem(\"login_Email\") || localStorage.getItem(\"patient_Email\");\n        const patientMobile = localStorage.getItem(\"mobile\") || sessionStorage.getItem(\"login_mobile\");\n        const patientDialingCode = localStorage.getItem(\"login_country_code\") || sessionStorage.getItem(\"login_country_code\");\n        \n        console.log(\"=== PATIENT PROFILE DATA EXTRACTION ===\");\n        console.log(\"patientSuid:\", patientSuid);\n        console.log(\"patientEmail:\", patientEmail);\n        console.log(\"patientMobile:\", patientMobile);\n        console.log(\"patientDialingCode:\", patientDialingCode);\n        console.log(\"All localStorage keys:\", Object.keys(localStorage));\n        console.log(\"All sessionStorage keys:\", Object.keys(sessionStorage));\n        \n        if (patientSuid || patientEmail || patientMobile) {\n            console.log(\"Updating data with incomplete profile information\");\n            setData(prevData => ({\n                ...prevData,\n                email: patientEmail || prevData.email || \"\",\n                mobile: patientMobile || prevData.mobile || \"\",\n                dialing_code: patientDialingCode || prevData.dialing_code || \"\",\n                role_id: 5, // Patient role\n                login_with_email: !patientMobile, // false if mobile data exists\n                user_id: patientSuid || prevData.user_id\n            }));\n        } else {\n            console.log(\"No incomplete profile data found, using defaults\");\n        }\n    }, []);\n\n    const FetchCountryNames = async () => {\n        let CountryValues = [];\n        let CountryName = [];\n        try {\n            const response = await axiosInstance(\"/sec/countries\");\n            for (let key in response?.data?.response) {\n                CountryValues.push(response?.data?.response[key]);\n                CountryName.push(response?.data?.response[key].country_name);\n            }\n            setCountryNames(CountryName);\n            setCountryValue(CountryValues);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const FetchStateNames = async (country_id) => {\n        let StateValues = [];\n        let StateName = [];\n        try {\n            const response = await axiosInstance(`/sec/states?country_id=${country_id}`);\n            for (let key in response?.data?.response) {\n                StateValues.push(response?.data?.response[key]);\n                StateName.push(response?.data?.response[key].state_name);\n            }\n            setStateValue(StateValues);\n            setStateNames(StateName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    // run the api call when there is change in country drop down\n    useEffect(() => {\n        FetchStateNames(selectedCountryFromDropDown[0]?.country_id);\n    }, [selectedCountryFromDropDown]);\n\n    const FetchCityNames = async (state_id) => {\n        let CityValues = [];\n        let cityName = [];\n        try {\n            const response = await axiosInstance(`/sec/cities?state_id=${state_id}`);\n            console.log(\"response city id : \", response);\n            for (let key in response?.data?.response) {\n                CityValues.push(response?.data?.response[key]);\n                cityName.push(response?.data?.response[key].city_name);\n            }\n            setCityValues(CityValues);\n            setCityNames(cityName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    // run the api to fetch the city details\n    useEffect(() => {\n        FetchCityNames(selectCityFromDropDown[0]?.state_id);\n    }, [selectCityFromDropDown]);\n\n    return (\n        <>\n            <Box sx={{ width: \"100%\" }}>\n                <CustomSnackBar\n                    isOpen={openSnackBar}\n                    type={snackBarType}\n                    message={snackBarMessage}\n                />\n                <div className=\"FrameBox1\">\n                    <Box\n                        // sx={{ borderRadius: \"8px\", width: \"100%\", height: \"100%\" }}\n                        component={\"img\"}\n                        src={ImageFrame}\n                    ></Box>\n                </div>\n\n                <div className=\"step-back\">\n                    <div className=\"back-btn\">\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1, color: \"red\" }}\n                        >\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"Stepper\">\n                        <Stepper\n                            activeStep={activeStep}\n                            style={{\n                                width: \"700px\",\n                            }}\n                        >\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                if (isStepOptional(index)) {\n                                }\n                                if (isStepSkipped(index)) {\n                                    stepProps.completed = false;\n                                }\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                        <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </div>\n                </div>\n                {activeStep === steps.length ? (\n                    <React.Fragment>\n                        <Box\n                            sx={{\n                                width: \"100%\",\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Box sx={{ textAlign: \"center\", mb: 4 }}>\n                                <Typography \n                                    sx={{ \n                                        mt: 2, \n                                        mb: 3,\n                                        fontSize: \"18px\",\n                                        color: \"#666\",\n                                        lineHeight: \"1.6\",\n                                        maxWidth: \"600px\",\n                                        margin: \"0 auto\"\n                                    }}\n                                >\n                                    We express our gratitude for your diligence in completing the\n                                    patient profile. Your attention to detail contributes\n                                    significantly to our records\n                                </Typography>\n                                <Box sx={{ mb: 3 }}>\n                                    <img \n                                        src={ClassicFrame} \n                                        alt=\"Success Illustration\" \n                                        style={{\n                                            maxWidth: \"300px\",\n                                            height: \"auto\",\n                                            margin: \"0 auto\",\n                                            display: \"block\"\n                                        }}\n                                    />\n                                </Box>\n                                <CustomButton\n                                    label=\"Click here to login\"\n                                    handleClick={() => navigate(\"/patientlogin\")}\n                                    buttonCss={{ \n                                        width: \"fit-content\",\n                                        padding: \"12px 32px\",\n                                        fontSize: \"16px\",\n                                        fontWeight: \"500\"\n                                    }}\n                                />\n                            </Box>\n                        </Box>\n                        {/* <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            <Button onClick={handleReset}>Reset</Button>\n                        </Box> */}\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Step {activeStep + 1} */}\n                            {activeStep === 0 ? (\n                                <>\n                                    <Box sx={{ \n                                        display: \"flex\", \n                                        justifyContent: \"center\", \n                                        alignItems: \"center\",\n                                        minHeight: \"60vh\"\n                                    }}>\n                                        <Box sx={{ \n                                            width: { xs: \"90%\", sm: \"80%\", md: \"60%\", lg: \"50%\" },\n                                            maxWidth: \"600px\"\n                                        }}>\n                                            <Box sx={{ mb: 4, textAlign: \"center\" }}>\n                                                <Typography\n                                                    sx={{\n                                                        fontFamily: \"Poppins, sans-serif\",\n                                                        fontSize: { xs: \"22px\", sm: \"25px\" },\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"1.2\",\n                                                        color: \"#333\",\n                                                        mb: 1\n                                                    }}\n                                                >\n                                                    Personal Information\n                                                </Typography>\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: \"14px\",\n                                                        color: \"#666\",\n                                                        fontFamily: \"Poppins, sans-serif\"\n                                                    }}\n                                                >\n                                                    Please provide your personal details\n                                                </Typography>\n                                            </Box>\n                                            <Box sx={{ \n                                                display: \"flex\", \n                                                flexDirection: { xs: \"column\", sm: \"row\" },\n                                                gap: { xs: 2, sm: 3 },\n                                                mb: 3\n                                            }}>\n                                                <TextField\n                                                    label=\"First Name\"\n                                                    variant=\"standard\"\n                                                    required\n                                                    sx={{\n                                                        flex: 1,\n                                                        \"& .MuiInputLabel-root\": {\n                                                            color: \"#787579\",\n                                                            fontFamily: \"Poppins, sans-serif\"\n                                                        },\n                                                        \"& .MuiInput-underline:before\": {\n                                                            borderBottomColor: \"#e0e0e0\"\n                                                        },\n                                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n                                                            borderBottomColor: \"#1976d2\"\n                                                        },\n                                                        \"& .MuiInput-underline:after\": {\n                                                            borderBottomColor: \"#1976d2\"\n                                                        }\n                                                    }}\n                                                    onInput={(event) =>\n                                                        setData({\n                                                            ...data,\n                                                            first_name: event?.target?.value,\n                                                        })\n                                                    }\n                                                />\n                                                <TextField\n                                                    label=\"Middle Name\"\n                                                    variant=\"standard\"\n                                                    sx={{\n                                                        flex: 1,\n                                                        \"& .MuiInputLabel-root\": {\n                                                            color: \"#787579\",\n                                                            fontFamily: \"Poppins, sans-serif\"\n                                                        },\n                                                        \"& .MuiInput-underline:before\": {\n                                                            borderBottomColor: \"#e0e0e0\"\n                                                        },\n                                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n                                                            borderBottomColor: \"#1976d2\"\n                                                        },\n                                                        \"& .MuiInput-underline:after\": {\n                                                            borderBottomColor: \"#1976d2\"\n                                                        }\n                                                    }}\n                                                    onInput={(event) =>\n                                                        setData({\n                                                            ...data,\n                                                            middle_name: event?.target?.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Box>\n                                            <Box sx={{ mb: 3 }}>\n                                                <TextField\n                                                    label=\"Last Name\"\n                                                    variant=\"standard\"\n                                                    required\n                                                    fullWidth\n                                                    sx={{\n                                                        \"& .MuiInputLabel-root\": {\n                                                            color: \"#787579\",\n                                                            fontFamily: \"Poppins, sans-serif\"\n                                                        },\n                                                        \"& .MuiInput-underline:before\": {\n                                                            borderBottomColor: \"#e0e0e0\"\n                                                        },\n                                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n                                                            borderBottomColor: \"#1976d2\"\n                                                        },\n                                                        \"& .MuiInput-underline:after\": {\n                                                            borderBottomColor: \"#1976d2\"\n                                                        }\n                                                    }}\n                                                    onInput={(event) =>\n                                                        setData({\n                                                            ...data,\n                                                            last_name: event?.target?.value,\n                                                        })\n                                                    }\n                                                />\n                                            </Box>\n                                            <Box sx={{ \n                                                display: \"flex\", \n                                                flexDirection: { xs: \"column\", sm: \"row\" },\n                                                gap: { xs: 2, sm: 3 },\n                                                mb: 4\n                                            }}>\n                                                <Box sx={{ flex: 1 }}>\n                                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                        <DatePicker\n                                                            label=\"Date of Birth\"\n                                                            value={data.DOB ? dayjs(data.DOB) : null}\n                                                            onChange={(value) => {\n                                                                console.log(value);\n                                                                setData({\n                                                                    ...data,\n                                                                    DOB: value ? value.toDate() : null,\n                                                                });\n                                                            }}\n                                                            slotProps={{\n                                                                textField: {\n                                                                    required: true,\n                                                                    variant: \"standard\",\n                                                                    fullWidth: true,\n                                                                    sx: {\n                                                                        \"& .MuiInputLabel-root\": {\n                                                                            color: \"#787579\",\n                                                                            fontFamily: \"Poppins, sans-serif\"\n                                                                        },\n                                                                        \"& .MuiInput-underline:before\": {\n                                                                            borderBottomColor: \"#e0e0e0\"\n                                                                        },\n                                                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n                                                                            borderBottomColor: \"#1976d2\"\n                                                                        },\n                                                                        \"& .MuiInput-underline:after\": {\n                                                                            borderBottomColor: \"#1976d2\"\n                                                                        }\n                                                                    }\n                                                                },\n                                                            }}\n                                                        />\n                                                    </LocalizationProvider>\n                                                </Box>\n                                                <Box sx={{ flex: 1 }}>\n                                                    <CustomDropdown\n                                                        label=\"Gender\"\n                                                        items={dropdownItems}\n                                                        activeItem={activeDropdown}\n                                                        handleChange={(item) => {\n                                                            setActiveDropdown(item);\n                                                            console.log(item);\n                                                            setData({ ...data, gender: item });\n                                                        }}\n                                                        variant=\"standard\"\n                                                        dropdowncss={{\n                                                            width: \"100%\",\n                                                            \"& .MuiInputLabel-root\": {\n                                                                color: \"#787579\",\n                                                                fontFamily: \"Poppins, sans-serif\"\n                                                            },\n                                                            \"& .MuiInput-underline:before\": {\n                                                                borderBottomColor: \"#e0e0e0\"\n                                                            },\n                                                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n                                                                borderBottomColor: \"#1976d2\"\n                                                            },\n                                                            \"& .MuiInput-underline:after\": {\n                                                                borderBottomColor: \"#1976d2\"\n                                                            }\n                                                        }}\n                                                    />\n                                                </Box>\n                                            </Box>\n                                            <Box sx={{ \n                                                display: \"flex\", \n                                                justifyContent: \"center\", \n                                                mt: 4 \n                                            }}>\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: { xs: \"100%\", sm: \"200px\" },\n                                                        padding: \"12px 32px\",\n                                                        fontSize: \"16px\",\n                                                        fontWeight: \"500\",\n                                                        borderRadius: \"8px\"\n                                                    }}\n                                                    isDisabled={\n                                                        data?.first_name != null &&\n                                                        data?.last_name != null &&\n                                                        data?.gender != null &&\n                                                        data?.DOB != null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                />\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </>\n                            ) : activeStep === 1 ? (\n                                <>\n                                    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                                        <div className=\"mainBox1\">\n                                            <Box sx={{ width: \"40%\" }}>\n                                                <div className=\"heading1\">\n                                                    <Typography\n                                                        style={{\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"25px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"500\",\n                                                            lineHeight: \"30px\",\n                                                        }}\n                                                    >\n                                                        Contact Information\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"Text-fields1\">\n                                                    <TextField\n                                                        label=\"House No\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {}}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"Street Line 1\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setData({\n                                                                ...data,\n                                                                street_address1: event.target.value,\n                                                            });\n                                                        }}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"Street Line 2\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setData({\n                                                                ...data,\n                                                                street_address2: event.target.value,\n                                                            });\n                                                        }}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"Degree\">\n                                                    <Box sx={{ width: \"100%\", padding: \"1%\" }}>\n                                                        <CustomDropdown\n                                                            label={\"Country\"}\n                                                            dropdowncss={{ width: \"100%\" }}\n                                                            items={countryNames}\n                                                            minwidthDropDown=\"300px\"\n                                                            activeItem={activeDropdown}\n                                                            variant=\"standard\"\n                                                            handleChange={(listItems) => {\n                                                                setActiveDropdown(listItems);\n                                                                let response = countryValues.filter(\n                                                                    (country) =>\n                                                                        country?.country_name?.includes(\n                                                                            listItems,\n                                                                        ),\n                                                                );\n                                                                console.log(\n                                                                    \"Country response : \",\n                                                                    response[0]?.country_id,\n                                                                );\n                                                                setData({\n                                                                    ...data,\n                                                                    country_id:\n                                                                        response[0]?.country_id,\n                                                                });\n                                                                setSelectedCountryFromDropDown(\n                                                                    response,\n                                                                );\n                                                            }}\n                                                            // dropdowncss={{ width:\"300px\" }}\n                                                        />\n                                                    </Box>\n                                                </div>\n                                                <div className=\"Degree\">\n                                                    <Box sx={{ width: \"100%\", padding: \"1%\" }}>\n                                                        <CustomDropdown\n                                                            label={\"State\"}\n                                                            dropdowncss={{ width: \"100%\" }}\n                                                            items={stateNames}\n                                                            minwidthDropDown=\"300px\"\n                                                            activeItem={stateName}\n                                                            variant=\"standard\"\n                                                            handleChange={(listItems) => {\n                                                                let response = stateValue.filter(\n                                                                    (state) =>\n                                                                        state?.state_name?.includes(\n                                                                            listItems,\n                                                                        ),\n                                                                );\n                                                                // console.log(\"State ID : \" , response[0].state_id)\n                                                                setData({\n                                                                    ...data,\n                                                                    state_id: response[0]?.state_id,\n                                                                });\n                                                                setSelectCityFromDropDown(response);\n                                                                setStateName(listItems);\n                                                            }}\n                                                            // dropdowncss={{ width:\"300px\" }}\n                                                        />\n                                                    </Box>\n                                                </div>\n\n                                                <div className=\"Degree\">\n                                                    <Box sx={{ width: \"100%\", padding: \"1%\" }}>\n                                                        <CustomDropdown\n                                                            label={\"City\"}\n                                                            dropdowncss={{ width: \"100%\" }}\n                                                            items={cityNames}\n                                                            minwidthDropDown=\"300px\"\n                                                            variant=\"standard\"\n                                                            activeItem={citySelected}\n                                                            handleChange={(listItems) => {\n                                                                setCitySelected(listItems);\n                                                                let response = cityValues.filter(\n                                                                    (city) =>\n                                                                        city?.city_name?.includes(\n                                                                            listItems,\n                                                                        ),\n                                                                );\n                                                                setData({\n                                                                    ...data,\n                                                                    city_id: response[0]?.city_id,\n                                                                });\n                                                            }}\n                                                            // dropdowncss={{ width:\"300px\" }}\n                                                        />\n                                                    </Box>\n                                                </div>\n\n                                                <div className=\"Degree\">\n                                                    <TextField\n                                                        label=\"Zip Code\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setData({\n                                                                ...data,\n                                                                zip_code: event.target.value,\n                                                            });\n                                                        }}\n                                                    ></TextField>\n                                                </div>\n                                            </Box>\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={fetchData}\n                                                    label=\"Save\"\n                                                    buttonCss={{\n                                                        width: \"33%\",\n                                                    }}\n                                                    isDisabled={\n                                                        data?.street_address1 != null &&\n                                                        data?.country_id != null &&\n                                                        data?.city_id != null &&\n                                                        data?.state_id != null &&\n                                                        data?.zip_code != null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                >\n                                                    {/* {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"} */}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : (\n                                <h1>Completed</h1>\n                            )}\n                            ;\n                        </Typography>\n                        {/* <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            {isStepOptional(activeStep) && (\n                                <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                    Skip\n                                </Button>\n                            )}\n                        </Box> */}\n                    </React.Fragment>\n                )}\n            </Box>\n        </>\n    );\n};\n\nexport default PatientCompleteProfile;\n","import React, { useEffect, useState } from \"react\";\nimport \"./EmailVerification.scss\";\nimport { Box, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomTextField from \"../../components/CustomTextField\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport axios from \"axios\";\nimport { useAuthentication } from \"../../loginComponent/UserProvider\";\nimport Cookies from \"js-cookie\";\nimport CustomOTPInput from \"../../components/OTPInput\";\nimport { baseURL } from \"../../constants/const\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\n\nconst EmailVerification = () => {\n    const navigate = useNavigate();\n    const Authentication = useAuthentication();\n\n    const typeOfUser = localStorage.getItem(\"signUp\");\n    const navigateToLogin =\n        typeOfUser === \"super_admin\"\n            ? \"/superadminlogin\"\n            : typeOfUser === \"hcf_admin\"\n            ? \"/hcfadminlogin\"\n            : typeOfUser === \"doctor\"\n            ? \"/doctorlogin\"\n            : typeOfUser === \"diagnostic_center\"\n            ? \"/diagnostcenterlogin\"\n            : typeOfUser === \"patient\"\n            ? \"/patientlogin\"\n            : typeOfUser === \"clinic\"\n            ? \"/diagnostcliniclogin\"\n            : null;\n\n    const [otp, setOtp] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [snackbarState, setSnackbarState] = useState({\n        open: false,\n        message: \"\",\n        type: \"success\", // success, error, warning, etc.\n    });\n\n    // Show OTP sent message on load or when email changes\n    // useEffect(() => {\n    //     const email = Cookies.get(\"email\");\n    //     if (email) {\n    //         setSnackbarState({\n    //             open: true,\n    //             message: `OTP has been sent to ${email}`,\n    //             type: \"Info\",\n    //         });\n    //     }\n    // }, []); // empty dependency runs once on mount\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const emailFromCookie = Cookies.get(\"email\");\n\n        if (!otp || otp.length !== 6) {\n            setSnackbarState({\n                open: true,\n                message: `Please enter the 6-digit OTP`,\n                type: \"error\",\n            });\n            return;\n        }\n\n        const payload = {\n            email: emailFromCookie,\n            activation_code: otp,\n        };\n\n        try {\n            setIsSubmitting(true);\n            const response = await axios.post(\n                `${baseURL}/sec/auth/verifyEmail`,\n                JSON.stringify(payload),\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Accept: \"application/json\",\n                    },\n                },\n            );\n            setSnackbarState({\n                open: true,\n                message: \"Email Verified successfully!\",\n                type: \"success\",\n            });\n            // ✅ delay navigation\n            setTimeout(() => {\n                navigate(navigateToLogin, { replace: true });\n            }, 1000);\n        } catch (error) {\n            console.error(\"Verification failed:\", error?.response?.data || error);\n            setSnackbarState({\n                open: true,\n                message: error.response?.data?.error || \"Verification Failed, Enter Correct Otp.\",\n                type: \"error\",\n            });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n    const handleResendCode = async () => {\n        const emailFromCookie = Cookies.get(\"email\");\n\n        if (!emailFromCookie) {\n            setSnackbarState({\n                open: true,\n                message: \"No email found to resend OTP.\",\n                type: \"error\",\n            });\n            return;\n        }\n\n        try {\n            setIsSubmitting(true);\n            await axios.post(`${baseURL}/sec/auth/resendCode`, { email: emailFromCookie });\n\n            setSnackbarState({\n                open: true,\n                message: `OTP has been resent to ${emailFromCookie}`,\n                type: \"success\",\n            });\n        } catch (error) {\n            console.error(\"Resend OTP failed:\", error?.response?.data || error);\n            setSnackbarState({\n                open: true,\n                message: error.response?.data?.error || \"Failed to resend OTP.\",\n                type: \"error\",\n            });\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <Box className=\"form-container\">\n                <div className=\"image-holder\" />\n                <CustomSnackBar\n                    isOpen={snackbarState.open}\n                    message={snackbarState.message}\n                    hideDuration={4000}\n                    type={snackbarState.type}\n                />\n                <Box className=\"form-inner-container-two\">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <img src=\"images/logo.png\" alt=\"Logo\" />\n\n                        <strong style={{ fontSize: \"1rem\", marginTop: \"20px\" }}>\n                            Verify your Email\n                        </strong>\n\n                        <Box\n                            style={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                justifyContent: \"center\",\n                                alignContent: \"center\",\n                                width: \"100%\",\n                                alignItems: \"center\",\n                                marginTop: \"6%\",\n                            }}\n                        >\n                            <CustomOTPInput\n                                value={otp}\n                                onChange={setOtp}\n                                numInputs={6}\n                                placeholder=\"*\"\n                            />\n\n                            <CustomButton\n                                label={\"Continue\"}\n                                isTransaprent={false}\n                                isDisabled={isSubmitting}\n                                isElevated={false}\n                                handleClick={handleSubmit}\n                                buttonCss={{\n                                    width: \"18em\",\n                                    padding: \"8px 16px\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    borderRadius: \"100px\",\n                                    marginTop: \"20%\",\n                                }}\n                            />\n\n                            <div\n                                className=\"resend\"\n                                onClick={handleResendCode}\n                                style={{\n                                    marginTop: \"1rem\",\n                                    cursor: \"pointer\",\n                                    fontWeight: 500,\n                                }}\n                            >\n                                Resend Code\n                            </div>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default EmailVerification;\n","// import React from 'react'\nimport React, { useState } from \"react\";\nimport \"./patientpersonalinformation.scss\";\nimport { Stack } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport CustomDropdown from \"../../../../components/CustomDropdown/custom-dropdown\";\n\nconst patientpersonalinformation = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n\n    // from here\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        navigate(\"/patientcontactinformation\");\n    };\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    return (\n        <div className=\"container\">\n            <div className=\"logo2\">\n                <img src=\"images/logo.png\" alt=\"Logo\" width=\"164\" height=\"30\" />\n            </div>\n\n            <h2 className=\"text-center\">\n                <strong>Personal Information</strong>\n            </h2>\n\n            <div className=\"component-library \">\n                <div className=\"items \">\n                    <div className=\"field-center6\">\n                        <Stack spacing={0} marginLeft=\"38%\" flexDirection=\"row\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"First Name\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"168px\",\n                                    height: \"56px\",\n                                }}\n                            />\n\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Middle Name\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"11.9em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Last Name\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Date of Birth\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomDropdown\n                                label={\"Gender\"}\n                                items={[\"Male\", \"Female\", \"Rather Not Say\"]}\n                                activeItem={activeDropdown}\n                                handleChange={(listItems) => setActiveDropdown(listItems)}\n                                dropdowncss={{ marginLeft: \"-14%\" }}\n                            />\n                        </Stack>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"form-group6\">\n                <CustomButton\n                    label={\"Next\"}\n                    isTransaprent={false}\n                    isDisabled={false}\n                    isElevated={false}\n                    handleClick={handleSubmit}\n                    buttonCss={{\n                        width: \"25.8em\",\n                        height: \"3.5em\",\n                        padding: \"8px 16px\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n\n                        borderRadius: \"100px\",\n                        marginLeft: \"-70px\",\n                        marginTop: \"37px\",\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default patientpersonalinformation;\n","// import React from 'react'\nimport React, { useState } from \"react\";\nimport \"./patientcontactinformation.scss\";\nimport { Stack } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport CustomDropdown from \"../../../../components/CustomDropdown/custom-dropdown\";\n\nconst patientcontactinformation = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n\n    // from here\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        navigate(\"/patientpaymentinformation\");\n    };\n    return (\n        <div className=\"container\">\n            <div className=\"logo2\">\n                <img src=\"images/logo.png\" alt=\"Logo\" width=\"164\" height=\"30\" />\n            </div>\n\n            <h2 className=\"text-center\">\n                <strong>Contact Information</strong>\n            </h2>\n\n            <div className=\"component-library \">\n                <div className=\"items \">\n                    <div className=\"field-center6\">\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"House No\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Street Line 1\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Street Line 2\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Country\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"State\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"City\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Zip Code\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"form-group6\">\n                <CustomButton\n                    label={\"Next\"}\n                    isTransaprent={false}\n                    isDisabled={false}\n                    isElevated={false}\n                    handleClick={handleSubmit}\n                    buttonCss={{\n                        width: \"25.8em\",\n                        height: \"3.5em\",\n                        padding: \"8px 16px\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n\n                        borderRadius: \"100px\",\n                        marginLeft: \"-70px\",\n                        marginTop: \"37px\",\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default patientcontactinformation;\n","// import React from 'react'\nimport React, { useState } from \"react\";\nimport \"./patientpaymentinformation.scss\";\nimport { Stack } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport CustomDropdown from \"../../../../components/CustomDropdown/custom-dropdown\";\n\nconst patientpaymentinformation = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n\n    // from here\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        navigate(\"/patientdashboard\");\n    };\n    return (\n        <div className=\"container\">\n            <div className=\"logo2\">\n                <img src=\"images/logo.png\" alt=\"Logo\" width=\"164\" height=\"30\" />\n            </div>\n\n            <h2 className=\"text-center\">\n                <strong>Payment Information</strong>\n            </h2>\n\n            <div className=\"component-library \">\n                <div className=\"items \">\n                    <div className=\"field-center6\">\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Name On Card\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Card No.\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Expire Date\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                        <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"CVV\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                textcss={{\n                                    width: \"22.5em\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Stack>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"form-group6\">\n                <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                    <div className=\"form-group6\">\n                        <CustomButton\n                            label={\"Save\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={{\n                                width: \"25.8em\",\n                                height: \"3.5em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n\n                                borderRadius: \"100px\",\n                                marginLeft: \"-135%\",\n                                marginTop: \"37px\",\n                            }}\n                        />\n                    </div>\n                    <div className=\"form-group7\">\n                        <CustomButton\n                            label={\"Skip\"}\n                            isTransaprent\n                            buttonCss={{\n                                width: \"25.8em\",\n                                height: \"3.5em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                borderRadius: \"100px\",\n                                marginLeft: \"-85%\",\n                                marginTop: \"-81px\",\n                            }}\n                        />\n                    </div>\n                </Stack>\n            </div>\n        </div>\n    );\n};\n\nexport default patientpaymentinformation;\n","// import React from 'react'\nimport React, { useState } from \"react\";\nimport \"./hcflogin.scss\";\nimport { IconButton, InputAdornment, Stack } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport CustomTextField from \"../../../components/CustomTextField\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\n\nconst hcflogin = () => {\n    const [showPassword, setShowPassword] = useState(true);\n\n    const handleTogglePassword = () => {\n        setShowPassword((prevShowPassword) => !prevShowPassword);\n    };\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n\n    // from here\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        navigate(\"/hcfdashboard\");\n    };\n    return (\n        <div className=\"register-photo\">\n            <div className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <div>\n                    <div className=\"logo1\">\n                        <img src=\"images/logo.png\" alt=\"Logo\" width=\"200\" />\n                    </div>\n\n                    <h2 className=\"text-center\">\n                        <strong>Login</strong>\n                    </h2>\n\n                    <div className=\"component-library \">\n                        <div className=\"items \">\n                            <div className=\"field-center\">\n                                <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Mobile or Email\"}\n                                        defaultValue={\"\"}\n                                        helperText={\"\"}\n                                        isValid\n                                        textcss={{\n                                            width: \"22.5em\",\n                                            height: \"56px\",\n                                        }}\n                                    />\n                                </Stack>\n\n                                <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Password\"}\n                                        defaultValue={\"\"}\n                                        helperText={\"\"}\n                                        isValid\n                                        inputType={showPassword ? \"password\" : \"text\"}\n                                        textcss={{\n                                            width: \"22.5em\",\n                                            height: \"56px\",\n                                        }}\n                                        // rightIcon={\n                                        //     showPassword ? (\n                                        //         <VisibilityIcon onClick = {() => setShowPassword(false)} />\n                                        //     ) : (\n                                        //         <VisibilityOffIcon onClick = {() => setShowPassword(true)}/>\n                                        //     )\n                                        // }\n                                    />\n                                </Stack>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <CustomButton\n                            label={\"Log In\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={{\n                                width: \"25.8em\",\n                                height: \"3.5em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n\n                                borderRadius: \"100px\",\n                                marginLeft: \"-70px\",\n                                marginTop: \"37px\",\n                            }}\n                        />\n                    </div>\n                    <div className=\"forgotpassword\">\n                        <Link to=\"/patientforgotpassword\" className=\"link\">\n                            Forgot Password\n                        </Link>\n                    </div>\n                    <div className=\"mobile\">\n                        <Link to=\"/loginwithotp\" className=\"link\">\n                            Log In with OTP\n                        </Link>\n                    </div>\n                    <div className=\"already\">\n                        I Don&apos;t have an account &nbsp;\n                        <Link to=\"/patientsignup\" className=\"link\">\n                            Create Account\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default hcflogin;\n","import React from \"react\";\n\nfunction hcfdashboard() {\n    return <div>Hello HCF !!!</div>;\n}\n\nexport default hcfdashboard;\n","import React, { useState } from \"react\";\nimport ImageLogo from \"../../../static/images/logo.png\";\nimport { Box, Button, Typography, Grid } from \"@mui/material\";\n// import BurgerImage from \"../../static/images/DrImages/Glyph_ undefined.png\";\nimport \"./Home.scss\";\nimport FirstImage from \"../../../static/images/HomeImages/rectangle11.png\";\nimport FirstStepImage from \"../../../static/images/HomeImages/Step1.png\";\nimport SecondStepImage from \"../../../static/images/HomeImages/Step2.png\";\nimport ThirdStepImage from \"../../../static/images/HomeImages/Step3.png\";\nimport SecondRowImage from \"../../../static/images/HomeImages/manydoctors.png\";\nimport LastImage from \"../../../static/images/HomeImages/lastcontent.png\";\nimport ThirdImage from \"../../../static/images/HomeImages/thirdcontent.png\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport whiteframe from \"../../../static/images/HomeImages/whiteFrame.png\";\nimport AllDoctors from \"../../../static/images/HomeImages/Alldoctors.png\";\nimport { LinkedIn } from \"@mui/icons-material\";\nimport { Twitter } from \"@mui/icons-material\";\nimport { Instagram } from \"@mui/icons-material\";\nimport { Facebook } from \"@mui/icons-material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport logo from \"../../../static/images/icon.png\";\nimport { left } from \"@popperjs/core\";\n\nconst Homes = () => {\n    const navigate = useNavigate();\n    const [showBurger, setShowBurgerMenu] = useState(true);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        navigate(\"/selectRoleLogin\");\n    };\n\n    function toggleMenu() {\n        setShowBurgerMenu(!showBurger);\n        const menu = document.querySelector(\".other-header-content\");\n        menu.classList.toggle(\"show\");\n        showBurger ? (menu.display = \"none\") : (menu.display = \"block\");\n    }\n\n    return (\n        <>\n            <div className=\"screen-cntr1\">\n                <div className=\"header-container1\">\n                    <Box component={\"img\"} src={ImageLogo}></Box>\n                    <div className=\"burger-menu\" onClick={toggleMenu}>\n                        <img src={logo} alt=\"logo...\" />\n                    </div>\n\n                    <div className=\"other-header-content\">\n                        <Link to={\"/howitworks\"} style={{ textDecoration: \"none\" }}>\n                            <Typography\n                                style={{\n                                    color: \"#373737\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"18px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: 600,\n                                    lineHeight: \"36px\",\n                                }}\n                            >\n                                How it works?\n                            </Typography>\n                        </Link>\n                        <Link to={\"/aboutlanding\"} style={{ textDecoration: \"none\" }}>\n                            <Typography\n                                style={{\n                                    color: \"#373737\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"18px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: 600,\n                                    lineHeight: \"36px\",\n                                }}\n                            >\n                                About Us\n                            </Typography>\n                        </Link>\n                        <Typography\n                            style={{\n                                color: \"#373737\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"18px\",\n                                fontStyle: \"normal\",\n                                fontWeight: 600,\n                                lineHeight: \"36px\",\n                            }}\n                        >\n                            Pricing\n                        </Typography>\n                        <CustomButton\n                            label=\"Sign Up\"\n                            buttonCss={{ width: \"170px\", height: \"38px\", borderRadius: \"20px\" }}\n                            isTransaprent={\"True\"}\n                            handleClick={() => {\n                                navigate(\"/selectRoleSignup\");\n                            }}\n                        ></CustomButton>\n                        <CustomButton\n                            label=\"Login\"\n                            buttonCss={{ width: \"170px\", height: \"38px\", borderRadius: \"20px\" }}\n                            handleClick={handleSubmit}\n                        ></CustomButton>\n\n                        <div className=\"burger-menu\" onClick={toggleMenu}>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                            <div className=\"bar\"></div>\n                        </div>\n                    </div>\n                </div>\n\n                <Box className=\"first-row-content\">\n                    <Box className=\"title-heading\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"1.5em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"500\",\n                                lineHeight: \"62px\",\n                                textAlign: \"center\",\n                                marginTop: \"2%\",\n                            }}\n                            className=\"EcareText\"\n                        >\n                            Find Specialist Doctor<br></br>\n                            For Your Every Need At<br></br>\n                            Remote Doctors Online\n                        </Typography>\n\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                textAlign: \"center\",\n                                width: \"auto\",\n                                fontStyle: \"normal\",\n                            }}\n                        >\n                            We can find the doctors for you and book your appointment with easy\n                            <br />\n                            care click process.\n                        </Typography>\n                        <Box className=\"MainEcareBtn\">\n                            <CustomButton\n                                label=\"Book Your Appointments\"\n                                className={\"EcareBtn\"}\n                                // buttonCss={{width: \"100%\", height: \"0auto\", margin:\"10px\"}}\n                            ></CustomButton>\n                        </Box>\n                    </Box>\n\n                    <Box\n                        component={\"img\"}\n                        className=\"imgEcare \"\n                        src={FirstImage}\n                        sx={{ width: \"50%\" }}\n                    ></Box>\n                </Box>\n\n                <Box className=\"steps-title\">\n                    <Typography\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"playfair Display\",\n                            textAlign: \"center\",\n                            fontSize: \"30px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"46px\",\n                        }}\n                        className=\"stepstitle\"\n                    >\n                        Three Easy Steps To<br></br>\n                        Find Your doctor\n                    </Typography>\n                </Box>\n\n                <Grid container spacing={3} style={{ padding: \"20px\" }}>\n                    {/* Step 1 */}\n                    <Grid item xs={12} sm={6} md={4} style={{ textAlign: \"center\" }}>\n                        <Box\n                            component=\"img\"\n                            src={FirstStepImage}\n                            style={{ maxWidth: \"100%\", height: \"auto\" }}\n                        />\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                fontStyle: \"normal\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            Search Doctor\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontStyle: \"normal\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet,\n                            <br />\n                            consectetur adipiscing elit, sed do\n                            <br />\n                            eiusmod tempor incididunt ut\n                            <br />\n                            labore.\n                        </Typography>\n                    </Grid>\n\n                    {/* Step 2 */}\n                    <Grid item xs={12} sm={6} md={4} style={{ textAlign: \"center\" }}>\n                        <Box\n                            component=\"img\"\n                            src={SecondStepImage}\n                            style={{ maxWidth: \"100%\", height: \"auto\" }}\n                        />\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                fontStyle: \"normal\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            Check Availability\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontStyle: \"normal\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet,\n                            <br />\n                            consectetur adipiscing elit, sed do\n                            <br />\n                            eiusmod tempor incididunt ut\n                            <br />\n                            labore.\n                        </Typography>\n                    </Grid>\n\n                    {/* Step 3 */}\n                    <Grid item xs={12} sm={6} md={4} style={{ textAlign: \"center\" }}>\n                        <Box\n                            component=\"img\"\n                            src={ThirdStepImage}\n                            style={{ maxWidth: \"100%\", height: \"auto\" }}\n                        />\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                fontStyle: \"normal\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            Book Your Appointments\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontStyle: \"normal\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet,\n                            <br />\n                            consectetur adipiscing elit, sed do\n                            <br />\n                            eiusmod tempor incididunt ut\n                            <br />\n                            labore.\n                        </Typography>\n                    </Grid>\n                </Grid>\n                {/* my grid end */}\n\n                {/* <div className=\"second-row-content\">\n                    <Box component={\"img\"} className=\"secondrowimage\" src={SecondRowImage}></Box>\n                    <div className=\"second-side-content\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                textAlign: \"center\",\n                                fontSize: \"28px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"500\",\n                                lineHeight: \"46px\",\n                            }}\n                            className=\"text2\"\n                        >\n                            Quality Health Starts<br></br>\n                            With Quality Doctors\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                width: \"auto\",\n                                fontStyle: \"normal\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing<br></br>\n                            elit, sed do eiusmod tempor incididunt ut labore et<br></br>\n                            dolore magna aliqua<br></br>\n                            Ut enim ad minim veniam, quis nostrud exercitation\n                        </Typography>\n                        <CustomButton\n                            label=\"Find Doctor \"\n                            buttonCss={{ width: \"170px\", height: \"38px\" }}\n                        />\n                    </div>\n                </div> */}\n                <Grid container spacing={2} alignItems=\"center\" style={{ padding: \"20px\" }}>\n                    <Grid item xs={12} md={6} style={{ textAlign: \"center\" }}>\n                        <Box\n                            component=\"img\"\n                            src={SecondRowImage}\n                            alt=\"Second Row\"\n                            style={{ maxWidth: \"100%\", height: \"auto\" }}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} md={6}>\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                fontSize: \"28px\",\n                                fontWeight: \"500\",\n                                lineHeight: \"46px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Quality Health Starts\n                            <br />\n                            With Quality Doctors\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                marginTop: \"16px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            <br />\n                            elit, sed do eiusmod tempor incididunt ut labore et\n                            <br />\n                            dolore magna aliqua.\n                            <br />\n                            Ut enim ad minim veniam, quis nostrud exercitation.\n                        </Typography>\n                        <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n                            <Button\n                                variant=\"contained\"\n                                style={{\n                                    width: \"170px\",\n                                    height: \"38px\",\n                                    backgroundColor: \"\",\n                                    color: \"#fff\",\n                                    textTransform: \"none\",\n                                    fontFamily: \"Red Hat Display\",\n                                }}\n                            >\n                                Find Doctor\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n                {/* -------------------------------- */}\n                {/* <div className=\"second-row-content\">\n                    <div className=\"second-side-content\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                textAlign: \"center\",\n                                width: \"auto\",\n                                fontStyle: \"normal\",\n                            }}\n                            className=\"text3\"\n                        >\n                            Find your Desired Doctors <br></br>\n                            Anytime,Anywhere!\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                width: \"auto\",\n                                fontStyle: \"normal\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing<br></br>\n                            elit, sed do eiusmod tempor incididunt ut labore et<br></br>\n                            dolore magna aliqua<br></br>\n                            Ut enim ad minim veniam, quis nostrud exercitation\n                        </Typography>\n                        <CustomButton\n                            label=\"Find Doctor \"\n                            buttonCss={{ width: \"170px\", height: \"38px\" }}\n                        />\n                    </div>\n                    <Box className=\"img3\">\n                        <Box\n                            component={\"img\"}\n                            style={{ width: \"110%\" }}\n                            className=\"img3\"\n                            src={ThirdImage}\n                        ></Box>\n                    </Box>\n                </div> */}\n                {/* grid start */}\n                <Grid container spacing={2} alignItems=\"center\" style={{ padding: \"20px\" }}>\n                    {/* Left Side - Content */}\n                    <Grid item xs={12} md={6}>\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                fontSize: \"28px\",\n                                fontWeight: \"500\",\n                                lineHeight: \"46px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Find your Desired Doctors <br />\n                            Anytime, Anywhere!\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                marginTop: \"16px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            <br />\n                            elit, sed do eiusmod tempor incididunt ut labore et\n                            <br />\n                            dolore magna aliqua.\n                            <br />\n                            Ut enim ad minim veniam, quis nostrud exercitation.\n                        </Typography>\n                        <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>\n                            <Button\n                                variant=\"contained\"\n                                style={{\n                                    width: \"170px\",\n                                    height: \"38px\",\n                                    backgroundColor: \"\",\n                                    color: \"#fff\",\n                                    textTransform: \"none\",\n                                    fontFamily: \"Red Hat Display\",\n                                }}\n                            >\n                                Find Doctor\n                            </Button>\n                        </div>\n                    </Grid>\n\n                    {/* Right Side - Image */}\n                    <Grid item xs={12} md={6} style={{ textAlign: \"center\" }}>\n                        <Box\n                            component=\"img\"\n                            src={ThirdImage}\n                            alt=\"Third Row\"\n                            style={{ width: \"70%\" }}\n                        />\n                    </Grid>\n                </Grid>\n\n                {/* grid end */}\n                {/* --------------------------------------------- */}\n\n                {/* <Box className=\"second-row-content\">\n                    <Box className=\"img4\">\n                        <Box\n                            component={\"img\"}\n                            style={{ width: \"110%\" }}\n                            className=\"img4\"\n                            src={LastImage}\n                        ></Box>\n                    </Box>\n                    <Box className=\"second-side-content\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                textAlign: \"center\",\n                                width: \"auto\",\n                                fontStyle: \"normal\",\n                            }}\n                            className=\"text4\"\n                        >\n                            Book your Appointment<br></br>\n                            With just click\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"18px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"27px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing<br></br>\n                            elit, sed do eiusmod tempor incididunt ut labore et<br></br>\n                            dolore magna aliqua<br></br>\n                            Ut enim ad minim veniam, quis nostrud exercitation\n                        </Typography>\n                        <CustomButton\n                            label=\"Book Appointment \"\n                            buttonCss={{\n                                width: \"200px\",\n                                height: \"38px\",\n                                fontFamily: \"poppins\",\n                                fontSize: \"14px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"22px\",\n                            }}\n                        />\n                    </Box>\n                </Box> */}\n                {/* grid start */}\n                {/* <Grid container spacing={3} alignItems=\"center\">\n                  \n\n                    <Grid item xs={12} md={6} sm={6}>\n                        <Box\n                            component=\"img\"\n                            style={{ width: \"80%\" }}\n                            className=\"img4\"\n                            src={LastImage}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6} sm={6} className=\"second-side-content\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                textAlign: \"center\",\n                                fontStyle: \"normal\",\n                            }}\n                            className=\"text4\"\n                        >\n                            Book your Appointment\n                            <br />\n                            With just a click\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"18px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"27px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing\n                            <br />\n                            elit, sed do eiusmod tempor incididunt ut labore et\n                            <br />\n                            dolore magna aliqua\n                            <br />\n                            Ut enim ad minim veniam, quis nostrud exercitation\n                        </Typography>\n                        <CustomButton\n                            label=\"Book Appointment\"\n                            buttonCss={{\n                                width: \"200px\",\n                                height: \"38px\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"14px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"22px\",\n                            }}\n                        />\n                    </Grid>\n                </Grid> */}\n                {/* grid end */}\n                {/* ----------------- */}\n\n                <Box className=\"second-row-content\">\n                    <Grid container spacing={2} alignItems=\"center\">\n                        {/* Image Section */}\n                        <Grid item xs={12} md={6}>\n                            <Box\n                                component=\"img\"\n                                style={{ width: \"70%\", paddingLeft: \"10%\" }}\n                                className=\"img4\"\n                                src={LastImage}\n                            />\n                        </Grid>\n                        {/* Content Section */}\n                        <Grid item xs={12} md={6}>\n                            <Box className=\"second-side-content\">\n                                <Typography\n                                    style={{\n                                        color: \"#313033\",\n                                        fontFamily: \"Playfair Display\",\n                                        textAlign: \"center\",\n                                        fontStyle: \"normal\",\n                                    }}\n                                    className=\"text4\"\n                                >\n                                    Book your Appointment\n                                    <br />\n                                    With just a click\n                                </Typography>\n                                <Typography\n                                    style={{\n                                        color: \"#525152\",\n                                        fontFamily: \"Red Hat Display\",\n                                        fontSize: \"18px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"27px\",\n                                        textAlign: \"center\",\n                                    }}\n                                >\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing\n                                    <br />\n                                    elit, sed do eiusmod tempor incididunt ut labore et\n                                    <br />\n                                    dolore magna aliqua\n                                    <br />\n                                    Ut enim ad minim veniam, quis nostrud exercitation\n                                </Typography>\n                                <CustomButton\n                                    label=\"Book Appointment\"\n                                    buttonCss={{\n                                        width: \"200px\",\n                                        height: \"38px\",\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"700\",\n                                        lineHeight: \"22px\",\n                                    }}\n                                />\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </Box>\n                {/* <div className=\"About-content\">\n                    <Typography\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"playfair Display\",\n                            textAlign: \"center\",\n                            width: \"auto\",\n                            fontStyle: \"normal\",\n                        }}\n                        className=\"ac\"\n                    >\n                        About Us\n                    </Typography>\n                </div>\n                <div className=\"about-descript\">\n                    <Typography\n                        style={{\n                            color: \"#525152\",\n                            fontFamily: \"Red Hat Display\",\n                            fontSize: \"18px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"27px\",\n                            textAlign: \"center\",\n                        }}\n                        className=\"acdescr\"\n                    >\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do<br></br>\n                        eiusmod tempor incididunt ut labore .\n                    </Typography>\n                </div> */}\n\n                <Grid\n                    container\n                    spacing={3}\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    className=\"About-content\"\n                >\n                    {/* About Us Section */}\n                    <Grid item xs={12} className=\"about-section\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                textAlign: \"center\",\n                                fontStyle: \"normal\",\n                                fontSize: \"2em\", // Adjusted for better prominence\n                                fontWeight: \"600\",\n                                marginTop: \"10%\",\n                            }}\n                            className=\"ac\"\n                        >\n                            About Us\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"18px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"27px\",\n                                textAlign: \"center\",\n                                marginTop: \"16px\", // Added spacing between the title and description\n                            }}\n                            className=\"acdescr\"\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                            <br />\n                            eiusmod tempor incididunt ut labore.\n                        </Typography>\n                    </Grid>\n                </Grid>\n\n                <div className=\"box-cont\">\n                    <Box\n                        component={\"img\"}\n                        src={AllDoctors}\n                        style={{ width: \"600px\", height: \"600px\" }}\n                    ></Box>\n                    <div className=\"title-descr\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                width: \"auto\",\n                                fontStyle: \"normal\",\n                                textAlign: \"center\",\n                            }}\n                            className=\"td\"\n                        >\n                            Welcome to our medical app,<br></br>\n                            where your health is our priority!\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                width: \"auto\",\n                                fontStyle: \"normal\",\n                                textAlign: \"center\",\n                            }}\n                            className=\"tdd\"\n                        >\n                            Meet our exceptional team behind the innovative healthcare app <br></br>\n                            that is revolutionizing the way you manage your health.<br></br>\n                            Comprised of dedicated professionals from various fields, we are\n                            <br></br>\n                            united by a common goal: to provide you with the best possible<br></br>\n                            care and support on your wellness journey.\n                        </Typography>\n                    </div>\n                </div>\n\n\n                <div className=\"red-footer\">\n                    <div className=\"first-ali\">\n                        <div className=\"first-half\">\n                            <Box\n                                component={\"img\"}\n                                src={whiteframe}\n                                style={{ width: \"245px\", height: \"42px\" }}\n                            ></Box>\n                        </div>\n                        <div className=\"half-align\">\n                            <Typography\n                                style={{\n                                    color: \"#FFF\",\n                                    fontFamily: \"Red Hat Display \",\n                                    fontSize: \"16px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"700\",\n                                    lineHeight: \"24px\",\n                                    justifyContent: \"center\",\n                                }}\n                            >\n                                Doctor Registration\n                            </Typography>\n                            <Typography\n                                style={{\n                                    color: \"#FFF\",\n                                    fontFamily: \"Red Hat Display \",\n                                    fontSize: \"16px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"700\",\n                                    lineHeight: \"24px\",\n                                }}\n                            >\n                                How it Works?\n                            </Typography>\n                        </div>\n                    </div>\n                    <div className=\"hcf-pr\">\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            HCF Registration\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            Pricing\n                        </Typography>\n                    </div>\n\n                    <div className=\"about-us\">\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            About Us\n                        </Typography>\n                    </div>\n                    <div className=\"social-icons\">\n                        <LinkedIn style={{ color: \"white\" }} />\n                        <Twitter style={{ color: \"white\" }} />\n                        <Instagram style={{ color: \"white\" }} />\n                        <Facebook style={{ color: \"white\" }} />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\nexport default Homes;\n","import React,{useState} from \"react\";\nimport \"./Howitworks.scss\";\nimport { Box, Typography } from \"@mui/material\";\nimport ImageLogo from \"../../../static/images/logo.png\";\nimport Alldoctor from \"../../../static/images/HowitworksImages/Alldoctors.png\";\nimport Whitelogo from \"../../../static/images/HowitworksImages/whiteFrame.png\";\nimport { LinkedIn } from \"@mui/icons-material\";\nimport { Twitter } from \"@mui/icons-material\";\nimport { Instagram } from \"@mui/icons-material\";\nimport { Facebook } from \"@mui/icons-material\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport ScrewDoctor from \"../../../static/images/HowitworksImages/MonitorDoc.png\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport logo from \"../../../static/images/icon.png\"\n\nfunction Howitworks() {\n    const navigate = useNavigate();\n    const [showBurger, setShowBurgerMenu] = useState(false);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        navigate(\"/selectprofiletype\");\n    };\n\nfunction toggleMenu () {\n    setShowBurgerMenu(!showBurger);\n    const menu = document.querySelector(\".other-header-content\");\n    menu.classList.toggle(\"show\");\n    showBurger ? (menu.display = \"none\") : (menu.display =\"block\");\n}\n\n\n    return (\n        <>\n            <div className=\"screen-container\">\n                <div className=\"header-container1\">\n                    <Link to={\"/\"}>\n                <Box component={\"img\"}  className=\"full-logo\"  src={ImageLogo} alt=\"Full Logo\"></Box>\n                </Link>\n                <div className=\"burger-menu\" onClick={toggleMenu}\n                style={{ cursor:\"pointer\" ,}}>\n                    <img src={logo} alt=\"Burger Menu Icon\"/>\n                </div>\n                    {/* <Link to={\"/\"}>\n                        <Box component={\"img\"} src={ImageLogo}></Box>\n                    </Link> */}\n                    <div className=\"other-header-content\">\n                        <Typography><strong>How it works?</strong></Typography>\n                        <Link to={\"/aboutlanding\"} style={{ textDecoration: \"none\" }}>\n                            <Typography style={{color: \"black\"}}>\n                                <strong>About Us</strong>\n                            </Typography>\n                        </Link>\n                        <Typography><strong>Pricing</strong></Typography>\n                        <CustomButton\n                            label=\"Sign Up\"\n                            buttonCss={{ width: \"170px\", height: \"38px\", borderRadius: \"20px\" }}\n                            isTransaprent={\"True\"}\n                            handleClick={() => {\n                                navigate(\"/selectsignup\");\n                            }}\n                        ></CustomButton>\n                        <CustomButton\n                            label=\"Login\"\n                            buttonCss={{ width: \"170px\", height: \"38px\", borderRadius: \"20px\" }}\n                            handleClick={handleSubmit}\n                        ></CustomButton>\n                    </div>\n                </div>\n                <div className=\"howitworks-heading\">\n                    <Typography\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"Playfair Display\",\n                            fontSize: \"2.5em\",\n                            fontStyle: \"normal\",\n                        }}\n                    >\n                        How it Works\n                    </Typography>\n                </div>\n                <div className=\"description\">\n                    <Typography\n                        style={{\n                            justifyContent:\"center\",\n                            color: \"#525152\",\n                            fontFamily: \"Red Hat Display\",\n                            fontSize: \"1.2rem\",\n                            fontStyle: \"normal\",\n                        }}\n                    >\n                        we pay close attention to the user experience on our medical company\n                        website. User-friendly navigation is key, ensuring that visitors can easily\n                        find the information they seek. We optimize our content for search engines,\n                        making it discoverable to those searching for medical insights. Regular\n                        updates and revisions are part of our commitment to keeping the information\n                        current, and we actively engage with our audience to gather feedback and\n                        answer their questions. By maintaining a dynamic, informative, and\n                        user-centric approach to content creation, our medical company website aims\n                        to be a valuable resource for all those seeking reliable medical knowledge\n                        and guidance\n                    </Typography>\n                </div>\n                <div className=\"Benifits\">\n                    <Typography\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"playfair Display\",\n                            fontSize: \"2em\",\n                            fontStyle: \"normal\",\n                        }}\n                    >\n                        Benefits\n                    </Typography>\n                    <Typography\n                        className=\"benefit-text\"\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"playfair Display\",\n                            fontSize: \"1.2em\",\n                            fontStyle: \"normal\",\n                        }}\n                    >\n                        Improving Healthcare. Reducing Costs\n                    </Typography>\n                </div>\n                <div className=\"firstpole\">\n                    <div\n                        className=\"side-pole\"\n                        style={{\n                            border: \"1px solid red\",\n                            height: \"188px\",\n                            width: \"7px\",\n                            color: \"#E73A56\",\n                            background: \"#E73A56\",\n                            borderRadius: \"5px\",\n                            marginLeft: \"2%\",\n                        }}\n                    ></div>\n                    <div className=\"text1\">\n                        <Typography\n                            className=\"pole-text\"\n                            style={{\n                                display:\"flex\",\n                                flexWrap:\"wrap\",\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"2em\",\n                                fontStyle: \"normal\",\n                            }}\n                        >\n                            OPTIMIZE TREATMENT & AVOID UNNECESSARY RISKS\n                        </Typography>\n                        <Typography\n                            className=\"descr-pole\"\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"1.2em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                            }}\n                        >\n                            Beyond the diagnosis, a second opinion provides us with a chance to ask\n                            questions, understand the options, and help in deciding whether to\n                            proceed with a potentially risky therapy or not and thereby restore\n                            confidence that the treatment plan recommended is appropriate.\n                        </Typography>\n                    </div>\n                </div>\n                <div className=\"secondpole\">\n                    <div\n                        className=\"second-side-pole\"\n                        style={{\n                            border: \"1px solid red\",\n                            height: \"188px\",\n                            width: \"7px\",\n                            color: \"#E73A56\",\n                            background: \"#E73A56\",\n                            borderRadius: \"5px\",\n                            marginLeft: \"2%\",\n                        }}\n                    ></div>\n                    <div className=\"text1\">\n                        <Typography\n                            className=\"pole-text\"\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"2em\",\n                                fontStyle: \"normal\",\n                            }}\n                        >\n                            COST SAVING FROM AVOIDING UNNECESSARY SURGERY\n                        </Typography>\n                        <Typography\n                            className=\"descr-pole\"\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"1.2em\",\n                                fontStyle: \"normal\",\n                            }}\n                        >\n                            Good medical services provide smart, proactive, and informed choices\n                            that patients can trust with confidence\n                        </Typography>\n                    </div>\n                </div>\n                <div className=\"thirdpole\">\n                    <div\n                        className=\"third-side-pole\"\n                        style={{\n                            border: \"1px solid red\",\n                            height: \"188px\",\n                            width: \"10px\",\n                            color: \"#E73A56\",\n                            background: \"#E73A56\",\n                            borderRadius: \"5px\",\n                            marginLeft: \"2%\",\n                        }}\n                    ></div>\n                    <div className=\"text1\">\n                        <Typography\n                            className=\"pole-text\"\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"2em\",\n                                fontStyle: \"normal\",\n                            }}\n                        >\n                            FROM THE COMFORT OF YOUR HOME\n                        </Typography>\n                        <Typography\n                            className=\"descr-pole\"\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"1.2em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                            }}\n                        >\n                            The advantages of second opinions are many: financial, physical and\n                            psychological. Providing these services remotely via our cutting-edge\n                            HIPAA-compliant technology, XperTeleConsult™ system, will improve\n                            patient access to medical care and no need for fixing appointments,\n                            waiting at the clinic, privacy, etc.\n                        </Typography>\n                    </div>\n                </div>\n                <div className=\"fourthpole\">\n                    <div\n                        className=\"fourth-side-pole\"\n                        style={{\n                            border: \"1px solid red\",\n                            height: \"188px\",\n                            width: \"7px\",\n                            color: \"#E73A56\",\n                            background: \"#E73A56\",\n                            borderRadius: \"5px\",\n                            marginLeft: \"2%\",\n                            // padding: \"2rem\",\n                        }}\n                    ></div>\n                    <div className=\"text1\">\n                        <Typography\n                            className=\"pole-text\"\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"2em\",\n                                fontStyle: \"normal\",\n                            }}\n                        >\n                            IMPROVE HEALTHCARE OUTCOMES\n                        </Typography>\n                        <Typography\n                            className=\"descr-pole\"\n                            style={{\n                                color: \"#525152\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"1.2em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                            }}\n                        >\n                            Second opinions have been found to bring down cost of healthcare and\n                            reduces misdiagnoses\n                        </Typography>\n                    </div>\n                </div>\n                <div className=\"heading2\">\n                    <Typography\n                        className=\"head2\"\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"playfair Display\",\n                            fontSize: \"2em\",\n                            fontStyle: \"normal\",\n                        }}\n                    >\n                        HEAR FROM THE EXPERTS\n                    </Typography>\n                    <Typography\n                        className=\"expert-text\"\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"playfair Display\",\n                            fontSize: \"1.2em\",\n                            fontStyle: \"normal\",\n                        }}\n                    >\n                        This is what the experts say about our platform\n                    </Typography>\n                </div>\n\n                <div className=\"monitor-doctor\">\n                    <Box\n                        component={\"img\"}\n                        src={ScrewDoctor}\n                        style={{ width: \"40%\"}}\n                    ></Box>\n                </div>\n\n                <Box\n                    style={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        flexWrap:\"wrap\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <div className=\"thought\">\n                        <Typography\n                            className=\"thought-text\"\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"1.2em\",\n                                fontStyle: \"normal\",\n                            }}\n                        >\n                            “Time and health are two precious assets that we don’t recognize and\n                            appreciate until they have been depleted.” <br></br>– Denis Waitley\n                        </Typography>\n                    </div>\n                </Box>\n                <Box className=\"pink-container\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", padding: \"20px\" }}>\n                    <Box className=\"boximage\" style={{ flex: 1, textAlign: \"center\" }}>\n                        <Box\n                            component={\"img\"}\n                            src={Alldoctor}\n                            style={{maxWidth: \"100%\", height: \"auto\" }}\n                        ></Box>\n                    </Box>\n                    <Box className=\"welcome-heading\" style={{ flex: 1, paddingLeft: \"20px\" }}>\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"2em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"1.2\",\n                            }}\n                        >\n                            Welcome to our medical app,<br></br>\n                            where your health is our priority!\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"1.2em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"1.6\",\n                            }}\n                        >\n                            Meet our exceptional team behind the innovative healthcare app<br></br>\n                            that is revolutionizing the way you manage your health. <br></br>\n                            Comprised of dedicated professionals from various fields, we are\n                            <br></br>\n                            united by a common goal: to provide you with the best possible <br></br>\n                            care and support on your wellness journey.\n                        </Typography>\n                    </Box>\n                </Box>\n\n                {/*responsivev container starts  */}\n                <div className=\"pink-container-responsive\">\n                    <div className=\"welcome-heading\">\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"34px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"36px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Welcome to our medical <br />\n                            app, where your health is <br />\n                            our priority!\n                        </Typography>\n                        <div className=\"boximage\">\n                            <Box\n                                component={\"img\"}\n                                src={Alldoctor}\n                                style={{ width: \"500px\", height: \"450px\" }}\n                            ></Box>\n                        </div>\n                        <Typography\n                            className=\"alldoc-text\"\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"18px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"27px\",\n                                textAlign: \"center\",\n                            }}\n                        >\n                            Meet our exceptional team behind the innovative healthcare app<br></br>\n                            that is revolutionizing the way you manage your health. <br></br>\n                            Comprised of dedicated professionals from various fields, we are\n                            <br></br>\n                            united by a common goal: to provide you with the best possible <br></br>\n                            care and support on your wellness journey.\n                        </Typography>\n                    </div>\n                </div>\n                {/* responsive container ends */}\n\n                <div className=\"red-footer\" style={{ display: \"flex\", flexDirection: \"column\", alignItems:\"center\", padding: \"20px\", backgroundColor: \"#B22222\" }}>\n                    <div className=\"first-ali\" style={{ width: \"100%\", display: \"flex\",flexWrap: \"wrap\", alignItems: \"center\", justifyContent: \"space-between\", gap:\"20px\"}}>\n                        <div className=\"first-half\" style={{  flex: \"0 0 auto\", display: \"flex\",alignItems: \"center\", justifyContent: \"flex-start\"  }}>\n                            <Box\n                                component={\"img\"}\n                                src={Whitelogo}\n                                style={{width: \"40%\", maxWidth:\"35%\", margin: \"0\" }}\n                            ></Box>\n                        </div>\n                        </div>\n                        <div className=\"half-align\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"15px\", flex:\"1\",textAlign: \"center\"}}>\n                            <Typography\n                                style={{\n                                    color: \"#FFF\",\n                                    fontFamily: \"Red Hat Display \",\n                                    fontSize: \"16px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"700\",\n                                    lineHeight: \"24px\",\n                                }}\n                            >\n                                Doctor Registration\n                            </Typography>\n                            <Typography\n                                style={{\n                                    color: \"#FFF\",\n                                    fontFamily: \"Red Hat Display \",\n                                    fontSize: \"16px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"700\",\n                                    lineHeight: \"24px\",\n                                }}\n                            >\n                                How it Works?\n                            </Typography>\n                        </div>\n                    \n                    <div className=\"hcf-pr\" style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", gap: \"15px\", marginTop: \"20px\" }}>\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            HCF Registration\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            Pricing\n                        </Typography>\n                    </div>\n\n                    <div className=\"about-us\" style={{ marginTop: \"20px\" }}>\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            About Us\n                        </Typography>\n                    </div>\n                    <div className=\"social-icons\" style={{ marginTop: \"20px\", display: \"flex\", justifyContent: \"center\", gap: \"15px\" }}     >\n                        <LinkedIn style={{ color: \"white\" }} />\n                        <Twitter style={{ color: \"white\" }} />\n                        <Instagram style={{ color: \"white\" }} />\n                        <Facebook style={{ color: \"white\" }} />\n                    </div>\n                </div>\n                \n            </div>\n        </>\n    );\n}\n\nexport default Howitworks;\n","import React,{useState} from \"react\";\nimport ImageLogo from \"../../../../src/static/images/logo.png\";\nimport { Box, Typography } from \"@mui/material\";\n// import BurgerImage from \"../../../static/images/DrImages/Glyph_ undefined.png\";\nimport \"./About.scss\";\nimport VisualImage from \"../../../static/images/AboutImages/Visual.png\";\n// import Vision from \"../../../static/images/DrImages/vision.png\";\n// import Goal from \"../../../static/images/DrImages/goal.png\";\n// import Inspiring from \"../../../static/images/DrImages/inspiring.png\";\nimport SillyImage from \"../../../static/images/AboutImages/sillyimages.png\";\nimport Alldoctor from \"../../../static/images/AboutImages/Alldoctors.png\";\nimport Whitelogo from \"../../../static/images/AboutImages/whiteFrame.png\";\nimport { LinkedIn } from \"@mui/icons-material\";\nimport { Twitter } from \"@mui/icons-material\";\nimport { Instagram } from \"@mui/icons-material\";\nimport { Facebook } from \"@mui/icons-material\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport logo from \"../../../static/images/icon.png\"\n\n\nconst AboutLanding = () => {\n    const navigate = useNavigate();\n    const [showBurger, setShowBurgerMenu] = useState(true);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        navigate(\"/selectprofiletype\");\n    };\n\n    function toggleMenu () {\n        setShowBurgerMenu(!showBurger);\n        const menu = document.querySelector(\".other-header-content\");\n        menu.classList.toggle(\"show\");\n        showBurger ? (menu.display = \"none\") : (menu.display =\"block\");\n    }\n\n    return (\n        <>\n            <div className=\"screen-container1\">\n            <div className=\"header-container1\">\n            {/* <Box sx={{display:\"flex\" , flexDirection:\"column\",justifyContent:\"center\", alignItems:\"center\"}}> */}\n            <Link to={\"/\"}>\n            <Box component={\"img\"}  className=\"full-logo\"  src={ImageLogo} alt=\"Full Logo\"></Box>\n            </Link>\n                <div className=\"burger-menu\" onClick={toggleMenu}\n                style={{ cursor:\"pointer\" ,}}>\n                    <img src={logo} alt=\"Burger Menu Icon\"/>\n                </div>\n                    {/* <Link to={\"/\"}>\n                        {\" \"}\n                        <Box component={\"img\"} src={ImageLogo}></Box>\n                    </Link> */}\n                    <div className=\"other-header-content\">\n                        <Link to={\"/howitworks\"} style={{ textDecoration: \"none\" }}>\n                            <Typography style={{ color: \"black\" }}><strong>How it works?</strong></Typography>\n                        </Link>\n                        <Typography><strong>About Us</strong></Typography>\n                        <Typography><strong>Pricing</strong></Typography>\n                        <CustomButton\n                            label=\"Sign Up\"\n                            buttonCss={{ width: \"170px\", height: \"38px\", borderRadius: \"20px\" }}\n                            isTransaprent={\"True\"}\n                            handleClick={() => {\n                                navigate(\"/selectsignup\");\n                            }}\n                        ></CustomButton>\n                        <CustomButton\n                            label=\"Login\"\n                            buttonCss={{ width: \"170px\", height: \"38px\", borderRadius: \"20px\" }}\n                            handleClick={handleSubmit}\n                        ></CustomButton>\n                    </div>\n                </div>\n                <div className=\"about-heading\" >\n                    <Typography\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"Playfair Display\",\n                            fontSize: \"3rem\",\n                            fontStyle: \"normal\", \n                        }}\n                    >\n                        About Us \n                    </Typography>\n                </div>\n\n                <div className=\"Heading-about\">\n                    <Typography\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"Playfair Display\",\n                            fontSize: \"1.5rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: 200,\n                        }}\n                    >\n                        HEALING HUMANITY THROUGH SCIENCE AND COMPASSION, ONE PATIENT AT A TIME\n                    </Typography>\n                </div>\n                <div className=\"text9\">\n                    <Typography\n                        style={{\n                            color: \"#525152\",\n                            fontFamily: \"Red Hat Display\",\n                            fontSize: \"1.2em\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                        }}\n                    >\n                        \"Share e Care\" is a healthcare website that focuses on providing innovative\n                        and accessible healthcare solutions to individuals and communities. Our\n                        mission is to bridge the gap between patients and healthcare providers by\n                        leveraging technology to enhance the overall healthcare experience. Our\n                        mission is to create a more connected, efficient, and accessible healthcare\n                        ecosystem. Our platform is dedicated to enhancing patient-doctor\n                        relationships, streamlining diagnostics and treatment, and ultimately\n                        improving health outcomes. we are committed to prioritizing user privacy and\n                        data security. We adhere to the highest industry standards to ensure that\n                        personal health information is protected and used only for legitimate\n                        healthcare purposes.\n                    </Typography>\n                </div>\n            \n                <div className=\"left-right-content\"\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\"\n                    }}\n                    >\n\n                    {/* Left Content */}\n                    <div className=\"left-content\"\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"2rem\", \n                        flex: 1,\n                    }}\n                    >\n                        \n                        <div className=\"patient-module\">\n                            <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Playfair Display\",\n                                fontSize: \"2.2rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                            }}\n                            \n                            >\n                                Patient Module\n                                </Typography>\n                                <div className=\"About-Patient\">\n                                    <Typography\n                                    style={{\n                                        color: \"#525152\",\n                                        fontFamily: \"Red Hat Display\",\n                                        fontSize: \"1.2rem\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"200\",\n                                    }}\n                                    \n                                    >\n                                        \n                                        &#8226; Access Personal Health Records\n                                        \n                                        </Typography>\n                                        <Typography\n                                        \n                                        style={{\n                                            color: \"#525152\",\n                                            fontFamily: \"Red Hat Display\",\n                                            fontSize: \"1.2rem\",\n                                            fontStyle: \"normal\",\n                                            fontWeight: \"200\",\n                                        }}\n                                        \n                                        >\n                                            &#8226; Book Appointments Online.\n                                            </Typography>\n                                            \n                                            <Typography\n                                            \n                                            style={{\n                                                color: \"#525152\",\n                                                fontFamily: \"Red Hat Display\",\n                                                fontSize: \"1.2rem\",\n                                                fontStyle: \"normal\",\n                                                fontWeight: \"200\",\n                                            }}\n                                            \n                                            >\n                                                &#8226; Monitor Vital Signs and Health Metrics\n                                                \n                                                </Typography>\n                                                \n                                                <Typography\n                                                \n                                                style={{\n                                                    color: \"#525152\",\n                                                    fontFamily: \"Red Hat Display\",\n                                                    fontSize: \"1.2rem\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"200\",\n                                                }}\n                                                \n                                                >\n                                                    &#8226; Connect with a Community of Support\n                                                    \n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            \n                                        <div className=\"patient-module\">\n                                            <Typography\n                                            style={{\n                                                color: \"#313033\",\n                                                fontFamily: \"Playfair Display\",\n                                                fontSize: \"2.2rem\",\n                                                fontStyle: \"normal\",\n                                                fontWeight: \"400\",\n                                            }}\n                                            >\n                                                Doctor Module\n                                                \n                                                </Typography>\n                                                \n                                         <div className=\"About-Patient\">\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Virtual Consultations.\n                </Typography>\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Access Patient Records\n                </Typography>\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Prescriptions Management\n                </Typography>\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Collaborate with Colleagues\n                </Typography>\n            </div>\n        </div>\n\n        <div className=\"patient-module\">\n            <Typography\n                style={{\n                    color: \"#313033\",\n                    fontFamily: \"Playfair Display\",\n                    fontSize: \"2.2rem\",\n                    fontStyle: \"normal\",\n                    fontWeight: \"400\",\n                }}\n            >\n                HCF Module\n            </Typography>\n            <div className=\"About-Patient\">\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Appointment Management\n                </Typography>\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Diagnostic Reports and Results\n                </Typography>\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Secure Data Storage\n                </Typography>\n                <Typography\n                    style={{\n                        color: \"#525152\",\n                        fontFamily: \"Red Hat Display\",\n                        fontSize: \"1.2rem\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"200\",\n                    }}\n                >\n                    &#8226; Integration Capabilities\n                </Typography>\n            </div>\n        </div>\n    </div>\n\n    {/* Right Content (Image) */}\n    <div\n        className=\"visualImage\"\n        style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flex: 1,\n        }}\n    >\n        <Box\n            component={\"img\"}\n            src={VisualImage}\n            style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n        />\n    </div>\n    </div>\n\n\n                <div className=\"heading4\">\n                    <Typography\n                        style={{\n                            color: \"#313033\",\n                            fontFamily: \"Playfair Display\",\n                            fontSize: \"3rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                        }}\n                    >\n                        OUR MISSION\n                    </Typography>\n                </div>\n                <div className=\"text9\">\n                    <Typography\n                        style={{\n                            color: \"#525152\",\n                            fontFamily: \"Red Hat Display\",\n                            fontSize: \"1.2rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"200\",\n                        }}\n                    >\n                        Our mission is to transform the healthcare landscape by breaking down\n                        traditional barriers and making healthcare accessible, convenient, and\n                        <br></br> efficient. We are committed to providing a platform where\n                        individuals can access the care they need when they need it, promoting a\n                        healthier and\n                        <br></br>\n                        happier society\n                    </Typography>\n                </div>\n                <div className=\"Sillyimage\">\n                    <Box\n                        component={\"img\"}\n                        src={SillyImage}\n                        style={{width: \"100%\", maxWidth: \"600px\", height: \"auto\", margin: \"0 auto\"}}\n                    ></Box>\n                </div>\n                <div className=\"pink-container\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", padding: \"20px\" }}>\n                    <div className=\"boximage\" style={{ flex: 1, textAlign: \"center\" }}>\n                        <Box\n                            component={\"img\"}\n                            src={Alldoctor}\n                            style={{maxWidth: \"100%\", height: \"auto\"}}\n                        ></Box>\n                    </div>\n                    <div className=\"welcome-heading\" style={{ flex: 1, paddingLeft: \"20px\" }}>\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"playfair Display\",\n                                fontSize: \"2em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"1.2\",\n                            }}\n                        >\n                            Welcome to our medical app,<br></br>\n                            where your health is our priority!\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#313033\",\n                                fontFamily: \"Red Hat Display\",\n                                fontSize: \"1.2em\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"1.6\",\n                            }}\n                        >\n                            Meet our exceptional team behind the innovative healthcare app<br></br>\n                            that is revolutionizing the way you manage your health. <br></br>\n                            Comprised of dedicated professionals from various fields, we are\n                            <br></br>\n                            united by a common goal: to provide you with the best possible <br></br>\n                            care and support on your wellness journey.\n                        </Typography>\n                    </div>\n                </div>\n                <div className=\"red-footer\" style={{ display: \"flex\", flexDirection: \"column\", alignItems:\"center\", padding: \"20px\", backgroundColor: \"#B22222\" }}>\n                    <div className=\"first-ali\" style={{ width: \"100%\", display: \"flex\",flexWrap: \"wrap\", alignItems: \"center\", justifyContent: \"space-between\", gap:\"20px\"}}>\n                        <div className=\"first-half\" style={{  flex: \"0 0 auto\", display: \"flex\",alignItems: \"center\", justifyContent: \"flex-start\"}}>\n                            <Box\n                                component={\"img\"}   \n                                src={Whitelogo}\n                                style={{width: \"40%\", maxWidth:\"35%\", margin: \"0\"}}\n                            ></Box>\n                        </div>\n                        </div>\n                        <div className=\"half-align\" style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"15px\", flex:\"1\",textAlign: \"center\"}}>\n                            <Typography\n                                style={{\n                                    color: \"#FFF\",\n                                    fontFamily: \"Red Hat Display \",\n                                    fontSize: \"16px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"700\",\n                                    lineHeight: \"24px\",\n                                }}\n                            >\n                                Doctor Registration\n                            </Typography>\n                            <Typography\n                                style={{\n                                    color: \"#FFF\",\n                                    fontFamily: \"Red Hat Display \",\n                                    fontSize: \"16px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"700\",\n                                    lineHeight: \"24px\",\n                                }}\n                            >\n                                How it Works?\n                            </Typography>\n                        </div>\n                    <div className=\"hcf-pr\"  style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\", gap: \"15px\", marginTop: \"20px\" }}>\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            HCF Registration\n                        </Typography>\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            Pricing\n                        </Typography>\n                    </div>\n\n                    <div className=\"about-us\" style={{ marginTop: \"20px\" }}>\n                        <Typography\n                            style={{\n                                color: \"#FFF\",\n                                fontFamily: \"Red Hat Display \",\n                                fontSize: \"16px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"700\",\n                                lineHeight: \"24px\",\n                            }}\n                        >\n                            About Us\n                        </Typography>\n                    </div>\n                    <div className=\"social-icons\" style={{ marginTop: \"20px\", display: \"flex\", justifyContent: \"center\", gap: \"15px\"}}>\n                        <LinkedIn style={{ color: \"white\" }} />\n                        <Twitter style={{ color: \"white\" }} />\n                        <Instagram style={{ color: \"white\" }} />\n                        <Facebook style={{ color: \"white\" }} />\n                    </div>\n                </div>\n                {/* </Box> */}\n            </div>\n        </>\n    );\n};\nexport default AboutLanding;\n","// This component will decide if the component can should be rendered or a user should first login\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { useAuthentication } from \"./UserProvider\";\nimport { isTokenValid } from \"../utils/jwtUtils\";\nimport React from \"react\";\nimport Cookies from \"js-cookie\";\n// If user is loggedIn this will redirect the user to the login route\n\nexport const DoctorAuthentication = ({ children }) => {\n    const Authentication = useAuthentication();\n    const location = useLocation();\n    const hasValidToken = isTokenValid();\n    // If user is not logged in it will redirect it to the login page\n    if (!Cookies.get(\"doctorEmail\")&& !Authentication.doctor && !hasValidToken) {\n        return <Navigate to={\"/\"} state={{ path: location?.pathname }} />;\n    }\n    return children;\n};\nexport const PatientAuthentication = ({ children }) => {\n    const Authentication = useAuthentication();\n    const location = useLocation();\n    // If user is not logged in it will redirect it to the login page\n    const hasValidToken = isTokenValid();\n    if (!Cookies.get(\"patientEmail\") && !Authentication.patient && !hasValidToken) {\n        return <Navigate to={\"/\"} state={{ path: location?.pathname }} />;\n    }\n    return children;\n};\n\nexport const HealthCareAuthentication = ({ children }) => {\n    // If user is not logged in it will redirect it to the login page\n    const Authentication = useAuthentication();\n    const hasValidToken = isTokenValid();\n    if (!Cookies.get(\"hcfadmin_Email\") && !Authentication.hcf && !hasValidToken){\n        return <Navigate to={\"/\"} state={{ path: location?.pathname }} />;\n    }\n    return children;\n};\n\nexport const ClinicAuthentication = ({ children }) => {\n    const Authentication = useAuthentication();\n    const location = useLocation();\n    const hasValidToken = isTokenValid();\n    // If user is not logged in it will redirect it to the login page\n    if (!Cookies.get(\"clinicEmail\")&& !Authentication.clinic && !hasValidToken) {\n        return <Navigate to={\"/\"} state={{ path: location?.pathname }} />;\n    }\n    return children;\n};\n\nexport const DiagnostAuthentication = ({ children }) => {\n    const Authentication = useAuthentication();\n    const location = useLocation();\n    const hasValidToken = isTokenValid();\n    // If user is not logged in it will redirect it to the login page\n    if (!Cookies.get(\"diagnostic_Email\")&& !Authentication.diagnost && !hasValidToken) {\n        return <Navigate to={\"/\"} state={{ path: location?.pathname }} />;\n    }\n    return children;\n};\n","import React, { useEffect } from \"react\";\nimport \"./MainDashboard.scss\";\nimport { Box } from \"@mui/material\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\n\nconst MainDashboard = () => {\n    const navigate = useNavigate();\n\n    // const params = useParams();\n    // console.log(params);\n\n    // const NavigationLink = '/patientdashboard/explore';\n\n    useEffect(() => {\n        navigate(\"/patientdashboard/dashboard/explore\");\n        document.getElementById('location-search-container').style.display = \"flex\"\n\n    }, []);\n\n    return (\n    \n            <Box sx={{ width: \"100%\" }}>\n                <Outlet />\n            </Box>\n     \n    );\n};\n\nexport default MainDashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\n\nconst AppointmentDashboard = () => {\n    const navigate = useNavigate();\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"upcoming\"\n            ? \"/patientdashboard/appointment/upcoming\"\n            : localStorage.getItem(\"path\") == \"completed\"\n            ? \"/patientdashboard/appointment/completed\"\n            : localStorage.getItem(\"path\") == \"cancelled\"\n            ? \"/patientdashboard/appointment/cancelled\"\n            : \"/patientdashboard/appointment/upcoming\",\n    );\n\n    // localStorage.getItem('path') =='upcoming' ? '/patientdashboard/appointment/upcoming'\n    // : localStorage.getItem('path') == 'completed' ? '/patientdashboard/appointment/completed'\n    // : localStorage.getItem('path') == 'cancelled' ? '/patientdashboard/appointment/cancelled'\n    // : '/patientdashboard/appointment/upcoming';\n\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n        document.getElementById('location-search-container').style.display = \"none\"\n        // localStorage.setItem('path' , 'upcoming');\n    }, []);\n\n    console.log(\"Entered dashboard appointment\");\n\n    return (\n        <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n            {\" \"}\n            {/* Explore and My activity navbar start */}\n            <Box sx={{ width: \"100%\" }}>\n                <Outlet />\n            </Box>\n        </Box>\n    );\n};\n\nexport default AppointmentDashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { Drafts } from \"@mui/icons-material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport CustomMenuDrawer from \"../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport \"./BodyDashboard.scss\";\nimport MainDashboard from \"../MainDashboard/MainDashboard\";\nimport AppointmentDashboard from \"../PatientAppointment/AppointmentDashboard\";\nimport ManageDashboard from \"../PatientManage/ManageDashboard\";\n\nconst BodyDashboard = () => {\n    // const [fetchActiveComponent , setFetchActiveComponent] = useState('dashboard');\n    const [activeComponent, setActiveComponent] = useState();\n    const [activeItem, setActiveItem] = useState();\n    const [profile, setProfile] = useState(\n        localStorage.getItem(\"activeComponent\") === \"dashboard\"\n            ? \"/patientdashboard/dashboard/profile\"\n            : localStorage.getItem(\"activeComponent\") === \"appointment\"\n            ? \"/patientdashboard/appointment/profile\"\n            : localStorage.getItem(\"activeComponent\") === \"manage\"\n            ? \"/patientdashboard/manage/profile\"\n            : null,\n    );\n\n    console.log(\"Navigate to profile component : \",profile)\n\n    const drawerList1 = [\n        { name: \"Dashboard\", icon: <Drafts /> },\n        { name: \"Appointment\", icon: <PersonIcon /> },\n        { name: \"Manage\", icon: <SettingsIcon /> },\n    ];\n    const drawerComponentList = {\n        // dashboard: <MainDashboard/>,\n        dashboard: <MainDashboard />,\n        appointment: <AppointmentDashboard />,\n        manage: <ManageDashboard />,\n    };\n\n    useEffect(() => {\n\n        localStorage.getItem(\"activeComponent\") === \"appointment\"\n            ? setActiveComponent(drawerComponentList.appointment)\n            : localStorage.getItem(\"activeComponent\") === \"manage\"\n            ? setActiveComponent(drawerComponentList.manage)\n            : setActiveComponent(drawerComponentList.dashboard);\n    }, []);\n\n    return (\n        <>\n            <div className=\"usage\">\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomMenuDrawer\n                            headerLabel={\"custom drawer\"}\n                            list1={drawerList1}\n                            selectedItems={activeItem}\n                            profilepath={\"patient\"}\n                            handleOnMenuSelect={(item) => {\n                                setActiveComponent(drawerComponentList[item.toLowerCase()]);\n                                setActiveItem(item);\n                                console.log(\"handle on menu select\", item);\n                            }}\n                        >\n                            {activeComponent}\n                        </CustomMenuDrawer>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default BodyDashboard;\n","import { \n    Box, \n    CircularProgress, \n    Grid, \n    Typography, \n    Card, \n    CardContent,\n    Chip,\n    Stack,\n    Paper,\n    IconButton,\n    Tooltip,\n    Avatar,\n    Button,\n    Divider\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport CustomTextField from \"../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport \"./profile.scss\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport dayjs from \"dayjs\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\n\nconst Profile = () => {\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const [isEditing, setIsEditing] = useState(false);\n    const [profileLink, setProfileLink] = useState(\"\");\n    const [isopen, setIsopen] = useState(false);\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackStatus, setSnackStatus] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [contactLink, setContactLink] = useState(\"\");\n    const [profileUpdate, setProfileUpdate] = useState({\n        email: localStorage.getItem(\"patient_Email\"),\n        first_name: null,\n        last_name: null,\n        middle_name: null,\n        added_by: \"self\",\n        gender: null,\n        DOB: null,\n        profile_picture: null,\n    });\n    const navigate = useNavigate();\n    const handleSubmit = (e) => {\n        fetchData();\n    };\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/updatePateintProfile\",\n                JSON.stringify(profileUpdate),\n            );\n            setSnackMessage(\"Updated Successfully\");\n            setSnackStatus(\"success\");\n            setIsopen(true);\n            const updatedProfilePic = response?.data?.response?.profile_picture;\n\n            if (updatedProfilePic) {\n                localStorage.setItem(\"profile\", updatedProfilePic);\n                // Dispatch custom event to notify other components\n                window.dispatchEvent(new CustomEvent('profileUpdated', {\n                    detail: { profile: updatedProfilePic }\n                }));\n            }\n            console.log(\"Success  : \", response);\n        } catch (error) {\n            console.log(error);\n            setSnackMessage(\"Error\");\n            setSnackStatus(\"error\");\n            setIsopen(true);\n        } finally {\n            setLoading(false);\n            setIsEditing(false);\n        }\n    };\n\n    console.log(\"Profile Update : \", profileUpdate);\n\n    const fetchDataProfile = async () => {\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patientprofile\",\n                JSON.stringify({\n                    suid: localStorage.getItem(\"patient_suid\"),\n                }),\n            );\n            console.log(\"Patient Profile Details : \", response?.data?.response[0]);\n            const profileData = response?.data?.response[0];\n            setProfileUpdate({\n                email: profileData?.email,\n                first_name: profileData?.first_name,\n                last_name: profileData?.last_name,\n                middle_name: profileData?.middle_name,\n                added_by: \"self\",\n                gender: profileData?.gender,\n                DOB: profileData?.DOB,\n                profile_picture: profileData?.profile_picture,\n            });\n\n            // Update profile image in localStorage and notify other components\n            if (profileData?.profile_picture) {\n                localStorage.setItem(\"profile\", profileData.profile_picture);\n                window.dispatchEvent(new CustomEvent('profileUpdated', {\n                    detail: { profile: profileData.profile_picture }\n                }));\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        setProfileLink(\n            localStorage.getItem(\"activeComponent\") === \"dashboard\"\n                ? \"/patientdashboard/dashboard/profile\"\n                : localStorage.getItem(\"activeComponent\") === \"appointment\"\n                ? \"/patientdashboard/appointment/profile\"\n                : localStorage.getItem(\"activeComponent\") === \"manage\"\n                ? \"/patientdashboard/manage/profile\"\n                : null,\n        );\n\n        setContactLink(\n            localStorage.getItem(\"activeComponent\") === \"dashboard\"\n                ? \"/patientdashboard/dashboard/contact\"\n                : localStorage.getItem(\"activeComponent\") === \"appointment\"\n                ? \"/patientdashboard/appointment/contact\"\n                : localStorage.getItem(\"activeComponent\") === \"manage\"\n                ? \"/patientdashboard/manage/contact\"\n                : null,\n        );\n        fetchDataProfile();\n    }, []);\n\n    const handleProfilePictureChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n\n            reader.onloadend = () => {\n                const base64Data = reader.result.split(\",\")[1]; // Extract base64 without metadata\n                setProfileUpdate({\n                    ...profileUpdate,\n                    profile_picture: base64Data, // Store the base64 representation\n                });\n            };\n\n            reader.readAsDataURL(file); // Read the file as Data URL\n        }\n    };\n\n    const toggleEditMode = () => {\n        setIsEditing(!isEditing);\n    };\n\n    return (\n        <Box sx={{ width: \"100%\", padding: \"24px\", backgroundColor: \"#ffffff\", minHeight: \"100vh\" }}>\n            <CustomSnackBar isOpen={isopen} message={snackMessage} type={snackStatus} />\n            \n            {/* Header Section */}\n            <Paper \n                elevation={0} \n                sx={{ \n                    padding: \"24px\", \n                    marginBottom: \"24px\",\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                    <Typography variant=\"h4\" sx={{ \n                        fontWeight: 600, \n                        color: \"#313033\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 1\n                    }}>\n                        <PersonIcon sx={{ color: \"#E72B4A\" }} />\n                        Profile Information\n                    </Typography>\n                    \n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                        <Chip \n                            label={`Profile ID: SRC0001`}\n                            sx={{ \n                                backgroundColor: \"#E72B4A\",\n                                color: \"white\",\n                                fontWeight: 500\n                            }}\n                        />\n                        <Tooltip title=\"Close\">\n                            <IconButton \n                                onClick={() => navigate(\"/patientdashboard/dashboard/explore\")}\n                                sx={{ \n                                    backgroundColor: \"#f5f5f5\",\n                                    \"&:hover\": { backgroundColor: \"#e0e0e0\" }\n                                }}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                </Box>\n\n                {/* Navigation Tabs */}\n                <Box className=\"NavBar-Box-profile\" sx={{ display: \"flex\", gap: 1 }}>\n                    <NavLink \n                        to={profileLink}\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                        Profile Information\n                    </NavLink>\n                    <NavLink \n                        to={contactLink}\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                        Contact Details\n                    </NavLink>\n                </Box>\n            </Paper>\n\n            {/* Edit Button */}\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", marginBottom: \"24px\" }}>\n                <CustomButton\n                    label={isEditing ? \"Cancel Edit\" : \"Edit Profile\"}\n                    isTransaprent={!isEditing}\n                    leftIcon={<EditIcon />}\n                    buttonCss={{\n                        borderRadius: \"8px\",\n                        padding: \"12px 24px\",\n                        fontWeight: 500,\n                        border: isEditing ? \"1px solid #d32f2f\" : \"1px solid #E72B4A\",\n                        color: isEditing ? \"#d32f2f\" : \"#E72B4A\"\n                    }}\n                    handleClick={toggleEditMode}\n                />\n            </Box>\n\n            {/* Main Content Card */}\n            <Card \n                elevation={0} \n                sx={{ \n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    overflow: \"hidden\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Grid container spacing={4}>\n                        {/* Profile Picture Section */}\n                        <Grid item xs={12} md={3}>\n                            <Box sx={{ \n                                display: \"flex\", \n                                flexDirection: \"column\", \n                                alignItems: \"center\",\n                                textAlign: \"center\"\n                            }}>\n                                <Box sx={{ position: \"relative\", marginBottom: \"16px\" }}>\n                                    <Avatar\n                                        alt=\"Profile Picture\"\n                                        src={\n                                            profileUpdate?.profile_picture\n                                                ? `data:image/jpeg;base64,${profileUpdate.profile_picture}`\n                                                : \"/images/avatar.png\"\n                                        }\n                                        sx={{ \n                                            width: 180, \n                                            height: 180,\n                                            border: \"4px solid #E72B4A\",\n                                            boxShadow: \"0 8px 24px rgba(231, 43, 74, 0.2)\",\n                                            objectFit: \"cover\"\n                                        }}\n                                        onError={(e) => {\n                                            console.log(\"Avatar image failed to load, using fallback\");\n                                            e.target.src = \"/images/avatar.png\";\n                                        }}\n                                    />\n                                    {isEditing && (\n                                        <Tooltip title=\"Change Profile Picture\">\n                                            <IconButton\n                                                component=\"label\"\n                                                sx={{\n                                                    position: \"absolute\",\n                                                    bottom: 8,\n                                                    right: 8,\n                                                    backgroundColor: \"#E72B4A\",\n                                                    color: \"white\",\n                                                    \"&:hover\": {\n                                                        backgroundColor: \"#c62828\"\n                                                    },\n                                                    width: 40,\n                                                    height: 40\n                                                }}\n                                            >\n                                                <CameraAltIcon fontSize=\"small\" />\n                                                <input\n                                                    type=\"file\"\n                                                    accept=\"image/*\"\n                                                    hidden\n                                                    onChange={handleProfilePictureChange}\n                                                />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                </Box>\n                                \n                                <Typography variant=\"h6\" sx={{ \n                                    fontWeight: 600, \n                                    color: \"#313033\",\n                                    marginBottom: \"8px\"\n                                }}>\n                                    {profileUpdate?.first_name} {profileUpdate?.last_name}\n                                </Typography>\n                                \n                                <Typography variant=\"body2\" sx={{ \n                                    color: \"#666\",\n                                    marginBottom: \"16px\"\n                                }}>\n                                    {profileUpdate?.email}\n                                </Typography>\n\n                                {isEditing && (\n                                    <Button\n                                        component=\"label\"\n                                        variant=\"outlined\"\n                                        startIcon={<CameraAltIcon />}\n                                        sx={{\n                                            borderColor: \"#E72B4A\",\n                                            color: \"#E72B4A\",\n                                            \"&:hover\": {\n                                                borderColor: \"#c62828\",\n                                                backgroundColor: \"rgba(231, 43, 74, 0.04)\"\n                                            }\n                                        }}\n                                    >\n                                        Change Photo\n                                        <input\n                                            type=\"file\"\n                                            accept=\"image/*\"\n                                            hidden\n                                            onChange={handleProfilePictureChange}\n                                        />\n                                    </Button>\n                                )}\n                            </Box>\n                        </Grid>\n\n                        {/* Form Section */}\n                        <Grid item xs={12} md={9}>\n                            <Typography variant=\"h6\" sx={{ \n                                fontWeight: 600, \n                                color: \"#313033\",\n                                marginBottom: \"24px\"\n                            }}>\n                                Personal Information\n                            </Typography>\n\n                            <Stack spacing={3}>\n                                {/* First Row - Name Fields */}\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <CustomTextField\n                                            id=\"first-name\"\n                                            label=\"First Name\"\n                                            isDisabled={!isEditing}\n                                            defaultValue={profileUpdate?.first_name}\n                                            CustomValue={profileUpdate?.first_name}\n                                            helperText=\"\"\n                                            isValid\n                                            onChange={(event) => {\n                                                setProfileUpdate({\n                                                    ...profileUpdate,\n                                                    first_name: event?.target?.value,\n                                                });\n                                            }}\n                                            textcss={{\n                                                width: \"100%\",\n                                                height: \"56px\",\n                                            }}\n                                            sx={{\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <CustomTextField\n                                            id=\"middle-name\"\n                                            label=\"Middle Name\"\n                                            isDisabled={!isEditing}\n                                            defaultValue={profileUpdate?.middle_name}\n                                            CustomValue={profileUpdate?.middle_name}\n                                            helperText=\"\"\n                                            isValid\n                                            onChange={(event) => {\n                                                setProfileUpdate({\n                                                    ...profileUpdate,\n                                                    middle_name: event?.target?.value,\n                                                });\n                                            }}\n                                            textcss={{\n                                                width: \"100%\",\n                                                height: \"56px\",\n                                            }}\n                                            sx={{\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                            }}\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                {/* Second Row - Last Name and DOB */}\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <CustomTextField\n                                            id=\"last-name\"\n                                            label=\"Last Name\"\n                                            isDisabled={!isEditing}\n                                            defaultValue={profileUpdate?.last_name}\n                                            CustomValue={profileUpdate?.last_name}\n                                            helperText=\"\"\n                                            isValid\n                                            onChange={(event) => {\n                                                setProfileUpdate({\n                                                    ...profileUpdate,\n                                                    last_name: event?.target?.value,\n                                                });\n                                            }}\n                                            textcss={{\n                                                width: \"100%\",\n                                                height: \"56px\",\n                                            }}\n                                            sx={{\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                            <DatePicker\n                                                value={profileUpdate?.DOB ? dayjs(profileUpdate.DOB) : null}\n                                                disabled={!isEditing}\n                                                label=\"Date of Birth\"\n                                                sx={{ \n                                                    width: \"100%\",\n                                                    \"& .MuiOutlinedInput-root\": {\n                                                        \"& fieldset\": { border: \"none\" },\n                                                        \"&:hover fieldset\": { border: \"none\" },\n                                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                        borderBottom: \"1px solid #e0e0e0\",\n                                                        borderRadius: 0,\n                                                        \"&:hover\": {\n                                                            borderBottom: \"2px solid #E72B4A\",\n                                                        },\n                                                        \"&.Mui-focused\": {\n                                                            borderBottom: \"2px solid #E72B4A\",\n                                                        },\n                                                    },\n                                                    \"& .MuiInputLabel-root\": {\n                                                        \"&.Mui-focused\": {\n                                                            color: \"#E72B4A\",\n                                                        },\n                                                    },\n                                                }}\n                                                onChange={(item) => {\n                                                    const formattedDate = item\n                                                        ? item.format(\"YYYY-MM-DD\")\n                                                        : null;\n                                                    setProfileUpdate({\n                                                        ...profileUpdate,\n                                                        DOB: formattedDate,\n                                                    });\n                                                }}\n                                            />\n                                        </LocalizationProvider>\n                                    </Grid>\n                                </Grid>\n\n                                {/* Third Row - Gender */}\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <CustomDropdown\n                                            label=\"Gender\"\n                                            isDisabled={!isEditing}\n                                            items={[\"Male\", \"Female\", \"Rather Not Say\"]}\n                                            activeItem={profileUpdate?.gender || \"Select Gender\"}\n                                            handleChange={(selectedValue) => {\n                                                setProfileUpdate({ ...profileUpdate, gender: selectedValue });\n                                            }}\n                                            dropdowncss={{\n                                                width: \"100%\",\n                                                color: isEditing ? \"#000\" : \"#787579\",\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    height: \"56px\",\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiSelect-select\": {\n                                                    padding: \"16px 14px\",\n                                                    display: \"flex\",\n                                                    alignItems: \"center\",\n                                                },\n                                                \"& .MuiSelect-icon\": {\n                                                    color: \"#666\",\n                                                },\n                                            }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Stack>\n                        </Grid>\n                    </Grid>\n\n                    {/* Action Buttons */}\n                    {isEditing && (\n                        <Box sx={{ \n                            display: \"flex\", \n                            justifyContent: \"center\", \n                            marginTop: \"32px\",\n                            paddingTop: \"24px\",\n                            borderTop: \"1px solid #e0e0e0\"\n                        }}>\n                            <CustomButton\n                                label={\n                                    loading ? (\n                                        <CircularProgress size={24} color=\"inherit\" />\n                                    ) : (\n                                        \"Save Changes\"\n                                    )\n                                }\n                                isTransaprent={false}\n                                isDisabled={loading}\n                                isElevated={false}\n                                handleClick={handleSubmit}\n                                buttonCss={{\n                                    width: \"180px\",\n                                    height: \"48px\",\n                                    borderRadius: \"8px\",\n                                    fontWeight: 600\n                                }}\n                            />\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n        </Box>\n    );\n};\n\nexport default Profile;\n","import { Box, Typography, Skeleton } from \"@mui/material\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport dotLogo from \"../../static/images/dotIcon.png\";\nimport DrImage from \"../../static/images/DrImages/drProfileImage.png\";\nimport CustomModal from \"../../components/CustomModal/custom-modal\";\nimport BookAppointmentModal from \"./BookingAppointmentModal\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport { getProfileImageSrc } from \"../../utils/imageUtils\";\n\nconst ContainerOne = ({ Fname, Mname, Lname, Qualification,hospital, DrImage, worktime, hcfDoc = false }) => {\n    const useStyles = makeStyles({\n        drname: {\n            color: \"#313033\",\n            fontFamily: \"Poppins\",\n            fontSize: \"20px\",\n            fontStyle: \"normal\",\n            fontWeight: \"900\",\n            lineHeight: \"30px\",\n        },\n        specialist: {\n            fontFamily: \"Poppins\",\n            fontSize: \"16px\",\n            fontStyle: \"normal\",\n            fontWeight: \"400\",\n            lineHeight: \"24px\",\n        },\n        cardContainer: {\n            display: \"flex\",\n            flexWrap: \"nowrap\",\n            width: \"100%\",\n            justifyContent: \"space-between\",\n        },\n        BookAppointmentContainer: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n        BookAppointmentContainerDetails: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-end\",\n        },\n    });\n\n    const classes = useStyles();\n    const [openDialog, setOpenDialog] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const params = useParams();\n    let ID;\n    if (params.resID) {\n        ID = params.resID;\n    } else if (params.hcddocid) {\n        ID = params.hcddocid;\n    }\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Simulate API call or data fetch\n        const fetchData = () => {\n            setTimeout(() => {\n                setIsLoading(false); // Set loading to false after data fetch\n            }, 2000); // Simulate 2 seconds loading time\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <Box sx={{ width: \"100%\" }} id={\"book_appointment_modal_container\"}>\n            {/* Button Container */}\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <CustomButton\n                    label=\"Back\"\n                    isTransaprent={true}\n                    leftIcon={<ChevronLeftIcon />}\n                    buttonCss={{ border: \"none\" }}\n                    handleClick={() => navigate(-1)}\n                />\n                <Box>\n                    <Box component={\"img\"} src={dotLogo} alt=\"Dot logo...\" />\n                </Box>\n            </Box>\n\n            {/* Card and working time container */}\n            <Box className={classes.cardContainer}>\n                {/* Doctor Card */}\n                <Box sx={{ display: \"flex\", marginTop: \"1%\", width: \"70%\" }}>\n                    {/* Dr Image */}\n                    <Box sx={{ width: \"213px\", height: \"184px\" }}>\n                        {isLoading ? (\n                            <Skeleton\n                                variant=\"rectangular\"\n                                width=\"100%\"\n                                height=\"100%\"\n                                sx={{ borderRadius: \"8px\" }}\n                            />\n                        ) : (\n                            <Box\n                                component={\"img\"}\n                                src={getProfileImageSrc(DrImage, DrImage)}\n                                sx={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                    borderRadius: \"8px\",\n                                    padding: \"2%\",\n                                }}\n                            />\n                        )}\n                    </Box>\n\n                    {/* Dr Details */}\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            width: \"100%\",\n                            alignItems: \"center\",\n                            padding: \"2%\",\n                        }}\n                    >\n                        {isLoading ? (\n                            <Box>\n                                <Skeleton width={150} height={30} />\n                                <Skeleton width={100} height={20} sx={{ marginTop: 1 }} />\n                                <Skeleton width={120} height={20} sx={{ marginTop: 1 }} />\n                            </Box>\n                        ) : (\n                            <Box>\n                                <Typography className={classes.drname}>\n                                    {Fname} {Mname} {Lname}\n                                </Typography>\n                                <Typography\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"16px\",\n                                        fontWeight: \"400\",\n                                        color: \"#AEAAAE\",\n                                    }}\n                                >\n                                    {Qualification}\n                                </Typography>\n                                <Typography\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"16px\",\n                                        fontWeight: \"400\",\n                                        color: \"#AEAAAE\",\n                                    }}\n                                >\n                                    {hospital}\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Box>\n\n                {/* Working time container */}\n                <Box className={classes.BookAppointmentContainer}>\n                    <Box className={classes.BookAppointmentContainerDetails}>\n                        {isLoading ? (\n                            <Skeleton width={200} height={30} />\n                        ) : (\n                            <Typography\n                                sx={{\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"20px\",\n                                    fontWeight: \"500\",\n                                    \n                                }}\n                            >\n                                Working Time\n                            </Typography>\n                        )}\n                        {isLoading ? (\n                            <Skeleton width={300} height={20} />\n                        ) : (\n                            <Typography\n                                sx={{\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"16px\",\n                                    fontWeight: \"400\",\n                                    color: \"#AEAAAE\",\n                                }}\n                            >\n                                {worktime}\n                            </Typography>\n                        )}\n                        {!isLoading && (\n                            <CustomButton\n                                label={\"Book Appointment\"}\n                                isElevated\n                                handleClick={() => setOpenDialog(!openDialog)}\n                            />\n                        )}\n                        <CustomModal\n                            isOpen={openDialog}\n                            title={\"Book Appointment\"}\n                            conditionOpen={setOpenDialog}\n                        >\n                            <Box className=\"Book-appointment-modal\">\n                                <BookAppointmentModal drID={ID} hcfDoc={hcfDoc} />\n                            </Box>\n                        </CustomModal>\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nContainerOne.propTypes = {\n    Fname: PropTypes.string.isRequired,\n    Mname: PropTypes.string.isRequired,\n    Lname: PropTypes.string.isRequired,\n    Qualification: PropTypes.string.isRequired,\n};\n\nexport default ContainerOne;\n","import React from \"react\";\nimport { Box, Skeleton, Typography } from \"@mui/material\";\nimport personIcon from \"../../static/images/person.png\";\nimport bagIcon from \"../../static/images/bag.png\";\nimport starIcon from \"../../static/images/star.png\";\nimport messageIcon from \"../../static/images/message.png\";\n\nconst ContainerTwo = ({ isLoading, doctorTotalconsultations, doctorTotalReviews, doctorTotalExperience, doctorAverageRating }) => {\n  // Data structure for consistent rendering\n  const data = [\n    {\n      icon: personIcon,\n      value: doctorTotalconsultations || \"0\",\n      label: \"Consultaions\",\n    },\n    {\n      icon: bagIcon,\n      value: doctorTotalExperience || \"0\",\n      label: \"Experience\",\n    },\n    {\n      icon: starIcon,\n      value: doctorAverageRating || \"0\",\n      label: \"Rating\",\n    },\n    {\n      icon: messageIcon,\n      value: doctorTotalReviews || \"0\",\n      label: \"Reviews\",\n    },\n  ];\n\n  return (\n    <Box sx={{ width: \"100%\" }}>\n      {isLoading ? (\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"5%\",\n            width: \"100%\",\n          }}\n        >\n          {data.map((_, index) => (\n            <Box\n              key={index}\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n                width: \"25%\",\n              }}\n            >\n              <Skeleton\n                variant=\"circular\"\n                width={56}\n                height={56}\n                sx={{ backgroundColor: \"#FDEAED\", marginBottom: \"10px\" }}\n              />\n              <Skeleton variant=\"text\" width=\"50%\" height={20} />\n              <Skeleton variant=\"text\" width=\"70%\" height={15} />\n            </Box>\n          ))}\n        </Box>\n      ) : (\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: \"5%\",\n            width: \"100%\",\n          }}\n        >\n          {data.map((item, index) => (\n            <Box\n              key={index}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                width: \"25%\",\n              }}\n            >\n              <Box\n                sx={{\n                  height: \"56px\",\n                  width: \"56px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  backgroundColor: \"#FDEAED\",\n                  borderRadius: \"50%\",\n                  marginBottom: \"10px\",\n                }}\n              >\n                <Box component=\"img\" src={item.icon} alt={item.label} />\n              </Box>\n              <Typography\n                component=\"h3\"\n                sx={{\n                  fontFamily: \"Poppins\",\n                  fontSize: \"20px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"30px\",\n                  color: \"#E72B4A\",\n                }}\n              >\n                {item.value}\n              </Typography>\n              <Typography\n                component=\"h4\"\n                sx={{\n                  fontFamily: \"Poppins\",\n                  fontSize: \"16px\",\n                  fontWeight: \"400\",\n                  lineHeight: \"24px\",\n                  color: \"#313033\",\n                }}\n              >\n                {item.label}\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default ContainerTwo;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Typography, Link, Skeleton } from \"@mui/material\";\nimport personIcon from \"../../static/images/person.png\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport StarBorderIcon from \"@mui/icons-material/StarBorder\";\n\nconst ContainerThree = ({ description, review }) => {\n    const [loading, setLoading] = useState(true);\n    const [showAll, setShowAll] = useState(false);\n\n    useEffect(() => {\n        // Simulate a loading delay\n        const timer = setTimeout(() => {\n            setLoading(false);\n        }, 2000);\n        return () => clearTimeout(timer);\n    }, []);\n\n    const dummyReviews = [\n        {\n            profile_picture: personIcon,\n            first_name: \"John Doe\",\n            review_type: 4,\n            description: \"Great service! Would highly recommend.\",\n        },\n        {\n            profile_picture: personIcon,\n            first_name: \"Jane Smith\",\n            review_type: 5,\n            description: \"Amazing experience, exceeded my expectations.\",\n        },\n        {\n            profile_picture: personIcon,\n            first_name: \"romen rick\",\n            review_type: 3,\n            description: \"Amazing experience, exceeded my expectations.\",\n        },\n        {\n            profile_picture: personIcon,\n            first_name: \"hank pimp\",\n            review_type: 2,\n            description: \" Did not exceeded my expectations.\",\n        },\n    ];\n\n    const reviewsToShow =\n        Array.isArray(review) && review.length > 0\n            ? showAll\n                ? review\n                : review.slice(0, 2)\n            : dummyReviews;\n\n    return (\n        <Box sx={{ width: \"100%\", display: \"flex\", marginTop: \"5%\" }}>\n            {/* About me container */}\n            <Box\n                sx={{\n                    width: \"50%\",\n                    height: \"355px\",\n                    borderRadius: \"8px\",\n                    marginRight: \"1%\",\n                    border: \"1px solid #E6E1E5\",\n                    textAlign: \"left\",\n                    padding: \"2%\",\n                }}\n            >\n                {loading ? (\n                    <Skeleton variant=\"text\" width=\"60%\" height={30} />\n                ) : (\n                    <Typography\n                        sx={{\n                            fontFamily: \"Poppins\",\n                            fontSize: \"25px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"30px\",\n                            padding: \"1%\",\n                        }}\n                        component={\"h2\"}\n                    >\n                        About Me\n                    </Typography>\n                )}\n\n                {loading ? (\n                    <Skeleton variant=\"rectangular\" width=\"100%\" height={100} />\n                ) : (\n                    <Typography component={\"h3\"}>\n                        {description ||\n                            \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable.\"}\n                    </Typography>\n                )}\n            </Box>\n\n            {/* Reviews container */}\n            <Box\n                sx={{\n                    width: \"50%\",\n                    height: \"355px\",\n                    borderRadius: \"8px\",\n                    marginLeft: \"1%\",\n                    border: \"1px solid #E6E1E5\",\n                    padding: \"2%\",\n                }}\n            >\n                {/* Header */}\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    {loading ? (\n                        <Skeleton variant=\"text\" width=\"40%\" height={30} />\n                    ) : (\n                        <Typography component=\"h2\" sx={{ padding: \"1%\" }}>\n                            Reviews\n                        </Typography>\n                    )}\n\n                    {loading ? (\n                        <Skeleton variant=\"text\" width=\"20%\" height={30} />\n                    ) : (\n                        <Link\n                            onClick={() => setShowAll(!showAll)}\n                            style={{\n                                cursor: \"pointer\",\n                                textDecoration: \"none\",\n                                color: \"#E72B4A\",\n                                padding: \"1%\",\n                            }}\n                        >\n                            {showAll ? \"Show Less\" : \"View All\"}\n                        </Link>\n                    )}\n                </Box>\n\n                {/* Review List */}\n                <Box\n                    sx={{\n                        marginTop: \"1%\",\n                        height: \"calc(100% - 50px)\", // Adjust height for header\n                        overflowY: \"auto\",\n                    }}\n                >\n                    {loading\n                        ? [1, 2].map((_, index) => (\n                              <Box\n                                  key={index}\n                                  sx={{\n                                      margin: \"2% 1% 1% 1%\",\n                                      width: \"98%\",\n                                      borderBottom: \"1px solid #E6E1E5\",\n                                  }}\n                              >\n                                  <Skeleton variant=\"rectangular\" width=\"100%\" height={50} />\n                                  <Skeleton\n                                      variant=\"text\"\n                                      width=\"80%\"\n                                      height={20}\n                                      sx={{ marginTop: \"8px\" }}\n                                  />\n                              </Box>\n                          ))\n                        : reviewsToShow.map((reviews, index) => (\n                              <Box\n                                  key={index}\n                                  sx={{\n                                      margin: \"2% 1% 1% 1%\",\n                                      width: \"98%\",\n                                      borderBottom: \"1px solid #E6E1E5\",\n                                  }}\n                              >\n                                  <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                                      <Box sx={{ display: \"flex\" }}>\n                                          <Box\n                                              component=\"img\"\n                                              alt=\"image\"\n                                              src={reviews.profile_picture || personIcon}\n                                              sx={{\n                                                  width: \"40px\",\n                                                  height: \"40px\",\n                                                  borderRadius: \"50%\",\n                                              }}\n                                          />\n                                          <Typography\n                                              sx={{\n                                                  marginLeft: \"10%\",\n                                                  fontFamily: \"Poppins\",\n                                                  fontSize: \"16px\",\n                                                  fontWeight: \"600\",\n                                                  lineHeight: \"24px\",\n                                              }}\n                                          >\n                                              {reviews.first_name || \"Anonymous\"}\n                                          </Typography>\n                                      </Box>\n                                      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                                          {Array.from({ length: 5 }).map((_, starIndex) =>\n                                              starIndex < reviews.review_type ? (\n                                                  <StarIcon\n                                                      key={starIndex}\n                                                      sx={{ color: \"#E7B24A\" }}\n                                                  />\n                                              ) : (\n                                                  <StarBorderIcon\n                                                      key={starIndex}\n                                                      sx={{ color: \"#E7B24A\" }}\n                                                  />\n                                              ),\n                                          )}\n                                      </Box>\n                                  </Box>\n                                  <Typography\n                                      sx={{\n                                          textAlign: \"left\",\n                                          marginTop: \"2%\",\n                                          fontFamily: \"Poppins\",\n                                          fontSize: \"18px\",\n                                          fontWeight: \"400\",\n                                          lineHeight: \"21px\",\n                                          color: \"#939094\",\n                                      }}\n                                  >\n                                      {reviews.description || \"No review provided.\"}\n                                  </Typography>\n                              </Box>\n                          ))}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ContainerThree;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@mui/styles\";\nimport \"./drdetailscard.scss\";\nimport personIcon from \"../../static/images/person.png\";\nimport messageIcon from \"../../static/images/message.png\";\nimport SchoolIcon from \"@mui/icons-material/School\"\nimport CardMembershipIcon from \"@mui/icons-material/CardMembership\";\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\nimport EmojiEventsIcon from \"@mui/icons-material/EmojiEvents\";\n\n\nconst ContainerFour = ({\n    Qualification,\n    University,\n    YearOfQualification,\n    doctorLicense,\n    doctorAward,\n    doctorExperience,\n}) => {\n    const useStyles = makeStyles({\n        drname: {\n            color: \"#313033\",\n            fontFamily: \"Poppins\",\n            fontSize: \"20px\",\n            fontStyle: \"normal\",\n            fontWeight: \"900\",\n            lineHeight: \"30px\",\n        },\n        specialist: {\n            fontFamily: \"Poppins\",\n            fontSize: \"16px\",\n            fontStyle: \"normal\",\n            fontWeight: \"400\",\n            lineHeight: \"24px\",\n        },\n        cardContainer: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            width: \"100%\",\n            justifyContent: \"space-between\",\n        },\n        BookAppointmentContainer: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n        BookAppointmentContainerDetails: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-end\",\n        },\n        fourthContainer: {\n            width: \"100%\",\n            border: \"1px solid #E6E1E5 \",\n            display: \"flex\",\n            borderRadius: \"8px\",\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            marginTop: \"1%\",\n        },\n        textField: {\n            fontFamily: \"Poppins\",\n            fontSize: \"30px\",\n            fontStyle: \"normal\",\n            fontWeight: \"500\",\n            lineHeight: \"30px\",\n            color: \"#313033\",\n            padding: \"2% 0 1% 1%\",\n        },\n        fourthInnerContainer: {\n            display: \"flex\",\n            width: \"100%\",\n            alignItems: \"flex-start\",\n            padding: \"1%\",\n        },\n        logoDesign: {\n            height: \"70px\",\n            width: \"70px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: \"50px\",\n            backgroundColor: \"#FDEAED\",\n        },\n        // universityFields : {\n        //     display: \"flex\",\n        //     flexDirection: \"column\",\n        //     alignItems: \"flex-start\",\n        // }\n    });\n\n    const classes = useStyles();\n    // const navigate = useNavigate();\n    // console.log(data);\n    // const handleOpen = (condition) => {\n    //     setOpenDialog(condition);\n    // };\n\n    return (\n        <>\n            <Box className={classes.fourthContainer}>\n                <Typography\n                    sx={{\n                        fontFamily: \"Poppins\",\n                        fontSize: \"20px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        lineHeight: \"30px\",\n                    }}\n                    className={classes.textField}\n                >\n                    Education\n                </Typography>\n                <Box className={classes.fourthInnerContainer}>\n                    {/* Image container */}\n                    <Box\n                        sx={{\n                            width: \"150px\",\n                            height: \"150px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#F0F0F0\",\n                        }}\n                    >\n                        <SchoolIcon\n                            style={{\n                                fontSize: \"30px\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                color: \"#E72B4A\",\n                            }}\n                        />\n                    </Box>\n                    {/* Details Fields */}\n                    <Box sx={{ width: \"100%\" }}>\n                        <Box\n                            classes={classes.universityFields}\n                            sx={{\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                alignItems: \"flex-start\",\n                                paddingLeft: \"1%\",\n                                width: \"100%\",\n                            }}\n                        >\n                            <Typography\n                                component={\"h3\"}\n                                sx={{\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"18px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"28px\",\n                                }}\n                            >\n                                {University || \"NA\"}\n                                {/* University Name */}\n                            </Typography>\n                            <Typography\n                                component={\"h3\"}\n                                sx={{\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"14px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"21px\" /* 150% */,\n                                    letterSpacing: \"0.07px\",\n                                    color: \"#939094\",\n                                }}\n                            >\n                                Graduation in specialization-Degree : {Qualification || \"NA\"}\n                            </Typography>\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"flex-start\",\n                                paddingLeft: \"1%\",\n                                marginTop: \"1.5%\",\n                            }}\n                        >\n                            <Typography></Typography>\n                            <Typography\n                                sx={{\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"12px\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"18px\" /* 150% */,\n                                    letterSpacing: \"0.096px\",\n                                }}\n                            >\n                                {YearOfQualification || \"NA\"}\n                            </Typography>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n\n            {/* 4th container 2nd card  */}\n\n            <Box className={classes.fourthContainer}>\n                <Typography\n                    sx={{\n                        fontFamily: \"Poppins\",\n                        fontSize: \"20px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        lineHeight: \"30px\",\n                    }}\n                    className={classes.textField}\n                >\n                    Licenses & Certifications\n                </Typography>\n                {(doctorLicense || []).map((license, index) => (\n                    <Box key={index} className={classes.fourthInnerContainer}>\n                        {/* Image container */}\n                        <Box\n                        sx={{\n                            width: \"150px\",\n                            height: \"150px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#F0F0F0\",\n                        }}\n                    >\n                        <CardMembershipIcon\n                            style={{\n                                fontSize: \"30px\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                color: \"#E72B4A\",\n                            }}\n                        />\n                    </Box>\n                        {/* Details Fields */}\n                        <Box sx={{ width: \"100%\" }}>\n                            <Box\n                                classes={classes.universityFields}\n                                sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    alignItems: \"flex-start\",\n                                    paddingLeft: \"1%\",\n                                    width: \"100%\",\n                                }}\n                            >\n                                <Typography\n                                    component={\"h3\"}\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"18px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"28px\",\n                                    }}\n                                >\n                                    {license.lic_title || \"NA\"}\n                                </Typography>\n                                <Typography\n                                    component={\"h3\"}\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"21px\" /* 150% */,\n                                        letterSpacing: \"0.07px\",\n                                        color: \"#939094\",\n                                    }}\n                                >\n                                    {license.lic_issuedby || \"NA\"}\n                                </Typography>\n                            </Box>\n\n                            <Box\n                                sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    alignItems: \"flex-start\",\n                                    paddingLeft: \"1%\",\n                                    marginTop: \"1.5%\",\n                                }}\n                            >\n                                <Typography\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"21px\" /* 150% */,\n                                        letterSpacing: \"0.07px\",\n                                        color: \"#939094\",\n                                    }}\n                                >\n                                    Issue Date: {license.lic_date || \"NA\"}\n                                </Typography>\n                                <Typography\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"21px\" /* 150% */,\n                                        letterSpacing: \"0.07px\",\n                                        color: \"#939094\",\n                                    }}\n                                >\n                                    Certificate ID: {license.lic_certificate_no || \"NA\"}\n                                </Typography>\n                                <Typography\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"21px\" /* 150% */,\n                                        letterSpacing: \"0.07px\",\n                                        color: \"#939094\",\n                                    }}\n                                >\n                                    Description: {license.lic_description || \"NA\"}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                ))}\n            </Box>\n\n            {/* 4th container 3rd */}\n            <Box className={classes.fourthContainer}>\n                <Typography\n                    sx={{\n                        fontFamily: \"Poppins\",\n                        fontSize: \"20px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        lineHeight: \"30px\",\n                    }}\n                    className={classes.textField}\n                >\n                    Honors & Awards\n                </Typography>\n                {(doctorAward || []).map((award, index) => (\n                    <Box key={index} className={classes.fourthInnerContainer}>\n                        {/* Image container */}\n                        <Box\n                        sx={{\n                            width: \"150px\",\n                            height: \"150px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#F0F0F0\",\n                        }}\n                    >\n                        <EmojiEventsIcon\n                            style={{\n                                fontSize: \"30px\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                color: \"#E72B4A\",\n                            }}\n                        />\n                    </Box>\n                        {/* Details Fields */}\n                        <Box sx={{ width: \"100%\" }}>\n                            <Box\n                                className={classes.universityFields}\n                                sx={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    alignItems: \"flex-start\",\n                                    paddingLeft: \"1%\",\n                                    width: \"100%\",\n                                }}\n                            >\n                                <Typography\n                                    component={\"h3\"}\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"18px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"28px\",\n                                    }}\n                                >\n                                    {award.award_title || \"NA\"}\n                                </Typography>\n                                <Typography\n                                    component={\"h3\"}\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"28px\",\n                                    }}\n                                >\n                                    Issuing Authority: {award.award_issuedby || \"NA\"}\n                                </Typography>\n                                <Typography\n                                    component={\"h3\"}\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"21px\",\n                                        letterSpacing: \"0.07px\",\n                                        color: \"#939094\",\n                                    }}\n                                >\n                                    Issue Date: {award.award_date || \"NA\"}\n                                </Typography>\n                            </Box>\n\n                            <Box\n                                sx={{\n                                    display: \"flex\",\n                                    alignItems: \"flex-start\",\n                                    paddingLeft: \"1%\",\n                                    marginTop: \"1.5%\",\n                                }}\n                            >\n                                <Typography\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"14px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"21px\",\n                                        letterSpacing: \"0.07px\",\n                                        color: \"#939094\",\n                                    }}\n                                >\n                                    Description: {award.award_description || \"NA\"}\n                                </Typography>\n                            </Box>\n                        </Box>\n                    </Box>\n                ))}\n            </Box>\n\n            {/* 4th container 4th card */}\n\n            <Box className={classes.fourthContainer}>\n                <Typography\n                    sx={{\n                        fontFamily: \"Poppins\",\n                        fontSize: \"20px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        lineHeight: \"30px\",\n                    }}\n                    className={classes.textField}\n                >\n                    Work Experience\n                </Typography>\n                {(doctorExperience || []).map((experience, index) => (\n                    <Box key={index} className={classes.fourthInnerContainer}>\n                        \n                            {/* Icon */}\n                            <Box\n                        sx={{\n                            width: \"150px\",\n                            height: \"150px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#F0F0F0\",\n                        }}\n                    >\n                        <BusinessCenterIcon\n                            style={{\n                                fontSize: \"30px\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                color: \"#E72B4A\",\n                            }}\n                        />\n                    </Box>\n                            {/* Details Fields */}\n                            <Box sx={{ width: \"100%\" }}>\n                                <Box\n                                    className={classes.universityFields}\n                                    sx={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        alignItems: \"flex-start\",\n                                        paddingLeft: \"1%\",\n                                        width: \"100%\",\n                                    }}\n                                >\n                                    <Typography\n                                        component={\"h3\"}\n                                        sx={{\n                                            fontFamily: \"Poppins\",\n                                            fontSize: \"18px\",\n                                            fontStyle: \"normal\",\n                                            fontWeight: \"400\",\n                                            lineHeight: \"28px\",\n                                        }}\n                                    >\n                                        {experience.job || \"NA\"}\n                                    </Typography>\n                                    <Typography\n                                        component={\"h3\"}\n                                        sx={{\n                                            fontFamily: \"Poppins\",\n                                            fontSize: \"14px\",\n                                            fontStyle: \"normal\",\n                                            fontWeight: \"400\",\n                                            lineHeight: \"21px\",\n                                            letterSpacing: \"0.07px\",\n                                            color: \"#939094\",\n                                        }}\n                                    >\n                                        {experience.organisation || \"NA\"}\n                                    </Typography>\n                                </Box>\n\n                                <Box\n                                    sx={{\n                                        display: \"flex\",\n                                        alignItems: \"flex-start\",\n                                        paddingLeft: \"1%\",\n                                        marginTop: \"1.5%\",\n                                    }}\n                                >\n                                    <Typography\n                                        sx={{\n                                            fontFamily: \"Poppins\",\n                                            fontSize: \"14px\",\n                                            fontStyle: \"normal\",\n                                            fontWeight: \"400\",\n                                            lineHeight: \"21px\",\n                                            letterSpacing: \"0.07px\",\n                                            color: \"#939094\",\n                                            whiteSpace: \"nowrap\",\n                                        }}\n                                    >\n                                        {experience.from_date || \"NA\"}/{experience.to_date || \"Present\"}\n                                    </Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                ))}\n            </Box>\n        </>\n    );\n};\n\nContainerFour.propTypes = {\n    RegDate: PropTypes.string.isRequired,\n    Qualification: PropTypes.string.isRequired,\n    Description: PropTypes.string.isRequired,\n    StateReg: PropTypes.string.isRequired,\n    CountryReg: PropTypes.string.isRequired,\n    University: PropTypes.string.isRequired,\n    DepartmentName: PropTypes.string.isRequired,\n    Gender: PropTypes.string.isRequired,\n};\n\nexport default ContainerFour;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\n// import SingleLineGridList from \"./Crousal\";\nimport \"./drdetailscard.scss\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport ContainerOne from \"./ContainerOne\";\nimport ContainerTwo from \"./ContainerTwo\";\nimport ContainerThree from \"./ContainerThree\";\nimport ContainerFour from \"./ContainerFour\";\nimport DrImage from \"../../static/images/DrImages/doctor_alter.jpeg\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport { formatDateDay, formatTime } from \"../../constants/const\";\n\nconst DrDetailsCard = () => {\n    const params = useParams();\n    const ID = params.resID;\n    console.log(ID);\n\n    const [drCardData, setDrCardData] = useState();\n    const [review, setReview] = useState();\n    const [loading, setloading] = useState(false);\n    const [doctorLicense, setDoctorLicense] = useState([]);\n    const [doctorAward, setDoctorAward] = useState([]);\n    const [doctorExperience, setDoctorExperience] = useState([]);\n    const [doctorTotalconsultations, setDoctorTotalconsultations] = useState();\n    const [doctorAverageRating, setDoctorAverageRating] = useState();\n    const [doctorTotalReviews, setDoctorTotalReviews] = useState();\n    const [doctorTotalExperience, setDoctorTotalExperience] = useState();\n\n    const fetchDataNew = async () => {\n        setloading(true);\n        try {\n            const response = await axiosInstance.post(\n                `/sec/patient/DashboardDoctordetailsbyId`,\n                JSON.stringify({\n                    suid: ID,\n                }),\n            );\n            console.log(\"Response Received Doctor Details : \", response?.data?.response[0]);\n            setDrCardData(response.data.response);\n            setDoctorLicense(response?.data?.doctorLicense),\n            setDoctorAward(response?.data?.doctorAwards),\n            setDoctorExperience(response?.data?.doctorExperience)\n            setReview(response?.data?.doctorReviewData)\n            setDoctorTotalconsultations(response?.data?.doctorTotalconsultations)\n            setDoctorAverageRating(response?.data?.doctorAverageRating)\n            setDoctorTotalReviews(response?.data?.doctorTotalReviews)\n            setDoctorTotalExperience(response?.data?.doctorTotalExperience)\n\n        } catch (error) {\n            console.log(\"Dr detauils error\", error.response);\n        } finally {\n            setloading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchDataNew();\n    }, []);\nconsole.log(\"doctorLicense\",doctorLicense)\nconsole.log(\"doctorAward\",doctorAward)\nconsole.log(\"doctorExperience\",doctorExperience)\n\n    const classes = useStyles();\n    const navigate = useNavigate();\n    const handleOpen = (condition) => {\n        setOpenDialog(condition);\n    };\n    const drimg = DrImage;\n\n    const [openDialog, setOpenDialog] = useState(false);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                {/* 1st Container */}\n                <ContainerOne\n                    isLoading={loading} // Pass isLoading prop to Container1\n                    Fname={drCardData?.first_name}\n                    Mname={drCardData?.middle_name}\n                    Lname={drCardData?.last_name}\n                    Qualification={drCardData?.department_name}\n                    DrImage={drCardData?.profile_picture || drimg}\n                    DrId={drCardData?.suid}\n                    hospital={drCardData?.hospital_org}\n                    worktime={`${formatDateDay(drCardData?.working_days_start)} - ${formatDateDay(drCardData?.working_days_end)} | ${formatTime(drCardData?.working_time_start)} to ${formatTime(drCardData?.working_time_end)}`}\n                />\n                {/* 2nd container  */}\n                <ContainerTwo\n                doctorAverageRating={doctorAverageRating}\n                doctorTotalconsultations={doctorTotalconsultations}\n                doctorTotalReviews={doctorTotalReviews}\n                doctorTotalExperience={doctorTotalExperience}\n                    isLoading={loading} // Pass isLoading prop to Container1\n                />\n\n                {/* 3rd container */}\n                <ContainerThree \n                review={review}\n                description={drCardData?.description}\n                isLoading={loading} // Pass isLoading prop to Container1\n/>\n                {/* 4th container 1st card */}\n                <ContainerFour\n                    Qualification={drCardData?.qualification}\n                    YearOfQualification={drCardData?.qualified_year}\n                    RegDate={drCardData?.reg_date}\n                    StateReg={drCardData?.state_reg_number}\n                    CountryReg={drCardData?.country_reg_number}\n                    University={drCardData?.university_name}\n                    doctorLicense={doctorLicense}\n                    doctorAward={doctorAward}\n                    doctorExperience={doctorExperience}\n                />\n            </Box>\n        </>\n    );\n};\n\nconst useStyles = makeStyles({\n    html: {\n        background: \"#ffff\",\n    },\n    drname: {\n        color: \"#313033\",\n        fontFamily: \"Poppins\",\n        fontSize: \"20px\",\n        fontStyle: \"normal\",\n        fontWeight: \"900\",\n        lineHeight: \"30px\",\n    },\n    specialist: {\n        fontFamily: \"Poppins\",\n        fontSize: \"16px\",\n        fontStyle: \"normal\",\n        fontWeight: \"400\",\n        lineHeight: \"24px\",\n    },\n    cardContainer: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    BookAppointmentContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    BookAppointmentContainerDetails: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-end\",\n    },\n    fourthContainer: {\n        width: \"100%\",\n        border: \"1px solid #E6E1E5 \",\n        display: \"flex\",\n        borderRadius: \"8px\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        marginTop: \"1%\",\n    },\n    textField: {\n        fontFamily: \"Poppins\",\n        fontSize: \"30px\",\n        fontStyle: \"normal\",\n        fontWeight: \"500\",\n        lineHeight: \"30px\",\n        color: \"#313033\",\n        padding: \"2% 0 1% 1%\",\n    },\n    fourthInnerContainer: {\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"flex-start\",\n        padding: \"1%\",\n    },\n    logoDesign: {\n        height: \"70px\",\n        width: \"70px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"50px\",\n        backgroundColor: \"#FDEAED\",\n    },\n});\n\nexport default DrDetailsCard;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport img from \"../../../../static/images/DrImages/image10.png\"\n\nconst RecieveTable = ({ name, Id, profile }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box component={'div'} sx={{height : \"3.44331rem\" , width  : \"3.44331rem\" , borderRadius : \"0.5rem\" }}>\n                    <img src={profile ||img} style={{height : \"100%\"  , width : \"100%\" ,  borderRadius : \"8px\" }} />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    {/* <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        Booking ID : {Id}\n                    </Typography> */}\n                </Box>\n            </Box>\n        </>\n    );\n};\nexport default RecieveTable;\n","import React, { useEffect, useState } from \"react\";\nimport \"./received.scss\";\nimport {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    IconButton,\n    TableHead,\n    TableRow,\n    Typography,\n    Skeleton,\n    TablePagination,\n} from \"@mui/material\";\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport RecieveTable from \"../../PatientManage/Reports/Received/ReceiveTable\";\nimport { PaginationCard } from \"../../PatientAppointment/PatientCards\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport CustomModal from \"../../../components/CustomModal\";\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nconst Received = () => {\n    const [value, setValue] = useState([null, null]);\n    const [tableData, setTableData] = useState([]);\n    const [patientID, setPatientID] = useState(localStorage.getItem(\"patient_suid\"));\n    const [loading, setLoading] = useState(true);\n\n    const [page, setPage] = useState(0); // for pagination\n    const [rowsPerPage, setRowsPerPage] = useState(5); // rows per page\n    const [openModal, setOpenModal] = useState(false);\n    const [pdfUrl, setPdfUrl] = useState(null);\n\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n\n    const patient_id = localStorage.getItem(\"patient_suid\");\n    const status = \"completed\";\n    const fetchData = async (patient_id, status) => {\n        setLoading(true);\n        try {\n            // Corrected URL string interpolation\n            const response = await axiosInstance.get(\n                `/sec/patient/reportsReceived/${patient_id}/${status}`,\n            );\n\n            // Handle the response\n            setTableData(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData(patient_id, status); // Pass both patient_id and status to the function\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0); // Reset to page 0 when rows per page is changed\n    };\n\n    const currentData = tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n    // const handleView = (reportPath) => {\n    //     if (reportPath) {\n    //         // Open the file in a new tab\n    //         window.open(reportPath, \"_blank\");\n    //     } else {\n    //         console.error(\"Report path is not available.\");\n    //     }\n    // };\n    const handleDownload = (reportPath) => {\n        if (reportPath) {\n            // Trigger a download\n            const link = document.createElement(\"a\");\n            link.href = reportPath;\n            link.download = \"report\"; // Optional: Specify a filename\n            link.click();\n        } else {\n            console.error(\"Report path is not available.\");\n        }\n    };\n    const handleView = (reportPath) => {\n        if (reportPath) {\n            setPdfUrl(reportPath);\n            setOpenModal(true);\n        } else {\n            console.error(\"Report path is not available.\");\n        }\n    };\n\n\n    return (\n        <>\n            <Box className=\"allfile-main-container\">\n                <Box>\n                    <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Lab/Booking ID</TableCell>\n                                    <TableCell>File/Test Name</TableCell>\n                                    <TableCell align=\"right\">Date</TableCell>\n                                    <TableCell align=\"right\">Status</TableCell>\n                                    <TableCell align=\"right\">Action</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {loading ? (\n                                    // Render skeleton rows while loading\n                                    Array.from(new Array(4)).map((_, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell>\n                                                <Skeleton variant=\"text\" />\n                                            </TableCell>\n                                            <TableCell>\n                                                <Skeleton variant=\"text\" />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" />\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                                ) : currentData.length === 0 ? (\n                                    // Render \"No Data Found\" if tableData is empty\n                                    <NoAppointmentCard text_one={\"No Data Found\"} />\n                                ) : (\n                                    // Render actual data\n                                    currentData.map((row) => (\n                                        <TableRow\n                                            key={row?.BookingID}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\": { border: 0 },\n                                            }}\n                                        >\n                                            <TableCell align=\"right\">\n                                                <RecieveTable\n                                                    profile={row?.profile_picture}\n                                                    name={row?.lab_department_name}\n                                                    Id={row?.BookingID || \"not found\"}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {` ${row?.report_name} | ${row?.test_name}`}\n                                            </TableCell>\n\n                                            <TableCell align=\"right\">\n                                                {`${row?.date?.split(\"T\")[0] || \"NA\"} | ${row?.tbook_timeime?.split(\"T\")[1]?.split(\".\")[0] || \"NA\"\n                                                    }`}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {row?.status || \"NA\"}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                {/* View Icon */}\n                                                <IconButton\n                                                    sx={{ marginRight: 1, color: \"#E72B4A\" }}\n                                                    aria-label=\"view\"\n                                                    onClick={() => handleView(row.report_path)} // Pass the report_path to the handler\n                                                >\n                                                    <VisibilityIcon />\n                                                </IconButton>\n\n                                                {/* Download Icon */}\n                                                <IconButton\n                                                    sx={{ color: \"#E72B4A\" }}\n                                                    aria-label=\"download\"\n                                                    onClick={() => handleDownload(row.report_path)} // Pass the report_path to the handler\n                                                >\n                                                    <FileDownloadIcon />\n                                                </IconButton>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                                )}\n                            </TableBody>\n                        </Table>\n                        <TablePagination\n                            component=\"div\"\n                            count={tableData.length}\n                            page={page}\n                            onPageChange={handleChangePage}\n                            rowsPerPage={rowsPerPage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                        />\n                    </TableContainer>\n                    <CustomModal isOpen={openModal} conditionOpen={setOpenModal}>\n                        <Box\n                            sx={{\n                                width: \"870px\",\n                                height: \"80vh\",\n                                backgroundColor: \"white\",\n                                padding: 2,\n                                overflow: \"auto\",\n                            }}\n                        >\n                            <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                                Report Viewer\n                            </Typography>\n                            {pdfUrl ? (\n                                <Document file={pdfUrl} onLoadError={console.error}>\n                                    <Page pageNumber={1} width={800} />\n                                </Document>\n                            ) : (\n                                <Typography>No PDF available</Typography>\n                            )}\n                        </Box>\n                    </CustomModal>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default Received;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport img from \"../../../static/images/DrImages/Image02.png\";\n\nconst ShareTable = ({ name, profile }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img src={profile || img} style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }} />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\nexport default ShareTable;\n","import React, { useEffect, useState } from \"react\";\nimport \"./shared.scss\";\nimport {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Typography,\n    Skeleton,\n    TablePagination,\n} from \"@mui/material\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { useNavigate } from \"react-router-dom\";\nimport FileDownloadIcon from \"@mui/icons-material/FileDownload\";\nimport { PaginationCard } from \"../../PatientAppointment/PatientCards\";\nimport ShareTable from \"./ShareTable\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport { ShareModals } from \"./ShareModals\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst Shared = () => {\n    const [value, setValue] = useState([null, null]);\n    const [tableData, setTableData] = useState([]);\n    const [patientID, setPatientID] = React.useState(localStorage.getItem(\"patient_suid\"));\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n\n    useEffect(() => {\n        // for active component path\n        localStorage.setItem(\"activeComponent\", \"dashboard\");\n    }, []);\n\n    const patient_id = localStorage.getItem(\"patient_suid\");\n    const fetchData = async (patient_id) => {\n        setLoading(true);\n        try {\n            // Corrected URL string interpolation\n            const response = await axiosInstance.get(`/sec/patient/reportsShared/${patient_id}`);\n\n            // Handle the response\n            setTableData(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData(patient_id); // Pass both patient_id and status to the function\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const displayedData = tableData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n    return (\n        <>\n            {/* Date range picker */}\n            {/* <Box sx={{ width: \"100%\" }}>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DateRangePicker\n                        disablePast\n                        value={value}\n                        maxDate={getWeeksAfter(value[0], 4)}\n                        onChange={(newValue) => setValue(newValue)}\n                        renderInput={(startProps, endProps) => (\n                            <React.Fragment>\n                                <TextField {...startProps} />\n                                <Box sx={{ mx: 2 }}> to </Box>\n                                <TextField {...endProps} />\n                            </React.Fragment>\n                        )}\n                    />\n                </LocalizationProvider>\n            </Box> */}\n\n            <Box className=\"allfile-main-container\">\n                <TableContainer component={Paper} style={{ background: \"white\" }}>\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Doctor Name</TableCell>\n                                <TableCell align=\"right\">Date & Time</TableCell>\n                                <TableCell align=\"right\">File Name</TableCell>\n                                <TableCell align=\"right\">Category</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {loading ? (\n                                // Render skeleton rows while loading\n                                Array.from(new Array(5)).map((_, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell>\n                                            <Skeleton variant=\"text\" />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Skeleton variant=\"text\" />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Skeleton variant=\"text\" />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Skeleton variant=\"text\" />\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            ) : tableData.length === 0 ? (\n                                // Render \"No Data Found\" if tableData is empty\n                                <NoAppointmentCard text_one={\"No Data Found\"} />\n                            ) : (\n                                // Render actual data\n                                displayedData.map((row) => (\n                                    <TableRow\n                                        key={row.name}\n                                        sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <ShareTable\n                                                name={`${row?.doctor_name || \"Unknown\"} ${\n                                                    row?.middle_name || \"\"\n                                                } ${row?.last_name || \"\"}`} profile={row?.profile_picture}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            {row?.date\n                                                ? `${row.date.split(\"T\")[0]} | ${\n                                                      row?.time?.split(\"T\")[1]?.split(\".\")[0] ||\n                                                      \"No Time\"\n                                                  }`\n                                                : \"No Date\"}\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"right\"\n                                            onClick={() => {\n                                                if (row?.report_path) {\n                                                    const link = document.createElement(\"a\");\n                                                    link.href = row.report_path;\n                                                    link.download = row.report_name || \"report\"; // Default filename if `report_name` is not available\n                                                    document.body.appendChild(link);\n                                                    link.click();\n                                                    document.body.removeChild(link);\n                                                } else {\n                                                    alert(\"Report not available for download.\");\n                                                }\n                                            }}\n                                            sx={{\n                                                cursor: row?.report_path\n                                                    ? \"pointer\"\n                                                    : \"not-allowed\", // Change cursor to pointer if a report is available\n                                                color: row?.report_path ? \"black\" : \"gray\", // Optional: Indicate if the report is available visually\n                                                textDecoration: row?.report_path\n                                                    ? \"none\"\n                                                    : \"none\",\n                                            }}\n                                        >\n                                            {row?.report_name || \"No Report\"}\n                                        </TableCell>\n\n                                        <TableCell align=\"right\">\n                                            {row?.category || \"No Category\"}\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            )}\n                        </TableBody>\n                        \n                    </Table>\n                    <TablePagination\n                    component=\"div\"\n                    count={tableData.length}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    rowsPerPage={rowsPerPage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                />\n                </TableContainer>\n                \n            </Box>\n        </>\n    );\n};\n\nexport default Shared;\n","import { Box, Skeleton, Pagination } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { AppointmentNavbar, UpcomingCard } from \"../PatientCards\";\nimport DrImage from \"../../../static/images/DrImages/image3.png\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../NoAppointmentCard/NoAppointmentCard\";\nimport { isAppointmentTimeReached } from \"../../../utils/timeUtils\";\n\nconst Upcoming = () => {\n    const [upcomingData, setUpcomingData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null); // Error state\n    const patientId = localStorage.getItem(\"patient_suid\");\n    const [flag, setFlag] = useState(false);\n\n    // Pagination states\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 5;\n    \n    // Real-time update state\n    const [timeUpdate, setTimeUpdate] = useState(0);\n\n    const fetchData = async () => {\n        setLoading(true);\n        setError(null);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/UpcomingAppointments\",\n                JSON.stringify({\n                    patient_id: patientId,\n                    status_in_progress: \"in_progress\",\n                    status_booked: \"booked\",\n                }),\n            );\n            setUpcomingData(response?.data?.response || []);\n        } catch (err) {\n            console.error(\"Error fetching upcoming appointments:\", err);\n            setError(\"Failed to fetch upcoming appointments. Please try again later.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"appointment\");\n        localStorage.setItem(\"path\", \"upcoming\");\n        fetchData();\n        setFlag(false);\n    }, [flag]);\n\n    // Real-time update for join button status\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setTimeUpdate(prev => prev + 1);\n        }, 60000); // Update every minute\n\n        return () => clearInterval(interval);\n    }, []);\n\n    function ChangeTheFlag(Changeflag) {\n        setFlag(Changeflag);\n    }\n\n    // Pagination logic\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const currentData = upcomingData.slice(startIndex, startIndex + itemsPerPage);\n    const totalPages = Math.ceil(upcomingData.length / itemsPerPage);\n\n    const handlePageChange = (_, page) => {\n        setCurrentPage(page);\n    };\n\n    return (\n        <Box sx={{ display: \"flex\", width: \"95%\" }} className=\"upcoming\">\n            <AppointmentNavbar />\n            <Box\n                component=\"div\"\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    height: \"100%\",\n                }}\n            >\n                <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        <Box\n                            sx={{\n                                width: \"100%\",\n                                border: \"1px solid #E6E1E5\",\n                                borderRadius: \"8px\",\n                                padding: \"2%\",\n                                marginLeft: \"2%\",\n                                height: \"100%\",\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                                gap: \"0rem\", // Controls the space between items\n                            }}\n                        >\n                            {loading ? (\n                                Array.from({ length: itemsPerPage }).map((_, index) => (\n                                    <Skeleton\n                                        key={index}\n                                        variant=\"rectangular\"\n                                        width=\"100%\"\n                                        height={120}\n                                        sx={{ mb: 2, borderRadius: \"8px\" }}\n                                    />\n                                ))\n                            ) : upcomingData.length === 0 ? (\n                                <NoAppointmentCard\n                                    ButtonLabel=\"Find Doctor\"\n                                    ButtonPath=\"/patientdashboard/dashboard/explore\"\n                                    text_one=\"You don’t have any appointments\"\n                                    text_two=\"Book an appointment\"\n                                />\n                            ) : (\n                                currentData.map((data) => {\n                                    // Use backend join_status as primary source, with frontend fallback\n                                    const canJoin = isAppointmentTimeReached(\n                                        data?.appointment_date, \n                                        data?.appointment_time, \n                                        data?.join_status\n                                    );\n                                    const isDisabled = !canJoin;\n                                    \n                                    console.log(`Patient Appointment ${data?.appointment_id}:`, {\n                                        appointment_date: data?.appointment_date,\n                                        appointment_time: data?.appointment_time,\n                                        backend_join_status: data?.join_status,\n                                        canJoin: canJoin,\n                                        isDisabled: isDisabled\n                                    });\n                                    \n                                    return (\n                                        <UpcomingCard\n                                            key={data.id}\n                                            data={data}\n                                            path={{\n                                                reject: \"/sec/patient/RejectAppointment\",\n                                                rescheduled: \"sec/patient/resheduleAppointment\",\n                                                join: canJoin ? (data?.plan_name === 'video' ? `/videocallingsdk/${data?.appointment_id}` : \n                                                data?.plan_name === 'message' ?   `/patientdashboard/appointment/chats/${data.first_name}/${data.roomid}/${data?.appointment_id}` : null) : null,\n                                            }}\n                                            DrImage={data.profile_picture || DrImage}\n                                            label={canJoin ? \"\" : \"Not Available\"}\n                                            isDisabled={isDisabled}\n                                            changeFlagState={ChangeTheFlag}\n                                        />\n                                    );\n                                })\n                            )}\n\n                            {!loading && upcomingData.length > itemsPerPage && (\n                                <Pagination\n                                    count={totalPages}\n                                    page={currentPage}\n                                    onChange={handlePageChange}\n                                    color=\"primary\"\n                                    sx={{ mt: 2, alignSelf: \"center\" }}\n                                />\n                            )}\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Upcoming;\n","import { Box, Skeleton, Pagination } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport DrImage from \"../../../static/images/DrImages/image3.png\";\nimport { AppointmentNavbar, CompletedCard } from \"../PatientCards\";\nimport NoAppointmentCard from \"../NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../config/axiosInstance\";\n\nconst Completed = () => {\n    const [completedData, setCompletedData] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n    const [patient_id, setPatient_id] = useState(localStorage.getItem(\"patient_suid\"));\n\n    // Pagination states\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage, setItemsPerPage] = useState(5); // Dynamic items per page\n\n    const fetchDataNew = async () => {\n        setLoading(true); // Set loading to true\n        try {\n            const response = await axiosInstance.post(\"/sec/patient/CompletedAppointments\", JSON.stringify({\n                patient_id,\n                status_complete: \"completed\",\n            }));\n            setCompletedData(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching completed appointments:\", error);\n        } finally {\n            setLoading(false); // Stop loading\n        }\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"appointment\");\n        localStorage.setItem(\"path\", \"completed\");\n        fetchDataNew();\n    }, []);\n\n    // Pagination logic\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const currentData = completedData.slice(startIndex, startIndex + itemsPerPage);\n    const totalPages = Math.ceil(completedData.length / itemsPerPage);\n\n    const handlePageChange = (_, page) => {\n        setCurrentPage(page);\n    };\n\n    return (\n        <Box sx={{ display: \"flex\", width: \"95%\" }}>\n            <AppointmentNavbar />\n            <Box\n                component={\"div\"}\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    height: \"100%\",\n                }}\n            >\n                <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        <Box\n                            sx={{\n                                width: \"100%\",\n                                border: \"1px solid #E6E1E5\",\n                                borderRadius: \"8px\",\n                                marginLeft: \"3%\",\n                                height: \"100%\",\n                                padding: \"2%\",\n                                display: \"flex\",\n                                flexDirection: \"column\",\n                            }}\n                        >\n                            {loading ? (\n                                // Skeleton loader when loading is true\n                                Array.from({ length: itemsPerPage }).map((_, index) => (\n                                    <Skeleton\n                                        key={index}\n                                        variant=\"rectangular\"\n                                        width=\"100%\"\n                                        height={120}\n                                        sx={{ mb: 2, borderRadius: \"8px\" }}\n                                    />\n                                ))\n                            ) : completedData.length === 0 ? (\n                                <NoAppointmentCard\n                                    text_one={\"You don't have any completed appointments\"}\n                                />\n                            ) : (\n                                currentData.map((data) => (\n                                    <CompletedCard\n                                        key={data.id}\n                                        patientID={patient_id}\n                                        pid={data.patient_id}\n                                        did={data.doctor_id}\n                                        aid={data.appointment_id}\n                                        data={data}\n                                        DrImage={data.profile_picture || DrImage}\n                                    />\n                                ))\n                            )}\n\n                            {!loading && completedData.length > itemsPerPage && (\n                                // Pagination control when data exceeds itemsPerPage\n                                <Pagination\n                                    count={totalPages}\n                                    page={currentPage}\n                                    onChange={handlePageChange}\n                                    color=\"primary\"\n                                    sx={{ mt: 2, alignSelf: \"center\" }}\n                                />\n                            )}\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Completed;\n","import { Box, Skeleton, Pagination } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport DrImage from \"../../../static/images/DrImages/image3.png\";\nimport { AppointmentNavbar, CancelledCard } from \"../PatientCards\";\nimport NoAppointmentCard from \"../NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../config/axiosInstance\";\n\nconst Cancelled = () => {\n    const [cancelledData, setCancelledData] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n    const [currentPage, setCurrentPage] = useState(1); // Current page for pagination\n    const itemsPerPage = 5; // Number of items per page\n    const [patient_id, setPatient_id] = useState(localStorage.getItem(\"patient_suid\"));\n\n    const fetchDataNew = async () => {\n        setLoading(true); // Start loading\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/CancelledAppointments\",\n                JSON.stringify({\n                    patient_id: patient_id,\n                    status_cancel: \"canceled\",\n                }),\n            );\n            setCancelledData(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching cancelled appointments:\", error);\n        } finally {\n            setLoading(false); // Stop loading\n        }\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"appointment\");\n        setPatient_id(localStorage.getItem(\"patient_suid\"));\n        localStorage.setItem(\"path\", \"cancelled\");\n        fetchDataNew();\n    }, []);\n\n    // Pagination logic\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const currentData = cancelledData.slice(startIndex, startIndex + itemsPerPage);\n    const totalPages = Math.ceil(cancelledData.length / itemsPerPage);\n\n    return (\n        <Box sx={{ display: \"flex\", width: \"100%\", }}>\n            <AppointmentNavbar />\n            <Box\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    height: \"100%\",\n                }}\n            >\n                <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            border: \"1px solid #E6E1E5\",\n                            borderRadius: \"8px\",\n                            marginLeft: \"3%\",\n                            height: \"100%\",\n                            padding: \"2%\",\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        {loading ? (\n                            // Skeleton loader while loading is true\n                            Array.from({ length: itemsPerPage }).map((_, index) => (\n                                <Skeleton\n                                    key={index}\n                                    variant=\"rectangular\"\n                                    width=\"100%\"\n                                    height={120}\n                                    sx={{ mb: 2, borderRadius: \"8px\" }}\n                                />\n                            ))\n                        ) : cancelledData.length === 0 ? (\n                            <NoAppointmentCard\n                                text_one={\"You don't have any cancelled appointments\"}\n                            />\n                        ) : (\n                            currentData.map((data) => (\n                                <CancelledCard key={data.id} data={data} DrImage={data.profile_picture || DrImage} />\n                            ))\n                        )}\n\n                        {!loading && cancelledData.length > itemsPerPage && (\n                            // Pagination control when data exceeds itemsPerPage\n                            <Pagination\n                                count={totalPages}\n                                page={currentPage}\n                                onChange={(_, page) => setCurrentPage(page)}\n                                color=\"primary\"\n                                sx={{ mt: 2, alignSelf: \"center\" }}\n                            />\n                        )}\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Cancelled;\n","import React, { useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { NavLink } from \"react-router-dom\";\nimport CustomTextField from \"../../components/CustomTextField/custom-text-field\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport GoogleLogo from \"../../static/images/googleLogo.png\";\nimport PayPalLogo from \"../../static/images/Paypal.png\";\nimport PhonePay from \"../../static/images/PhonePe.png\";\nimport \"./profile.scss\";\n\nconst Payment = () => {\n    const handleSubmit = (e) => {};\n    const [paypal, setPaypal] = useState(\"\");\n    const [googlepay, setGooglepay] = useState(\"\");\n    const [phonepay, setPhonepay] = useState(\"\");\n    const [cardname, setCardname] = useState(\"\");\n    const [cardno, setCardno] = useState(\"\");\n    const [expirydate, setExpirydate] = useState(\"\");\n    const [cvv, setCvv] = useState(\"\");\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Box\n                className=\"NavBar-Box-profile\"\n                sx={{ display: \"flex\", marginLeft: 0, marginBottom: 0 }}\n            >\n                <NavLink to={\"/patientdashboard/dashboard/profile\"}>Profile Information</NavLink>\n                <NavLink to={\"/patientdashboard/dashboard/contact\"}>Contact Details</NavLink>\n                <NavLink to={\"/patientdashboard/dashboard/payment\"}>Payment Details</NavLink>\n            </Box>\n\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    marginTop: \"4%\",\n                }}\n            >\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        flexDirection: \"column\",\n                        height: \"100%\",\n                        width: \"100%\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            // justifyContent: \"space-between\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <Box sx={{ width: \"32%\", padding: \"1%\" }}>\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Name on Card\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                //                             //                                 // eslint-disable-next-line no-undef\n                                onChange={(event) => setCardname(event.target.value)}\n                                //                             //                                 // onChange={(event) => setMobile(event.target.value) }\n                                textcss={{\n                                    width: \"100%\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Box>\n                        <Box sx={{ width: \"32%\", padding: \"1%\" }}>\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Card No\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                //                             //                                 // eslint-disable-next-line no-undef\n                                onChange={(event) => setCardno(event.target.value)}\n                                //                             //                                 // onChange={(event) => setMobile(event.target.value) }\n                                textcss={{\n                                    width: \"100%\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Box>\n                        <Box sx={{ width: \"32%\", padding: \"1%\" }}>\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"Expiry Date\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                //                             //                                 // eslint-disable-next-line no-undef\n                                onChange={(event) => setExpirydate(event.target.value)}\n                                //                             //                                 // onChange={(event) => setMobile(event.target.value) }\n                                textcss={{\n                                    width: \"100%\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Box>\n                    </Box>\n                    {/* second line */}\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            justifyContent: \"space-between\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <Box sx={{ width: \"32%\", padding: \"1%\" }}>\n                            <CustomTextField\n                                id={\"standard-helperText1\"}\n                                label={\"CVV\"}\n                                defaultValue={\"\"}\n                                helperText={\"\"}\n                                isValid\n                                //                             //                                 // eslint-disable-next-line no-undef\n                                onChange={(event) => setCvv(event.target.value)}\n                                //                             //                                 // onChange={(event) => setMobile(event.target.value) }\n                                textcss={{\n                                    width: \"100%\",\n                                    height: \"56px\",\n                                }}\n                            />\n                        </Box>\n                        {/* Button,justifyContent:\"space-between\" */}\n                        <Box\n                            sx={{\n                                // marginRight: \"12%\",\n                                display: \"flex\",\n                                alignItems: \"flex-end\",\n                                width: \"35%\",\n                                // marginRight : \"9%\",\n                                // marginTop: \"2%\",\n                            }}\n                        >\n                            <CustomButton\n                                label={\"Add New\"}\n                                isTransaprent={false}\n                                isDisabled={false}\n                                isElevated={false}\n                                handleClick={handleSubmit}\n                                buttonCss={{\n                                    width: \"155px\",\n                                    height: \"41px\",\n                                    borderRadius: \"50px\",\n                                    marginRight: \"3%\",\n                                }}\n                            />\n                            <CustomButton\n                                label={\"Delete\"}\n                                // isTransaprent={false}\n                                isTransaprent\n                                isDisabled={false}\n                                isElevated={false}\n                                handleClick={handleSubmit}\n                                buttonCss={{\n                                    width: \"155px\",\n                                    height: \"41px\",\n                                    borderRadius: \"50px\",\n                                }}\n                            />\n                        </Box>\n                    </Box>\n\n                    {/* ////////////////////////////Payment .///////////////////////////// */}\n                    <Box sx={{ borderTop: 1, borderTopColor: \"#E6E1E5\", marginTop: \"5%\" }}>\n                        {/* <h1>hello</h1> */}\n                        {/* payment input */}\n                        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", marginTop: \"4%\" }}>\n                            {/* line */}\n                            <Box sx={{ marginTop: \"1%\", marginRight: \"0%\" }}>\n                                <img\n                                    style={{ width: \"38px\", height: \"45px\" }}\n                                    src={PayPalLogo}\n                                    alt=\"phonepay\"\n                                    loading=\"lazy\"\n                                />\n                            </Box>\n                            <Box sx={{ marginRight: \"1%\" }}>\n                                <CustomTextField\n                                    id={\"standard-helperText1\"}\n                                    label={\"PayPal\"}\n                                    defaultValue={\"\"}\n                                    helperText={\"\"}\n                                    isValid\n                                    //                             //                                 // eslint-disable-next-line no-undef\n                                    onChange={(event) => setPaypal(event.target.value)}\n                                    //                             //                                 // onChange={(event) => setMobile(event.target.value) }\n                                    textcss={{\n                                        width: \"250px\",\n                                        height: \"56px\",\n                                    }}\n                                />\n                            </Box>\n\n                            <Box sx={{ marginTop: \"1%\", marginRight: \"1%\" }}>\n                                <img\n                                    style={{ width: \"35px\", height: \"37px\" }}\n                                    src={GoogleLogo}\n                                    alt=\"phonepay\"\n                                    loading=\"lazy\"\n                                />\n                            </Box>\n                            <Box sx={{ marginRight: \"1%\" }}>\n                                <CustomTextField\n                                    id={\"standard-helperText1\"}\n                                    label={\"Google Pay\"}\n                                    defaultValue={\"\"}\n                                    helperText={\"\"}\n                                    isValid\n                                    //                             //                                 // eslint-disable-next-line no-undef\n                                    onChange={(event) => setGooglepay(event.target.value)}\n                                    //                             //                                 // onChange={(event) => setMobile(event.target.value) }\n                                    textcss={{\n                                        width: \"250px\",\n                                        height: \"56px\",\n                                    }}\n                                />\n                            </Box>\n                            <Box sx={{ marginTop: \"1%\", marginRight: \"1%\" }}>\n                                <img\n                                    style={{ width: \"35px\", height: \"37px\" }}\n                                    src={PhonePay}\n                                    alt=\"phonepay\"\n                                    loading=\"lazy\"\n                                />\n                            </Box>\n                            <Box>\n                                <CustomTextField\n                                    id={\"standard-helperText1\"}\n                                    label={\"PhonePay\"}\n                                    defaultValue={\"\"}\n                                    helperText={\"\"}\n                                    isValid\n                                    //                             //                                 // eslint-disable-next-line no-undef\n                                    onChange={(event) => setPhonepay(event.target.value)}\n                                    //                             //                                 // onChange={(event) => setMobile(event.target.value) }\n                                    textcss={{\n                                        width: \"250px\",\n                                        height: \"56px\",\n                                    }}\n                                />\n                            </Box>\n\n                            <Box sx={{ marginTop: \"4%\", marginLeft: \"2%\" }}>\n                                <CustomButton\n                                    label={\"Save Changes\"}\n                                    isTransaprent={false}\n                                    isDisabled={false}\n                                    isElevated={false}\n                                    handleClick={handleSubmit}\n                                    buttonCss={{\n                                        width: \"155px\",\n                                        height: \"41px\",\n                                        marginRight: \"5%\",\n                                    }}\n                                />\n                            </Box>\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Payment;\n","import React, { useEffect, useState } from \"react\";\nimport { \n    Box, \n    Card, \n    CardContent, \n    Typography, \n    Grid, \n    Stack, \n    Chip,\n    Paper,\n    IconButton,\n    Tooltip,\n    Divider\n} from \"@mui/material\";\nimport { NavLink } from \"react-router-dom\";\nimport CustomTextField from \"../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport \"./profile.scss\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport \"./contactDetails.scss\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\n\nconst ContactDetails = () => {\n    const handleSubmit = (e) => {};\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    // const [mobile, setMobile] = useState();\n    // const [email, setEmail] = useState();\n    // const [zip, setZip] = useState();\n    // const [city, setCity] = useState();\n    // const [street1, setStreet1] = useState();\n    // const [street2, setStreet2] = useState();\n    // const [house, setHouse] = useState();\n    const [profileLink, setProfileLink] = useState(\"\");\n    const [contactLink, setContactLink] = useState(\"\");\n    const [countryValues, setCountryValue] = useState([]);\n    const [countryNames, setCountryNames] = useState([\"Please Wait\"]);\n    const [isopen, setIsopen] = useState(false);\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackStatus, setSnackStatus] = useState(\"\");    // selected country from drop down\n    const [selectedCountryFromDropDown, setSelectedCountryFromDropDown] = useState([]);\n    const [stateNames, setStateNames] = useState([\"Please Wait\"]);\n    const [stateName, setStateName] = useState(\"\");\n    const [stateValue, setStateValue] = useState([]);\n    const [selectCityFromDropDown, setSelectCityFromDropDown] = useState([]);\n    const [cityNames, setCityNames] = useState([]);\n    const [citySelected, setCitySelected] = useState(\"\");\n    const [cityValues, setCityValues] = useState([]);\n    const [submitDataFlag, setSubmitDataFlag] = useState(false);\n    const [updateUserData, setUpdateUserData] = useState({\n        email: localStorage.getItem(\"patient_Email\"),\n        country_id: null,\n        state_id: null,\n        city_id: null,\n        street_address1: \"\",\n        street_address2: \"\",\n        zip_code: null,\n    });\n    const [isEditing, setIsEditing] = useState(false);\n\n\n    useEffect(() => {\n        setProfileLink(\n            localStorage.getItem(\"activeComponent\") === \"dashboard\"\n                ? \"/patientdashboard/dashboard/profile\"\n                : localStorage.getItem(\"activeComponent\") === \"appointment\"\n                ? \"/patientdashboard/appointment/profile\"\n                : localStorage.getItem(\"activeComponent\") === \"manage\"\n                ? \"/patientdashboard/manage/profile\"\n                : null,\n        );\n\n        setContactLink(\n            localStorage.getItem(\"activeComponent\") === \"dashboard\"\n                ? \"/patientdashboard/dashboard/contact\"\n                : localStorage.getItem(\"activeComponent\") === \"appointment\"\n                ? \"/patientdashboard/appointment/contact\"\n                : localStorage.getItem(\"activeComponent\") === \"manage\"\n                ? \"/patientdashboard/manage/contact\"\n                : null,\n        );\n        FetchCountryNames();\n        FetchStateNames();\n        fetchDataProfile();\n    }, []);\n\n    const fetchDataProfile = async () => {\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patientprofile\",\n                JSON.stringify({\n                    suid: localStorage.getItem(\"patient_suid\"),\n                }),\n            );\n            console.log(\"Patient Profile Details : \", response?.data?.response[0]);\n            setUpdateUserData({\n                email: localStorage.getItem(\"patient_Email\"),\n                country_id: response?.data?.response[0]?.country_id,\n                state_id: response?.data?.response[0]?.state_id,\n                city_id: response?.data?.response[0]?.city_id,\n                street_address1: response?.data?.response[0]?.street_address1,\n                street_address2: response?.data?.response[0]?.street_address2,\n                zip_code: response?.data?.response[0]?.zip_code,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const FetchCountryNames = async () => {\n        let CountryValues = [];\n        let CountryName = [];\n        try {\n            const response = await axiosInstance(\"/sec/countries\");\n            for (let key in response?.data?.response) {\n                CountryValues.push(response?.data?.response[key]);\n                CountryName.push(response?.data?.response[key].country_name);\n            }\n            setCountryNames(CountryName);\n            setCountryValue(CountryValues);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const FetchStateNames = async (country_id) => {\n        let StateValues = [];\n        let StateName = [];\n        try {\n            const response = await axiosInstance(`/sec/states?country_id=${country_id}`);\n            for (let key in response?.data?.response) {\n                StateValues.push(response?.data?.response[key]);\n                StateName.push(response?.data?.response[key].state_name);\n            }\n            setStateValue(StateValues);\n            setStateNames(StateName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    // run the api call when there is change in country drop down\n    useEffect(() => {\n        FetchStateNames(selectedCountryFromDropDown[0]?.country_id);\n    }, [selectedCountryFromDropDown]);\n\n    const FetchCityNames = async (state_id) => {\n        let CityValues = [];\n        let cityName = [];\n        try {\n            const response = await axiosInstance(`/sec/cities?state_id=${state_id}`);\n            console.log(\"response city id : \", response);\n            for (let key in response?.data?.response) {\n                CityValues.push(response?.data?.response[key]);\n                cityName.push(response?.data?.response[key].city_name);\n            }\n            setCityValues(CityValues);\n            setCityNames(cityName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    // run the api to fetch the city details\n    useEffect(() => {\n        FetchCityNames(selectCityFromDropDown[0]?.state_id);\n    }, [selectCityFromDropDown]);\n\n    // -----------submit the updated data ----------------------\n\n    const submitData = async () => {\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/updatePateintProfile\",\n                JSON.stringify(updateUserData),\n            );\n            setSnackMessage(\"Updated Successfully\");\n            setSnackStatus(\"success\");\n            setIsopen(true);          \n            setSubmitDataFlag(false);\n        } catch (error) {\n            setSnackMessage(\"Error\");\n            setSnackStatus(\"error\");\n            setIsopen(true);\n            setSubmitDataFlag(false);\n        }\n    };\n\n    useEffect(() => {\n        if (submitDataFlag) {\n            submitData();\n        }\n    }, [submitDataFlag]);\n\n    const toggleEditMode = () => {\n        setIsEditing(!isEditing);\n    };\n\n    return (\n        <Box sx={{ width: \"100%\", padding: \"24px\", backgroundColor: \"#ffffff\", minHeight: \"100vh\" }}>\n            <CustomSnackBar isOpen={isopen} message={snackMessage} type={snackStatus} />\n            \n            {/* Header Section */}\n            <Paper \n                elevation={0} \n                sx={{ \n                    padding: \"24px\", \n                    marginBottom: \"24px\",\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                    <Typography variant=\"h4\" sx={{ \n                        fontWeight: 600, \n                        color: \"#313033\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 1\n                    }}>\n                        <LocationOnIcon sx={{ color: \"#E72B4A\" }} />\n                        Contact Details\n                    </Typography>\n                    \n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                        <Chip \n                            label={`Profile ID: SRC0001`}\n                            sx={{ \n                                backgroundColor: \"#E72B4A\",\n                                color: \"white\",\n                                fontWeight: 500\n                            }}\n                        />\n                        <Tooltip title=\"Close\">\n                            <IconButton \n                                onClick={() => window.history.back()}\n                                sx={{ \n                                    backgroundColor: \"#f5f5f5\",\n                                    \"&:hover\": { backgroundColor: \"#e0e0e0\" }\n                                }}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                </Box>\n\n                {/* Navigation Tabs */}\n                <Box className=\"NavBar-Box-profile\" sx={{ display: \"flex\", gap: 1 }}>\n                    <NavLink \n                        to={profileLink}\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                        Profile Information\n                    </NavLink>\n                    <NavLink \n                        to={contactLink}\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                        Contact Details\n                    </NavLink>\n                </Box>\n            </Paper>\n\n            {/* Edit Button */}\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", marginBottom: \"24px\" }}>\n                <CustomButton\n                    label={isEditing ? \"Cancel Edit\" : \"Edit Contact Details\"}\n                    isTransaprent={!isEditing}\n                    leftIcon={<EditIcon />}\n                    buttonCss={{\n                        borderRadius: \"8px\",\n                        padding: \"12px 24px\",\n                        fontWeight: 500,\n                        border: isEditing ? \"1px solid #d32f2f\" : \"1px solid #E72B4A\",\n                        color: isEditing ? \"#d32f2f\" : \"#E72B4A\"\n                    }}\n                    handleClick={toggleEditMode}\n                />\n            </Box>\n\n            {/* Main Content Card */}\n            <Card \n                elevation={0} \n                sx={{ \n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    overflow: \"hidden\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Typography variant=\"h6\" sx={{ \n                        fontWeight: 600, \n                        color: \"#313033\",\n                        marginBottom: \"24px\"\n                    }}>\n                        Contact Information\n                    </Typography>\n\n                    <Stack spacing={3}>\n                        {/* First Row - Email and Country */}\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <CustomTextField\n                                    id=\"email-address\"\n                                    label=\"Email Address\"\n                                    defaultValue={updateUserData?.email}\n                                    isDisabled={true}\n                                    helperText=\"Email cannot be changed\"\n                                    isValid\n                                    textcss={{\n                                        width: \"100%\",\n                                        height: \"56px\",\n                                    }}\n                                    sx={{\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <CustomDropdown\n                                    label=\"Country\"\n                                    dropdowncss={{ \n                                        width: \"100%\",\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            height: \"56px\",\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiSelect-select\": {\n                                            padding: \"16px 14px\",\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                        },\n                                        \"& .MuiSelect-icon\": {\n                                            color: \"#666\",\n                                        },\n                                    }}\n                                    items={countryNames}\n                                    isDisabled={!isEditing}\n                                    activeItem={activeDropdown}\n                                    handleChange={(listItems) => {\n                                        setActiveDropdown(listItems);\n                                        let response = countryValues.filter((country) =>\n                                            country?.country_name?.includes(listItems),\n                                        );\n                                        console.log(\"Country response : \", response[0]?.country_id);\n                                        setUpdateUserData({\n                                            ...updateUserData,\n                                            country_id: response[0]?.country_id,\n                                        });\n                                        setSelectedCountryFromDropDown(response);\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n\n                        {/* Second Row - State and City */}\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <CustomDropdown\n                                    label=\"State\"\n                                    dropdowncss={{ \n                                        width: \"100%\",\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            height: \"56px\",\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiSelect-select\": {\n                                            padding: \"16px 14px\",\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                        },\n                                        \"& .MuiSelect-icon\": {\n                                            color: \"#666\",\n                                        },\n                                    }}\n                                    items={stateNames}\n                                    isDisabled={!isEditing}\n                                    activeItem={stateName}\n                                    handleChange={(listItems) => {\n                                        let response = stateValue.filter((state) =>\n                                            state?.state_name?.includes(listItems),\n                                        );\n                                        setUpdateUserData({\n                                            ...updateUserData,\n                                            state_id: response[0]?.state_id,\n                                        });\n                                        setSelectCityFromDropDown(response);\n                                        setStateName(listItems);\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <CustomDropdown\n                                    label=\"City\"\n                                    dropdowncss={{ \n                                        width: \"100%\",\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            height: \"56px\",\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiSelect-select\": {\n                                            padding: \"16px 14px\",\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                        },\n                                        \"& .MuiSelect-icon\": {\n                                            color: \"#666\",\n                                        },\n                                    }}\n                                    items={cityNames}\n                                    isDisabled={!isEditing}\n                                    activeItem={citySelected}\n                                    handleChange={(listItems) => {\n                                        setCitySelected(listItems);\n                                        let response = cityValues.filter((city) =>\n                                            city?.city_name?.includes(listItems),\n                                        );\n                                        setUpdateUserData({\n                                            ...updateUserData,\n                                            city_id: response[0]?.city_id,\n                                        });\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Stack>\n\n                    <Divider sx={{ margin: \"32px 0\" }} />\n\n                    <Typography variant=\"h6\" sx={{ \n                        fontWeight: 600, \n                        color: \"#313033\",\n                        marginBottom: \"24px\"\n                    }}>\n                        Address Information\n                    </Typography>\n\n                    <Stack spacing={3}>\n                        {/* Third Row - Street Addresses and Zip Code */}\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={4}>\n                                <CustomTextField\n                                    id=\"street-line1\"\n                                    label=\"Street Line 1\"\n                                    isDisabled={!isEditing}\n                                    defaultValue={updateUserData?.street_address1}\n                                    CustomValue={updateUserData?.street_address1}\n                                    helperText=\"\"\n                                    isValid\n                                    onChange={(event) => {\n                                        setUpdateUserData({\n                                            ...updateUserData,\n                                            street_address1: event?.target?.value,\n                                        });\n                                    }}\n                                    textcss={{\n                                        width: \"100%\",\n                                        height: \"56px\",\n                                    }}\n                                    sx={{\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <CustomTextField\n                                    id=\"street-line2\"\n                                    label=\"Street Line 2\"\n                                    isDisabled={!isEditing}\n                                    defaultValue={updateUserData?.street_address2}\n                                    CustomValue={updateUserData?.street_address2}\n                                    helperText=\"\"\n                                    isValid\n                                    onChange={(event) => {\n                                        setUpdateUserData({\n                                            ...updateUserData,\n                                            street_address2: event?.target?.value,\n                                        });\n                                    }}\n                                    textcss={{\n                                        width: \"100%\",\n                                        height: \"56px\",\n                                    }}\n                                    sx={{\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <CustomTextField\n                                    id=\"zip-code\"\n                                    label=\"Zip Code\"\n                                    isDisabled={!isEditing}\n                                    defaultValue={updateUserData?.zip_code}\n                                    CustomValue={updateUserData?.zip_code}\n                                    helperText=\"\"\n                                    isValid\n                                    onChange={(event) => {\n                                        setUpdateUserData({\n                                            ...updateUserData,\n                                            zip_code: event?.target?.value,\n                                        });\n                                    }}\n                                    textcss={{\n                                        width: \"100%\",\n                                        height: \"56px\",\n                                    }}\n                                    sx={{\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </Stack>\n\n                    {/* Action Buttons */}\n                    {isEditing && (\n                        <Box sx={{ \n                            display: \"flex\", \n                            justifyContent: \"center\", \n                            marginTop: \"32px\",\n                            paddingTop: \"24px\",\n                            borderTop: \"1px solid #e0e0e0\"\n                        }}>\n                            <CustomButton\n                                label=\"Save Changes\"\n                                isTransaprent={false}\n                                isDisabled={false}\n                                isElevated={false}\n                                handleClick={() => {\n                                    setSubmitDataFlag(true);\n                                    setIsEditing(false);\n                                }}\n                                buttonCss={{\n                                    width: \"180px\",\n                                    height: \"48px\",\n                                    borderRadius: \"8px\",\n                                    fontWeight: 600\n                                }}\n                            />\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n        </Box>\n    );\n};\n\nexport default ContactDetails;\n","// import * as React from 'react';\nimport { Box } from \"@mui/material\";\nimport \"./DoctorMainDashboard.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink, Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport DoctorAppointmentCard from \"../CustomDoctorComponent/CustomDoctorAppointment/DoctorAppointment\";\n\nconst DoctorMainDashboard = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"request\"\n            ? \"/doctordashboard/request\"\n            : localStorage.getItem(\"path\") == \"notification\"\n            ? \"/doctordashboard/notification\"\n            : \"/doctordashboard/request\",\n    );\n    useEffect(() => {\n        // navigate(String(\"/doctordashboard/doctorpersonalinfo\"));\n        navigate(String(\"/doctordashboard/request\"));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    \n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorMainDashboard;\n","import React, { useEffect, useState } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\nimport \"./doctorAppointmentDashboard.scss\";\n\nconst DoctorAppointmentDashboard = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"request\"\n            ? \"/doctordashboard/doctorAppointment/request\"\n            : localStorage.getItem(\"path\") == \"upcoming\"\n            ? \"/doctordashboard/doctorAppointment/upcoming\"\n            : localStorage.getItem(\"path\") == \"completed\"\n            ? \"/doctordashboard/doctorAppointment/completed\"\n            : localStorage.getItem(\"path\") == \"cancelled\"\n            ? \"/doctordashboard/doctorAppointment/cancelled\"\n            : localStorage.getItem(\"path\") == \"chats\"\n            ? \"/doctordashboard/doctorAppointment/chats\"\n            : \"/doctordashboard/doctorAppointment/request\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    return (\n        <>\n            <div style={{ width: \"100%\", height: \"96vh\" }}>\n                <Outlet />\n            </div>\n        </>\n    );\n};\n\nexport default DoctorAppointmentDashboard;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst DoctorManage = () => {\n    const navigate = useNavigate();\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"doctorStaff\"\n            ? \"/doctordashboard/doctorManage/doctorStaff\"\n            : localStorage.getItem(\"path\") == \"doctorAuditLog\"\n            ? \"/doctordashboard/doctorManage/doctorAuditLog\"\n            : \"/doctordashboard/doctorManage/doctorStaff\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    useEffect(() => {\n        navigate(\"/doctordashboard/doctorManage/doctorAuditLog\");\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorManage;\n","import React, { useEffect, useState } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\n\nconst DoctorListing = () => {\n    useEffect(() => {\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    }, []);\n\n    const navigate = useNavigate();\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"doctoractiveListing\"\n            ? \"/doctordashboard/doctorListing/doctoractiveListing\"\n            : localStorage.getItem(\"path\") == \"doctorsavedInDraft\"\n            ? \"/doctordashboard/doctorListing/doctorsavedInDraft\"\n            : \"/doctordashboard/doctorListing/doctoractiveListing\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    return (\n        <>\n            <div style={{ width: \"100%\", height: \"96vh\" }}>\n                <Outlet />\n            </div>\n        </>\n    );\n};\n\nexport default DoctorListing;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst DoctorStatistics = () => {\n    const navigate = useNavigate();\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"doctorBookingHistory\"\n            ? \"/doctordashboard/doctorStatistics/doctorBookingHistory\"\n            : localStorage.getItem(\"path\") == \"doctorTransaction\"\n            ? \"/doctordashboard/doctorStatistics/doctorTransaction\"\n            : localStorage.getItem(\"path\") == \"doctorOverview\"\n            ? \"/doctordashboard/doctorStatistics/doctorOverview\"\n            : localStorage.getItem(\"path\") == \"doctorPayout\"\n            ? \"/doctordashboard/doctorStatistics/doctorPayout\"\n            : \"/doctordashboard/doctorStatistics/doctorBookingHistory\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorStatistics;\n","import React, { useEffect, useState } from \"react\";\nimport { Drafts } from \"@mui/icons-material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport AnalyticsIcon from \"@mui/icons-material/Analytics\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport CustomMenuDrawer from \"../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport DoctorMainDashboard from \"../DoctorMainDashboard/DoctorMainDashboard\";\nimport DoctorAppointmentDashboard from \"../DoctorAppointmentDashboard/DoctorAppointmentDashboard\";\nimport DoctorManage from \"../DoctorManage/DoctorManage\";\nimport DoctorListing from \"../DoctorListing/DoctorListing\";\nimport DoctorStatistics from \"../DoctorStatistics/DoctorStatistics\";\nimport \"./doctordashboard.scss\";\n\nfunction DoctorDashboard() {\n    const [activeComponent, setActiveComponent] = useState();\n    const drawerList1 = [\n        { name: \"Dashboard\", icon: <Drafts /> },\n        { name: \"Appointment\", icon: <PersonIcon /> },\n        { name: \"Listing\", icon: <ListAltIcon /> },\n        { name: \"Statistics\", icon: <AnalyticsIcon /> },\n        { name: \"Manage\", icon: <SettingsIcon /> },\n    ];\n    const drawerComponentList = {\n        // dashboard: <MainDashboard/>,\n        dashboard: <DoctorMainDashboard />,\n        appointment: <DoctorAppointmentDashboard />,\n        listing: <DoctorListing />,\n        statistics: <DoctorStatistics />,\n        manage: <DoctorManage />,\n    };\n\n    useEffect(() => {\n\n        document.getElementById('location-search-container').style.display = \"none\"\n\n\n        localStorage.getItem(\"activeComponent\") === \"appointment\"\n            ? setActiveComponent(drawerComponentList.appointment)\n            : localStorage.getItem(\"activeComponent\") === \"listing\"\n            ? setActiveComponent(drawerComponentList.listing)\n            : localStorage.getItem(\"activeComponent\") === \"statistics\"\n            ? setActiveComponent(drawerComponentList.statistics)\n            : localStorage.getItem(\"activeComponent\") === \"manage\"\n            ? setActiveComponent(drawerComponentList.manage)\n            : setActiveComponent(drawerComponentList.dashboard);\n\n    }, []);\n\n    return (\n        <>\n            <div className=\"usage\">\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomMenuDrawer\n                            headerLabel={\"custom drawer\"}\n                            list1={drawerList1}\n                            // list2={drawerList2}\n                            profilepath=\"doctor\"\n                            handleOnMenuSelect={(item) =>\n                                setActiveComponent(drawerComponentList[item.toLowerCase()])\n                            }\n                        >\n                            {/* <Box sx={{width : \"100%\"}}> */}\n                            {activeComponent}\n                            {/* </Box> */}\n                        </CustomMenuDrawer>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default DoctorDashboard;\n","import React, { useState } from \"react\";\nimport \"./doctorlogin.scss\";\nimport { Box, CircularProgress } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuthentication } from \"../../loginComponent/UserProvider\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\nimport CustomTextField from \"../../components/CustomTextField\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { baseURL, emailRegex, passwordRegex } from \"../../constants/const\";\nimport Cookies from \"js-cookie\";\n\nconst DoctorLogin = () => {\n    const [showPassword, setShowPassword] = useState(true);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showSnack, setShowSnack] = useState(false);\n    const [invalidUser, setInvalidUser] = useState(false);\n    const [invalidUserMessage, setInvalidUserMessage] = useState(\"\");\n    const [errorState, setErrorState] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorMessageOpen, setErrorMessageOpen] = useState(false);\n    const [helperTextMessage, setHelperTextMessage] = useState(false);\n    const [passwordHelperTextMessage, setPasswordHelperTextMessage] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const navigate = useNavigate();\n    const { DoctorLogin } = useAuthentication();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!email || !password) {\n            setErrorMessage(\"Please enter email and password\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        setShowSnack(true);\n        setLoading(true);\n\n        const payload = {\n            email,\n            password,\n            login_with_email: true,\n            role_id: 3,\n        };\n\n        try {\n            const response = await axios.post(`${baseURL}/sec/auth/login`, JSON.stringify(payload), {\n                headers: { \"Content-Type\": \"application/json\" },\n            });\n\n            const res = response?.data?.response;\n\n            if (res?.body === \"INCOMPLETE_PROFILE\") {\n                localStorage.setItem(\"doctor_suid\", res?.suid);\n                localStorage.setItem(\"email\", email);\n                navigate(\"/doctorCompleteProfile\");\n            } else if (response?.data?.error === \"invalid user\") {\n                setInvalidUser(true);\n                setInvalidUserMessage(response?.data?.error);\n            } else if (res?.access_token) {\n                localStorage.setItem(\"email\", res?.email);\n                localStorage.setItem(\"access_token\", res?.access_token);\n                localStorage.setItem(\"doctor_suid\", res?.suid);\n                localStorage.setItem(\"path\", \"request\");\n                localStorage.setItem(\"logged_as\", \"doctor\");\n                localStorage.setItem(\"profile\", res?.profile_picture);\n                // persist cookie for auth guard\n                Cookies.set(\"doctorEmail\", res?.email, { expires: 7 });\n\n\n                DoctorLogin(res?.email);\n                setInvalidUser(false);\n                navigate(\"/doctordashboard\", { replace: true });\n            } else {\n                setErrorState(true);\n                setErrorMessage(\"Unexpected response. Please try again.\");\n            }\n        } catch (error) {\n            setErrorState(true);\n            setErrorMessage(error?.response?.data?.error || \"Login failed. Try again.\");\n        } finally {\n            setShowSnack(false);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar isOpen={showSnack} message=\"Please wait while we are logging you in\" type=\"success\" />\n            <CustomSnackBar isOpen={invalidUser} message={invalidUserMessage} type=\"error\" />\n            <CustomSnackBar isOpen={errorState} message={errorMessage} type=\"error\" />\n            <CustomSnackBar isOpen={errorMessageOpen} message={errorMessage} type=\"error\" />\n\n            <Box className=\"form-container\">\n                <div className=\"image-holder\" />\n                <Box className=\"component-library\">\n                    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n                        <h2 className=\"text-center\"><strong>Doctor Login</strong></h2>\n                    </Box>\n\n                    <CustomTextField\n                        id=\"email-input\"\n                        label=\"Email\"\n                        value={email}\n                        defaultValue={email}\n                        helperText={email ? (helperTextMessage ? \"Valid Email\" : \"Invalid Email\") : \"\"}\n                        onChange={(e) => {\n                            const value = e.target.value;\n                            setEmail(value);\n                            setHelperTextMessage(emailRegex.test(value));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                    />\n\n                    <CustomTextField\n                        id=\"password\"\n                        label=\"Password\"\n                        value={password}\n                        defaultValue={password}\n                        helperText={\n                            password\n                                ? (passwordHelperTextMessage\n                                    ? \"Valid Password\"\n                                    : \"Password must be 8+ characters with a number and special character\")\n                                : \"\"\n                        }\n                        type={showPassword ? \"password\" : \"text\"}\n                        onChange={(e) => {\n                            const value = e.target.value;\n                            setPassword(value);\n                            setPasswordHelperTextMessage(passwordRegex.test(value));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                        rightIcon={\n                            showPassword ? (\n                                <VisibilityIcon onClick={() => setShowPassword(false)} />\n                            ) : (\n                                <VisibilityOffIcon onClick={() => setShowPassword(true)} />\n                            )\n                        }\n                    />\n\n                    <CustomButton\n                        label={loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Log In\"}\n                        isDisabled={loading}\n                        handleClick={handleSubmit}\n                        buttonCss={{\n                            width: \"100%\",\n                            padding: \"10px\",\n                            borderRadius: \"100px\",\n                            marginTop: \"20px\",\n                        }}\n                    />\n\n                    <div className=\"forgotpassword\" style={{ fontSize: \"small\" }}>\n                        <Link to=\"/forgotpassword\" className=\"link\">Forgot Password</Link>\n                    </div>\n                    <div className=\"mobile\" style={{ fontSize: \"small\" }}>\n                        <Link \n                            to=\"/loginwithotp\" \n                            className=\"link\"\n                            onClick={() => localStorage.setItem(\"signUp\", \"doctor\")}\n                        >\n                            Log In with OTP\n                        </Link>\n                    </div>\n                    <div className=\"already\" style={{\n                            display: \"inline\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            fontSize: \"small\",\n                        }}>\n                        I don&apos;t have an account &nbsp;\n                        <Link to=\"/signupPage\" className=\"link\">Create Account</Link>\n                    </div>\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default DoctorLogin;\n","import React, { useState } from \"react\";\nimport \"./SelectHCFRoleLogin.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Stack } from \"@mui/material\";\nimport CustomRadioButton from \"../../../components/CustomRadioButton/custom-radio-button\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\n\nconst HCFRoleType = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n\n    // from here\n\n    const handleSubmit = () => {\n        if (radioVal === \"Diagnostic Center\") {\n            localStorage.setItem(\"signUp\", \"diagnostic_center\");\n            navigate(\"/diagnostcenterlogin\");\n        } else if (radioVal === \"Clinic\") {\n            localStorage.setItem(\"signUp\", \"clinic\");\n            navigate(\"/diagnostcliniclogin\");\n        } else if (radioVal === \"HCF Admin\") {\n            localStorage.setItem(\"signUp\", \"hcf_admin\");\n            navigate(\"/hcfadminlogin\");\n        } else {\n            alert(\"Invalid option\");\n        }\n\n        // const navigateToRoute =\n        //     radioVal === \"Diagnostic Center\"\n        //         ? \"/diagnostcenterlogin\"\n        //         : radioVal === \"Clinic\"\n        //         ? \"/diagnostcliniclogin\"\n        //         : radioVal === \"HCF Admin\"\n        //         ? \"/hcfadmin\"\n        //         : null;\n\n        // navigate(navigateToRoute);\n    };\n    const radioValues = [\"Diagnostic Center\", \"Clinic\", \"HCF Admin\"];\n    const [radioVal, setRadioVal] = useState(radioValues[0]);\n\n    // till here\n    return (\n        <div className=\"register-photo\">\n            <div className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <div>\n                    <div className=\"logo\">\n                        <img src=\"images/logo.png\" alt=\"Logo\"/>\n                    </div>\n\n                    <h2 className=\"text-center m-5\">\n                        <strong>Please</strong> <strong>select</strong>\n                    </h2>\n\n                    <div className=\"component-library\">\n                                <CustomRadioButton\n                                    label={\"\"}\n                                    radiocss={{\n                                        border: \" 1px solid #E6E1E5\",\n                                        // padding: \"0px 10px\",\n                                        borderRadius: \"16px\",\n                                        width: \"300px\",\n                                        height: \"6em\",\n                                        margin: \"10px\",\n                                    }}\n                                    handleChange={({ target }) => setRadioVal(target.value)}\n                                    value={radioVal}\n                                    items={radioValues}\n                                />\n                        <CustomButton\n                            label={\"Continue\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={{\n                                width: \"22em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                borderRadius: \"100px\",\n                                marginTop: \"37px\",\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default HCFRoleType;\n","import React, { useState } from \"react\";\nimport \"./diagnostLogin.scss\";\nimport { Box, CircularProgress } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport CustomTextField from \"../../../components/CustomTextField\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport { useAuthentication } from \"../../../loginComponent/UserProvider\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar/custom-sack-bar\";\nimport { baseURL, emailRegex, passwordRegex } from \"../../../constants/const\";\nimport Cookies from \"js-cookie\";\n\nconst DiagnosticLogin = () => {\n    const [showPassword, setShowPassword] = useState(true);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [emailValid, setEmailValid] = useState(true);\n    const [passwordValid, setPasswordValid] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [showSnack, setShowSnack] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorMessageOpen, setErrorMessageOpen] = useState(false);\n    const [showError, setShowError] = useState(false);\n\n    const navigate = useNavigate();\n    const { DiagnostLogin } = useAuthentication();\n\n    const fetchData = async () => {\n        if (!email || !password) {\n            setErrorMessage(\"Please enter email and password\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        const loginData = {\n            email,\n            password,\n            login_with_email: true,\n            mobile: null,\n            role_id: 4,\n        };\n\n        setShowSnack(true);\n        setErrorMessageOpen(false);\n        setLoading(true);\n        setShowError(false);\n\n        try {\n            const response = await axios.post(\n                `${baseURL}/sec/auth/login`,\n                JSON.stringify(loginData),\n                { Accept: \"Application/json\" }\n            );\n\n            const resData = response?.data?.response;\nconsole.log(\"resData\", resData);\n            if (resData?.body === \"INCOMPLETE_PROFILE\") {\n                // Store diagnostic center data for incomplete profile\n                localStorage.setItem(\"login_Email\", resData.email);\n                localStorage.setItem(\"email\", resData.email);\n                localStorage.setItem(\"diagnostic_suid\", resData.suid);\n                console.log(\"Incomplete profile - stored diagnostic data:\", resData.email, resData.suid);\n                navigate(\"/diagnostCenterSignup\", { replace: true });\n            } else if (resData?.access_token) {\n                localStorage.setItem(\"access_token\", resData.access_token);\n                localStorage.setItem(\"diagnostic_suid\", resData.suid);\n                localStorage.setItem(\"diagnostic_Email\", resData.email);\n                localStorage.setItem(\"profile\", resData.profile_picture);\n                Cookies.set(\"diagnostic_Email\", resData.email, { expires: 7 });\n\n                DiagnostLogin(resData.email);\n                navigate(\"/diagnostCenterDashboard/notification\", { replace: true });\n            } else {\n                setShowError(true);\n            }\n        } catch (error) {\n            setErrorMessage(error?.response?.data?.error || \"Login failed\");\n            setErrorMessageOpen(true);\n            setEmail(\"\");\n            setPassword(\"\");\n        } finally {\n            setShowSnack(false);\n            setLoading(false);\n        }\n    };\n\n    const handleEmailChange = (event) => {\n        const value = event.target.value;\n        setEmail(value);\n        setEmailValid(emailRegex.test(value));\n    };\n\n    const handlePasswordChange = (event) => {\n        const value = event.target.value;\n        setPassword(value);\n        setPasswordValid(passwordRegex.test(value));\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar\n                isOpen={showError}\n                message=\"Some error occurred, please try later\"\n                type=\"error\"\n            />\n            <CustomSnackBar\n                isOpen={showSnack}\n                message=\"Please wait while we log you in\"\n                type=\"success\"\n            />\n            <CustomSnackBar\n                isOpen={errorMessageOpen}\n                message={errorMessage}\n                type=\"error\"\n            />\n\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n                <Box className=\"component-library\">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n                        <h2 className=\"text-center\">\n                            <strong>Diagnostic Login</strong>\n                        </h2>\n                    </Box>\n\n                    <CustomTextField\n                        id=\"email-input\"\n                        label=\"Email\"\n                        value={email}\n                        defaultValue={email}\n                        helperText={email ? (emailValid ? \"Valid Email\" : \"Invalid Email\") : \"\"}\n                        onChange={handleEmailChange}\n                        textcss={{ width: \"19.5em\" }}\n                    />\n\n                    <CustomTextField\n                        id=\"password-input\"\n                        label=\"Password\"\n                        value={password}\n                        helperText={\n                            password\n                                ? passwordValid\n                                    ? \"Valid Password\"\n                                    : \"Password must be 8+ characters with a number and special character\"\n                                : \"\"\n                        }\n                        type={showPassword ? \"password\" : \"text\"}\n                        onChange={handlePasswordChange}\n                        defaultValue={password}\n                        textcss={{ width: \"19.5em\" }}\n                        rightIcon={\n                            showPassword ? (\n                                <VisibilityIcon onClick={() => setShowPassword(false)} />\n                            ) : (\n                                <VisibilityOffIcon onClick={() => setShowPassword(true)} />\n                            )\n                        }\n                    />\n\n                    <CustomButton\n                        label={loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Log In\"}\n                        isDisabled={loading}\n                        handleClick={fetchData}\n                        buttonCss={{\n                            width: \"100%\",\n                            padding: \"10px\",\n                            borderRadius: \"100px\",\n                            marginTop: \"16px\",\n                        }}\n                        aria-label=\"Submit login form\"\n                    />\n\n                    <div className=\"forgotpassword\" style={{ fontSize: \"small\" }}>\n                        <Link to=\"/forgotpassword\" className=\"link\">\n                            Forgot Password\n                        </Link>\n                    </div>\n                    <div className=\"mobile\" style={{ fontSize: \"small\" }}>\n                        <Link \n                            to=\"/loginwithotp\" \n                            className=\"link\"\n                            onClick={() => localStorage.setItem(\"signUp\", \"diagnostic_center\")}\n                        >\n                            Log In with OTP\n                        </Link>\n                    </div>\n                    {/* <div\n                        className=\"already\"\n                        style={{\n                            display: \"inline\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            fontSize: \"small\",\n                        }}\n                    >\n                        I don&apos;t have an account &nbsp;\n                        <Link to=\"/patientsignup\" className=\"link\">\n                            Create Account\n                        </Link>\n                    </div> */}\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default DiagnosticLogin;\n","// import React from 'react'\nimport React, { useEffect, useState } from \"react\";\nimport \"./clicniLogin.scss\";\nimport { Box, CircularProgress, IconButton, InputAdornment, Stack, TextField } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport CustomTextField from \"../../../components/CustomTextField\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport { useAuthentication } from \"../../../loginComponent/UserProvider\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar/custom-sack-bar\";\nimport { baseURL, emailRegex, passwordRegex } from \"../../../constants/const\";\nimport Cookies from \"js-cookie\";\n\nconst ClinicLogin = () => {\n    const [showPassword, setShowPassword] = useState(true);\n    const [islogin, setIslogin] = useState(false);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [showSnack, setShowSnack] = useState(false);\n    const [helperTextMessage, setHelperTextMessage] = useState(false);\n    const [passwordHelperTextMessage, setPasswordHelperTextMessage] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [errorMessageOpen, setErrorMessageOpen] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState({\n        email: null,\n        password: null,\n        login_with_email: true,\n        mobile: null,\n        role_id: 6,\n    });\n\n    const navigate = useNavigate();\n    const { ClinicLogin } = useAuthentication();\n\n    const fetchData = async () => {\n        if (!email || !password) {\n            setErrorMessage(\"Please enter email and password\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        if (!emailRegex.test(email)) {\n            setErrorMessage(\"Please enter a valid email\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        if (!passwordRegex.test(password)) {\n            setErrorMessage(\"Password must meet the required criteria\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        const loginData = {\n            email,\n            password,\n            login_with_email: true,\n            mobile: null,\n            role_id: 6,\n        };\n\n        setShowSnack(true);\n        setErrorMessageOpen(false);\n        setLoading(true);\n        setShowError(false);\n\n        try {\n            const response = await axios.post(\n                `${baseURL}/sec/auth/login`,\n                JSON.stringify(loginData),\n                {\n                    Accept: \"Application/json\",\n                },\n            );\n\n            const resData = response?.data?.response;\n\n            if (resData?.body === \"INCOMPLETE_PROFILE\") {\n                navigate(\"/clinicdoctorcompleteprofile\");\n            } else if (resData?.access_token) {\n                localStorage.setItem(\"access_token\", resData.access_token);\n                localStorage.setItem(\"clinic_suid\", resData.suid);\n                localStorage.setItem(\"clinic_Email\", resData.email);\n                localStorage.setItem(\"profile\", resData.profile_picture);\n                Cookies.set(\"clinicEmail\", resData.email, { expires: 7 });\n\n                ClinicLogin(resData.email);\n\n                navigate(\"/clinicDashboard/clinicbodydashboard/clinirequests\", { replace: true });\n            } else {\n                setShowError(true);\n            }\n        } catch (error) {\n            console.error(error);\n            setErrorMessage(error?.response?.data?.error || \"Something went wrong\");\n            setErrorMessageOpen(true);\n            setEmail(null);\n            setPassword(null);\n            setShowSnack(false);\n        } finally {\n            setLoading(false);\n            setShowSnack(false);\n        }\n    };\n\n    // useEffect(() => {\n    //     if (islogin === true) {\n    //         fetchData();\n    //     }\n    // }, [islogin]);\n\n    // const handleSubmit = (e) => {\n    //     e.preventDefault();\n\n    //     // if (email === null && password === null) {\n    //     //     alert(\"Email and Password\");\n    //     //     setIslogin(false);\n    //     //     return false;\n    //     // }\n    //     // else if(regularExpression.test(password)){\n    //     //     alert(\"password should contain atleast one number and one special character\");\n    //     //     return false;\n    //     // }\n    //     setData({\n    //         email: email,\n    //         password: password,\n    //         // mobile: \"9994483286\",\n    //         login_with_email: true,\n    //         role_id: 6,\n    //     });\n    //     // setIslogin(!islogin);\n    //     fetchData();\n    //     return null;\n    // };\n\n    console.log(\"Patient Data : \", data);\n\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar\n                isOpen={showError}\n                // actionLabel={\"action\"}\n                // handleAction={() => setShowSnack(true)}\n                message={\"some error occur please try later\"}\n                type=\"error\"\n            />\n\n            <CustomSnackBar\n                isOpen={showSnack}\n                // actionLabel={\"action\"}\n                // handleAction={() => setShowSnack(true)}\n                message={\"Please Wait while we are logging you in\"}\n                type=\"success\"\n            />\n\n            <CustomSnackBar\n                isOpen={errorMessageOpen}\n                // actionLabel={\"action\"}\n                // handleAction={() => setShowSnack(true)}\n                message={errorMessage}\n                type=\"error\"\n            />\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <Box className=\"component-library \">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" />\n                        </div>\n\n                        <h2 className=\"text-center\">\n                            <strong>Clinic Login</strong>\n                        </h2>\n                    </Box>\n                    <CustomTextField\n                        id={\"standard-helperText1\"}\n                        label={\"Email\"}\n                        value={email || \"\"}\n                        helperText={\n                            email ? (emailRegex.test(email) ? \"Valid Email\" : \"Invalid Email\") : \"\"\n                        }\n                        onChange={(event) => {\n                            const value = event.target.value;\n                            setEmail(value);\n                            setHelperTextMessage(emailRegex.test(value));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                    />\n                    {/* // spacing={10}\n                                    // alignItems=\"center\"\n                                    // flexDirection=\"column\"\n                                    // sx={{ marginTop: \"2%\" }} */}\n\n                    <CustomTextField\n                        id={\"standard-helperText1\"}\n                        label={\"Password\"}\n                        value={password || \"\"}\n                        defaultValue={password}\n                        helperText={\n                            password\n                                ? passwordRegex.test(password)\n                                    ? \"Valid Password\"\n                                    : \"Password must be 8+ characters with a number and special character\"\n                                : \"\"\n                        }\n                        type={showPassword ? \"password\" : \"text\"}\n                        onChange={(event) => {\n                            const value = event.target.value;\n                            setPassword(value);\n                            setPasswordHelperTextMessage(passwordRegex.test(value));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                        rightIcon={\n                            showPassword ? (\n                                <VisibilityIcon onClick={() => setShowPassword(false)} />\n                            ) : (\n                                <VisibilityOffIcon onClick={() => setShowPassword(true)} />\n                            )\n                        }\n                    />\n                    {/* <CustomButton\n                            label={\"Log In\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={fetchData}\n                            buttonCss={{\n                                width: \"22em\",\n                                // height: \"3.5em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                borderRadius: \"100px\",\n                                marginTop: \"35px\",\n                            }}\n                        /> */}\n                    <CustomButton\n                        label={loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Log In\"}\n                        isDisabled={loading}\n                        handleClick={fetchData}\n                        buttonCss={{\n                            width: \"100%\",\n                            padding: \"10px\",\n                            borderRadius: \"100px\",\n                            mt: 2,\n                        }}\n                        aria-label=\"Submit login form\"\n                    />\n                    <div className=\"forgotpassword\" style={{ fontSize: \"small\" }}>\n                        <Link to=\"/patientforgotpassword\" className=\"link\">\n                            Forgot Password\n                        </Link>\n                    </div>\n                    <div className=\"mobile\" style={{ fontSize: \"small\" }}>\n                        <Link \n                            to=\"/loginwithotp\" \n                            className=\"link\"\n                            onClick={() => localStorage.setItem(\"signUp\", \"clinic\")}\n                        >\n                            Log In with OTP\n                        </Link>\n                    </div>\n                    {/* <div\n                        className=\"already\"\n                        style={{\n                            display: \"inline\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            fontSize: \"small\",\n                        }}\n                    >\n                        I Don&apos;t have an account &nbsp;\n                        <Link to=\"/patientsignup\" className=\"link\">\n                            Create Account\n                        </Link>\n                    </div> */}\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default ClinicLogin;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink, Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst HCFDiagnosticCenterMainDashboard = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        navigate(\"/diagnostCenterDashboard/notification\");\n    }, []);\n    useEffect( () => {\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    } ,[])\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default HCFDiagnosticCenterMainDashboard;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst DiagnosticCenterReports = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        (() => {\n            const pathFromStorage = localStorage.getItem(\"path\");\n            console.log(\"Path from localStorage:\", pathFromStorage);\n            \n            // Clear any cached misspelled paths and ensure we use the correct route\n            if (pathFromStorage === \"request\") {\n                return \"/diagnostCenterDashboard/diagnosticCenterReports/request\";\n            } else if (pathFromStorage === \"examination\") {\n                return \"/diagnostCenterDashboard/diagnosticCenterReports/examination\";\n            } else if (pathFromStorage === \"report\") {\n                return \"/diagnostCenterDashboard/diagnosticCenterReports/report\";\n            } else if (pathFromStorage === \"Chart\") {\n                return \"/diagnostCenterDashboard/diagnosticCenterReports/Chart\";\n            }\n            // Default to request page\n            return \"/diagnostCenterDashboard/diagnosticCenterReports/request\";\n        })()\n    );\n    useEffect(() => {\n        // Clear any cached misspelled paths from localStorage\n        const cachedPath = localStorage.getItem(\"path\");\n        if (cachedPath && cachedPath.includes(\"dignostic\")) {\n            console.log(\"Clearing cached misspelled path:\", cachedPath);\n            localStorage.removeItem(\"path\");\n        }\n        \n        navigate(String(navigateToRoute));\n    }, []);\n    useEffect( () => {\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    } ,[])\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default DiagnosticCenterReports;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst DiagnosticCenterProfile = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"diagnostcenterprofileinfo\"\n            ? \"/diagnostCenterDashboard/diagnostcenterprofile/diagnostcenterprofileinfo\"\n            : \"/diagnostCenterDashboard/diagnostcenterprofile/diagnostcenterprofileinfo\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default DiagnosticCenterProfile;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst DiagnosticCenterManage = () => {\n    // const navigate = useNavigate();\n\n    const navigate = useNavigate();\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"diagnostsalesactivities\"\n            ? \"/diagnostCenterDashboard/dignosticCentermanage/diagnostsalesactivities\"\n            : localStorage.getItem(\"path\") == \"diagnostcenterauditlog\"\n            ? \"/diagnostCenterDashboard/dignosticCentermanage/diagnostcenterauditlog\"\n            : \"/diagnostCenterDashboard/dignosticCentermanage/diagnostsalesactivities\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default DiagnosticCenterManage;\n","import React, { useEffect, useState } from \"react\";\nimport { Drafts } from \"@mui/icons-material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport AnalyticsIcon from \"@mui/icons-material/Analytics\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport CustomMenuDrawer from \"../../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport HCFDiagnosticCenterMainDashboard from \"../../DiagnosticCenter/DiagnosticDashboard/HCFDiagnosticCenterMainDashboard/HCFDiagnosticCenterMainDashboard\";\nimport DiagnosticCenterReports from \"../../DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterReports\";\nimport DiagnosticCenterProfile from \"../../DiagnosticCenter/DiagnosticProfile/DiagnstCenterProfileDashboard\";\nimport DiagnosticCenterManage from \"../../DiagnosticCenter/DiagnosticManage/DiagnosticCenterManage\";\n\nfunction DiagnosticMainCenterDashboard() {\n    // const [activeComponent, setActiveComponent] = useState();\n    const drawerList1 = [\n        { name: \"Dashboard\", icon: <Drafts /> },\n        { name: \"Reports\", icon: <PersonIcon /> },\n        { name: \"Profile\", icon: <ListAltIcon /> },\n        { name: \"Manage\", icon: <SettingsIcon /> },\n    ];\n    const drawerComponentList = {\n        // dashboard: <MainDashboard/>,\n        dashboard: <HCFDiagnosticCenterMainDashboard />,\n        reports: <DiagnosticCenterReports />,\n        profile: <DiagnosticCenterProfile />,\n        manage: <DiagnosticCenterManage />,\n    };\n\n    useEffect(() => {\n        localStorage.getItem(\"activeComponent\") === \"reports\"\n            ? setActiveComponent(drawerComponentList.reports)\n            : localStorage.getItem(\"activeComponent\") === \"profile\"\n            ? setActiveComponent(drawerComponentList.profile)\n            : localStorage.getItem(\"activeComponent\") === \"manage\"\n            ? setActiveComponent(drawerComponentList.manage)\n            : setActiveComponent(drawerComponentList.dashboard);\n    }, []);\n\n    const [activeComponent, setActiveComponent] = useState(drawerComponentList.dashboard);\n\n    return (\n        <>\n            <div className=\"usage\">\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomMenuDrawer\n                            headerLabel={\"custom drawer\"}\n                            list1={drawerList1}\n                            // list2={drawerList2}\n                            profilepath={'diagnostic'}\n                            handleOnMenuSelect={(item) =>\n                                setActiveComponent(drawerComponentList[item.toLowerCase()])\n                            }\n                        >\n                            {/* <Box sx={{width : \"100%\"}}> */}\n                            {activeComponent}\n                            {/* </Box> */}\n                        </CustomMenuDrawer>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default DiagnosticMainCenterDashboard;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst ClinicDashboard = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n\n        localStorage.getItem(\"path\") == \"clinirequests\"\n            ? \"/clinicDashboard/clinicbodydashboard/clinirequests\"\n            : localStorage.getItem(\"path\") == \"clinicnotification\"\n            ? \"/clinicDashboard/clinicbodydashboard/clinicnotification\"\n            : \"/clinicDashboard/clinicbodydashboard/clinirequests\",\n    );\n    useEffect(() => {\n        document.getElementById('location-search-container').style.display = \"none\"\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default ClinicDashboard;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst ClinicMyAppointments = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"clinicrequest\"\n            ? \"/clinicDashboard/clinicmyappointment/clinicrequest\"\n            : localStorage.getItem(\"path\") == \"clinicupcoming\"\n            ? \"/clinicDashboard/clinicmyappointment/clinicupcoming\"\n            : localStorage.getItem(\"path\") == \"cliniccompleted\"\n            ? \"/clinicDashboard/clinicmyappointment/cliniccompleted\"\n            : localStorage.getItem(\"path\") == \"cliniccancelled\"\n            ? \"/clinicDashboard/clinicmyappointment/cliniccancelled\"\n            : localStorage.getItem(\"path\") == \"clinicchats\"\n            ? \"/clinicDashboard/clinicmyappointment/clinicchats\"\n            : \"/clinicDashboard/clinicmyappointment/clinicrequest\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default ClinicMyAppointments;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst ClinicProfile = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"profileinformation\"\n            ? \"/clinicDashboard/clinicprofile/profileinformation\"\n            : \"/clinicDashboard/clinicprofile/profileinformation\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default ClinicProfile;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst ClinicManage = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"clinicsalesactivities\"\n            ? \"/clinicDashboard/clinicmanage/clinicsalesactivities\"\n            : localStorage.getItem(\"path\") == \"clinicauditlog\"\n            ? \"/clinicDashboard/clinicmanage/clinicauditlog\"\n            : \"/clinicDashboard/clinicmanage/clinicsalesactivities\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default ClinicManage;\n","import React, { useEffect, useState } from \"react\";\n// import CustomMenuDrawer from \"../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport { Drafts } from \"@mui/icons-material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport AnalyticsIcon from \"@mui/icons-material/Analytics\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport CustomMenuDrawer from \"../../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport ClinicDashboard from \"../../Clinic/ClinicDashboard/ClinicDashboard\";\nimport ClinicMyAppointments from \"../../Clinic/ClinicMyAppointments/ClinicMyAppointments\";\nimport ClinicProfile from \"../../Clinic/ClinicProfile/ClinicProfile\";\nimport ClinicManage from \"../../Clinic/ClinicManage/ClinicManage\";\n\nfunction ClinicMainDashboard() {\n    const drawerList1 = [\n        { name: \"Dashboard\", icon: <Drafts /> },\n        { name: \"MyAppointment\", icon: <PersonIcon /> },\n        // { name: \"Listing\", icon : <ClinicDoctorListing /> },\n        { name: \"Profile\", icon: <ListAltIcon /> },\n        { name: \"Manage\", icon: <SettingsIcon /> },\n    ];\n    const drawerComponentList = {\n        // dashboard: <MainDashboard/>,\n        dashboard: <ClinicDashboard />,\n        myappointment: <ClinicMyAppointments />,\n        // listing: <h1>Clinic listing</h1>,\n        profile: <ClinicProfile />,\n        manage: <ClinicManage />,\n    };\n\n    const [activeComponent, setActiveComponent] = useState();\n    useEffect(() => {\n        localStorage.getItem(\"activeComponent\") === \"myappointment\"\n            ? setActiveComponent(drawerComponentList.myappointment)\n            : localStorage.getItem(\"activeComponent\") === \"profile\"\n            ? setActiveComponent(drawerComponentList.profile)\n            : localStorage.getItem(\"activeComponent\") === \"manage\"\n            ? setActiveComponent(drawerComponentList.manage)\n            : setActiveComponent(drawerComponentList.dashboard);\n    }, []);\n\n    return (\n        <>\n            <div className=\"usage\">\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomMenuDrawer\n                            headerLabel={\"custom drawer\"}\n                            list1={drawerList1}\n                            // list2={drawerList2}\n                            profilepath={\"clinic\"}\n                            handleOnMenuSelect={(item) =>\n                                setActiveComponent(drawerComponentList[item.toLowerCase()])\n                            }\n                        >\n                            {/* <Box sx={{width : \"100%\"}}> */}\n                            {activeComponent}\n                            {/* </Box> */}\n                        </CustomMenuDrawer>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ClinicMainDashboard;\n","// Centralized route constants - Best Practice: Single source of truth for all routes\nexport const ROUTES = {\n  // Landing pages\n  HOME: \"/\",\n  HOW_IT_WORKS: \"/howItWorks\",\n  ABOUT_LANDING: \"/aboutLanding\",\n  USAGE: \"/usage\",\n\n  // Authentication & Role Selection\n  SELECT_ROLE_LOGIN: \"/SelectRoleLogin\",\n  SELECT_ROLE_SIGNUP: \"/selectRoleSignup\",\n  SELECT_HCF_PROFILE_TYPE: \"/HCFRoleType\",\n  SELECT_HCF_SIGNUP: \"/selectHcfSignup\",\n\n  // Login Routes\n  PATIENT_LOGIN: \"/patientLogin\",\n  HCF_ADMIN_LOGIN: \"/hcfAdminLogin\",\n  SUPER_ADMIN_LOGIN: \"/superAdminLogin\",\n  DOCTOR_LOGIN: \"/doctorLogin\",\n  CLINIC_LOGIN: \"/clinicLogin\",\n  DIAGNOST_CENTER_LOGIN: \"/diagnostCenterLogin\",\n\n  // Signup Routes\n  PATIENT_SIGNUP: \"/signupPage\",\n  DOCTOR_SIGNUP: \"/signupPage\",\n  HCF_ADMIN_SIGNUP: \"/signupPage\",\n  DIAGNOST_CENTER_SIGNUP: \"/diagnostCenterSignup\",\n  DIAGNOST_CLINIC_SIGNUP: \"/diagnostClinicSignup\",\n\n  \n\n  // Password Management\n  FORGOT_PASSWORD: \"/ForgotPassword\",\n  FORGOT_PASSWORD_OTP: \"/ForgotPasswordOTP\",\n  FORGOT_PASSWORD_CHANGE: \"/ForgotPasswordChange\",\n\n  // OTP & Verification\n  LOGIN_WITH_OTP: \"/LoginWithOtp\",\n  LOGIN_WITH_OTP_VERIFY: \"/LoginWithOtpVerify\",\n  EMAIL_VERIFICATION: \"/emailVerification\",\n\n  // Patient Profile Completion\n  PATIENT_COMPLETE_PROFILE: \"/patientCompleteProfile\",\n  PATIENT_PERSONAL_INFORMATION: \"/patientPersonalInformation\",\n  PATIENT_CONTACT_INFORMATION: \"/patientContactInformation\",\n  PATIENT_PAYMENT_INFORMATION: \"/patientPaymentInformation\",\n\n  // Doctor Profile Completion\n  DOCTOR_COMPLETE_PROFILE: \"/doctorCompleteProfile\",\n  CLINIC_DOCTOR_COMPLETE_PROFILE: \"/clinicDoctorCompleteProfile\",\n\n  // Dashboard Routes\n  PATIENT_DASHBOARD: \"/patientDashboard\",\n  DOCTOR_DASHBOARD: \"/doctorDashboard\",\n  HCF_ADMIN: \"/hcfAdmin\",\n  SUPER_ADMIN: \"/superAdmin\",\n  CLINIC_DASHBOARD: \"/clinicDashboard\",\n  DIAGNOST_CENTER_DASHBOARD: \"/diagnostCenterDashboard\",\n\n  // Patient Dashboard Sub-routes\n  PATIENT_DASHBOARD_MAIN: \"/patientDashboard/dashboard\",\n  PATIENT_DASHBOARD_EXPLORE: \"/patientDashboard/dashboard/explore\",\n  PATIENT_DASHBOARD_MY_ACTIVITY: \"/patientDashboard/dashboard/myactivity\",\n  PATIENT_DASHBOARD_PROFILE: \"/patientDashboard/dashboard/profile\",\n  PATIENT_DASHBOARD_PAYMENT: \"/patientDashboard/dashboard/payment\",\n  PATIENT_DASHBOARD_CONTACT: \"/patientDashboard/dashboard/contact\",\n  PATIENT_DASHBOARD_PATIENT_HCF: \"/patientDashboard/dashboard/patienthcf\",\n\n  // Patient Appointment Routes\n  PATIENT_APPOINTMENT: \"/patientDashboard/appointment\",\n  PATIENT_APPOINTMENT_UPCOMING: \"/patientDashboard/appointment/upcoming\",\n  PATIENT_APPOINTMENT_COMPLETED: \"/patientDashboard/appointment/completed\",\n  PATIENT_APPOINTMENT_CANCELLED: \"/patientDashboard/appointment/cancelled\",\n  PATIENT_APPOINTMENT_CHAT: \"/patientDashboard/appointment/chats\",\n  PATIENT_APPOINTMENT_CHAT_PAGE: \"/patientDashboard/appointment/chats/:roomID/:appointment_id\",\n\n  // Patient Manage Routes\n  PATIENT_MANAGE: \"/patientDashboard/manage\",\n  PATIENT_MANAGE_BOOKING_HISTORY: \"/patientDashboard/manage/bookinghistory\",\n  PATIENT_MANAGE_TRANSACTIONS: \"/patientDashboard/manage/transactions\",\n  PATIENT_MANAGE_REPORTS: \"/patientDashboard/manage/reports\",\n  PATIENT_MANAGE_REPORTS_REQUEST: \"/patientDashboard/manage/reports/request\",\n  PATIENT_MANAGE_REPORTS_EXAMINED: \"/patientDashboard/manage/reports/examined\",\n  PATIENT_MANAGE_REPORTS_RECEIVED: \"/patientDashboard/manage/reports/received\",\n  PATIENT_MANAGE_REPORTS_SHARED: \"/patientDashboard/manage/reports/shared\",\n  PATIENT_MANAGE_SUBSCRIPTIONS: \"/patientDashboard/manage/subscriptions\",\n\n  // Patient Activity Routes\n  PATIENT_ACTIVITY_RECEIVED: \"/patientDashboard/dashboard/myactivity/received\",\n  PATIENT_ACTIVITY_SHARED: \"/patientDashboard/dashboard/myactivity/shared\",\n\n  // Doctor Details Routes\n  PATIENT_DOCTOR_DETAILS: \"/patientDashboard/drDetailsCard/:resID\",\n  PATIENT_HCF_DOCTOR_DETAILS: \"/patientDashboard/hcfDetailCard/hcfDoctor/:hcddocid/:reshcfID\",\n  PATIENT_HCF_DETAILS: \"/patientDashboard/hcfDetailCard/:hcfID\",\n  PATIENT_HCF_DETAILS_ABOUT: \"/patientDashboard/hcfDetailCard/:hcfID/about\",\n  PATIENT_HCF_DETAILS_DEPARTMENT: \"/patientDashboard/hcfDetailCard/:hcfID/department\",\n  PATIENT_HCF_DETAILS_LABS: \"/patientDashboard/hcfDetailCard/:hcfID/labs\",\n\n  // Doctor Dashboard Sub-routes\n  DOCTOR_DASHBOARD_MAIN: \"/doctorDashboard/doctorMainDashboard\",\n  DOCTOR_DASHBOARD_REQUEST: \"/doctorDashboard/doctorMainDashboard/request\",\n  DOCTOR_DASHBOARD_NOTIFICATION: \"/doctorDashboard/doctorMainDashboard/notification\",\n\n  // Doctor Appointment Routes\n  DOCTOR_APPOINTMENT: \"/doctorDashboard/doctorAppointment\",\n  DOCTOR_APPOINTMENT_REQUEST: \"/doctorDashboard/doctorAppointment/request\",\n  DOCTOR_APPOINTMENT_UPCOMING: \"/doctorDashboard/doctorAppointment/upcoming\",\n  DOCTOR_APPOINTMENT_COMPLETED: \"/doctorDashboard/doctorAppointment/completed\",\n  DOCTOR_APPOINTMENT_CANCELLED: \"/doctorDashboard/doctorAppointment/cancelled\",\n  DOCTOR_APPOINTMENT_CHATS: \"/doctorDashboard/doctorAppointment/chats\",\n  DOCTOR_APPOINTMENT_VIDEO_CALL: \"/doctorDashboard/doctorAppointment/chats/videoCall\",\n  DOCTOR_APPOINTMENT_VOICE_CALL: \"/doctorDashboard/doctorAppointment/chats/voiceCall\",\n\n  // Doctor Listing Routes\n  DOCTOR_LISTING: \"/doctorDashboard/doctorListing\",\n  DOCTOR_LISTING_DETAILS: \"/doctorDashboard/doctorListing/doctorListingDetails\",\n  DOCTOR_LISTING_CREATE: \"/doctorDashboard/doctorListing/createNewListing\",\n  DOCTOR_LISTING_ACTIVE: \"/doctorDashboard/doctorListing/doctorActiveListing\",\n  DOCTOR_LISTING_SAVED_DRAFT: \"/doctorDashboard/doctorListing/doctorSavedDraft\",\n\n  // Doctor Manage Routes\n  DOCTOR_MANAGE: \"/doctorDashboard/doctorManage\",\n  DOCTOR_MANAGE_PROFILE: \"/doctorDashboard/doctorManage/profile\",\n  DOCTOR_MANAGE_STAFF: \"/doctorDashboard/doctorManage/doctorStaff\",\n  DOCTOR_MANAGE_AUDIT_LOG: \"/doctorDashboard/doctorManage/doctorAuditLog\",\n\n  // Doctor Statistics Routes\n  DOCTOR_STATISTICS: \"/doctorDashboard/doctorStatistics\",\n  DOCTOR_STATISTICS_OVERVIEW: \"/doctorDashboard/doctorStatistics/doctorOverview\",\n  DOCTOR_STATISTICS_BOOKING_HISTORY: \"/doctorDashboard/doctorStatistics/doctorBookingHistory\",\n  DOCTOR_STATISTICS_TRANSACTIONS: \"/doctorDashboard/doctorStatistics/doctorTransactions\",\n  DOCTOR_STATISTICS_PAYOUT: \"/doctorDashboard/doctorStatistics/doctorPayout\",\n\n  // HCF Admin Routes\n  HCF_ADMIN_MAIN: \"/hcfAdmin/hcfMainDashboard\",\n  HCF_ADMIN_DOCTOR: \"/hcfAdmin/hcfDoctor\",\n  HCF_ADMIN_DOCTOR_ADD: \"/hcfAdmin/hcfDoctor/addDoctor\",\n  HCF_ADMIN_DOCTOR_LISTING: \"/hcfAdmin/hcfDoctor/doctorListing\",\n  HCF_ADMIN_DOCTOR_STAFF: \"/hcfAdmin/hcfDoctor/doctorStaff\",\n  HCF_ADMIN_DOCTOR_AUDIT_LOG: \"/hcfAdmin/hcfDoctor/doctorAuditLog\",\n\n  // HCF Admin Diagnostic Center Routes\n  HCF_ADMIN_DIAGNOSTIC_CENTER: \"/hcfAdmin/diagnosticCenter\",\n  HCF_ADMIN_DIAGNOSTIC_CENTER_LABS: \"/hcfAdmin/diagnosticCenter/labs\",\n  HCF_ADMIN_DIAGNOSTIC_CENTER_LAB_DETAILS: \"/hcfAdmin/diagnosticCenter/labs/:labId\",\n  HCF_ADMIN_DIAGNOSTIC_CENTER_REPORTS: \"/hcfAdmin/diagnosticCenter/reports\",\n  HCF_ADMIN_DIAGNOSTIC_CENTER_CHARTS: \"/hcfAdmin/diagnosticCenter/charts\",\n  HCF_ADMIN_DIAGNOSTIC_CENTER_CHATS: \"/hcfAdmin/diagnosticCenter/chats\",\n\n  // Super Admin Routes\n  SUPER_ADMIN_MAIN: \"/superAdmin/superAdminMainDashboard\",\n  SUPER_ADMIN_USERS: \"/superAdmin/superAdminUsers\",\n  SUPER_ADMIN_TRANSACTIONS: \"/superAdmin/superAdminTransaction\",\n  SUPER_ADMIN_TRANSACTIONS_DOCTOR: \"/superAdmin/superAdminTransaction/transactionDoctor\",\n  SUPER_ADMIN_TRANSACTIONS_HCF: \"/superAdmin/superAdminTransaction/transactionHCF\",\n\n  // Clinic Dashboard Routes\n  CLINIC_DASHBOARD_MAIN: \"/clinicDashboard/clinicMainDashboard\",\n  CLINIC_DASHBOARD_APPOINTMENT: \"/clinicDashboard/clinicAppointment\",\n  CLINIC_DASHBOARD_DOCTOR: \"/clinicDashboard/clinicDoctor\",\n  CLINIC_DASHBOARD_STAFF: \"/clinicDashboard/clinicStaff\",\n  CLINIC_DASHBOARD_REPORTS: \"/clinicDashboard/clinicReports\",\n\n  // Diagnostic Center Dashboard Routes\n  DIAGNOST_CENTER_DASHBOARD_MAIN: \"/diagnostCenterDashboard/diagnostCenterMainDashboard\",\n  DIAGNOST_CENTER_DASHBOARD_APPOINTMENT: \"/diagnostCenterDashboard/diagnostCenterAppointment\",\n  DIAGNOST_CENTER_DASHBOARD_DOCTOR: \"/diagnostCenterDashboard/diagnostCenterDoctor\",\n  DIAGNOST_CENTER_DASHBOARD_STAFF: \"/diagnostCenterDashboard/diagnostCenterStaff\",\n  DIAGNOST_CENTER_DASHBOARD_REPORTS: \"/diagnostCenterDashboard/diagnostCenterReports\",\n\n  // Video Calling & Communication\n  VIDEO_CALLING_SDK: \"/videoCallingSdk\",\n  CHAT_ROOM: \"/chatRoom\",\n};\n\n// User type constants\nexport const USER_TYPES = {\n  PATIENT: \"I am a Patient\",\n  DOCTOR: \"I am a Doctor\", \n  HEALTHCARE_FACILITY: \"I am a Healthcare Facility\",\n};\n\n// Storage keys\nexport const STORAGE_KEYS = {\n  SIGNUP_TYPE: \"signUp\",\n  ACTIVE_COMPONENT: \"activeComponent\",\n  PATH: \"path\",\n  USER_TYPE: \"userType\",\n  AUTH_TOKEN: \"token\",\n  REFRESH_TOKEN: \"refreshToken\",\n  USER_ID: \"userId\",\n  DOCTOR_ID: \"doctor_suid\",\n  HCF_ID: \"hcfadmin_suid\",\n};\n\n// Navigation mapping for user types\nexport const USER_TYPE_ROUTES = {\n  [USER_TYPES.PATIENT]: ROUTES.PATIENT_SIGNUP,\n  [USER_TYPES.DOCTOR]: ROUTES.DOCTOR_SIGNUP,\n  [USER_TYPES.HEALTHCARE_FACILITY]: ROUTES.HCF_ADMIN_SIGNUP,\n};\n\n// Storage value mapping for user types\nexport const USER_TYPE_STORAGE_VALUES = {\n  [USER_TYPES.PATIENT]: \"patient\",\n  [USER_TYPES.DOCTOR]: \"doctor\", \n  [USER_TYPES.HEALTHCARE_FACILITY]: \"hcf_admin\",\n};\n\n// Route groups for easier management\nexport const ROUTE_GROUPS = {\n  AUTHENTICATION: [\n    ROUTES.PATIENT_LOGIN,\n    ROUTES.DOCTOR_LOGIN,\n    ROUTES.HCF_ADMIN_LOGIN,\n    ROUTES.SUPER_ADMIN_LOGIN,\n    ROUTES.CLINIC_LOGIN,\n    ROUTES.DIAGNOST_CENTER_LOGIN,\n  ],\n  SIGNUP: [\n    ROUTES.PATIENT_SIGNUP,\n    ROUTES.DOCTOR_SIGNUP,\n    ROUTES.HCF_ADMIN_SIGNUP,\n    ROUTES.DIAGNOST_CENTER_SIGNUP,\n    ROUTES.DIAGNOST_CLINIC_SIGNUP,\n  ],\n  DASHBOARDS: [\n    ROUTES.PATIENT_DASHBOARD,\n    ROUTES.DOCTOR_DASHBOARD,\n    ROUTES.HCF_ADMIN,\n    ROUTES.SUPER_ADMIN,\n    ROUTES.CLINIC_DASHBOARD,\n    ROUTES.DIAGNOST_CENTER_DASHBOARD,\n  ],\n  PROTECTED_ROUTES: [\n    ROUTES.PATIENT_DASHBOARD,\n    ROUTES.DOCTOR_DASHBOARD,\n    ROUTES.HCF_ADMIN,\n    ROUTES.SUPER_ADMIN,\n    ROUTES.CLINIC_DASHBOARD,\n    ROUTES.DIAGNOST_CENTER_DASHBOARD,\n  ],\n};\n\n// Helper functions for route management\nexport const getRouteWithParams = (route, params = {}) => {\n  let routeWithParams = route;\n  Object.keys(params).forEach(param => {\n    routeWithParams = routeWithParams.replace(`:${param}`, params[param]);\n  });\n  return routeWithParams;\n};\n\nexport const isProtectedRoute = (pathname) => {\n  return ROUTE_GROUPS.PROTECTED_ROUTES.some(route => \n    pathname.startsWith(route)\n  );\n};\n\nexport const getUserDashboardRoute = (userType) => {\n  const dashboardMap = {\n    [USER_TYPES.PATIENT]: ROUTES.PATIENT_DASHBOARD,\n    [USER_TYPES.DOCTOR]: ROUTES.DOCTOR_DASHBOARD,\n    [USER_TYPES.HEALTHCARE_FACILITY]: ROUTES.HCF_ADMIN,\n  };\n  return dashboardMap[userType] || ROUTES.HOME;\n};\n\nexport const getSignupRoute = (userType) => {\n  return USER_TYPE_ROUTES[userType] || ROUTES.PATIENT_SIGNUP;\n};\n\n// Default export for easy importing\nexport default ROUTES;","import { useNavigate, useLocation } from \"react-router-dom\";\nimport { useCallback } from \"react\";\nimport { ROUTES, STORAGE_KEYS } from \"../constants/routes\";\n\n// Custom navigation hook - Best Practice: Centralized navigation logic\nexport const useNavigation = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Navigate with error handling\n  const navigateTo = useCallback((route, options = {}) => {\n    try {\n      if (!route) {\n        console.error(\"Navigation error: Route is required\");\n        return false;\n      }\n\n      // Validate route exists in our constants\n      const validRoutes = Object.values(ROUTES);\n      if (!validRoutes.includes(route)) {\n        console.warn(`Navigation warning: Route '${route}' not found in ROUTES constants`);\n      }\n\n      navigate(route, {\n        replace: false, // Default to push navigation\n        state: null,\n        ...options,\n      });\n      return true;\n    } catch (error) {\n      console.error(\"Navigation error:\", error);\n      return false;\n    }\n  }, [navigate]);\n\n  // Navigate and replace current history entry\n  const navigateReplace = useCallback((route, options = {}) => {\n    return navigateTo(route, { ...options, replace: true });\n  }, [navigateTo]);\n\n  // Navigate back\n  const navigateBack = useCallback((steps = 1) => {\n    try {\n      navigate(-steps);\n      return true;\n    } catch (error) {\n      console.error(\"Navigation back error:\", error);\n      return false;\n    }\n  }, [navigate]);\n\n  // Get current route\n  const getCurrentRoute = useCallback(() => {\n    return location.pathname;\n  }, [location.pathname]);\n\n  // Check if current route matches\n  const isCurrentRoute = useCallback((route) => {\n    return location.pathname === route;\n  }, [location.pathname]);\n\n  // Navigate with state preservation\n  const navigateWithState = useCallback((route, state = {}) => {\n    return navigateTo(route, { state });\n  }, [navigateTo]);\n\n  // Navigate with query parameters\n  const navigateWithQuery = useCallback((route, queryParams = {}) => {\n    const searchParams = new URLSearchParams(queryParams);\n    const queryString = searchParams.toString();\n    const fullRoute = queryString ? `${route}?${queryString}` : route;\n    return navigateTo(fullRoute);\n  }, [navigateTo]);\n\n  // Navigate and store in localStorage for persistence\n  const navigateAndStore = useCallback((route, storageKey = STORAGE_KEYS.PATH) => {\n    try {\n      localStorage.setItem(storageKey, route);\n      return navigateTo(route);\n    } catch (error) {\n      console.error(\"Navigation and storage error:\", error);\n      return false;\n    }\n  }, [navigateTo]);\n\n  // Get stored route from localStorage\n  const getStoredRoute = useCallback((storageKey = STORAGE_KEYS.PATH) => {\n    try {\n      return localStorage.getItem(storageKey);\n    } catch (error) {\n      console.error(\"Error getting stored route:\", error);\n      return null;\n    }\n  }, []);\n\n  return {\n    navigateTo,\n    navigateReplace,\n    navigateBack,\n    getCurrentRoute,\n    isCurrentRoute,\n    navigateWithState,\n    navigateWithQuery,\n    navigateAndStore,\n    getStoredRoute,\n    currentRoute: location.pathname,\n    location,\n  };\n};\n","import React, { useState, useCallback, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./SelectRoleSignup.scss\";\nimport { Box, Alert, Snackbar, useMediaQuery, useTheme } from \"@mui/material\";\nimport CustomRadioButton from \"../../../components/CustomRadioButton/custom-radio-button\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport { useNavigation } from \"../../../hooks/useNavigation\";\nimport { \n    USER_TYPES, \n    USER_TYPE_ROUTES, \n    USER_TYPE_STORAGE_VALUES, \n    STORAGE_KEYS \n} from \"../../../constants/routes\";\nimport CustomTextField from \"../../../components/CustomTextField\";\n\n// Custom hook for signup logic - Best Practice: Extract business logic\nconst useSignupSelection = () => {\n    const { navigateTo, navigateAndStore } = useNavigation();\n    const [selectedType, setSelectedType] = useState(USER_TYPES.PATIENT);\n    const [error, setError] = useState(\"\");\n    const [showError, setShowError] = useState(false);\n\n    // Memoized radio values to prevent unnecessary re-renders\n    const radioValues = useMemo(() => Object.values(USER_TYPES), []);\n\n    // Memoized validation function\n    const validateSelection = useCallback((value) => {\n        return Object.values(USER_TYPES).includes(value);\n    }, []);\n\n    // Memoized submit handler with improved navigation\n    const handleSubmit = useCallback(() => {\n        try {\n            if (!validateSelection(selectedType)) {\n                setError(\"Please select a valid option\");\n                setShowError(true);\n                return;\n            }\n\n            const route = USER_TYPE_ROUTES[selectedType];\n            const storageValue = USER_TYPE_STORAGE_VALUES[selectedType];\n\n            if (!route || !storageValue) {\n                setError(\"Invalid configuration for selected option\");\n                setShowError(true);\n                return;\n            }\n\n            // Store user type in localStorage\n            localStorage.setItem(STORAGE_KEYS.SIGNUP_TYPE, storageValue);\n            \n            // Navigate to appropriate route with error handling\n            const navigationSuccess = navigateTo(route);\n            \n            if (!navigationSuccess) {\n                setError(\"Failed to navigate. Please try again.\");\n                setShowError(true);\n            }\n        } catch (error) {\n            console.error(\"Error during signup selection:\", error);\n            setError(\"An unexpected error occurred. Please try again.\");\n            setShowError(true);\n        }\n    }, [selectedType, validateSelection, navigateTo]);\n\n    // Memoized radio change handler\n    const handleRadioChange = useCallback(({ target }) => {\n        setSelectedType(target.value);\n        // Clear any existing errors when user makes a new selection\n        if (showError) {\n            setShowError(false);\n            setError(\"\");\n        }\n    }, [showError]);\n\n    // Memoized error close handler\n    const handleErrorClose = useCallback(() => {\n        setShowError(false);\n        setError(\"\");\n    }, []);\n\n    return {\n        selectedType,\n        radioValues,\n        error,\n        showError,\n        handleSubmit,\n        handleRadioChange,\n        handleErrorClose,\n    };\n};\n\n// Main component - Best Practice: Keep component focused on rendering\nconst SelectRoleSignup = () => {\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n    const isTablet = useMediaQuery(theme.breakpoints.down('lg'));\n    \n    const {\n        selectedType,\n        radioValues,\n        error,\n        showError,\n        handleSubmit,\n        handleRadioChange,\n        handleErrorClose,\n    } = useSignupSelection();\n\n    // Responsive styles\n    const responsiveStyles = useMemo(() => ({\n        radioButton: {\n            border: \"1px solid #E6E1E5\",\n            padding: \"0px 10px\",  \n            borderRadius: \"16px\",\n            width: isMobile ? \"100%\" : isTablet ? \"350px\" : \"400px\",\n            maxWidth: \"100%\",\n            height: isMobile ? \"5em\" : \"6em\",\n            margin: \"10px\",\n            boxSizing: \"border-box\",\n        },\n        continueButton: {\n            width: isMobile ? \"100%\" : isTablet ? \"20em\" : \"22em\",\n            maxWidth: \"100%\",\n            padding: isMobile ? \"12px 20px\" : \"8px 100px\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: \"100px\",\n            margin: isMobile ? \"15px 0\" : \"25px\",\n            fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n        },\n        logo: {\n            maxWidth: \"100%\",\n            height: \"auto\",\n            maxHeight: isMobile ? \"60px\" : isTablet ? \"80px\" : \"100px\",\n        },\n        title: {\n            fontSize: isMobile ? \"1.5rem\" : isTablet ? \"2rem\" : \"2.5rem\",\n            fontWeight: 600,\n            color: \"#333\",\n            textAlign: \"center\",\n            marginBottom: isMobile ? \"1.5rem\" : \"2rem\",\n            lineHeight: 1.3,\n        }\n    }), [isMobile, isTablet]);\n\n    return (\n        <div className=\"register-photo\" role=\"main\" aria-label=\"Sign up selection\">\n            <Box className=\"form-container\">\n                <div className=\"image-holder\" aria-hidden=\"true\"></div>\n                \n                <Box className=\"component-library\">\n                    <Box \n                        sx={{\n                            display: \"flex\", \n                            flexDirection: \"column\",\n                            justifyContent: \"center\", \n                            alignItems: \"center\",\n                            width: \"auto\",\n                            maxWidth: \"600px\",\n                            margin: \"0 auto\"\n                        }}\n                    >\n                        <div className=\"logo\">\n                            <img \n                                src=\"images/logo.png\" \n                                alt=\"Company Logo\"\n                                loading=\"lazy\"\n                                style={responsiveStyles.logo}\n                            />\n                        </div>\n\n                        <h2 className=\"signup-title\" style={responsiveStyles.title}>\n                            <strong>Sign Up</strong>\n                        </h2>\n                    </Box>\n                    \n                    <Box sx={{ \n                        display: \"flex\", \n                        width: \"100%\", \n                        maxWidth: \"600px\", \n                        margin: \"0 auto\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\", \n                        alignItems: \"center\"\n                    }}>\n                        <p style={responsiveStyles.label}>\n                        Select your account type\n                        </p>\n                        <CustomRadioButton\n                            label=\"\"\n                            radiocss={responsiveStyles.radioButton}\n                            handleChange={handleRadioChange}\n                            value={selectedType}\n                            items={radioValues}\n                            aria-label=\"User type selection\"\n                        />\n                    </Box>\n                    \n                    <Box sx={{ \n                        display: \"flex\", \n                        width: \"100%\", \n                        maxWidth: \"600px\", \n                        margin: \"0 auto\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\", \n                        alignItems: \"center\"\n                    }}>\n                        <CustomButton\n                            label=\"Continue\"\n                            isTransapent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={responsiveStyles.continueButton}\n                            aria-label=\"Continue to next step\"\n                        />\n                    </Box>\n                </Box>\n            </Box>\n\n            {/* Best Practice: Proper error handling with user-friendly messages */}\n            <Snackbar\n                open={showError}\n                autoHideDuration={6000}\n                onClose={handleErrorClose}\n                anchorOrigin={{ \n                    vertical: isMobile ? 'bottom' : 'top', \n                    horizontal: 'center' \n                }}\n                sx={{\n                    '& .MuiSnackbarContent-root': {\n                        width: isMobile ? '90%' : 'auto',\n                        maxWidth: isMobile ? 'none' : '400px',\n                    }\n                }}\n            >\n                <Alert \n                    onClose={handleErrorClose} \n                    severity=\"error\" \n                    sx={{ \n                        width: '100%',\n                        fontSize: isMobile ? '0.875rem' : '1rem'\n                    }}\n                    role=\"alert\"\n                >\n                    {error}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\n// Best Practice: PropTypes for type safety (if not using TypeScript)\nSelectRoleSignup.propTypes = {\n    // Add any props if this component receives them\n};\n\nexport default SelectRoleSignup;\n","import React from 'react';\nimport {\n    Dialog,\n    DialogContent,\n    Box,\n    Typography,\n    CircularProgress,\n    Fade\n} from '@mui/material';\nimport './VerificationLoader.scss';\n\nconst VerificationLoader = ({\n    open = false,\n    title = \"Verification\",\n    message = \"Please wait while we process your request...\",\n    subMessage = \"This may take a few moments...\",\n    showProgress = true,\n    progressSize = 60,\n    progressThickness = 4,\n    progressColor = \"#e72b49\",\n    disableBackdropClick = true,\n    disableEscapeKeyDown = true,\n    maxWidth = \"sm\",\n    fullWidth = true,\n    onClose = null,\n    ...props\n}) => {\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            disableEscapeKeyDown={disableEscapeKeyDown}\n            disableBackdropClick={disableBackdropClick}\n            maxWidth={maxWidth}\n            fullWidth={fullWidth}\n            PaperProps={{\n                sx: {\n                    borderRadius: \"12px\",\n                    padding: \"24px\",\n                    textAlign: \"center\",\n                    boxShadow: \"0 8px 32px rgba(0,0,0,0.12)\",\n                    border: \"1px solid rgba(0,0,0,0.08)\",\n                }\n            }}\n            TransitionComponent={Fade}\n            transitionDuration={300}\n            {...props}\n        >\n            <DialogContent sx={{ padding: \"0 !important\" }}>\n                <Box \n                    className=\"verification-loader\"\n                    sx={{ \n                        display: \"flex\", \n                        flexDirection: \"column\", \n                        alignItems: \"center\", \n                        gap: 3,\n                        padding: \"8px 0\"\n                    }}\n                >\n                    {showProgress && (\n                        <Box className=\"progress-container\">\n                            <CircularProgress \n                                size={progressSize} \n                                thickness={progressThickness}\n                                sx={{ \n                                    color: progressColor,\n                                    \"& .MuiCircularProgress-circle\": {\n                                        strokeLinecap: \"round\",\n                                    }\n                                }} \n                            />\n                        </Box>\n                    )}\n                    \n                    <Box className=\"text-content\">\n                        <Typography \n                            variant=\"h6\" \n                            className=\"verification-title\"\n                            sx={{ \n                                fontWeight: 600, \n                                color: \"#333\",\n                                marginBottom: 1,\n                                fontSize: \"1.25rem\"\n                            }}\n                        >\n                            {title}\n                        </Typography>\n                        \n                        <Typography \n                            variant=\"body1\" \n                            className=\"verification-message\"\n                            sx={{ \n                                color: \"#666\",\n                                textAlign: \"center\",\n                                lineHeight: 1.6,\n                                fontSize: \"1rem\",\n                                marginBottom: 1\n                            }}\n                        >\n                            {message}\n                        </Typography>\n                        \n                        {subMessage && (\n                            <Typography \n                                variant=\"body2\" \n                                className=\"verification-sub-message\"\n                                sx={{ \n                                    color: \"#999\",\n                                    fontSize: \"0.875rem\",\n                                    marginTop: 1\n                                }}\n                            >\n                                {subMessage}\n                            </Typography>\n                        )}\n                    </Box>\n                </Box>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nexport default VerificationLoader;\n","import { useState, useCallback } from 'react';\n\n/**\n * Custom hook for managing verification loader state\n * @param {Object} options - Configuration options\n * @param {string} options.defaultTitle - Default title for the loader\n * @param {string} options.defaultMessage - Default message for the loader\n * @param {string} options.defaultSubMessage - Default sub-message for the loader\n * @param {string} options.progressColor - Default progress color\n * @returns {Object} - Verification loader state and methods\n */\nconst useVerificationLoader = (options = {}) => {\n  const {\n    defaultTitle = \"Verification\",\n    defaultMessage = \"Please wait while we process your request...\",\n    defaultSubMessage = \"This may take a few moments...\",\n    progressColor = \"#e72b49\"\n  } = options;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [title, setTitle] = useState(defaultTitle);\n  const [message, setMessage] = useState(defaultMessage);\n  const [subMessage, setSubMessage] = useState(defaultSubMessage);\n\n  /**\n   * Show the verification loader\n   * @param {Object} config - Configuration for the loader\n   * @param {string} config.title - Title to display\n   * @param {string} config.message - Message to display\n   * @param {string} config.subMessage - Sub-message to display\n   */\n  const showLoader = useCallback((config = {}) => {\n    setTitle(config.title || defaultTitle);\n    setMessage(config.message || defaultMessage);\n    setSubMessage(config.subMessage || defaultSubMessage);\n    setIsLoading(true);\n  }, [defaultTitle, defaultMessage, defaultSubMessage]);\n\n  /**\n   * Hide the verification loader\n   */\n  const hideLoader = useCallback(() => {\n    setIsLoading(false);\n  }, []);\n\n  /**\n   * Update the loader message while it's showing\n   * @param {Object} config - Configuration to update\n   * @param {string} config.title - New title\n   * @param {string} config.message - New message\n   * @param {string} config.subMessage - New sub-message\n   */\n  const updateMessage = useCallback((config = {}) => {\n    if (config.title) setTitle(config.title);\n    if (config.message) setMessage(config.message);\n    if (config.subMessage) setSubMessage(config.subMessage);\n  }, []);\n\n  /**\n   * Show loader with a promise - automatically hides when promise resolves/rejects\n   * @param {Promise} promise - Promise to wait for\n   * @param {Object} config - Configuration for the loader\n   * @returns {Promise} - The original promise\n   */\n  const showLoaderWithPromise = useCallback(async (promise, config = {}) => {\n    showLoader(config);\n    try {\n      const result = await promise;\n      return result;\n    } finally {\n      hideLoader();\n    }\n  }, [showLoader, hideLoader]);\n\n  return {\n    // State\n    isLoading,\n    title,\n    message,\n    subMessage,\n    progressColor,\n    \n    // Methods\n    showLoader,\n    hideLoader,\n    updateMessage,\n    showLoaderWithPromise,\n    \n    // Convenience methods for common use cases\n    showDoctorVerification: useCallback(() => {\n      showLoader({\n        title: \"Doctor Verification\",\n        message: \"Verifying doctor credentials...\",\n        subMessage: \"Please wait while we verify your credentials...\"\n      });\n    }, [showLoader]),\n    \n    showPaymentProcessing: useCallback(() => {\n      showLoader({\n        title: \"Payment Processing\",\n        message: \"Processing your payment...\",\n        subMessage: \"Please do not close this window...\"\n      });\n    }, [showLoader]),\n    \n    showEmailVerification: useCallback(() => {\n      showLoader({\n        title: \"Email Verification\",\n        message: \"Sending verification email...\",\n        subMessage: \"Check your inbox for the verification link\"\n      });\n    }, [showLoader]),\n    \n    showProfileUpdate: useCallback(() => {\n      showLoader({\n        title: \"Profile Update\",\n        message: \"Updating your profile...\",\n        subMessage: \"Please wait while we save your changes...\"\n      });\n    }, [showLoader])\n  };\n};\n\nexport default useVerificationLoader;\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport \"./doctorcompleteprofile.scss\";\nimport Typography from \"@mui/material/Typography\";\nimport { TextField } from \"@mui/material\";\nimport CustomTextField from \"../../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport ClassicFrame from \"../../../static/images/DrImages/Undraw.png\";\nimport ImageFrame from \"../../../static/images/logos/Doctor_logo.png\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\nimport VerificationLoader from \"../../../components/VerificationLoader\";\nimport useVerificationLoader from \"../../../hooks/useVerificationLoader\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst steps = [\"\", \"\", \"\", \"\", \"\", \"\"];\n\nconst DoctorCompleteProfile = () => {\n    const [dropdownItems] = useState([\"Male\", \"Female\", \"Others\"]);\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const [selectedCountryFromDropDown, setSelectedCountryFromDropDown] = useState([]);\n    const [countryValues, setCountryValue] = useState([]);\n    const [countryNames, setCountryNames] = useState([\"Please Wait\"]);\n    const [stateNames, setStateNames] = useState([\"Please Wait\"]);\n    const [stateName, setStateName] = useState(\"\");\n    const [stateValue, setStateValue] = useState([]);\n    const [selectCityFromDropDown, setSelectCityFromDropDown] = useState([]);\n    const [cityNames, setCityNames] = useState([]);\n    const [citySelected, setCitySelected] = useState(\"\");\n    const [cityValues, setCityValues] = useState([]);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [departmentName, setDepartmentName] = useState([]);\n    const [departmentValue, setDepartmentValue] = useState([]);\n    const [departmentDropDown, setDepartmentDropdown] = useState(\"Specialization\");\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [flagToSendDoctorData, setFlagToSendDoctorData] = useState(false);\n    const [updateUserData, setUpdateUserData] = useState({\n        suid: localStorage.getItem(\"doctor_suid\"),\n        email: localStorage.getItem(\"email\"),\n        first_name: null,\n        last_name: null,\n        middle_name: null,\n        gender: null,\n        DOB: null,\n        country_id: null,\n        state_id: null,\n        city_id: null,\n        street_address1: null,\n        street_address2: null,\n        zip_code: null,\n        role_id: 3,\n        qualification: null,\n        university_name: null,\n        qualified_year: null,\n        speciality_id: null,\n        degree: null,\n        state_reg_number: null,\n        country_reg_number: null,\n        state_reg_date: null,\n        country_reg_date: null,\n        lic_title: null,\n        lic_certificate_no: null,\n        lic_issuedby: null,\n        lic_date: null,\n        lic_description: null,\n    });\n    const [updatedUserSuccesfully, setUpdatedUserSuccesfully] = useState(\"\");\n    const [showSnackBar, setShowSnackBar] = useState(false);\n    const navigate = useNavigate();\n    \n    // Use the verification loader hook\n    const {\n        isLoading: isVerifying,\n        title,\n        message: verificationMessage,\n        subMessage,\n        showLoader,\n        hideLoader,\n        updateMessage,\n        showDoctorVerification\n    } = useVerificationLoader({\n        progressColor: \"#e72b49\"\n    });\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    useEffect(() => {\n        FetchCountryNames();\n        fetchDepartmentName();\n        \n        // Handle incomplete profile data\n        const doctorSuid = localStorage.getItem(\"doctor_suid\");\n        const doctorEmail = localStorage.getItem(\"email\") || localStorage.getItem(\"login_Email\");\n        \n        if (doctorSuid && doctorEmail) {\n            setUpdateUserData(prevData => ({\n                ...prevData,\n                suid: doctorSuid,\n                email: doctorEmail\n            }));\n        }\n    }, []);\n\n    // run the api call when there is change in country drop down\n    useEffect(() => {\n        FetchStateNames(selectedCountryFromDropDown[0]?.country_id);\n    }, [selectedCountryFromDropDown]);\n\n    // run the api to fetch the city details\n    useEffect(() => {\n        FetchCityNames(selectCityFromDropDown[0]?.state_id);\n    }, [selectCityFromDropDown]);\n\n    //API call to fetch the country names\n    const FetchCountryNames = async () => {\n        let CountryValues = [];\n        let CountryName = [];\n        try {\n            const response = await axiosInstance(\"/sec/countries\");\n            for (let key in response?.data?.response) {\n                CountryValues.push(response?.data?.response[key]);\n                CountryName.push(response?.data?.response[key].country_name);\n            }\n            setCountryNames(CountryName);\n            setCountryValue(CountryValues);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    // to fetch the state names\n    const FetchStateNames = async (country_id) => {\n        let StateValues = [];\n        let StateName = [];\n        try {\n            const response = await axiosInstance(`/sec/states?country_id=${country_id}`);\n            for (let key in response?.data?.response) {\n                StateValues.push(response?.data?.response[key]);\n                StateName.push(response?.data?.response[key].state_name);\n            }\n            setStateValue(StateValues);\n            setStateNames(StateName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const FetchCityNames = async (state_id) => {\n        let CityValues = [];\n        let cityName = [];\n        try {\n            const response = await axiosInstance(`/sec/cities?state_id=${state_id}`);\n            console.log(\"response city id : \", response);\n            for (let key in response?.data?.response) {\n                CityValues.push(response?.data?.response[key]);\n                cityName.push(response?.data?.response[key].city_name);\n            }\n            setCityValues(CityValues);\n            setCityNames(cityName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const fetchDepartmentName = async () => {\n        let DepartmentValues = [];\n        let DepartmentName = [];\n        try {\n            const response = await axiosInstance(\"/sec/departments\");\n            console.log(\"fetch Department Name : \", response?.data?.response);\n\n            for (let key in response?.data?.response) {\n                DepartmentValues.push(response?.data?.response[key]);\n                DepartmentName.push(response?.data?.response[key].department_name);\n            }\n            setDepartmentName(DepartmentName);\n            setDepartmentValue(DepartmentValues);\n        } catch (err) {\n            console.log(\"Department Name error : \", err);\n        }\n    };\n\n    console.log(\"user data : \", updateUserData);\n\n    useEffect(() => {\n        if (flagToSendDoctorData) {\n            PostUserData();\n        }\n    }, [flagToSendDoctorData]);\n\n    const PostUserData = async () => {\n        setFlagToSendDoctorData(false);\n        \n        // Ensure we have the required data for incomplete profiles\n        const doctorSuid = localStorage.getItem(\"doctor_suid\");\n        const doctorEmail = localStorage.getItem(\"email\") || localStorage.getItem(\"login_Email\");\n        \n        // Prepare the data with fallbacks\n        const dataToSend = {\n            ...updateUserData,\n            suid: updateUserData.suid || doctorSuid,\n            email: updateUserData.email || doctorEmail\n        };\n        \n        console.log(\"Sending doctor profile data:\", dataToSend);\n        \n        // Show verification loading popup\n        showDoctorVerification();\n        \n        try {\n            const response = await axiosInstance.post(\n                \"/sec/auth/updateProfile\",\n                JSON.stringify(dataToSend),\n            );\n            \n            // Check if verification is in progress\n            if (response.data?.response?.message === \"ADMIN_APPROVAL_REQUIRED\") {\n                updateMessage({\n                    message: \"Doctor verification pending admin approval...\",\n                    subMessage: \"Your profile has been submitted for review\"\n                });\n                // Keep the popup open for a bit longer to show the message\n                setTimeout(() => {\n                    hideLoader();\n                    setUpdatedUserSuccesfully(\"Profile submitted for verification 🙂\");\n                    setShowSnackBar(true);\n                    handleNext();\n                }, 2000);\n            } else {\n                // Verification successful\n                updateMessage({\n                    message: \"Doctor verification successful!\",\n                    subMessage: \"Your profile has been verified and activated\"\n                });\n                setTimeout(() => {\n                    hideLoader();\n                    setUpdatedUserSuccesfully(\"Profile Completed 🙂\");\n                    setShowSnackBar(true);\n                    handleNext();\n                }, 2000);\n            }\n            \n            console.log(\"send data succesfully : \", response);\n        } catch (err) {\n            console.log(\"Error sending data\", err);\n            hideLoader();\n            setShowSnackBar(false);\n            setFlagToSendDoctorData(false);\n        }\n    };\n\n    // console.log(\"update use data : \" , departmentName)\n    // console.log(\"update use data : \" , departmentValue)\n\n    console.log(\n        \"True or false \",\n        updateUserData.first_name != null &&\n            updateUserData.middle_name != null &&\n            updateUserData.last_name != null &&\n            updateUserData.DOB != null &&\n            updateUserData.gender != null,\n    );\n    console.log(\"True or false \", updateUserData.first_name != null);\n    console.log(\"True or false \", updateUserData.first_name === null);\n\n    return (\n        <>\n            <CustomSnackBar\n                isOpen={showSnackBar}\n                actionLabel={\"\"}\n                // handleAction={() => setShowSnack(false)}\n                message={updatedUserSuccesfully}\n                type=\"success\"\n            />\n            \n            {/* Doctor Verification Loading Dialog */}\n            <VerificationLoader\n                open={isVerifying}\n                title={title}\n                message={verificationMessage}\n                subMessage={subMessage}\n                progressColor=\"#e72b49\"\n                progressSize={60}\n                progressThickness={4}\n            />\n            \n            <Box sx={{ width: \"100%\" }}>\n                <div className=\"FrameBox1\">\n                    <Box\n                        // sx={{ borderRadius: \"8px\", width: \"100%\", height: \"100%\" }}\n                        component={\"img\"}\n                        src={ImageFrame}\n                    ></Box>\n                </div>\n\n                <div className=\"step-back\">\n                    <div className=\"back-btn\">\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1, color: \"red\" }}\n                        >\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"Stepper\">\n                        <Stepper\n                            activeStep={activeStep}\n                            style={{\n                                width: \"700px\",\n                            }}\n                        >\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                if (isStepOptional(index)) {\n                                }\n                                if (isStepSkipped(index)) {\n                                    stepProps.completed = false;\n                                }\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                        <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </div>\n                </div>\n                {activeStep === steps.length ? (\n                    <React.Fragment>\n                        <Box sx={{ width: \"100%\" }}>\n                            <div className=\"imge-cont\">\n                                <div className=\"card-cont1\">\n                                    <div className=\"card1\">\n                                        <div className=\"last-image\">\n                                            <Box\n                                                sx={{ width: \"222px\", height: \"252px\" }}\n                                                component={\"img\"}\n                                                src={ClassicFrame}\n                                            ></Box>\n                                        </div>\n                                        <div className=\"greetings1\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#313033\",\n                                                    fontFamily: \"poppins\",\n                                                    fontSize: \"16px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"600\",\n                                                    lineHeight: \"24px\",\n                                                }}\n                                            >\n                                                Your choice to register with us fills us with\n                                                immense gratitude\n                                            </Typography>\n                                        </div>\n                                        <div className=\"note1\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#939094\",\n                                                    fontFamily: \"poppins\",\n                                                    fontSize: \"14px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"21px\",\n                                                    letterSpacing: \"0.07px\",\n                                                }}\n                                            >\n                                                Proceed to the login page to embark upon thy journey\n                                                henceforth\n                                            </Typography>\n                                        </div>\n                                        <div className=\"done-btn1\">\n                                            <CustomButton\n                                                label=\"Proceed to Login, where your adventure awaits\"\n                                                handleClick={() => navigate(\"/doctorlogin\")}\n                                                buttonCss={{\n                                                    width: \"270px\",\n                                                    borderRadius: \"20px\",\n                                                }}\n                                            >\n                                                Done\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Box>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Step {activeStep + 1} */}\n                            {activeStep === 0 ? (\n                                <>\n                                    <Box>\n                                        <div className=\"mainBox1\">\n                                            <Box sx={{ width: \"40%\" }}>\n                                                <div className=\"heading1\">\n                                                    <Typography\n                                                        style={{\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"25px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"500\",\n                                                            lineHeight: \"30px\",\n                                                        }}\n                                                    >\n                                                        Personal Information\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"Text-fields1\">\n                                                    <TextField\n                                                        label=\"First Name\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"50%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                first_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.first_name}\n                                                        required={true}\n                                                    ></TextField>\n                                                    <TextField\n                                                        label=\"Middle Name\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"50%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                middle_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.middle_name}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"Last Name\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                last_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.last_name}\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"Date-of-birth1\">\n                                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                        <DatePicker\n                                                            label=\"Date of Birth\"\n                                                            value={updateUserData.DOB ? dayjs(updateUserData.DOB) : null}\n                                                            onChange={(value) => {\n                                                                if (value) {\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        DOB: value.format('YYYY-MM-DD'),\n                                                                    });\n                                                                } else {\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        DOB: null,\n                                                                    });\n                                                                }\n                                                            }}\n                                                            slotProps={{\n                                                                textField: {\n                                                                    required: true,\n                                                                    variant: \"standard\",\n                                                                    fullWidth: true,\n                                                                },\n                                                            }}\n                                                        />\n                                                    </LocalizationProvider>\n                                                </div>\n                                                <div className=\"gender1\">\n                                                    <CustomDropdown\n                                                        label={\"Gender\"}\n                                                        items={dropdownItems}\n                                                        activeItem={updateUserData?.gender}\n                                                        variant=\"standard\"\n                                                        handleChange={(item) =>\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                gender: item,\n                                                            })\n                                                        }\n                                                        dropdowncss={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                    />\n                                                </div>\n                                            </Box>\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"30%\",\n                                                    }}\n                                                    isDisabled={\n                                                        updateUserData.first_name != null &&\n                                                        updateUserData.last_name != null &&\n                                                        updateUserData.DOB != null &&\n                                                        updateUserData.gender != null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 1 ? (\n                                <>\n                                    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                                        <div className=\"mainBox1\">\n                                            <Box sx={{ width: \"40%\" }}>\n                                                <div className=\"heading1\">\n                                                    <Typography\n                                                        style={{\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"25px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"500\",\n                                                            lineHeight: \"30px\",\n                                                        }}\n                                                    >\n                                                        Qualification Information\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"Text-fields1\">\n                                                    <TextField\n                                                        label=\"Qualification\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                qualification: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={ updateUserData?.qualification\n                                                        }\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"University\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                university_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={\n                                                            updateUserData?.university_name\n                                                        }\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"Date-of-birth1\">\n                                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                        <DatePicker\n                                                            label=\"Year of Passing\"\n                                                            value={updateUserData.qualified_year ? dayjs(updateUserData.qualified_year, 'YYYY') : null}\n                                                            onChange={(value) => {\n                                                                if (value) {\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        qualified_year: value.format('YYYY'),\n                                                                    });\n                                                                } else {\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        qualified_year: null,\n                                                                    });\n                                                                }\n                                                            }}\n                                                            views={['year']}\n                                                            slotProps={{\n                                                                textField: {\n                                                                    required: true,\n                                                                    variant: \"standard\",\n                                                                    fullWidth: true,\n                                                                },\n                                                            }}\n                                                        />\n                                                    </LocalizationProvider>\n                                                </div>\n                                                <div className=\"Degree\">\n                                                    <TextField\n                                                        label=\"Degree\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                degree: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.degree}\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"gender1\">\n                                                    <Box sx={{ width: \"100%\" }}>\n                                                        <CustomDropdown\n                                                            label={\"Specialist\"}\n                                                            dropdowncss={{ width: \"100%\" }}\n                                                            items={departmentName}\n                                                            minwidthDropDown=\"300px\"\n                                                            activeItem={activeDropdown}\n                                                            variant=\"standard\"\n                                                            handleChange={(listItems) => {\n                                                                setActiveDropdown(listItems);\n                                                                let response =\n                                                                    departmentValue.filter(\n                                                                        (country) =>\n                                                                            country?.department_name?.includes(\n                                                                                listItems,\n                                                                            ),\n                                                                    );\n                                                                console.log(\n                                                                    \"speacilist ID : \",\n                                                                    response[0]?.department_id,\n                                                                );\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    speciality_id:\n                                                                        response[0]?.department_id,\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Box>\n                                                </div>\n                                            </Box>\n\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"30%\",\n                                                    }}\n                                                    isDisabled={\n                                                        updateUserData?.qualification != null &&\n                                                        updateUserData?.university_name != null &&\n                                                        updateUserData?.qualified_year != null &&\n                                                        updateUserData?.degree != null &&\n                                                        updateUserData?.speciality_id != null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 2 ? (\n                                <>\n                                    <div className=\"mainBox1\">\n                                        {/* <div className=\"back-btn\">\n                                            <Button\n                                                color=\"inherit\"\n                                                disabled={activeStep === 0}\n                                                onClick={handleBack}\n                                                sx={{ mr: 1 }}\n                                            >\n                                                Back\n                                            </Button>\n                                        </div> */}\n                                        <Box sx={{ width: \" 40%\" }}>\n                                            <div className=\"Doc-heading\">\n                                                <Typography\n                                                    style={{\n                                                        fontFamily: \"poppins\",\n                                                        fontSize: \"25px\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                    }}\n                                                >\n                                                    Doctor's Professional Information\n                                                </Typography>\n                                            </div>\n                                            <div className=\"Text-fields1\">\n                                                <TextField\n                                                    label=\"State Registration No\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            state_reg_number: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.state_reg_number}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                            <div className=\"reg-date1\">\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                    <DatePicker\n                                                        label=\"State Registration Date\"\n                                                        value={updateUserData.state_reg_date ? dayjs(updateUserData.state_reg_date) : null}\n                                                        onChange={(value) => {\n                                                            if (value) {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    state_reg_date: value.format('YYYY-MM-DD'),\n                                                                });\n                                                            } else {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    state_reg_date: null,\n                                                                });\n                                                            }\n                                                        }}\n                                                        slotProps={{\n                                                            textField: {\n                                                                required: true,\n                                                                variant: \"standard\",\n                                                                fullWidth: true,\n                                                            },\n                                                        }}\n                                                    />\n                                                </LocalizationProvider>\n                                            </div>\n\n                                            <div className=\"indian-reg-no\">\n                                                <TextField\n                                                    label=\"Country Registration No\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            country_reg_number: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.country_reg_number}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"Registration-date\">\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                    <DatePicker\n                                                        label=\"Country Registration Date\"\n                                                        value={updateUserData.country_reg_date ? dayjs(updateUserData.country_reg_date) : null}\n                                                        onChange={(value) => {\n                                                            if (value) {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    country_reg_date: value.format('YYYY-MM-DD'),\n                                                                });\n                                                            } else {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    country_reg_date: null,\n                                                                });\n                                                            }\n                                                        }}\n                                                        slotProps={{\n                                                            textField: {\n                                                                required: true,\n                                                                variant: \"standard\",\n                                                                fullWidth: true,\n                                                            },\n                                                        }}\n                                                    />\n                                                </LocalizationProvider>\n                                            </div>\n                                        </Box>\n                                        <div className=\"sve-btn\">\n                                            <CustomButton\n                                                handleClick={handleNext}\n                                                label=\"Next\"\n                                                buttonCss={{\n                                                    width: \"30%\",\n                                                }}\n                                                isDisabled={\n                                                    updateUserData?.state_reg_number != null &&\n                                                    updateUserData?.state_reg_date != null &&\n                                                    updateUserData?.country_reg_number != null &&\n                                                    updateUserData?.country_reg_date != null\n                                                        ? false\n                                                        : true\n                                                }\n                                            >\n                                                {activeStep === steps.length - 1\n                                                    ? \"Finish\"\n                                                    : \"Next\"}\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 3 ? (\n                                <>\n                                    <div className=\"mainBox1\">\n                                        <Box sx={{ width: \" 40%\" }}>\n                                            <div className=\"heading\">\n                                                <Typography\n                                                    style={{\n                                                        fontFamily: \"poppins\",\n                                                        fontSize: \"25px\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                    }}\n                                                >\n                                                    Clinic Information\n                                                </Typography>\n                                            </div>\n\n                                            <div className=\"Text-fieldscss\">\n                                                <TextField\n                                                    label=\"Street Line1\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            street_address1: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.street_address1}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                            <div className=\"reg-date\">\n                                                <TextField\n                                                    label=\"Street Line2\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            street_address2: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.street_address2}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"gender2\">\n                                                <Box sx={{ width: \"100%\" }}>\n                                                    <CustomDropdown\n                                                        label={\"Country\"}\n                                                        dropdowncss={{ width: \"100%\" }}\n                                                        items={countryNames}\n                                                        minwidthDropDown=\"300px\"\n                                                        activeItem={activeDropdown}\n                                                        variant=\"standard\"\n                                                        handleChange={(listItems) => {\n                                                            setActiveDropdown(listItems);\n                                                            let response = countryValues.filter(\n                                                                (country) =>\n                                                                    country?.country_name?.includes(\n                                                                        listItems,\n                                                                    ),\n                                                            );\n                                                            // console.log(\n                                                            //     \"Country response : \",\n                                                            //     response[0]?.country_id,\n                                                            // );\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                country_id: response[0]?.country_id,\n                                                            });\n                                                            setSelectedCountryFromDropDown(\n                                                                response,\n                                                            );\n                                                        }}\n                                                        // dropdowncss={{ width:\"300px\" }}\n                                                    />\n                                                </Box>\n                                            </div>\n\n                                            <div className=\"gender2\">\n                                                <Box sx={{ width: \"100%\" }}>\n                                                    <CustomDropdown\n                                                        label={\"State\"}\n                                                        dropdowncss={{ width: \"100%\" }}\n                                                        items={stateNames}\n                                                        minwidthDropDown=\"300px\"\n                                                        activeItem={stateName}\n                                                        variant=\"standard\"\n                                                        handleChange={(listItems) => {\n                                                            let response = stateValue.filter(\n                                                                (state) =>\n                                                                    state?.state_name?.includes(\n                                                                        listItems,\n                                                                    ),\n                                                            );\n                                                            // console.log(\"State ID : \" , response[0].state_id)\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                state_id: response[0]?.state_id,\n                                                            });\n                                                            setSelectCityFromDropDown(response);\n                                                            setStateName(listItems);\n                                                        }}\n                                                        // dropdowncss={{ width:\"300px\" }}\n                                                    />\n                                                </Box>\n                                            </div>\n\n                                            <div className=\"gender2\">\n                                                <Box sx={{ width: \"100%\" }}>\n                                                    <CustomDropdown\n                                                        label={\"City\"}\n                                                        dropdowncss={{ width: \"100%\" }}\n                                                        items={cityNames}\n                                                        minwidthDropDown=\"300px\"\n                                                        activeItem={citySelected}\n                                                        variant=\"standard\"\n                                                        handleChange={(listItems) => {\n                                                            setCitySelected(listItems);\n                                                            let response = cityValues.filter(\n                                                                (city) =>\n                                                                    city?.city_name?.includes(\n                                                                        listItems,\n                                                                    ),\n                                                            );\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                city_id: response[0]?.city_id,\n                                                            });\n                                                        }}\n                                                        // dropdowncss={{ width:\"300px\" }}\n                                                    />\n                                                </Box>\n                                            </div>\n\n                                            <div className=\"Registration-date\">\n                                                <TextField\n                                                    label=\"Zip Code\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            zip_code: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.zip_code}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                        </Box>\n                                    </div>\n\n                                    <div className=\"sve-btn\">\n                                        <CustomButton\n                                            handleClick={handleNext}\n                                            label=\"Next\"\n                                            buttonCss={{\n                                                width: \"30%\",\n                                            }}\n                                            isDisabled={\n                                                updateUserData?.street_address1 != null &&\n                                                updateUserData?.country_id != null &&\n                                                updateUserData?.state_id != null &&\n                                                updateUserData?.city_id != null &&\n                                                updateUserData?.zip_code != null\n                                                    ? false\n                                                    : true\n                                            }\n                                        >\n                                            {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                                        </CustomButton>\n                                    </div>\n                                    {/* <div className=\"skip-btn\">\n                                        <CustomButton\n                                            label=\"Skip\"\n                                            isTransaprent={\"True\"}\n                                            isStepOptional\n                                            handleClick={handleSkip}\n                                            buttonCss={{\n                                                width: \"30%\",\n                                            }}\n                                        ></CustomButton>\n                                    </div> */}\n                                </>\n                            ) : activeStep === 4 ? (\n                                <>\n                                    <div className=\"mainBox1\">\n                                        {/* <div className=\"back-btn\">\n                                            <Button\n                                                color=\"inherit\"\n                                                disabled={activeStep === 0}\n                                                onClick={handleBack}\n                                                sx={{ mr: 1 }}\n                                            >\n                                                Back\n                                            </Button>\n                                        </div> */}\n                                        <Box sx={{ width: \"40%\" }}>\n                                            <div className=\"Doc-heading\">\n                                                <Typography\n                                                    style={{\n                                                        fontFamily: \"poppins\",\n                                                        fontSize: \"25px\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                    }}\n                                                >\n                                                    Doctor's License Information\n                                                </Typography>\n                                            </div>\n                                            <div className=\"Text-fields1\">\n                                                <TextField\n                                                    label=\"License Title\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_title: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_title}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                            <div className=\"indian-reg-no\">\n                                                <TextField\n                                                    label=\"License Certificate Number\"\n                                                    variant=\"standard\"\n                                                    type=\"number\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_certificate_no: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_certificate_no}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"indian-reg-no\">\n                                                <TextField\n                                                    label=\"License Issued By\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_issuedby: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_issuedby}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"Registration-date\">\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                    <DatePicker\n                                                        label=\"License Issue Date\"\n                                                        value={updateUserData.lic_date ? dayjs(updateUserData.lic_date) : null}\n                                                        onChange={(value) => {\n                                                            if (value) {\n                                                                const formattedDate = value.format('YYYY-MM-DD');\n                                                                console.log(\"License Issue Date:\", formattedDate);\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    lic_date: formattedDate,\n                                                                });\n                                                            } else {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    lic_date: null,\n                                                                });\n                                                            }\n                                                        }}\n                                                        slotProps={{\n                                                            textField: {\n                                                                required: true,\n                                                                variant: \"standard\",\n                                                                fullWidth: true,\n                                                            },\n                                                        }}\n                                                    />\n                                                </LocalizationProvider>\n                                            </div>\n                                            <div className=\"Registration-date\">\n                                                <TextField\n                                                    label=\"License Description\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_description: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_description}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                        </Box>\n                                        <div className=\"sve-btn\">\n                                            <CustomButton\n                                                handleClick={() => {\n                                                    setFlagToSendDoctorData(true);\n                                                }}\n                                                label=\"Submit\"\n                                                buttonCss={{\n                                                    width: \"30%\",\n                                                }}\n                                                isDisabled={\n                                                    updateUserData?.lic_title != null &&\n                                                    updateUserData?.lic_certificate_no != null &&\n                                                    updateUserData?.lic_issuedby != null &&\n                                                    updateUserData?.lic_date != null &&\n                                                    updateUserData?.lic_description != null\n                                                        ? false\n                                                        : true\n                                                }\n                                            >\n                                                {activeStep === steps.length - 1\n                                                    ? \"Finish\"\n                                                    : \"Next\"}\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 5 ? (\n                                <Box sx={{ width: \"100%\" }}>\n                                    <div className=\"imge-cont\">\n                                        <div className=\"card-cont1\">\n                                            <div className=\"card1\">\n                                                <div className=\"last-image\">\n                                                    <Box\n                                                        sx={{ width: \"222px\", height: \"252px\" }}\n                                                        component={\"img\"}\n                                                        src={ClassicFrame}\n                                                    ></Box>\n                                                </div>\n                                                <div className=\"greetings1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#313033\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"16px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"600\",\n                                                            lineHeight: \"24px\",\n                                                        }}\n                                                    >\n                                                        Your choice to register with us fills us\n                                                        with immense gratitude\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"note1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#939094\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"14px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"400\",\n                                                            lineHeight: \"21px\",\n                                                            letterSpacing: \"0.07px\",\n                                                        }}\n                                                    >\n                                                        Proceed to the login page to embark upon thy\n                                                        journey henceforth\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"done-btn1\">\n                                                    <CustomButton\n                                                        label=\"Proceed to Login, where your adventure awaits\"\n                                                        handleClick={() => navigate(\"/doctorlogin\")}\n                                                        buttonCss={{\n                                                            width: \"270px\",\n                                                            borderRadius: \"20px\",\n                                                        }}\n                                                    >\n                                                        Done\n                                                    </CustomButton>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Box>\n                            ) : (\n                                \n                                <CustomButton\n                                handleClick={() => navigate(\"/doctorlogin\")}\n                                >\n<h1>Completed</h1>\n                                </CustomButton>\n                            )}\n                            ;\n                        </Typography>\n                        {/* <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            {isStepOptional(activeStep) && (\n                                <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                    Skip\n                                </Button>\n                            )}\n                        </Box> */}\n                    </React.Fragment>\n                )}\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorCompleteProfile;\n","import React, { useState } from \"react\";\nimport \"./selecthcfsignup.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Stack } from \"@mui/material\";\nimport CustomRadioButton from \"../../../components/CustomRadioButton/custom-radio-button\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\n\nconst SelectHCFSignup = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n\n    // from here\n\n    const handleSubmit = () => {\n        const navigateToRoute =\n            radioVal === \"Diagnostic Center\"\n                ? \"/diagnostcentersignup\"\n                : radioVal === \"Clinic\"\n                ? \"/diagnostclinicsignup\"\n                : radioVal === \"HCF Admin\"\n                ? \"/hcfadminsignup\"\n                : null;\n\n        navigate(navigateToRoute);\n    };\n    const radioValues = [\"Diagnostic Center\", \"Clinic\", \"HCF Admin\"];\n    const [radioVal, setRadioVal] = useState(radioValues[0]);\n\n    // till here\n    return (\n        <div className=\"register-photo\">\n            <div className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <div>\n                    <div className=\"logo\">\n                        <img src=\"images/logo.png\" alt=\"Logo\" width=\"200\" />\n                    </div>\n\n                    <h2 className=\"text-center\">\n                        <strong>HCF Sign up</strong>\n                        <br></br>\n                        <strong>Please</strong> select\n                    </h2>\n\n                    <div className=\"component-library\">\n                        <div className=\"items\">\n                            <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                                <CustomRadioButton\n                                    label={\"\"}\n                                    radiocss={{\n                                        border: \" 1px solid #E6E1E5\",\n                                        padding: \"0px 10px\",\n                                        borderRadius: \"16px\",\n                                        width: \"22.5em\",\n                                        height: \"6em\",\n                                        margin: \"10px\",\n                                    }}\n                                    handleChange={({ target }) => setRadioVal(target.value)}\n                                    value={radioVal}\n                                    items={radioValues}\n                                />\n                            </Stack>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <CustomButton\n                            label={\"Continue\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={{\n                                width: \"25.8em\",\n                                height: \"3.5em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                borderRadius: \"100px\",\n                                marginLeft: \"-70px\",\n                                marginTop: \"37px\",\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectHCFSignup;\n","import { Box } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nconst HCFAdminDashboard = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        navigate('/hcfadmin/notification');\n    },[])\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \",location.pathname);\n    localStorage.setItem(\"path\" , location.pathname);\n    return(\n        <>\n            <Box sx={{ width : \"100%\" , height : \"95vh\"}}>\n                <Outlet/>\n            </Box>\n        </>\n    )\n}\n\nexport default HCFAdminDashboard;","import { Box } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nconst AdminDoctor = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        navigate('/hcfadmin/doctor/alldoctors');\n    },[])\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \",location.pathname);\n    localStorage.setItem(\"path\" , location.pathname);\n    return(\n        <>\n            <Box sx={{ width : \"100%\" , height : \"95vh\"}}>\n                <Outlet/>\n            </Box>\n        </>\n    )\n}\n\nexport default AdminDoctor;","import { Box } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nconst AdminDiagnosticCenter = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        navigate('/hcfadmin/diagnosticcenter/labs');\n    },[])\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \",location.pathname);\n    localStorage.setItem(\"path\" , location.pathname);\n    return(\n        <>\n            <Box sx={{ width : \"100%\" , height : \"95vh\"}}>\n                <Outlet/>\n            </Box>\n        </>\n    )\n}\n\nexport default AdminDiagnosticCenter;","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst AdminManage = () => {\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"hcfadminsale\"\n            ? \"/hcfadmin/hcfadminmanage/hcfadminsale\"\n            : localStorage.getItem(\"path\") == \"hcfadminoverview\"\n            ? \"/hcfadmin/hcfadminmanage/hcfadminoverview\"\n            : localStorage.getItem(\"path\") == \"hcfadminbooking\"\n            ? \"/hcfadmin/hcfadminmanage/hcfadminbooking\"\n            : localStorage.getItem(\"path\") == \"hcfadminpayout\"\n            ? \"/hcfadmin/hcfadminmanage/hcfadminpayout\"\n            : localStorage.getItem(\"path\") == \"hcfadminauditlog\"\n            ? \"/hcfadmin/hcfadminmanage/hcfadminauditlog\"\n            : \"/hcfadmin/hcfadminmanage/hcfadminsale\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n    const navigate = useNavigate();\n    useEffect(() => {\n        navigate(\"/hcfadmin/hcfadminmanage/hcfadminsale\");\n    }, []);\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\nexport default AdminManage;\n","import React, { useEffect, useState } from \"react\";\n// import CustomMenuDrawer from \"../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport { Drafts } from \"@mui/icons-material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport CustomMenuDrawer from \"../../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport HCFAdminDashboard from \"../../HCFAdmin/AdminDashboard/AdminNotification\";\nimport AdminDoctor from \"../../HCFAdmin/AdminDoctor/AdminDoctor\";\nimport AdminDiagnosticCenter from \"../../HCFAdmin/AdminDiagnosticCenter/AdminDiagnosticCenter\";\nimport AdminManage from \"../../HCFAdmin/AdminManage/AdminManage\";\n\nfunction AdminMainDashboard() {\n    const drawerList1 = [\n        { name: \"Dashboard\", icon: <Drafts /> },\n        { name: \"Doctors\", icon: <PersonIcon /> },\n        { name: \"DiagnosticCenter\", icon: <ListAltIcon /> },\n        { name: \"Manage\", icon: <SettingsIcon /> },\n    ];\n    const drawerComponentList = {\n        // dashboard: <MainDashboard/>,\n        dashboard: <HCFAdminDashboard />,\n        doctors: <AdminDoctor />,\n        diagnosticcenter: <AdminDiagnosticCenter />,\n        manage: <AdminManage />,\n    };\n\n    const [activeComponent, setActiveComponent] = useState();\n    useEffect(() => {\n        localStorage.getItem(\"activeComponent\") === \"doctors\"\n            ? setActiveComponent(drawerComponentList.doctors)\n            : localStorage.getItem(\"activeComponent\") === \"diagnosticcenter\"\n            ? setActiveComponent(drawerComponentList.diagnosticcenter)\n            : localStorage.getItem(\"activeComponent\") === \"manage\"\n            ? setActiveComponent(drawerComponentList.manage)\n            : setActiveComponent(drawerComponentList.dashboard);\n    }, []);\n\n    return (\n        <>\n            <div className=\"usage\">\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomMenuDrawer\n                            headerLabel={\"custom drawer\"}\n                            list1={drawerList1}\n                            // list2={drawerList2}\n                            profilepath={'hcfadmin'}\n                            handleOnMenuSelect={(item) =>\n                                setActiveComponent(drawerComponentList[item.toLowerCase()])\n                            }\n                        >\n                            {/* <Box sx={{width : \"100%\"}}> */}\n                            {activeComponent}\n                            {/* </Box> */}\n                        </CustomMenuDrawer>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default AdminMainDashboard;\n","import {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TablePagination,\n    Skeleton,\n} from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport { AllDoctorTable } from \"../AllDoctors/AllDoctorTable\";\nimport pen from \"../../../../static/images/DrImages/Pen.svg\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst HCFDoctorActive = () => {\n    const [hcf_id] = useState(localStorage.getItem(\"hcfadmin_suid\"));\n    const [data, setData] = useState([]);\n    const status = 1;\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5); // Default rows per page\n    const [nav_specialization, setNav_spelization] = useState([]);\n    const [specializationDoc, setSpecializationDoc] = useState(\"CARDIOLOGIST\");\n    const [loading, setLoading] = useState(false);\n\n    const fetchData = async (departmentName) => {\n        setLoading(true);\n        try {\n            // Fetch active or blocked doctors\n            const response = await axiosInstance.get(`/sec/hcf/ActiveBlockedClinicDoctors/0/${hcf_id}/${departmentName}`);\n            setData(response?.data?.response);\n        } catch (error) {\n            console.log(error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData(specializationDoc);\n    }, [specializationDoc]);\n\n    const navigate = useNavigate();\n\n    // Logic for fetching specializations\n    const navSpecializtion = async () => {\n        try {\n            const resp = await axiosInstance(`/sec/patient/doctorDepartments`);\n            setNav_spelization(resp?.data?.response);\n        } catch (err) {\n            console.log(\"Nav specialization error : \", err);\n        }\n    };\n\n    useEffect(() => {\n        navSpecializtion();\n    }, []);\n\n    const scrollContainerRef = useRef(null);\n\n    const handleScrollLeft = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft -= 100; // Adjust scroll distance as needed\n        }\n    };\n\n    const handleScrollRight = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft += 100; // Adjust scroll distance as needed\n        }\n    };\n\n    // Pagination handlers\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"98%\",\n                    height: \"100%\",\n                    flexDirection: \"row\",\n                }}\n            >\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/hcfadmin/doctor/alldoctors\"}>All Doctors</NavLink>\n                    <NavLink to={\"/hcfadmin/doctor/active\"}>Active</NavLink>\n                    <NavLink to={\"/hcfadmin/doctor/blocked\"}>Blocked</NavLink>\n                </nav>\n\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        {/* Category component starts */}\n                        <Box>\n                            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                                <div onClick={handleScrollLeft}>\n                                    <ChevronLeftIcon />\n                                </div>\n                                <Box\n                                    sx={{ display: \"flex\", position: \"relative\" }} // Add relative positioning\n                                    className={\"horizontal-scroll-container NavBar-Container-one\"}\n                                >\n                                    <div\n                                        ref={scrollContainerRef}\n                                        style={{ overflowX: \"auto\", display: \"flex\" }}\n                                    >\n                                        {nav_specialization.map((specialization, index) => (\n                                            <CustomButton\n                                                key={index}\n                                                label={`${specialization?.department_name}`}\n                                                isTransaprent={\n                                                    specialization.department_name.toLowerCase() ===\n                                                    specializationDoc.toLowerCase()\n                                                        ? false\n                                                        : true\n                                                }\n                                                buttonCss={{\n                                                    borderRadius: \"50px\",\n                                                    padding: \"0.3% 6.5%\",\n                                                    marginRight: \"1%\",\n                                                    whiteSpace: \"normal\",\n                                                }}\n                                                handleClick={() => {\n                                                    setSpecializationDoc(specialization?.department_name);\n                                                }}\n                                            />\n                                        ))}\n                                    </div>\n                                </Box>\n                                <div onClick={handleScrollRight}>\n                                    <ChevronRightIcon />\n                                </div>\n                            </Box>\n                        </Box>\n\n                        {/* Doctor table with pagination */}\n                        <TableContainer component={Paper} style={{ background: \"white\" }}>\n                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Name & Details</TableCell>\n                                        <TableCell align=\"right\">Department</TableCell>\n                                        <TableCell align=\"right\">Status</TableCell>\n                                        <TableCell align=\"right\">Action</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {loading ? (\n                                        Array.from(new Array(rowsPerPage)).map((_, index) => (\n                                            <TableRow key={index}>\n                                                <TableCell colSpan={4} align=\"center\">\n                                                    <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : data.length === 0 ? (\n                                        <TableRow>\n                                            <TableCell colSpan={4} align=\"center\">\n                                                <NoAppointmentCard text_one={\"No Data Available\"} />\n                                            </TableCell>\n                                        </TableRow>\n                                    ) : (\n                                        data\n                                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                            .map((row) => (\n                                                <TableRow\n                                                    key={row.doctor_id} // Ensure uniqueness\n                                                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                                                >\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        <AllDoctorTable name={row.first_name} user_id={row.suid} />\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">{row.department_name}</TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <CustomButton\n                                                            isDisabled={true}\n                                                            label={row.clinic_status === 1 ? \"Active\" : \"Blocked\"}\n                                                            isTransaprent\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <CustomButton label={<img src={pen} alt=\"Edit\" />} isTransaprent />\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                    )}\n                                </TableBody>\n                            </Table>\n                            <TablePagination\n                            component=\"div\"\n                            count={data.length}\n                            page={page}\n                            onPageChange={handleChangePage}\n                            rowsPerPage={rowsPerPage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                            rowsPerPageOptions={[5, 10, 25]} // Adjust the options as needed\n                        />\n                        </TableContainer>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default HCFDoctorActive;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport img from \"../../../../static/images/DrImages/image3.png\"\n\nexport const DoctorInfo = ({name  , specialist}) => {\n    return(\n        <>\n            <Box sx={{display : \"flex\" }} >\n                <Box component={'div'} sx={{height : \"3.44331rem\" , width  : \"3.44331rem\" , borderRadius : \"0.5rem\" }}>\n                    <img src={img} style={{height : \"100%\"  , width : \"100%\" ,  borderRadius : \"8px\" }} />\n                </Box>\n                <Box sx={{marginLeft : \"2%\" , display : \"flex\" , flexDirection : \"column\" , justifyContent : \"center\" }} >\n                    <Typography sx={{   color: \"#313033\",\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"0.875rem\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"500\",\n                                        lineHeight: \"1.375rem\",\n                                        letterSpacing: \"0.00438rem\"}} >{name}</Typography>\n                                        <Typography sx={{   color: \"#939094\",\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"0.625rem\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"0.9375rem\",\n                                        letterSpacing: \"0.005rem\",}} > {specialist}</Typography>\n                </Box>\n            </Box>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Skeleton } from '@mui/material';\nimport CustomButton from '../../../../components/CustomButton';\nimport CustomTextField from '../../../../components/CustomTextField/custom-text-field';\nimport CustomSnackBar from '../../../../components/CustomSnackBar/custom-sack-bar';\nimport axiosInstance from '../../../../config/axiosInstance';\n\nconst HCFAddQuestioner = ({ doctor_id, doctor_list_id }) => {\n  const [existingQuestions, setExistingQuestions] = useState([]);\n  const [data, setData] = useState({ questions: [] });\n  const [loading, setLoading] = useState(false);\n  const [snack, setSnack] = useState({ open: false, msg: '', type: 'success' });\n\n  const loadQuestions = async () => {\n    if (!doctor_id || !doctor_list_id) return;\n    setLoading(true);\n    try {\n      const res = await axiosInstance.get(`/sec/getdoctorlisting/questionAll/${Number(doctor_list_id)}/${Number(doctor_id)}`);\n      if (Array.isArray(res?.data?.response)) setExistingQuestions(res.data.response);\n    } catch (e) {\n      setSnack({ open: true, type: 'error', msg: e?.response?.data?.error || 'Failed to load questions' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadQuestions();\n  }, [doctor_id, doctor_list_id]);\n\n  const addBlank = () => {\n    setData(prev => ({\n      questions: [\n        ...prev.questions,\n        { doctor_id: Number(doctor_id), doctor_list_id: Number(doctor_list_id), question: '', ans_1: '', ans_2: '', ans_3: '', ans_4: '' },\n      ]\n    }));\n  };\n\n  const handleChange = (idx, field, val) => {\n    setData(prev => {\n      const copy = [...prev.questions];\n      copy[idx] = { ...copy[idx], [field]: val };\n      return { questions: copy };\n    });\n  };\n\n  const submit = async () => {\n    try {\n      const payload = {\n        questions: data.questions.map(q => ({\n          ...q,\n          doctor_id: Number(doctor_id),\n          doctor_list_id: Number(doctor_list_id),\n        }))\n      };\n      await axiosInstance.post('/sec/createUpdatedoctorlisting/questionCreate', JSON.stringify(payload));\n      setSnack({ open: true, type: 'success', msg: 'Questions saved' });\n      setData({ questions: [] });\n      loadQuestions();\n    } catch (e) {\n      setSnack({ open: true, type: 'error', msg: e?.response?.data?.error || 'Failed to save questions' });\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant='h6' sx={{ mb: 1 }}>Add Questioner</Typography>\n      <CustomButton label='Add Question' isTransaprent handleClick={addBlank} />\n      <Box sx={{ mt: 2, display: 'flex', flexDirection: 'column', gap: 2 }}>\n        {data.questions.map((q, idx) => (\n          <Box key={idx} sx={{ border: '1px solid #E6E1E5', borderRadius: 2, p: 2 }}>\n            <CustomTextField label={`Question ${idx + 1}`} defaultValue={q.question} onInput={(e)=>handleChange(idx,'question', e.target.value)} textcss={{ width: '100%' }} />\n            {[1,2,3,4].map(n => (\n              <CustomTextField key={n} label={`Answer ${n}`} defaultValue={q[`ans_${n}`]} onInput={(e)=>handleChange(idx,`ans_${n}`, e.target.value)} textcss={{ width: '100%' }} />\n            ))}\n          </Box>\n        ))}\n      </Box>\n      {data.questions.length > 0 && (\n        <Box sx={{ mt: 2 }}>\n          <CustomButton label='Save Questions' handleClick={submit} />\n        </Box>\n      )}\n      <Typography variant='subtitle1' sx={{ mt: 3 }}>Existing Questions</Typography>\n      {loading ? (\n        <Skeleton height={48} />\n      ) : existingQuestions.length === 0 ? (\n        <Typography>No existing questions</Typography>\n      ) : (\n        existingQuestions.map((row) => (\n          <Box key={row.doctor_questions_id} sx={{ borderBottom: '1px solid #f0f0f0', py: 1 }}>\n            <Typography sx={{ fontWeight: 500 }}>{row.question}</Typography>\n            <Typography variant='body2'>1. {row.ans_1}</Typography>\n            <Typography variant='body2'>2. {row.ans_2}</Typography>\n            <Typography variant='body2'>3. {row.ans_3}</Typography>\n            <Typography variant='body2'>4. {row.ans_4}</Typography>\n          </Box>\n        ))\n      )}\n      <CustomSnackBar isOpen={snack.open} message={snack.msg} type={snack.type} />\n    </Box>\n  );\n};\n\nexport default HCFAddQuestioner;\n\n","import React, { useState } from 'react';\nimport { Box, Typography, TextareaAutosize } from '@mui/material';\nimport CustomButton from '../../../../components/CustomButton';\nimport CustomSnackBar from '../../../../components/CustomSnackBar/custom-sack-bar';\nimport axiosInstance from '../../../../config/axiosInstance';\n\nconst HCFAddTerms = ({ doctor_id, doctor_list_id }) => {\n  const [description, setDescription] = useState('');\n  const [snack, setSnack] = useState({ open: false, msg: '', type: 'success' });\n\n  const submit = async () => {\n    try {\n      if (!description.trim()) {\n        setSnack({ open: true, type: 'error', msg: 'Please enter terms & conditions' });\n        return;\n      }\n      const payload = { doctor_id: Number(doctor_id), doctor_list_id: Number(doctor_list_id), description };\n      await axiosInstance.post('/sec/createUpdatedoctorlisting/terms', JSON.stringify(payload));\n      setSnack({ open: true, type: 'success', msg: 'Terms saved' });\n      setDescription('');\n    } catch (e) {\n      setSnack({ open: true, type: 'error', msg: e?.response?.data?.error || 'Failed to save terms' });\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant='h6' sx={{ mb: 1 }}>Terms & Conditions</Typography>\n      <TextareaAutosize minRows={6} placeholder='Enter terms & conditions visible to patients' style={{ width: '100%', padding: 12, borderRadius: 8, border: '1px solid #E6E1E5' }} value={description} onChange={(e)=>setDescription(e.target.value)} />\n      <Box sx={{ mt: 2 }}>\n        <CustomButton label='Save Terms' handleClick={submit} />\n      </Box>\n      <CustomSnackBar isOpen={snack.open} message={snack.msg} type={snack.type} />\n    </Box>\n  );\n};\n\nexport default HCFAddTerms;\n\n","import { Box, Paper, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport { DoctorInfo } from \"./DoctorInfo\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { MultiInputTimeRangeField } from \"@mui/x-date-pickers-pro/MultiInputTimeRangeField\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport dayjs from \"dayjs\";\nimport CustomModal from \"../../../../components/CustomModal\";\nimport CustomOTPInput from \"../../../../components/OTPInput\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar\";\nimport AddPlanCard from \"../../../../DoctorModule/DoctorListing/CreateNewListing/AddPlan/AddPlanCard\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport ListingModal from \"../../../../DoctorModule/DoctorListing/CreateNewListing/AddPlan/ListingModal\";\nimport HCFAddQuestioner from \"./HCFAddQuestioner\";\nimport HCFAddTerms from \"./HCFAddTerms\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\n\nfunction createData(name, action) {\n    return { name, action };\n}\n\nconst rows = [\n    createData(\n        <DoctorInfo name={\"Dr. Maria Garcia\"} specialist={\"Neurologist\"} />,\n        <CustomButton label=\"Remove\" isTransaprent />,\n    ),\n];\n\nconst HCFAddDoctors = () => {\n    const [age, setAge] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [mobile, setMobile] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const [emailError, setEmailError] = useState(\"\");\n    const [mobileError, setMobileError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\n    const [snacksuccess, setSnacksuccess] = useState(false);\n    const [snacksuccessMessage, setSnacksuccessMessage] = useState(\"\");\n    const [listing_name, setLiting_name] = useState(\"\");\n\n    const [snackerror, setSnackerror] = useState(false);\n    const [snackerrorMessage, setSnackerrorMessage] = useState(\"\");\n\n    const [isFormValid, setIsFormValid] = useState(false); // Form validity tracker\n    const [otp, setOtp] = useState([]);\n    // listing variables\n    const [listingName, setListingName] = useState(\"\");\n    const [dateRange, setDateRange] = useState([null, null]);\n    const [timeRange, setTimeRange] = useState([null, null]);\n    const [enableLising, setEnableListing] = useState(false);\n    const [doctorsuid, setDoctorsuid] = useState(\"\");\n    const [openDialog, setOpenDialog] = useState(false);\n    const [doctorListId, setDoctorListId] = useState(null);\n    // Modal\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [addPlanVisible , setAddPlanVisible] = useState(false);\n    const [plandata, setplandata] = useState([]);\n    const [renderthedataAfterDelete, setRenderTheApiAfterDelete] = useState(false);\n    const [renderDataAfterAddPlan ,setRenderDataAfterAddPlan] = useState(false);\n    const [snackmessage , setSnackmessage] = useState(\"\")\n    const navigate = useNavigate();\n    const [createListing,setCreateListing] = useState({\n        hcf_id: localStorage.getItem(\"hcfadmin_suid\"),\n        doctor_id: null,\n        listing_name: null,\n        working_days_start: null,\n        working_days_end: null,\n        working_time_start: null,\n        working_time_end: null,\n        // plan: [{\n        //     plan_fee: null,\n        //     plan_name: null,\n        //     plan_duration: null,\n        //     plan_description: null,\n        // }]\n    })\n    const [postcreatelisting, setPostcreatelisting] = useState(false);\n\n    // Function to open the modal\n    const handleOpenModal = () => {\n        setModalOpen(true);\n    };\n\n    // Function to close the modal\n    const handleCloseModal = () => {\n        setModalOpen(false);\n    };\n\n    console.log(\"OTP length : \", otp === null ? \"null\" : otp.length);\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n    };\n    \n    const [isOpen, setIsOpen] = useState(false);\n\n    const openModal = () => {\n        setIsOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsOpen(false);\n    };\n\n    // Regex for validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const mobileRegex = /^[0-9]{10}$/;\n    const passwordRegex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{8,}$/;\n\n    const handleEmailChange = (value) => {\n        setEmail(value);\n        if (!emailRegex.test(value)) {\n            setEmailError(\"Invalid email format\");\n        } else {\n            setEmailError(\"\");\n        }\n    };\n\n    const handleMobileChange = (value) => {\n        setMobile(value);\n        if (!mobileRegex.test(value)) {\n            setMobileError(\"Mobile number must be 10 digits\");\n        } else {\n            setMobileError(\"\");\n        }\n    };\n\n    const handlePasswordChange = (value) => {\n        setPassword(value);\n        if (!passwordRegex.test(value)) {\n            setPasswordError(\n                \"Password must be at least 8 characters long, contain an uppercase letter, a number, and a special character\",\n            );\n        } else {\n            setPasswordError(\"\");\n        }\n    };\n\n    const handleConfirmPasswordChange = (value) => {\n        if (value !== password) {\n            setConfirmPasswordError(\"Passwords do not match\");\n        } else {\n            setConfirmPasswordError(\"\");\n            setConfirmPassword(value);\n        }\n    };\n\n    // Check if all fields are valid\n    useEffect(() => {\n        if (\n            emailRegex.test(email) &&\n            mobileRegex.test(mobile) &&\n            passwordRegex.test(password) &&\n            confirmPassword === password &&\n            !emailError &&\n            !mobileError &&\n            !passwordError &&\n            !confirmPasswordError\n        ) {\n            setIsFormValid(true);\n        } else {\n            setIsFormValid(false);\n        }\n    }, [\n        email,\n        mobile,\n        password,\n        confirmPassword,\n        emailError,\n        mobileError,\n        passwordError,\n        confirmPasswordError,\n    ]);\n\n    function formatDate(inputDateStr) {\n        // Create a Date object from the input string\n        const date = new Date(inputDateStr);\n\n        // Extract year, month, and day\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, \"0\"); // Months are 0-based, so add 1\n        const day = String(date.getDate()).padStart(2, \"0\");\n\n        // Format as \"YYYY-MM-DD\"\n        return `${year}-${month}-${day}`;\n    }\n// submitting the data of the listing -----------------------------------\n    const postCreateListing = async () => {\n        setSnacksuccess(false);\n        setSnackerror(false);\n        setSnacksuccess(false);\n        try {\n            const response = await axiosInstance.post(\"/sec/hcf/addDoctorWorkingDetailsAndPlan\",createListing);\n            console.log(\"post create listing : \", response);\n            setSnacksuccessMessage(\"Listing created succesfully\")\n            setSnacksuccess(true);\n            // Capture doctor_list_id if returned\n            const listId = response?.data?.response?.docListingCreate?.doctor_list_id || response?.data?.response?.docListingUpdated?.[0]?.doctor_list_id;\n            if (listId) setDoctorListId(listId);\n            setCreateListing({\n                hcf_id: null,\n                doctor_id: null,\n                listing_name: null,\n                working_days_start: null,\n                working_days_end: null,\n                working_time_start: null,\n                working_time_end: null,\n            })\n            // setEmail(null);\n            // setPassword(null);\n            // setConfirmPassword(null);\n            // setMobile(null);\n            resetForm();\n            setIsFormValid(false);\n            setEnableListing(false);\n            setPostcreatelisting(false)\n        } catch (error) {\n            console.log(\"Error : \", error);\n            setSnackerrorMessage(\"!Some error occured...\")\n            setSnackerror(true);\n            setPostcreatelisting(false)\n        }\n    };\n\n    useEffect( () => {\n        if(postcreatelisting){\n            postCreateListing();\n        }\n        \n    },[postcreatelisting] )\n\n    const registerHcfClinicDoctor = async () => {\n        setSnackerror(false);\n        setSnacksuccess(false);\n\n        try {\n            const response = await axiosInstance.post(\"/sec/hcf/addDoctor\", {\n                hcf_id: localStorage.getItem(\"hcfadmin_suid\"), // pass the hcf suid\n                email: email, // verify this first\n                mobile: mobile,\n                role_id: \"6\", // role id of the doctor\n                password: confirmPassword,\n            });\n            console.log(\"register api response  : \",response);\n            console.log(\"HCF doctor register: \", response.status);\n            if (response.status === 202) {\n                console.log(\"response v:V : \", response);\n                setSnacksuccessMessage(response?.data?.error);\n                setSnacksuccess(true);\n                openModal();\n            }\n            setSnacksuccess(true);\n            // Optionally reset form or navigate the user after success\n            // resetForm();\n            // navigate('/someRoute');\n        } catch (error) {\n            setSnacksuccess(false);\n            console.log(\"Error: \", error);\n            setSnackerrorMessage(\"Some error occured\");\n            setSnackerror(true);\n\n            // Example of error handling - check for duplicate email\n            if (error.response && error.response.status === 409) {\n                setEmailError(\"Email already exists\");\n                console.log(\"error : \", error);\n            } else if (error.response && error.response.status === 400) {\n                // Handle bad request or other validation errors\n                console.log(\"error : \", error);\n                setMobileError(error.response.error);\n            } else {\n                // Handle other errors like network issues\n                console.log(\"error : \", error);\n                setSnackerrorMessage(error.response.error);\n                setSnackerror(true);\n            }\n        }\n    };\n\n    const resetForm = () => {\n        setEmail(\"\");\n        setMobile(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setOtp([]);\n        // Clear any other state if necessary\n    };\n\n    const verifyDocOTP = async () => {\n        setSnackerror(false);\n        setSnacksuccess(false);\n        setEnableListing(false);\n        try {\n            const response = await axiosInstance.post(\"/sec/auth/verifyEmail\", {\n                email,\n                activation_code: otp,\n            });\n            console.log(\"OTP response \")\n            if (response.status === 200) {\n                setSnacksuccessMessage(\"OTP verified successfully!\");\n                setSnacksuccess(true);\n                closeModal();\n                setEnableListing(true);\n                // console.log(\"doctor : \",response?.data?.response?.suid);\n                // setDoctorsuid(response?.data?.response?.suid);\n                setCreateListing({...createListing , doctor_id : response?.data?.response?.suid })\n                // resetForm(); // Reset form after successful OTP verification\n            } else {\n                setSnackerrorMessage(\"Failed to verify OTP.\");\n                setSnackerror(true);\n            }\n        } catch (error) {\n            setSnackerrorMessage(\"OTP verification failed. Please try again.\");\n            setSnackerror(true);\n        }\n    };\n\n    // listing handloers\n    const handleListingNameChange = (e) => {\n        setListingName(e.target.value);\n        setCreateListing({...createListing , listing_name : e.target.value});\n    };\n\n    const handleDateRangeChange = (newRange) => {\n        setDateRange(newRange);\n        const formatDateResp1 = formatDate(newRange[0]);\n        const formatDateResp2 = formatDate(newRange[1]);\n        setCreateListing({...createListing , working_days_start : dayjs(newRange[0]).format(\"YYYY-MM-DD\") , working_days_end : dayjs(newRange[1]).format(\"YYYY-MM-DD\") })\n        console.log(\"date range : \", formatDateResp1, formatDateResp2);\n    };\n\n    const handleTimeRangeChange = (newRange) => {\n        setTimeRange(newRange);\n    \n        // Use newRange directly to avoid referencing the stale timeRange state\n        setCreateListing({\n            ...createListing,\n            working_time_start: newRange[0]?.isValid() ? newRange[0]?.format(\"HH:mm:ss\") : null,\n            working_time_end: newRange[1]?.isValid() ? newRange[1]?.format(\"HH:mm:ss\") : null,\n        });\n    \n        console.log(\n            \"Time range:\",\n            newRange[0]?.isValid() ? newRange[0]?.format(\"HH:mm:ss\") : \"Invalid date\",\n            newRange[1]?.isValid() ? newRange[1]?.format(\"HH:mm:ss\") : \"Invalid date\"\n        );\n    };\n    \n    // for plans \n   \n\n    const RendenDataAfterDelete = (value) => {\n        setRenderTheApiAfterDelete(value);\n    };\n\n    const RenderDataAfterAddingPlan = (value) => {\n        setRenderDataAfterAddPlan(value);\n        setplandata(renderDataAfterAddPlan)\n        setCreateListing({...createListing , renderDataAfterAddPlan })\n        console.log('renderDataAfterAddPlan : ',value);\n    }\n\n    //  const handleModalClose = () => {\n    //         setOpenDialog(false); // Function to close the modal\n    // };  \n    // setCreateListing\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", width: \"98%\", height: \"100%\", flexDirection: \"row\" }}>\n                <CustomSnackBar\n                    type={\"success\"}\n                    isOpen={snacksuccess}\n                    message={snacksuccessMessage}\n                />\n                <CustomSnackBar type={\"error\"} isOpen={snackerror} message={snackerrorMessage} />\n                <CustomSnackBar type={\"success\"} />\n                <nav className=\"NavBar-Container-Appoinement\" style={{display : 'flex' , justifyContent : 'space-between' , alignItems : 'center'}} > \n                    <NavLink to={\"/hcfadmin/doctor/adddoctor\"}>Add Doctors</NavLink>\n                    <CustomButton \n                        label=\"< back\"\n                        isTransaprent={true}\n                        buttonCss={{padding : \"0% 0%\",borderRadius : \"12px\" , width : \"fit-content\" , height : \"fit-content\",padding : '0.4% 1%'}}\n                        handleClick={() => navigate(-1)}\n                    />\n                    {/* <NavLink to={\"/hcfadmin/doctor/addpackage\"}>Add Package</NavLink> */}\n\n                    {/* <Box sx={{ borderRadius: \"50px\", position: \"absolute\", left: \"70%\" }}>\n                        <FormControl>\n                            <InputLabel id=\"demo-simple-select-label\">\n                                <MoreHorizIcon />\n                            </InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={age}\n                                label=\"Age\"\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={10}>Mark Inactive</MenuItem>\n                                <MenuItem value={20}>Block Profile</MenuItem>\n                                <MenuItem value={30}>View Stats</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Box> */}\n                </nav>\n\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        {/* <TableContainer component={Paper} style={{ background: \"white\" }}>\n                            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                <TableBody>\n                                    {rows.map((row) => (\n                                        <TableRow key={row.name} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                            <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                                            <TableCell align=\"right\">{row.action}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer> */}\n\n                        <h5 style={{ textAlign: \"start\", marginLeft: \"20px\" }}>Login Info</h5>\n\n                        <div style={{ width: \"75%\" }}>\n                            <div style={{ display: \"flex\", width: \"100%\" }}>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-between\",\n                                        width: \"100%\",\n                                    }}\n                                >\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Email\"}\n                                        type={\"email\"}\n                                        textcss={{ width: \"45%\" }}\n                                        placeholder={\"example@xyz.com\"}\n                                        defaultValue={\"\"}\n                                        helperText={emailError}\n                                        error={!!emailError}\n                                        onChange={(e) => handleEmailChange(e.target.value)}\n                                        // rightIcon={\"verify\"}\n                                        // onRightIconClick={() => {\n                                        //     openModal();\n                                        //                         console.log(\"right icon clicked\")\n                                        //                     }}\n                                    />\n{/*----------------- modal for otp ------------------ */}\n                                    <CustomModal\n                                        isOpen={isOpen}\n                                        conditionOpen={closeModal} // Pass setIsOpen as conditionOpen\n\n                                        disableBackdropClick={true}\n                                        title={<h2>Enter OTP send to E-mail</h2>}\n                                    >\n                                        <>\n                                            <div id=\"otp-box-container\">\n                                                <CustomOTPInput\n                                                    value={otp}\n                                                    onChange={setOtp}\n                                                    numInputs={6}\n                                                    placeholder=\"*\"\n                                                />\n                                                <br />\n                                                <br />\n                                                <CustomButton\n                                                    isDisabled={otp.length === 6 ? false : true}\n                                                    handleClick={() => verifyDocOTP()}\n                                                    label=\"Verify\"\n                                                />\n                                            </div>\n                                        </>\n                                    </CustomModal>\n\n                                    <CustomTextField\n                                        label={\"Enter Mobile Number\"}\n                                        type={\"number\"}\n                                        placeholder={\"9876543210\"}\n                                        defaultValue={mobile}\n                                        helperText={mobileError}\n                                        textcss={{ width: \"45%\" }}\n                                        onChange={(e) => handleMobileChange(e.target.value)}\n                                        // rightIcon={\"verify\"}\n                                        // onRightIconClick={() => {\n                                        //     openModal();\n                                        //                         console.log(\"right icon clicked\")\n                                        //                     }}\n                                    />\n                                </div>\n                            </div>\n                            <div style={{ display: \"flex\", marginTop: \"3%\" }}>\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        justifyContent: \"space-between\",\n                                        width: \"100%\",\n                                    }}\n                                >\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Create Password\"}\n                                        textcss={{ width: \"45%\" }}\n                                        placeholder={\"*****\"}\n                                        defaultValue={password}\n                                        helperText={passwordError}\n                                        error={!!passwordError}\n                                        onChange={(e) => handlePasswordChange(e.target.value)}\n                                    />\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Confirm Password\"}\n                                        textcss={{ width: \"45%\" }}\n                                        placeholder={\"*****\"}\n                                        defaultValue={confirmPassword}\n                                        helperText={confirmPasswordError}\n                                        error={!!confirmPasswordError}\n                                        onChange={(e) =>\n                                            handleConfirmPasswordChange(e.target.value)\n                                        }\n                                    />\n                                </div>\n                            </div>\n                            <CustomButton\n                                buttonCss={{ marginTop: \"2rem\" }}\n                                isDisabled={!isFormValid} // Disable button if form is not valid\n                                handleClick={() => registerHcfClinicDoctor()}\n                                label=\"Register Doctor\"\n                            />\n{/* -------------------create doctor listing -------------------------------------------------------- */}\n                        <div\n                            style={{ width: \"100%\", display: enableLising ? \"block\" : \"none\" }}\n                        >\n                            <h3>Create Doctor Listing</h3>\n                            <div\n                                style={{\n                                    width: \"100%\",\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                }}\n                            >\n                                <CustomTextField\n                                    label={\"Enter listing name\"}\n                                    textcss={{ width: \"45%\" }}\n                                    defaultValue={listingName}\n                                    helperText={\"\"}\n                                    onChange={handleListingNameChange}\n                                />\n                            </div>\n\n                            <h5\n                                style={{\n                                    textAlign: \"start\",\n                                    marginLeft: \"20px\",\n                                    fontSize: \"1em\",\n                                }}\n                            >\n                                Working days\n                            </h5>\n                            <div style={{ width: \"100%\" }}>\n                                <div style={{ display: \"flex\", width: \"100%\" }}>\n                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                        <DemoContainer\n                                            components={[\"DateRangePicker\"]}\n                                            sx={{ width: \"100%\" }}\n                                        >\n                                            <DateRangePicker\n                                                localeText={{\n                                                    start: (\n                                                        <div>\n                                                            From{\" \"}\n                                                            <CalendarTodayIcon\n                                                                style={{\n                                                                    marginLeft: \"30px\",\n                                                                    color: \"grey\",\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    ),\n                                                    end: (\n                                                        <div>\n                                                            To{\" \"}\n                                                            <CalendarTodayIcon\n                                                                style={{\n                                                                    marginLeft: \"30px\",\n                                                                    color: \"grey\",\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    ),\n                                                }}\n                                                minDate={dayjs()} // Disable past dates\n                                                value={dateRange}\n                                                onChange={handleDateRangeChange}\n                                                // renderInput={(startProps, endProps) => (\n                                                //     <React.Fragment>\n                                                //         <CustomTextField {...startProps} label=\"From\" />\n                                                //         <CustomTextField {...endProps} label=\"To\" />\n                                                //     </React.Fragment>\n                                                // )}\n                                            />\n                                        </DemoContainer>\n                                    </LocalizationProvider>\n                                </div>\n                                <h5\n                                    style={{\n                                        textAlign: \"start\",\n                                        marginLeft: \"20px\",\n                                        fontSize: \"1em\",\n                                    }}\n                                >\n                                    Working Time\n                                </h5>\n                                <div style={{ display: \"flex\", width: \"100%\" }}>\n                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                        <DemoContainer\n                                            components={[\n                                                \"MultiInputTimeRangeField\",\n                                                \"SingleInputTimeRangeField\",\n                                            ]}\n                                            sx={{ width: \"100%\" }}\n                                        >\n                                            <MultiInputTimeRangeField\n                                                value={timeRange}\n                                                onChange={handleTimeRangeChange}\n                                                slotProps={{\n                                                    textField: ({ position }) => ({\n                                                        label:\n                                                            position === \"start\"\n                                                                ? \"From\"\n                                                                : \"To\",\n                                                    }),\n                                                }}\n                                            />\n                                        </DemoContainer>\n                                    </LocalizationProvider>\n                                </div>\n\n                                {/* <CustomButton\n                                    label=\"Continue\"\n                                    buttonCss={{ marginTop: \"40px\" }}\n                                    // isDisabled={!isFormValid} // Disable button based on form validity\n                                    handleClick={() => {\n                                        console.log(\"asdfa\");\n                                        postCreateListing();\n                                    }}\n                                /> */}\n                            </div>\n                        </div>\n                        </div>\n{/*-----------------------Add plans--------------------- */}\n                        <div style={{ width: \"75%\", display : enableLising  ?  'block' : 'none' }}>\n                            <div className=\"main-container\">\n                                <div className=\"Add-container\">\n                                    <Typography>Add Plan</Typography>\n                                    <div className=\"Add-addicon\">\n                                        <Box\n                                            sx={{\n                                                // border:'1px solid',\n                                                marginTop: \"0.5rem\",\n                                            }}\n\n                                            onClick={() => setOpenDialog(!openDialog)}\n                                        >\n                                            <AddIcon />\n                                        </Box>\n                                        {/* Adding the plans --------------- */}\n                                        <div className=\"Add-btn\">\n                                            {/* Modal for listing the plans of the doctor */}\n                                            {/* <CustomModal/> */}\n                                            <ListingModal\n                                                RenderDataAfterAddingPlan={\n                                                    RenderDataAfterAddingPlan\n                                                }\n                                                showSaveButton={false}\n                                                enableAdditionalButton={true}\n                                                additionalButtonName={\"Add plan\"}\n                                                onAdditionalButtonClick={ (e) => {\n                                                    console.log(\"data L \",e?.plan);\n                                                    setCreateListing({...createListing,plan : e?.plan})\n                                                    setplandata(e?.plan);\n                                                }  }\n                                                disableBackdropClick={false}\n                                                saveButtonEnable={false}\n                                                conditionOpen={setOpenDialog}\n                                                openDialog={openDialog}\n                                                // handleClose={() => true}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                {/* Mapping all the plans  */}\n\n                                {plandata.length === 0 ? (\n                                    <NoAppointmentCard text_one={\"No listing found\"} />\n                                ) : (\n                                    (plandata ||[]).map((plan, index) => (\n                                        <AddPlanCard\n                                            planCardData={plan}\n                                            index={index}\n                                            RendenDataAfterDelete={RendenDataAfterDelete}\n                                            isDeleteVisible={false}\n                                            isEditVisible={false}\n                                        />\n                                    ))\n                                )}\n                            </div>\n                            <CustomButton\n                                    label=\"Continue\"\n                                    buttonCss={{ marginTop: \"40px\" }}\n                                    // isDisabled={!isFormValid} // Disable button based on form validity\n                                    handleClick={() => {\n                                        console.log(\"asdfa\");\n                                        setPostcreatelisting(true)\n                                        // postCreateListing();\n                                    }}\n                                />\n                            {/* Render Questions and Terms when we have a listing id */}\n                            {postcreatelisting && doctorListId && (\n                                <Box sx={{ mt: 4, display: 'flex', flexDirection: 'column', gap: 4 }}>\n                                    <HCFAddQuestioner doctor_id={createListing?.doctor_id} doctor_list_id={doctorListId} />\n                                    <HCFAddTerms doctor_id={createListing?.doctor_id} doctor_list_id={doctorListId} />\n                                </Box>\n                            )}\n                        </div>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default HCFAddDoctors;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\n\nexport const AddPackageTable = ({heading , cost }) => {\n    return(\n        <>\n            <Box sx={{display : \"flex\" }} >\n                <Box component={'div'} sx={{height : \"3.44331rem\" , width  : \"3.44331rem\" , borderRadius : \"0.5rem\" }}>\n                </Box>\n                <Box sx={{marginLeft : \"2%\" , display : \"flex\" , flexDirection : \"column\" , justifyContent : \"center\" }} >\n                    <Typography sx={{   color: \"#313033\",\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"0.875rem\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"500\",\n                                        lineHeight: \"1.375rem\",\n                                        letterSpacing: \"0.00438rem\"}} >{heading}</Typography>\n                    <Typography sx={{   color: \"#939094\",\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"0.625rem\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"400\",\n                                        lineHeight: \"0.9375rem\",\n                                        letterSpacing: \"0.005rem\",}} > cost : {cost}</Typography>\n                                        \n                </Box>\n            </Box>\n        </>\n    )\n}","import { Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\nimport React, { Fragment, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport AddIcon from '@mui/icons-material/Add';\nimport \"./addpackage.scss\"\nimport { AddPackageTable } from \"./AddPackageTable\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport CustomModal from \"../../../../components/CustomModal\";\nimport { Add } from \"@mui/icons-material\";\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomDropdown from \"../../../../components/CustomDropdown\";\n\n\nfunction createData(name, calories, fat, carbs, protein, action) {\n    return { name, calories, fat, carbs, protein, action };\n}\n\nconst rows = [\n    createData(<AddPackageTable heading={\"Messaging Plan\"} cost={\"$12 | 30min & 60\"}/>,\n        <CustomButton label={<div><DeleteIcon style={{marginBottom:\"-7px\"}}/>Delete</div>} isTransaprent />,\n        <CustomButton label={<div><EditIcon style={{marginBottom:\"-7px\"}}/>Edit</div>} isTransaprent />,\n    ),\n    createData(<AddPackageTable heading={\"Voice Plan\"} cost={\"$20 | 30min & 60\"}/>,\n    <CustomButton label={<div><DeleteIcon style={{marginBottom:\"-7px\"}}/>Delete</div>} isTransaprent />,\n        <CustomButton label={<div><EditIcon style={{marginBottom:\"-7px\"}}/>Edit</div>} isTransaprent />,\n    ), \n    createData(<AddPackageTable heading={\"Video Plan\"} cost={\"$25 | 30min & 60\"}/>,\n    <CustomButton label={<div><DeleteIcon style={{marginBottom:\"-7px\"}}/>Delete</div>} isTransaprent />,\n        <CustomButton label={<div><EditIcon style={{marginBottom:\"-7px\"}}/>Edit</div>} isTransaprent />,\n    ), \n\n];\n\n\nconst HCFAddPackage = () => {\n    const [openDialog, setOpenDialog] = useState(false);\n    const [textField1, setTextField1] = useState(\"\");\n    const [textField2, setTextField2] = useState(\"\");\n    const [textField3, setTextField3] = useState(\"\");\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const dropdownItems = [\"item1\", \"item2\", \"item3\"];\n    return(\n        <>\n            <Box sx={{ display: \"flex\", width: \"98%\" , height : \"100%\" , height : \"90%\" , flexDirection : \"row\" }} >\n\n                   \n                <nav className=\"NavBar-Container-Appoinement\" >\n                    <NavLink to={\"/hcfadmin/doctor/adddoctor\"}>Add Doctors</NavLink>\n                    <NavLink to={\"/hcfadmin/doctor/addpackage\"}>Add Package</NavLink>\n                </nav>\n                        \n                <Box\n                    component={\"div\"}\n                    sx={{ position: \"relative\", top: \"4em\", width: \"100%\", display: \"flex\" , height : \"100%\" }}\n                >\n                    <Box sx={{ width: \"100%\" ,  height : \"100%\"  ,}} >\n                        <div className=\"\" >\n                            <h5 style={{textAlign:\"start\",margin:\"20px\"}}>Add Plan</h5>\n                        </div>\n                        <div style={{display:\"flex\",justifyContent:\"flex-end\",marginRight:\"20px\",marginTop:\"-30px\"}}>\n                        \n                        <CustomButton\n                           label={<div><AddIcon style={{marginBottom:\"-7px\"}}/>Add</div>}\n                            isElevated isTransaprent\n                            handleClick={() => setOpenDialog(true)}\n                        />\n                        <CustomModal\n                            isOpen={openDialog}\n                            title={\"Add Plan\"}\n                            footer={\n                                <Fragment >\n                                    <CustomButton\n                                        label={\"Save\"}\n                                        buttonCss={{margin:\"auto\",marginTop:\"30px\"}}\n                                        handleClick={() => setOpenDialog(false)}\n                                        isText\n                                    />\n                                </Fragment>\n                            }\n                        >\n                            <div>\n                            <h5 style={{ textAlign: \"start\", marginLeft: \"20px\" }}><div><CheckBoxIcon style={{marginBottom:\"-7px\",color:\"red\"}}/>Messaging Plan</div></h5>\n                                <div style={{ display: \"flex\", justifyContent: 'flex-start' }}>\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Price\"}\n                                        defaultValue={textField1}\n                                        style={{ width: 400, marginLeft: \"10px\" }}\n                                        helperText={\"\"}\n                                        onChange={(value) => setTextField1(value)}\n                                    />\n                             <CustomDropdown\n                            label={\"Duration\"}\n                            items={dropdownItems}\n                            activeItem={activeDropdown}\n                            dropdowncss={{marginTop:\"0px\",width:\"400px\",marginLeft:\"10px\"}}\n                            handleChange={(item) => setActiveDropdown(item)}\n                        />\n                            </div>\n                            </div>\n                            <div>\n                            <h5 style={{ textAlign: \"start\", marginLeft: \"20px\" }}><div><CheckBoxIcon style={{marginBottom:\"-7px\",color:\"red\"}}/>Voice Plan</div></h5>\n                                <div style={{ display: \"flex\", justifyContent: 'flex-start' }}>\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Price\"}\n                                        defaultValue={textField2}\n                                        style={{ width: 400, marginLeft: \"10px\" }}\n                                        helperText={\"\"}\n                                        onChange={(value) => setTextField2(value)}\n                                    />\n                             <CustomDropdown\n                            label={\"Duration\"}\n                            items={dropdownItems}\n                            activeItem={activeDropdown}\n                            dropdowncss={{marginTop:\"0px\",width:\"400px\",marginLeft:\"10px\"}}\n                            handleChange={(item) => setActiveDropdown(item)}\n                        />\n                            </div>\n                          \n                            <div>\n                            <h5 style={{ textAlign: \"start\", marginLeft: \"20px\" }}><div><CheckBoxIcon style={{marginBottom:\"-7px\",color:\"red\"}}/>Video Call Plan</div></h5>\n                                <div style={{ display: \"flex\", justifyContent: 'flex-start' }}>\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Price\"}\n                                        defaultValue={textField3}\n                                        style={{ width: 400, marginLeft: \"10px\" }}\n                                        helperText={\"\"}\n                                        onChange={(value) => setTextField3(value)}\n                                    />\n                             <CustomDropdown\n                            label={\"Duration\"}\n                            items={dropdownItems}\n                            activeItem={activeDropdown}\n                            dropdowncss={{marginTop:\"0px\",width:\"400px\",marginLeft:\"10px\"}}\n                            handleChange={(item) => setActiveDropdown(item)}\n                        />\n                            </div>\n                            </div>\n                            </div>\n                        </CustomModal>\n                    \n                    </div>\n                    \n                        <div className=\"\" >\n\n                            <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                           \n                            <TableBody>\n                                {rows.map((row) => (\n                                    <TableRow\n                                        key={row.name}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{row.calories}</TableCell>\n                                        <TableCell align=\"right\">{row.fat}</TableCell>\n                                        <TableCell align=\"right\" >{row.carbs}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                        </div>\n                       <div style={{marginTop:\"30px\"}}> <CustomButton label=\"Save\"/></div>\n\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default HCFAddPackage;","import {\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Skeleton,\n    Typography,\n    TablePagination,\n    colors,\n} from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport SearchBox from \"../../../../components/searchbox/SearchBox\";\nimport { baseURL } from \"../../../../constants/const\";\nimport { AuditCards } from \"../../../DiagnosticCenter/DiagnosticManage/DiagnosticCenterAuditLog/AuditCards\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport { formatDate } from \"../../../../constants/const\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport { doc } from \"prettier\";\n\n\nconst getStatusLabel = (status) => {\n    return status === 1 ? \"Active\" : \"Inactive\";\n};\n\nconst AdminManageAuditLog = () => {\n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"manage\");\n        localStorage.setItem(\"path\", \"hcfadminauditlog\");\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    }, []);\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const hcf_id = localStorage.getItem('hcfadmin_suid'); // Example value; replace with your logic to get hcf_id\n\n    const fetchData = async (hcf_id) => {\n        try {\n            const response = await axiosInstance(`sec/hcf/HcfAuditlogs/${hcf_id}`);\n            const fetchedData = response?.data?.response || [];\n\n            // Sort the data by timestamp in descending order\n            const sortedData = fetchedData.sort((a, b) => new Date(b.time) - new Date(a.time));\n    \n            setData(sortedData);        } catch (error) {\n            setError(error.response ? error.response.data : \"An error occurred\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData(hcf_id);\n    }, [hcf_id]);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0); // Reset to the first page when rows per page changes\n    };\n\n    const cellStyle = {\n        color: \"#939094\",\n        textAlign: \"right\",\n        fontFamily: \"Poppins\",\n        fontSize: \"1rem\",\n        fontStyle: \"normal\",\n        fontWeight: \"400\",\n        lineHeight: \"0.9375rem\",\n        letterSpacing: \"0.005rem\",\n    };\n    const actionidStyle = {\n        color: \"#E72B4A\",\n        textAlign: \"right\",\n        fontFamily: \"Poppins\",\n        fontSize: \"1rem\",\n        fontStyle: \"normal\",\n        fontWeight: \"400\",\n        lineHeight: \"0.9375rem\",\n        letterSpacing: \"0.005rem\",\n    }\n\n    return (\n        <>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"98%\",\n                    height: \"90%\",\n                    flexDirection: \"row\",\n                }}\n            >\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/hcfadmin/hcfadminmanage/hcfadminsale\"}>Sale Activities</NavLink>\n                    <NavLink to={\"/hcfadmin/hcfadminmanage/hcfadminoverview\"}>Overview</NavLink>\n                    <NavLink to={\"/hcfadmin/hcfadminmanage/hcfadminbooking\"}>Bookings</NavLink>\n                    <NavLink to={\"/hcfadmin/hcfadminmanage/hcfadminpayout\"}>Payout</NavLink>\n                    <NavLink to={\"/hcfadmin/hcfadminmanage/hcfadminauditlog\"}>Audit Logs</NavLink>\n                </nav>\n\n                <Box\n                    component={\"div\"}\n                    sx={{ position: \"relative\", top: \"4em\", width: \"100%\", height: \"100%\" }}\n                >\n                    {/* <Box sx={{ display: \"flex\", marginBottom: \"1em\" }}>\n                        <SearchBox />\n                    </Box> */}\n\n                    <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Name & Details</TableCell>\n                                    <TableCell align=\"right\">Status</TableCell>\n                                    <TableCell align=\"right\">Action ID</TableCell>\n                                    <TableCell align=\"right\">Action</TableCell>\n                                    <TableCell align=\"right\">Timestamp</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {loading ? (\n                                        Array.from(new Array(rowsPerPage)).map((_, index) => (\n                                            <TableRow key={index}>\n                                                <TableCell colSpan={5} align=\"center\">\n                                                    <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                ) : data.length === 0 ? (\n                                    <TableRow>\n                                        <TableCell colSpan={4} align=\"center\">\n                                            <NoAppointmentCard text_one={\"No Data Found\"} />\n                                        </TableCell>\n                                    </TableRow>\n                                ) : (\n                                    data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                                        <TableRow\n                                            key={row.name}\n                                            sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <AuditCards name={row.name} specialist={row.specialist} Id={row.user_id} />\n                                            </TableCell>\n                                            <TableCell align=\"right\" sx={cellStyle}>\n                                                {getStatusLabel(row.status)}\n                                            </TableCell>\n                                            <TableCell align=\"right\" sx={actionidStyle}>\n                                                {row.action_id}\n                                            </TableCell>\n                                            <TableCell align=\"right\" sx={cellStyle}>\n                                                {row.action}\n                                            </TableCell>\n                                            <TableCell align=\"right\" sx={cellStyle}>\n                                                {formatDate(row.time)}\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                                )}\n                            </TableBody>\n                        </Table>\n                        <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={data.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                    </TableContainer>\n                    \n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default AdminManageAuditLog;\n","import React, { useState } from \"react\";\nimport \"./servicedetails.scss\";\nimport { Typography, Box } from \"@mui/material\";\nimport CustomDatePicker from \"../../../../../components/CustomDatePicker\";\nimport CustomTimePicker from \"../../../../../components/CustomTimePicker\";\n\nfunction getWeeksAfter(date, amount) {\n    return date ? date.add(amount, \"week\") : undefined;\n}\n\nconst ServiceDetails = () => {\n    const [serviceDayFrom, setServiceDayFrom] = useState(null);\n    const [serviceDayTo, setServiceDayTo] = useState(null);\n    const [serviceTimeFrom, setServiceTimeFrom] = useState(null);\n    const [serviceTimeTo, setServiceTimeTo] = useState(null);\n\n    return (\n        <>\n            <div className=\"mui-date-time-pickers\">\n                <div className=\"days\">\n                    <Typography>Days</Typography>\n                </div>\n                <div className=\"Date-range-picker1\">\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"16px\" }}>\n                        <CustomDatePicker\n                            label=\"From\"\n                            value={serviceDayFrom}\n                            onChange={(value) => {\n                                setServiceDayFrom(value);\n                                console.log(\"Service day from:\", value);\n                            }}\n                            textcss={{ width: \"48%\" }}\n                            noSpacing={true}\n                        />\n                        <Box sx={{ display: \"flex\", alignItems: \"center\", mx: 2 }}> to </Box>\n                        <CustomDatePicker\n                            label=\"To\"\n                            value={serviceDayTo}\n                            onChange={(value) => {\n                                setServiceDayTo(value);\n                                console.log(\"Service day to:\", value);\n                            }}\n                            textcss={{ width: \"48%\" }}\n                            noSpacing={true}\n                        />\n                    </div>\n                </div>\n                <div className=\"time\">\n                    <Typography>Time</Typography>\n                </div>\n                <div className=\"time-picker\">\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"16px\" }}>\n                        <CustomTimePicker\n                            label=\"From\"\n                            value={serviceTimeFrom}\n                            onChange={(value) => {\n                                setServiceTimeFrom(value);\n                                console.log(\"Service time from:\", value);\n                            }}\n                            textcss={{ width: \"48%\" }}\n                            noSpacing={true}\n                        />\n                        <Box sx={{ display: \"flex\", alignItems: \"center\", mx: 2 }}> to </Box>\n                        <CustomTimePicker\n                            label=\"To\"\n                            value={serviceTimeTo}\n                            onChange={(value) => {\n                                setServiceTimeTo(value);\n                                console.log(\"Service time to:\", value);\n                            }}\n                            textcss={{ width: \"48%\" }}\n                            noSpacing={true}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ServiceDetails;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport \"./diagnosticCompleteProfile.scss\";\nimport Typography from \"@mui/material/Typography\";\nimport CustomDatePicker from \"../../../../components/CustomDatePicker\";\nimport CustomTimePicker from \"../../../../components/CustomTimePicker\";\nimport ImageFrame from \"../../../../static/images/logos/diagnosit_logo.png\";\nimport ClassicFrame from \"../../../../static/images/DrImages/Undraw.png\";\nimport CustomTextField from \"../../../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport ServiceDetails from \"../ClinicCompleteProfile/Step3/ServiceDetails\";\n// import ServiceDetails from \"./ServiceDetails\";\n\nconst steps = [\"\", \"\", \"\", \"\", \"\"];\n\nconst HCFStepper = () => {\n    const dropdownItems = [\"item1\", \"item2\", \"item3\"];\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [value, setValue] = useState([null, null]);\n    const radioValues = [\"My self\"];\n    // const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n    //   const [activeFabDropdown, setActiveFabDropdown] = React.useState(dropdownItems[0]);\n    //   const [activeDropdown, setActiveDropdown] = useState(\"\");\n    // const [ageDropDown, setAgeDropDown] = React.useState();\n    // const [DateValue, setDataValue] = React.useState(null);\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <>\n            <div className=\"Stepper-Container\" sx={{ width: \"100%\" }}>\n                <div className=\"FrameBox\">\n                    <Box\n                        // sx={{ borderRadius: \"8px\", width: \"100%\", height: \"100%\" }}\n                        component={\"img\"}\n                        src={ImageFrame}\n                    ></Box>\n                </div>\n\n                <div className=\"step-back\">\n                    <div className=\"back-btn\">\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1, color: \"red\" }}\n                        >\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"Stepper\">\n                        <Stepper\n                            activeStep={activeStep}\n                            style={{\n                                width: \"700px\",\n                            }}\n                        >\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                if (isStepOptional(index)) {\n                                }\n                                if (isStepSkipped(index)) {\n                                    stepProps.completed = false;\n                                }\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                        <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </div>\n                </div>\n                {activeStep === steps.length ? (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Put component here */}\n                            All steps completed - you&apos;re finished\n                        </Typography>\n                        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            <Button onClick={handleReset}>Reset</Button>\n                        </Box>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Step {activeStep + 1} */}\n                            {activeStep === 0 ? (\n                                <>\n                                    <Box>\n                                        <div className=\"mainBox1\">\n                                            <div className=\"hcftitle1\">\n                                                <Typography\n                                                    style={{\n                                                        color: \"#313033\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                        fontSize: \"20px\",\n                                                    }}\n                                                >\n                                                    HCF DIAGNOSTIC INFORMATION\n                                                </Typography>\n                                            </div>\n                                            <div className=\"info-fields1\">\n                                                <CustomTextField\n                                                    label=\"Company name\"\n                                                    helperText={\"\"}\n                                                    textcss={{\n                                                        width: \"360px\",\n                                                        color: \"#787579\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"400\",\n                                                        lineHeight: \"24px\",\n                                                        fontSize: \"16px\",\n                                                    }}\n                                                ></CustomTextField>\n\n                                                <CustomTextField\n                                                    label=\"Business name\"\n                                                    helperText={\"\"}\n                                                    textcss={{\n                                                        width: \"360px\",\n                                                        color: \"#787579\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"400\",\n                                                        lineHeight: \"24px\",\n                                                        fontSize: \"16px\",\n                                                    }}\n                                                ></CustomTextField>\n\n                                                <CustomTextField\n                                                    label=\"Registration No\"\n                                                    helperText={\"\"}\n                                                    textcss={{\n                                                        width: \"360px\",\n                                                        color: \"#787579\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"400\",\n                                                        lineHeight: \"24px\",\n                                                        fontSize: \"16px\",\n                                                    }}\n                                                ></CustomTextField>\n\n                                                <CustomDatePicker\n                                                    label=\"Reg.Date\"\n                                                    value={null}\n                                                    onChange={(value) => {\n                                                        console.log(\"Registration date selected:\", value);\n                                                        // Add state management for registration date if needed\n                                                    }}\n                                                    textcss={{ width: \"360px\" }}\n                                                />\n                                            </div>\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"360px\",\n                                                    }}\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 1 ? (\n                                <>\n                                    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                                        <div className=\"mainBox1\">\n                                            <div className=\"servicetitle1\">\n                                                <Typography\n                                                    style={{\n                                                        color: \"#313033\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                        fontSize: \"20px\",\n                                                    }}\n                                                >\n                                                    Service Details\n                                                </Typography>\n                                            </div>\n                                            <div className=\"date-time-picker\">\n                                                <ServiceDetails />\n                                            </div>\n                                            <div className=\"services\">\n                                                <CustomDropdown\n                                                    label={\"Services Offered\"}\n                                                    items={dropdownItems}\n                                                    activeItem={activeDropdown}\n                                                    handleChange={(item) => setActiveDropdown(item)}\n                                                    dropdowncss={{\n                                                        width: \"360px\",\n                                                        height: \"56px\",\n                                                        color: \"#E6E1E5\",\n                                                    }}\n                                                />\n                                            </div>\n                                            <div className=\"nxt-btn1\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"360px\",\n                                                    }}\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 2 ? (\n                                <>\n                                    <div className=\"back-btn\">\n                                        <Button\n                                            color=\"inherit\"\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            Back\n                                        </Button>\n                                    </div>\n                                    <div className=\"contact-container\">\n                                        <div className=\"title3\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#313033\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"500\",\n                                                    lineHeight: \"30px\",\n                                                    fontSize: \"20px\",\n                                                }}\n                                            >\n                                                Contact Information\n                                            </Typography>\n                                        </div>\n                                        <div className=\"info-fields1\">\n                                            <CustomTextField\n                                                label=\"Street Line1\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"Street Line2\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"State\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"City\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"Zip Code\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"Fax No\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n                                        </div>\n                                        <div className=\"nxt-btn1\">\n                                            <CustomButton\n                                                handleClick={handleNext}\n                                                label=\"Next\"\n                                                buttonCss={{\n                                                    width: \"360px\",\n                                                }}\n                                            >\n                                                {activeStep === steps.length - 1\n                                                    ? \"Finish\"\n                                                    : \"Next\"}\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 3 ? (\n                                <>\n                                    <div className=\"imge-cont\">\n                                        <div className=\"card-cont1\">\n                                            <div className=\"card1\">\n                                                <div className=\"undraw-img1\">\n                                                    <Box\n                                                        sx={{ width: \"222px\", height: \"252px\" }}\n                                                        component={\"img\"}\n                                                        src={ClassicFrame}\n                                                    ></Box>\n                                                </div>\n                                                <div className=\"greetings1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#313033\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"16px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"600\",\n                                                            lineHeight: \"24px\",\n                                                        }}\n                                                    >\n                                                        Thank you for Choosing to rigister with us!\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"note1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#939094\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"14px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"400\",\n                                                            lineHeight: \"21px\",\n                                                            letterSpacing: \"0.07px\",\n                                                        }}\n                                                    >\n                                                        our team will get in touch with you shortly\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"done-btn1\">\n                                                    <CustomButton\n                                                        label=\"Done\"\n                                                        buttonCss={{\n                                                            width: \"270px\",\n                                                            borderRadius: \"20px\",\n                                                        }}\n                                                    >\n                                                        Done\n                                                    </CustomButton>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 4 ? (\n                                <Box sx={{ width: \"100%\" }}></Box>\n                            ) : (\n                                <h1>Completed</h1>\n                            )}\n                            ;\n                        </Typography>\n                        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            {isStepOptional(activeStep) && (\n                                <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                    Skip\n                                </Button>\n                            )}\n                        </Box>\n                    </React.Fragment>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default HCFStepper;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport \"./clinicCompleteProfile.scss\";\nimport Typography from \"@mui/material/Typography\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport ImageFrame from \"../../../../static/images/DrImages/Frame.png\";\nimport ClassicFrame from \"../../../../static/images/DrImages/Undraw.png\";\nimport CustomTextField from \"../../../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport ServiceDetails from \"./Step3/ServiceDetails\";\n// import ServiceDetails from \"./ServiceDetails\";\n\nconst steps = [\"\", \"\", \"\", \"\", \"\"];\n\nconst HCFStepper = () => {\n    const dropdownItems = [\"item1\", \"item2\", \"item3\"];\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [value, setValue] = useState([null, null]);\n    const radioValues = [\"My self\"];\n    // const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n    //   const [activeFabDropdown, setActiveFabDropdown] = React.useState(dropdownItems[0]);\n    //   const [activeDropdown, setActiveDropdown] = useState(\"\");\n    // const [ageDropDown, setAgeDropDown] = React.useState();\n    // const [DateValue, setDataValue] = React.useState(null);\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    return (\n        <>\n            <div className=\"Stepper-Container\" sx={{ width: \"100%\" }}>\n                <div className=\"FrameBox\">\n                    <Box\n                        // sx={{ borderRadius: \"8px\", width: \"100%\", height: \"100%\" }}\n                        component={\"img\"}\n                        src={ImageFrame}\n                    ></Box>\n                </div>\n\n                <div className=\"step-back\">\n                    <div className=\"back-btn\">\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1, color: \"red\" }}\n                        >\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"Stepper\">\n                        <Stepper\n                            activeStep={activeStep}\n                            style={{\n                                width: \"700px\",\n                            }}\n                        >\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                if (isStepOptional(index)) {\n                                }\n                                if (isStepSkipped(index)) {\n                                    stepProps.completed = false;\n                                }\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                        <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </div>\n                </div>\n                {activeStep === steps.length ? (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Put component here */}\n                            All steps completed - you&apos;re finished\n                        </Typography>\n                        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            <Button onClick={handleReset}>Reset</Button>\n                        </Box>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Step {activeStep + 1} */}\n                            {activeStep === 0 ? (\n                                <>\n                                    <Box>\n                                        <div className=\"mainBox1\">\n                                            <div className=\"hcftitle1\">\n                                                <Typography\n                                                    style={{\n                                                        color: \"#313033\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                        fontSize: \"20px\",\n                                                    }}\n                                                >\n                                                    HCF CLINIC INFORMATION\n                                                </Typography>\n                                            </div>\n                                            <div className=\"info-fields1\">\n                                                <CustomTextField\n                                                    label=\"Company name\"\n                                                    helperText={\"\"}\n                                                    textcss={{\n                                                        width: \"360px\",\n                                                        color: \"#787579\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"400\",\n                                                        lineHeight: \"24px\",\n                                                        fontSize: \"16px\",\n                                                    }}\n                                                ></CustomTextField>\n\n                                                <CustomTextField\n                                                    label=\"Business name\"\n                                                    helperText={\"\"}\n                                                    textcss={{\n                                                        width: \"360px\",\n                                                        color: \"#787579\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"400\",\n                                                        lineHeight: \"24px\",\n                                                        fontSize: \"16px\",\n                                                    }}\n                                                ></CustomTextField>\n\n                                                <CustomTextField\n                                                    label=\"Registration No\"\n                                                    helperText={\"\"}\n                                                    textcss={{\n                                                        width: \"360px\",\n                                                        color: \"#787579\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"400\",\n                                                        lineHeight: \"24px\",\n                                                        fontSize: \"16px\",\n                                                    }}\n                                                ></CustomTextField>\n\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                    <DemoContainer components={[\"DatePicker\"]}>\n                                                        <DatePicker\n                                                            label=\"Reg.Date\"\n                                                            style={{ width: \"360px\" }}\n                                                        />\n                                                    </DemoContainer>\n                                                </LocalizationProvider>\n                                            </div>\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"360px\",\n                                                    }}\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 1 ? (\n                                <>\n                                    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                                        <div className=\"mainBox1\">\n                                            <div className=\"servicetitle1\">\n                                                <Typography\n                                                    style={{\n                                                        color: \"#313033\",\n                                                        fontFamily: \"poppins\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                        fontSize: \"20px\",\n                                                    }}\n                                                >\n                                                    Service Details\n                                                </Typography>\n                                            </div>\n                                            <div className=\"date-time-picker\">\n                                                <ServiceDetails />\n                                            </div>\n                                            <div className=\"services\">\n                                                <CustomDropdown\n                                                    label={\"Services Offered\"}\n                                                    items={dropdownItems}\n                                                    activeItem={activeDropdown}\n                                                    handleChange={(item) => setActiveDropdown(item)}\n                                                    dropdowncss={{\n                                                        width: \"360px\",\n                                                        height: \"56px\",\n                                                        color: \"#E6E1E5\",\n                                                    }}\n                                                />\n                                            </div>\n                                            <div className=\"nxt-btn1\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"360px\",\n                                                    }}\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 2 ? (\n                                <>\n                                    <div className=\"back-btn\">\n                                        <Button\n                                            color=\"inherit\"\n                                            disabled={activeStep === 0}\n                                            onClick={handleBack}\n                                            sx={{ mr: 1 }}\n                                        >\n                                            Back\n                                        </Button>\n                                    </div>\n                                    <div className=\"contact-container\">\n                                        <div className=\"title3\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#313033\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"500\",\n                                                    lineHeight: \"30px\",\n                                                    fontSize: \"20px\",\n                                                }}\n                                            >\n                                                Contact Information\n                                            </Typography>\n                                        </div>\n                                        <div className=\"info-fields1\">\n                                            <CustomTextField\n                                                label=\"Street Line1\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"Street Line2\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"State\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"City\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"Zip Code\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n\n                                            <CustomTextField\n                                                label=\"Fax No\"\n                                                helperText={\"\"}\n                                                textcss={{\n                                                    width: \"360px\",\n                                                    color: \"#787579\",\n                                                    fontFamily: \"poppins\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"24px\",\n                                                    fontSize: \"16px\",\n                                                }}\n                                            ></CustomTextField>\n                                        </div>\n                                        <div className=\"nxt-btn1\">\n                                            <CustomButton\n                                                handleClick={handleNext}\n                                                label=\"Next\"\n                                                buttonCss={{\n                                                    width: \"360px\",\n                                                }}\n                                            >\n                                                {activeStep === steps.length - 1\n                                                    ? \"Finish\"\n                                                    : \"Next\"}\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 3 ? (\n                                <>\n                                    <div className=\"imge-cont\">\n                                        <div className=\"card-cont1\">\n                                            <div className=\"card1\">\n                                                <div className=\"undraw-img1\">\n                                                    <Box\n                                                        sx={{ width: \"222px\", height: \"252px\" }}\n                                                        component={\"img\"}\n                                                        src={ClassicFrame}\n                                                    ></Box>\n                                                </div>\n                                                <div className=\"greetings1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#313033\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"16px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"600\",\n                                                            lineHeight: \"24px\",\n                                                        }}\n                                                    >\n                                                        Thank you for Choosing to rigister with us!\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"note1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#939094\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"14px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"400\",\n                                                            lineHeight: \"21px\",\n                                                            letterSpacing: \"0.07px\",\n                                                        }}\n                                                    >\n                                                        our team will get in touch with you shortly\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"done-btn1\">\n                                                    <CustomButton\n                                                        label=\"Done\"\n                                                        buttonCss={{\n                                                            width: \"270px\",\n                                                            borderRadius: \"20px\",\n                                                        }}\n                                                    >\n                                                        Done\n                                                    </CustomButton>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 4 ? (\n                                <Box sx={{ width: \"100%\" }}></Box>\n                            ) : (\n                                <h1>Completed</h1>\n                            )}\n                            ;\n                        </Typography>\n                        <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            {isStepOptional(activeStep) && (\n                                <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                    Skip\n                                </Button>\n                            )}\n                        </Box>\n                    </React.Fragment>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default HCFStepper;\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport \"./HCFAdminCompleteProfile.scss\";\nimport Typography from \"@mui/material/Typography\";\nimport { TextField } from \"@mui/material\";\nimport ClassicFrame from \"../../../../static/images/DrImages/Undraw.png\";\nimport ImageFrame from \"../../../../static/images/logos/hcf_admin_logo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomRadioButton from \"../../../../components/CustomRadioButton\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport dayjs from \"dayjs\";\nimport CustomTimePicker from \"../../../../components/CustomTimePicker\";\nimport { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { getCurrentUser, getCurrentUserId, getCurrentRoleId, getCurrentUserEmail } from \"../../../../utils/jwtUtils\";\n\nconst steps = [\"\", \"\"];\n\nconst HcfAdminSignUp = () => {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [flagToSendDoctorData, setFlagToSendDoctorData] = useState(false);\n    \n    // Get user information from JWT token\n    const currentUser = getCurrentUser();\n    const userId = getCurrentUserId();\n    const roleId = getCurrentRoleId();\n    const userEmail = getCurrentUserEmail();\n    \n    console.log(\"HCF Admin - Current user from JWT:\", currentUser);\n    console.log(\"HCF Admin - User ID:\", userId, \"Role ID:\", roleId, \"Email:\", userEmail);\n    console.log(\"HCF Admin - localStorage hcfadmin_Email:\", localStorage.getItem(\"hcfadmin_Email\"));\n    console.log(\"HCF Admin - localStorage jwt_email:\", localStorage.getItem(\"jwt_email\"));\n    console.log(\"HCF Admin - localStorage access_token:\", localStorage.getItem(\"access_token\"));\n    console.log(\"HCF Admin - All localStorage keys:\", Object.keys(localStorage));\n    \n    const [updateUserData, setUpdateUserData] = useState({\n        suid: localStorage.getItem(\"hcfadmin_suid\"),\n        email: userEmail || localStorage.getItem(\"jwt_email\") || localStorage.getItem(\"hcfadmin_Email\") || \"\",\n        hcf_name: null,\n        reg_no: null,\n        category_id: null,\n        service_time_from: null,\n        service_time_to: null,\n        service_day_from: null,\n        service_day_to: null,\n        lab_department_id: [],\n        state_reg_date: null,\n        diag_indian_reg_no: null,\n    });\n    const [updatedUserSuccesfully, setUpdatedUserSuccesfully] = useState(\"\");\n    const [showSnackBar, setShowSnackBar] = useState(false);\n    const [hcfCategory, setHcfCategory] = useState(\"Clinic\");\n    const [hcfItems] = useState([\"Clinic\", \"Diagnostic Center\", \"Both\"]);\n    const [departments, setDepartments] = useState([]);\n\n    const navigate = useNavigate();\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    useEffect(() => {\n        fetchDepartmentName();\n        \n        // Handle incomplete profile data\n        const hcfAdminSuid = localStorage.getItem(\"hcfadmin_suid\");\n        const hcfAdminEmail = localStorage.getItem(\"hcfadmin_Email\") || localStorage.getItem(\"jwt_email\") || localStorage.getItem(\"login_Email\");\n        \n        if (hcfAdminSuid && hcfAdminEmail) {\n            setUpdateUserData(prevData => ({\n                ...prevData,\n                suid: hcfAdminSuid,\n                email: hcfAdminEmail\n            }));\n        }\n    }, []);\n\n    console.log(\"user data : \", updateUserData);\n\n    useEffect(() => {\n        if (flagToSendDoctorData) {\n            PostUserData();\n        }\n    }, [flagToSendDoctorData]);\n\n    const PostUserData = async () => {\n        setFlagToSendDoctorData(false);\n        try {\n            // Final email check before sending - comprehensive extraction\n            const emailFromJWT = getCurrentUserEmail();\n            const emailFromStorage = localStorage.getItem(\"hcfadmin_Email\");\n            const emailFromJWTStorage = localStorage.getItem(\"jwt_email\");\n            const emailFromLogin = localStorage.getItem(\"login_Email\");\n            const finalEmail = updateUserData.email || emailFromJWT || emailFromJWTStorage || emailFromStorage || emailFromLogin;\n            \n            // Ensure we have the required data for incomplete profiles\n            const hcfAdminSuid = localStorage.getItem(\"hcfadmin_suid\");\n            \n            const finalData = {\n                ...updateUserData,\n                suid: updateUserData.suid || hcfAdminSuid,\n                email: finalEmail,\n                // Format time values to HH:MM:SS format for database\n                service_time_from: updateUserData.service_time_from ? \n                    new Date(updateUserData.service_time_from).toTimeString().split(' ')[0] : null,\n                service_time_to: updateUserData.service_time_to ? \n                    new Date(updateUserData.service_time_to).toTimeString().split(' ')[0] : null\n            };\n            \n            console.log(\"=== HCF ADMIN PROFILE UPDATE DEBUG ===\");\n            console.log(\"Original data:\", updateUserData);\n            console.log(\"Time formatting:\");\n            console.log(\"- service_time_from original:\", updateUserData.service_time_from);\n            console.log(\"- service_time_from formatted:\", finalData.service_time_from);\n            console.log(\"- service_time_to original:\", updateUserData.service_time_to);\n            console.log(\"- service_time_to formatted:\", finalData.service_time_to);\n            console.log(\"Final data being sent:\", finalData);\n            console.log(\"Email extraction sources:\");\n            console.log(\"- JWT email:\", emailFromJWT);\n            console.log(\"- Storage hcfadmin_Email:\", emailFromStorage);\n            console.log(\"- Storage jwt_email:\", emailFromJWTStorage);\n            console.log(\"- Final email used:\", finalEmail);\n            console.log(\"Access token:\", localStorage.getItem(\"access_token\"));\n            \n            const response = await axiosInstance.post(\n                \"/sec/auth/updateProfile\",\n                JSON.stringify(finalData),\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"Accept\": \"application/json\",\n                    },\n                }\n            );\n            setUpdatedUserSuccesfully(\"Profile Completed 🙂\");\n            console.log(\"send data succesfully : \", response);\n            setShowSnackBar(true);\n            setFlagToSendDoctorData(false);\n            handleNext();\n        } catch (err) {\n            console.log(\"Error sending data\", err);\n            setShowSnackBar(false);\n            setFlagToSendDoctorData(false);\n        }\n    };\n    // Removed handleDateRangeChange - now using individual CustomDatePicker components\n\n    const fetchDepartmentName = async () => {\n        try {\n            const response = await axiosInstance.get(\"/sec/labDepartments\");\n            const departmentData = response?.data?.response || [];\n            setDepartments(departmentData);\n        } catch (err) {\n            console.error(\"Error fetching department names:\", err);\n        }\n    };\n\n    useEffect(() => {\n        fetchDepartmentName();\n        \n        // Ensure email is set on component mount\n        const emailFromJWT = getCurrentUserEmail();\n        const emailFromStorage = localStorage.getItem(\"hcfadmin_Email\");\n        const emailFromJWTStorage = localStorage.getItem(\"jwt_email\");\n        const email = emailFromJWT || emailFromJWTStorage || emailFromStorage;\n        \n        console.log(\"Component mount - Email extraction:\");\n        console.log(\"- JWT email:\", emailFromJWT);\n        console.log(\"- Storage hcfadmin_Email:\", emailFromStorage);\n        console.log(\"- Storage jwt_email:\", emailFromJWTStorage);\n        console.log(\"- Final email:\", email);\n        \n        if (email && email !== updateUserData.email) {\n            console.log(\"Setting email on component mount:\", email);\n            setUpdateUserData(prev => ({\n                ...prev,\n                email: email\n            }));\n        }\n    }, []);\n\n    // Ensure email is always available\n    useEffect(() => {\n        const emailFromJWT = getCurrentUserEmail();\n        const emailFromStorage = localStorage.getItem(\"hcfadmin_Email\");\n        const emailFromJWTStorage = localStorage.getItem(\"jwt_email\");\n        const email = emailFromJWT || emailFromJWTStorage || emailFromStorage;\n        \n        console.log(\"Email extraction debug:\");\n        console.log(\"- JWT email:\", emailFromJWT);\n        console.log(\"- Storage hcfadmin_Email:\", emailFromStorage);\n        console.log(\"- Storage jwt_email:\", emailFromJWTStorage);\n        console.log(\"- Final email:\", email);\n        \n        if (email && email !== updateUserData.email) {\n            console.log(\"Updating email in state:\", email);\n            setUpdateUserData(prev => ({\n                ...prev,\n                email: email\n            }));\n        }\n    }, [updateUserData.email]);\n\n    // Handle department selection\n    const handleCheckboxChange = (id) => {\n        setUpdateUserData((prevData) => {\n            const updatedLabIds = prevData.lab_department_id.includes(id)\n                ? prevData.lab_department_id.filter((labId) => labId !== id)\n                : [...prevData.lab_department_id, id];\n\n            return { ...prevData, lab_department_id: updatedLabIds };\n        });\n    };\n\n    const categoryMap = {\n        Clinic: 1,\n        \"Diagnostic Center\": 2,\n        Both: 3,\n    };\n    return (\n        <>\n            <CustomSnackBar\n                isOpen={showSnackBar}\n                actionLabel={\"\"}\n                // handleAction={() => setShowSnack(false)}\n                message={updatedUserSuccesfully}\n                type=\"success\"\n            />\n            <Box sx={{ width: \"100%\" }}>\n                <div className=\"FrameBox1\">\n                    <Box\n                        // sx={{ borderRadius: \"8px\", width: \"100%\", height: \"100%\" }}\n                        component={\"img\"}\n                        src={ImageFrame}\n                    ></Box>\n                </div>\n\n                <div className=\"step-back\">\n                    <div className=\"back-btn\">\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1, color: \"red\" }}\n                        >\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"Stepper\">\n                        <Stepper\n                            activeStep={activeStep}\n                            style={{\n                                width: \"700px\",\n                            }}\n                        >\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                if (isStepOptional(index)) {\n                                }\n                                if (isStepSkipped(index)) {\n                                    stepProps.completed = false;\n                                }\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                        <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </div>\n                </div>\n                {activeStep === steps.length ? (\n                    <React.Fragment>\n                        <Box sx={{ width: \"100%\" }}>\n                            <div className=\"imge-cont\">\n                                <div className=\"card-cont1\">\n                                    <div className=\"card1\">\n                                        <div className=\"last-image\">\n                                            <Box\n                                                sx={{ width: \"222px\", height: \"252px\" }}\n                                                component={\"img\"}\n                                                src={ClassicFrame}\n                                            ></Box>\n                                        </div>\n                                        <div className=\"greetings1\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#313033\",\n                                                    fontFamily: \"poppins\",\n                                                    fontSize: \"16px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"600\",\n                                                    lineHeight: \"24px\",\n                                                }}\n                                            >\n                                                Your choice to register with us fills us with\n                                                immense gratitude\n                                            </Typography>\n                                        </div>\n                                        <div className=\"note1\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#939094\",\n                                                    fontFamily: \"poppins\",\n                                                    fontSize: \"14px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"21px\",\n                                                    letterSpacing: \"0.07px\",\n                                                }}\n                                            >\n                                                Proceed to the login page to embark upon thy journey\n                                                henceforth\n                                            </Typography>\n                                        </div>\n                                        <div className=\"done-btn1\">\n                                            <CustomButton\n                                                label=\"Proceed to Login, where your adventure awaits\"\n                                                handleClick={() => navigate(\"/hcfadminlogin\")}\n                                                buttonCss={{\n                                                    width: \"270px\",\n                                                    borderRadius: \"20px\",\n                                                }}\n                                            >\n                                                Done\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Box>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Step {activeStep + 1} */}\n                            {activeStep === 0 ? (\n                                <>\n                                    <Box>\n                                        <div className=\"mainBox1\">\n                                            <Box sx={{ width: \"40%\" }}>\n                                                <div className=\"heading1\">\n                                                    <Typography\n                                                        style={{\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"25px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"500\",\n                                                            lineHeight: \"30px\",\n                                                        }}\n                                                    >\n                                                        HCF Information\n                                                    </Typography>\n                                                </div>\n\n                                                <CustomRadioButton\n                                                    label={\"\"}\n                                                    handleChange={(event) => {\n                                                        const selectedCategory = event.target.value;\n                                                        console.log(\n                                                            \"Selected Category: \",\n                                                            selectedCategory,\n                                                        );\n\n                                                        setHcfCategory(selectedCategory);\n                                                        setUpdateUserData((prevData) => ({\n                                                            ...prevData,\n                                                            category_id:\n                                                                categoryMap[selectedCategory], // Map category name to ID\n                                                        }));\n                                                    }}\n                                                    radioGroupCss={{\n                                                        display: \"flex\",\n                                                        flexDirection: \"row\",\n                                                        justifyContent: \"space-between\",\n                                                    }}\n                                                    value={hcfCategory}\n                                                    items={[\"Clinic\", \"Diagnostic Center\", \"Both\"]}\n                                                />\n\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"Business Name\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                hcf_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.hcf_name}\n                                                        required={true}\n                                                    />\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"Registration No\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                reg_no: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.reg_no}\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                        <DatePicker\n                                                            label=\"Reg. Date\"\n                                                            value={updateUserData.state_reg_date ? dayjs(updateUserData.state_reg_date) : null}\n                                                            onChange={(value) => {\n                                                                if (value) {\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        state_reg_date: value.format('YYYY-MM-DD'),\n                                                                    });\n                                                                } else {\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        state_reg_date: null,\n                                                                    });\n                                                                }\n                                                            }}\n                                                            slotProps={{\n                                                                textField: {\n                                                                    required: true,\n                                                                    variant: \"standard\",\n                                                                    fullWidth: true,\n                                                                },\n                                                            }}\n                                                        />\n                                                    </LocalizationProvider>\n                                                </div>\n                                                {hcfCategory !== \"Clinic\" && (\n                                                    <div className=\"other-fields1\">\n                                                        <TextField\n                                                            label=\"Diagnostic License No\"\n                                                            variant=\"standard\"\n                                                            style={{\n                                                                width: \"100%\",\n                                                                color: \"#787579\",\n                                                            }}\n                                                            onInput={(event) => {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    diag_indian_reg_no:\n                                                                        event.target.value,\n                                                                });\n                                                            }}\n                                                            value={\n                                                                updateUserData?.diag_indian_reg_no\n                                                            }\n                                                            required={false}\n                                                        />\n                                                    </div>\n                                                )}\n                                            </Box>\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"30%\",\n                                                    }}\n                                                    isDisabled={\n                                                        updateUserData.hcf_name != null &&\n                                                        updateUserData.reg_no != null &&\n                                                        updateUserData.state_reg_date != null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 1 ? (\n                                <>\n                                    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                                        <div className=\"mainBox1\">\n                                            <Box sx={{ width: \"40%\" }}>\n                                                <div className=\"heading1\">\n                                                    <Typography\n                                                        style={{\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"25px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"500\",\n                                                            lineHeight: \"30px\",\n                                                        }}\n                                                    >\n                                                        Service Details\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"Text-fields1\">\n                                                    <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"16px\" }}>\n                                                        <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                            <DatePicker\n                                                                label=\"Service From Date\"\n                                                                value={updateUserData.service_day_from ? dayjs(updateUserData.service_day_from) : null}\n                                                                onChange={(value) => {\n                                                                    if (value) {\n                                                                        setUpdateUserData({\n                                                                            ...updateUserData,\n                                                                            service_day_from: value.format('YYYY-MM-DD'),\n                                                                        });\n                                                                    } else {\n                                                                        setUpdateUserData({\n                                                                            ...updateUserData,\n                                                                            service_day_from: null,\n                                                                        });\n                                                                    }\n                                                                }}\n                                                                slotProps={{\n                                                                    textField: {\n                                                                        required: true,\n                                                                        variant: \"standard\",\n                                                                        sx: { width: \"48%\" },\n                                                                    },\n                                                                }}\n                                                            />\n                                                        </LocalizationProvider>\n                                                        <Box sx={{ display: \"flex\", alignItems: \"center\", mx: 2 }}> to </Box>\n                                                        <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                            <DatePicker\n                                                                label=\"Service To Date\"\n                                                                value={updateUserData.service_day_to ? dayjs(updateUserData.service_day_to) : null}\n                                                                onChange={(value) => {\n                                                                    if (value) {\n                                                                        setUpdateUserData({\n                                                                            ...updateUserData,\n                                                                            service_day_to: value.format('YYYY-MM-DD'),\n                                                                        });\n                                                                    } else {\n                                                                        setUpdateUserData({\n                                                                            ...updateUserData,\n                                                                            service_day_to: null,\n                                                                        });\n                                                                    }\n                                                                }}\n                                                                slotProps={{\n                                                                    textField: {\n                                                                        required: true,\n                                                                        variant: \"standard\",\n                                                                        sx: { width: \"48%\" },\n                                                                    },\n                                                                }}\n                                                            />\n                                                        </LocalizationProvider>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"Text-fields1\">\n                                                    <div style={{ display: \"flex\", justifyContent: \"space-between\", gap: \"16px\" }}>\n                                                        <CustomTimePicker\n                                                            label=\"Start Time\"\n                                                            value={updateUserData?.service_time_from || null}\n                                                            onChange={(value) => {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    service_time_from: value,\n                                                                });\n                                                            }}\n                                                            textcss={{ width: \"48%\" }}\n                                                            noSpacing={true}\n                                                        />\n                                                        <Box sx={{ display: \"flex\", alignItems: \"center\", mx: 2 }}> to </Box>\n                                                        <CustomTimePicker\n                                                            label=\"End Time\"\n                                                            value={updateUserData?.service_time_to || null}\n                                                            onChange={(value) => {\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    service_time_to: value,\n                                                                });\n                                                            }}\n                                                            textcss={{ width: \"48%\" }}\n                                                            noSpacing={true}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"gender1\">\n                                                    <Box>\n                                                        <h3>Select Lab Departments</h3>\n                                                        {departments.map((department) => (\n                                                            <FormControlLabel\n                                                                key={department.lab_department_id}\n                                                                control={\n                                                                    <Checkbox\n                                                                        checked={updateUserData.lab_department_id.includes(\n                                                                            department.lab_department_id,\n                                                                        )}\n                                                                        onChange={() =>\n                                                                            handleCheckboxChange(\n                                                                                department.lab_department_id,\n                                                                            )\n                                                                        }\n                                                                    />\n                                                                }\n                                                                label={\n                                                                    department.lab_department_name\n                                                                }\n                                                            />\n                                                        ))}\n                                                        \n                                                    </Box>\n                                                </div>\n                                            </Box>\n\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={PostUserData}\n                                                    label=\"Submit\"\n                                                    buttonCss={{\n                                                        width: \"30%\",\n                                                    }}\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : (\n                                <h1>Completed</h1>\n                            )}\n                            ;\n                        </Typography>\n                    </React.Fragment>\n                )}\n            </Box>\n        </>\n    );\n};\n\nexport default HcfAdminSignUp;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, TextareaAutosize, Typography } from \"@mui/material\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport \"./termsandcondition.scss\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\nimport { useListingMode } from \"../../shared/useListingMode\";\nimport SectionCard from \"../../shared/SectionCard\";\nimport StepHeader from \"../../shared/StepHeader\";\n\nconst TermsAndCondition = () => {\n    const [data, setData] = useState({\n        doctor_id: localStorage.getItem(\"doctor_suid\"),\n        doctor_list_id: localStorage.getItem(\"listing_id\"),\n        description: null,\n    });\n    const [submitApiFlag , setSubmitApiFlag] = useState(false);\n    const [type , setType] = useState(\"success\");\n    const [isopen , setIsopen] = useState(false);\n    const [message , setMessage] = useState(\"\")\n    const [showError, setShowError] = useState(false);\n    useEffect( () => {\n        if(submitApiFlag){\n            fetchData();\n        }\n    } , [submitApiFlag] )\n\n    const { mode, listingId, doctorId, setUnifiedListingId } = useListingMode();\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"listing\");\n        localStorage.setItem(\"path\", \"termandcondition\");\n        \n        // Ensure unified listing id in edit mode\n        setUnifiedListingId();\n        \n        // Step guard: require listing_id to proceed\n        if (!listingId) {\n            console.warn(\"No listing_id found. Redirecting to listing details.\");\n            navigate(\"/doctordashboard/doctorListing/listingdetails\", { replace: true });\n        }\n    }, []);\n    const navigate = useNavigate();\n\n\n    const fetchData = async () => {\n        console.log(\"Entered the fetch data\");\n        setIsopen(false);\n        try {\n            if (!data?.description || String(data?.description).trim() === '') {\n                setShowError(true);\n                setSubmitApiFlag(false);\n                return;\n            }\n            let response = await axiosInstance.post('/sec/createUpdatedoctorlisting/terms' , JSON.stringify({\n                ...data,\n                doctor_id: doctorId,\n                doctor_list_id: listingId,\n            }));\n            console.log(response?.data?.response?.message)\n            setMessage(response?.data?.response?.message)\n            setSubmitApiFlag(false)\n            setType(\"success\")\n            setIsopen(true);\n            \n            // Clean up editing state when completing the entire flow\n            localStorage.removeItem(\"editing_listing_id\");\n            console.log(\"Completed listing flow, cleaned up editing state\");\n            \n            setTimeout( () => {\n                navigate(\"/doctordashboard/doctorListing/doctoractiveListing\", { replace: true });\n            } , 2000 )\n\n        } catch (error) {\n            alert(\"Fill the details properly\", error);\n            console.log(error.response);\n            setSubmitApiFlag(false);\n            setType(\"error\");\n            setIsopen(true);\n            setMessage(error.response)\n        }\n    };\n\n\n    return (\n        <>\n            <CustomSnackBar isOpen={isopen} message={message} type={type}  />\n            <div className=\"main-container\" style={{ width: '100%', maxWidth: 960, margin: '0 auto' }}>\n                <StepHeader />\n                <SectionCard title=\"Terms & Conditions\" subtitle=\"These will be shown to patients before booking\">\n                    <Box sx={{ width: '100%' }}>\n                        <TextareaAutosize\n                            minRows={8}\n                            maxRows={8}\n                            style={{ width: \"100%\", padding: \"1%\", borderRadius: \"12px\"  , overflow : \"auto\" , maxHeight : \"70%\", border: showError && (!data?.description || String(data?.description).trim() === '') ? '2px solid #d32f2f' : '1px solid #E0E0E0' }}\n                            onInput={event => setData({...data , description : event?.target?.value})}\n                        />\n                        {showError && (!data?.description || String(data?.description).trim() === '') && (\n                            <Typography sx={{ color: '#d32f2f', fontSize: 12, mt: 0.5 }}>Description is required</Typography>\n                        )}\n                    </Box>\n                </SectionCard>\n                <Box sx={{ marginTop: \"1%\" }}>\n                    <CustomButton\n                        buttonCss={{ width: \"10.625rem\", borderRadius: \"6.25rem\", margin: \"0.5%\" }}\n                        label=\"Save As Draft\"\n                        isTransaprent={true}\n                    />\n                    <CustomButton\n                        buttonCss={{ width: \"10.625rem\", borderRadius: \"6.25rem\", margin: \"0.5%\" }}\n                        label=\"Submit\"\n                        isDisabled={!data?.description || String(data?.description).trim() === ''}\n                        handleClick={() => setSubmitApiFlag(true)}\n                    />\n                </Box>\n            </div>\n        </>\n    );\n};\n\nexport default TermsAndCondition;\n","import { \n    Box, \n    Typography, \n    Button, \n    Divider, \n    Card, \n    CardContent, \n    Grid, \n    Stack, \n    Chip, \n    Paper, \n    IconButton, \n    Tooltip, \n    Avatar \n} from \"@mui/material\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./doctorprofileinfo.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport axios from \"axios\";\nimport CustomList from \"../../../components/CustomList\";\nimport CustomDropdown from \"../../../components/CustomDropdown/custom-dropdown\";\nimport CustomTextField from \"../../../components/CustomTextField/custom-text-field\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport CustomDatePicker from \"../../../components/CustomDatePicker\";\nimport DocProf from \"../../../static/images/DrImages/Image02.png\";\nimport { baseURL } from \"../../../constants/const\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport dayjs from \"dayjs\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\nimport { Description } from \"@mui/icons-material\";\nimport { processProfileImage } from \"../../../utils/imageUtils\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\n\nconst DoctorPersonalInfo = () => {\n    const [selectedCountryFromDropDown, setSelectedCountryFromDropDown] = useState([]);\n    const [countryValues, setCountryValue] = useState([]);\n    const [countryNames, setCountryNames] = useState([\"Please Wait\"]);\n    const [stateNames, setStateNames] = useState([\"Please Wait\"]);\n    const [stateName, setStateName] = useState(\"\");\n    const [stateValue, setStateValue] = useState([]);\n    const [selectCityFromDropDown, setSelectCityFromDropDown] = useState([]);\n    const [cityNames, setCityNames] = useState([]);\n    const [citySelected, setCitySelected] = useState(\"\");\n    const [cityValues, setCityValues] = useState([]);\n    const [snackBar, setSnackBar] = useState({ open: false, message: \"\", severity: \"success\" });\n    const [isEditing, setIsEditing] = useState(false);\n    const [profileImage, setProfileImage] = useState(DocProf);\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const dropdownItems = [\"Male\", \"Female\", \"Others\"];\n    const [data, setData] = useState({\n        suid: localStorage.getItem(\"doctor_suid\"),\n        email: localStorage.getItem(\"email\"),\n        first_name: \"\",\n        last_name: \"\",\n        middle_name: \"\",\n        gender: \"\",\n        DOB: \"\",\n        street_address1: \"\",\n        street_address2: \"\",\n        zip_code: \"\",\n        country_id: \"\",\n        city_id: \"\",\n        state_id: \"\",\n        profile_picture: \"\",\n        hospital_org: \"\",\n        council_name: \"\",\n        description: \"\",\n    });\n\n    const doctor_id = localStorage.getItem(\"doctor_suid\");\n\n    const toggleEditMode = () => {\n        setIsEditing(!isEditing);\n    };\n\n    const handleDropdownChange = (item, dropdownName) => {\n        console.log(\"Selected item:\", item);\n\n        switch (dropdownName) {\n            case \"dropdown1\": // Gender dropdown\n                setActiveDropdown(item);\n                break;\n\n            default:\n                break;\n        }\n\n        // Update the data object\n        const updatedData = {\n            ...data,\n            gender: dropdownName === \"dropdown1\" ? item : data.gender,\n            country_id: dropdownName === \"dropdown2\" ? item : data.country_id,\n        };\n        setData(updatedData);\n    };\n\n    const fetchDataProfile = async () => {\n        try {\n            const response = await axiosInstance.get(\n                `sec/Doctor/doctorProfileDetailsbyId?doctor_id=${doctor_id}`,\n            );\n            console.log(\"Doctor Profile Details : \", response?.data);\n            const profileData = response?.data?.response[0];\n\n            console.log(\"Profile Data: \", profileData.first_name);\n            setData((prevData) => ({\n                ...prevData,\n                first_name: profileData.first_name || \"\",\n                last_name: profileData.last_name || \"\",\n                middle_name: profileData.middle_name || \"\",\n                gender: profileData.gender || \"\",\n                DOB: profileData.DOB || \"\",\n                street_address1: profileData.street_address1 || \"\",\n                street_address2: profileData.street_address2 || \"\",\n                zip_code: profileData.zip_code || \"\",\n                country_id: profileData.country_id || \"\",\n                city_id: profileData.city_id || \"\",\n                state_id: profileData.state_id || \"\",\n                profile_picture: profileData.profile_picture || \"\",\n                hospital_org: profileData.hospital_org || \"\",\n                council_name: profileData.council_name || \"\",\n                description: profileData.description || \"\",\n            }));\n\n            // Process profile image\n            if (profileData?.profile_picture) {\n                const processedImage = await processProfileImage(profileData.profile_picture, DocProf);\n                if (processedImage && processedImage !== DocProf) {\n                    setProfileImage(processedImage);\n                    // Dispatch event for navbar update\n                    window.dispatchEvent(new CustomEvent('profileUpdated', {\n                        detail: { profile: processedImage }\n                    }));\n                }\n            }\n        } catch (error) {\n            console.error(\"Error fetching profile data:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchDataProfile();\n        FetchCountryNames();\n    }, []);\n\n    // Update profile image when data.profile_picture changes\n    useEffect(() => {\n        if (data?.profile_picture) {\n            if (data.profile_picture.startsWith('data:image/')) {\n                setProfileImage(data.profile_picture);\n            } else if (data.profile_picture.startsWith('http')) {\n                setProfileImage(data.profile_picture);\n            } else if (!data.profile_picture.startsWith('dev-uploads/')) {\n                setProfileImage(`data:image/jpeg;base64,${data.profile_picture}`);\n            }\n        }\n    }, [data?.profile_picture]);\n\n    console.log(data);\n    const fetchData = async () => {\n        console.log(\"Entered the fetch data\");\n        console.log(\"Data being sent:\", data);\n        try {\n            const response = await axiosInstance.post(\n                `/sec/Doctor/updatedoctorprofile`,\n                JSON.stringify(data),\n            );\n            setSnackBar({\n                open: true,\n                message: \"Profile updated successfully!\",\n                severity: \"success\",\n            });\n            \n            // Refresh profile data after successful update\n            await fetchDataProfile();\n            \n            // Dispatch event for navbar update if profile picture was updated\n            if (data.profile_picture) {\n                const updatedProfilePic = await processProfileImage(data.profile_picture, DocProf);\n                if (updatedProfilePic && updatedProfilePic !== DocProf) {\n                    localStorage.setItem(\"profile\", updatedProfilePic);\n                    window.dispatchEvent(new CustomEvent('profileUpdated', {\n                        detail: { profile: updatedProfilePic }\n                    }));\n                }\n            }\n        } catch (error) {\n            console.error(error.response);\n            setSnackBar({\n                open: true,\n                message: \"Failed to update profile. Please try again.\",\n                severity: \"error\",\n            });\n        }\n    };\n\n    const FetchCountryNames = async () => {\n        let CountryValues = [];\n        let CountryName = [];\n        try {\n            const response = await axiosInstance(\"/sec/countries\");\n            for (let key in response?.data?.response) {\n                CountryValues.push(response?.data?.response[key]);\n                CountryName.push(response?.data?.response[key].country_name);\n            }\n            setCountryNames(CountryName);\n            setCountryValue(CountryValues);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const FetchStateNames = async (country_id) => {\n        let StateValues = [];\n        let StateName = [];\n        try {\n            const response = await axiosInstance(`/sec/states?country_id=${country_id}`);\n            for (let key in response?.data?.response) {\n                StateValues.push(response?.data?.response[key]);\n                StateName.push(response?.data?.response[key].state_name);\n            }\n            setStateValue(StateValues);\n            setStateNames(StateName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        FetchStateNames(selectedCountryFromDropDown[0]?.country_id);\n    }, [selectedCountryFromDropDown]);\n\n    const FetchCityNames = async (state_id) => {\n        let CityValues = [];\n        let cityName = [];\n        try {\n            const response = await axiosInstance(`/sec/cities?state_id=${state_id}`);\n            for (let key in response?.data?.response) {\n                CityValues.push(response?.data?.response[key]);\n                cityName.push(response?.data?.response[key].city_name);\n            }\n            setCityValues(CityValues);\n            setCityNames(cityName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        FetchCityNames(selectCityFromDropDown[0]?.state_id);\n    }, [selectCityFromDropDown]);\n\n    const handleImageChange = async (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            // Validate file type\n            if (!file.type.startsWith('image/')) {\n                setSnackBar({ open: true, message: \"Please select a valid image file\", severity: \"error\" });\n                return;\n            }\n\n            // Validate file size (5MB limit)\n            if (file.size > 5 * 1024 * 1024) {\n                setSnackBar({ open: true, message: \"Image size should be less than 5MB\", severity: \"error\" });\n                return;\n            }\n\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const dataUrl = e.target.result;\n                const base64Data = dataUrl.split(',')[1]; // Remove data:image/jpeg;base64, prefix\n                \n                setProfileImage(dataUrl); // Immediate preview\n                setData(prevData => ({\n                    ...prevData,\n                    profile_picture: base64Data, // Store for API call\n                }));\n                \n                // Dispatch event for navbar update\n                window.dispatchEvent(new CustomEvent('profileUpdated', {\n                    detail: { profile: dataUrl }\n                }));\n            };\n            reader.onerror = () => {\n                setSnackBar({ open: true, message: \"Error reading image file\", severity: \"error\" });\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const getImageSrc = () => {\n        console.log(\"getImageSrc - data.profile_picture:\", data?.profile_picture);\n        console.log(\"getImageSrc - profileImage:\", profileImage);\n\n        // If we have profile_picture in data, use it\n        if (data?.profile_picture) {\n            if (data.profile_picture.startsWith('data:image/')) {\n                console.log(\"Using data URL from profile_picture\");\n                return data.profile_picture;\n            } else if (data.profile_picture.startsWith('http')) {\n                console.log(\"Using S3 URL from profile_picture\");\n                return data.profile_picture;\n            } else if (data.profile_picture.startsWith('dev-uploads/')) {\n                // It's a development mock path, use profileImage state\n                console.log(\"Using profileImage for dev-uploads path\");\n                return profileImage;\n            } else {\n                // It's a base64 string without data URL prefix\n                console.log(\"Adding data URL prefix to base64 string\");\n                return `data:image/jpeg;base64,${data.profile_picture}`;\n            }\n        }\n\n        // Fallback to profileImage state\n        console.log(\"Using fallback profileImage\");\n        return profileImage;\n    };\n\n    return (\n        <Box sx={{ width: \"100%\", padding: \"24px\", backgroundColor: \"#fafafa\", minHeight: \"100vh\" }}>\n                <CustomSnackBar\n                    isOpen={snackBar.open}\n                    message={snackBar.message}\n                    type={snackBar.severity}\n                />\n            \n            {/* Header Section */}\n            <Paper \n                elevation={0} \n                sx={{ \n                    padding: \"24px\", \n                    marginBottom: \"24px\",\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                    <Typography variant=\"h4\" sx={{ \n                        fontWeight: 600, \n                        color: \"#313033\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 1\n                    }}>\n                        <PersonIcon sx={{ color: \"#E72B4A\" }} />\n                        Doctor Profile Information\n                    </Typography>\n                    \n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                        <Chip \n                            label={`Doctor ID: ${localStorage.getItem(\"doctor_suid\") || \"DOC001\"}`}\n                            sx={{ \n                                backgroundColor: \"#E72B4A\",\n                                color: \"white\",\n                                fontWeight: 500\n                            }}\n                        />\n                        <Tooltip title=\"Close\">\n                            <IconButton \n                                onClick={() => window.history.back()}\n                                sx={{ \n                                    backgroundColor: \"#f5f5f5\",\n                                    \"&:hover\": { backgroundColor: \"#e0e0e0\" }\n                                }}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                </Box>\n\n                {/* Navigation Tabs */}\n                <Box sx={{ display: \"flex\", gap: 1 }}>\n                    <NavLink \n                        to=\"/doctordashboard/doctorpersonalinfo\"\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                            Profile Information\n                        </NavLink>\n                    <NavLink \n                        to=\"/doctordashboard/doctorprofessionalinfo\"\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                            Professional Details\n                        </NavLink>\n                    </Box>\n            </Paper>\n\n            {/* Edit Button */}\n            <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", marginBottom: \"24px\" }}>\n                    <CustomButton\n                        label={isEditing ? \"Cancel Edit\" : \"Edit Profile\"}\n                    isTransaprent={!isEditing}\n                    leftIcon={<EditIcon />}\n                        buttonCss={{\n                        borderRadius: \"8px\",\n                        padding: \"12px 24px\",\n                        fontWeight: 500,\n                        border: isEditing ? \"1px solid #d32f2f\" : \"1px solid #E72B4A\",\n                        color: isEditing ? \"#d32f2f\" : \"#E72B4A\"\n                        }}\n                        handleClick={toggleEditMode}\n                    />\n            </Box>\n\n            {/* Main Content Card */}\n            <Card \n                elevation={0} \n                sx={{ \n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    overflow: \"hidden\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Grid container spacing={4}>\n                        {/* Profile Picture Section */}\n                        <Grid item xs={12} md={3}>\n                            <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", gap: 2 }}>\n                                <Avatar\n                                    src={getImageSrc()}\n                                    alt=\"Doctor Profile\"\n                            sx={{\n                                        width: 180,\n                                        height: 180,\n                                        border: \"4px solid #E72B4A\",\n                                        boxShadow: \"0 4px 20px rgba(231, 43, 74, 0.2)\"\n                                    }}\n                                />\n                                \n                                {isEditing && (\n                                    <Box sx={{ position: \"relative\" }}>\n                                        <IconButton\n                                            component=\"label\"\n                                            sx={{\n                                                position: \"absolute\",\n                                                bottom: 8,\n                                                right: 8,\n                                                backgroundColor: \"#E72B4A\",\n                                                color: \"white\",\n                                                \"&:hover\": {\n                                                    backgroundColor: \"#d32f2f\"\n                                                }\n                                            }}\n                                        >\n                                            <CameraAltIcon />\n                                            <input\n                                                type=\"file\"\n                                                accept=\"image/*\"\n                                                hidden\n                                                onChange={handleImageChange}\n                                            />\n                                        </IconButton>\n                                    </Box>\n                                )}\n                                \n                                <Typography variant=\"h6\" sx={{ fontWeight: 600, color: \"#313033\" }}>\n                                    {data?.first_name} {data?.last_name}\n                                </Typography>\n                                <Typography variant=\"body2\" sx={{ color: \"#666\" }}>\n                                    {data?.email}\n                                </Typography>\n                                \n                                {isEditing && (\n                        <Button\n                                        variant=\"outlined\"\n                            component=\"label\"\n                                        startIcon={<CameraAltIcon />}\n                            sx={{\n                                            borderColor: \"#E72B4A\",\n                                            color: \"#E72B4A\",\n                                            \"&:hover\": {\n                                                borderColor: \"#d32f2f\",\n                                                backgroundColor: \"rgba(231, 43, 74, 0.04)\"\n                                            }\n                                        }}\n                                    >\n                                        Change Photo\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                hidden\n                                onChange={handleImageChange}\n                            />\n                        </Button>\n                                )}\n                            </Box>\n                        </Grid>\n\n                        {/* Form Section */}\n                        <Grid item xs={12} md={9}>\n                            <Typography variant=\"h6\" sx={{ \n                                fontWeight: 600, \n                                color: \"#313033\",\n                                marginBottom: \"24px\"\n                            }}>\n                                Personal Information\n                            </Typography>\n\n                            <Stack spacing={3}>\n                                {/* First Row - First Name, Middle Name, Last Name */}\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={4}>\n                            <CustomTextField\n                                defaultValue={data?.first_name}\n                                CustomValue={data?.first_name}\n                                label=\"First Name\"\n                                            helperText=\"\"\n                                isDisabled={!isEditing}\n                                            textcss={{ width: \"100%\" }}\n                                            sx={{\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                }}\n                                onInput={(event) => {\n                                    console.log(\"📝 First Name changed:\", event.target.value);\n                                    const Copy = {\n                                        ...data,\n                                        first_name: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={4}>\n                            <CustomTextField\n                                defaultValue={data?.middle_name}\n                                CustomValue={data?.middle_name}\n                                label=\"Middle Name\"\n                                            helperText=\"\"\n                                isDisabled={!isEditing}\n                                            textcss={{ width: \"100%\" }}\n                                            sx={{\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        middle_name: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={4}>\n                            <CustomTextField\n                                defaultValue={data?.last_name}\n                                CustomValue={data?.last_name}\n                                label=\"Last Name\"\n                                            helperText=\"\"\n                                isDisabled={!isEditing}\n                                            textcss={{ width: \"100%\" }}\n                                            sx={{\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        last_name: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                {/* Second Row - Date of Birth, Gender */}\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                     \n\n<LocalizationProvider dateAdapter={AdapterDayjs}>\n                                            <DatePicker\n                                                value={data?.DOB ? dayjs(data.DOB) : null}\n                                                disabled={!isEditing}\n                                                label=\"Date of Birth\"\n                                                sx={{ \n                                                    width: \"100%\",\n                                                    \"& .MuiOutlinedInput-root\": {\n                                                        \"& fieldset\": { border: \"none\" },\n                                                        \"&:hover fieldset\": { border: \"none\" },\n                                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                        borderBottom: \"1px solid #e0e0e0\",\n                                                        borderRadius: 0,\n                                                        \"&:hover\": {\n                                                            borderBottom: \"2px solid #E72B4A\",\n                                                        },\n                                                        \"&.Mui-focused\": {\n                                                            borderBottom: \"2px solid #E72B4A\",\n                                                        },\n                                                    },\n                                                    \"& .MuiInputLabel-root\": {\n                                                        \"&.Mui-focused\": {\n                                                            color: \"#E72B4A\",\n                                                        },\n                                                    },\n                                                }}\n                                                onChange={(item) => {\n                                                    const formattedDate = item\n                                                        ? item.format(\"YYYY-MM-DD\")\n                                                        : null;\n                                                        setData({\n                                                        ...data,\n                                                        DOB: formattedDate,\n                                                    });\n                                                }}\n                                            />\n                                        </LocalizationProvider>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <CustomDropdown\n                                            label=\"Gender\"\n                                            dropdowncss={{ \n                                                width: \"100%\",\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    height: \"56px\",\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiSelect-select\": {\n                                                    padding: \"16px 14px\",\n                                                    display: \"flex\",\n                                                    alignItems: \"center\",\n                                                },\n                                                \"& .MuiSelect-icon\": {\n                                                    color: \"#666\",\n                                                },\n                                            }}\n                                            items={dropdownItems}\n                                            isDisabled={!isEditing}\n                                            activeItem={data?.gender || \"Select Gender\"}\n                                            handleChange={(selectedValue) => handleDropdownChange(selectedValue, \"dropdown1\")}\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                {/* Bio Section */}\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12}>\n                            <CustomTextField\n                                multiline={true}\n                                defaultValue={data?.description}\n                                CustomValue={data?.description}\n                                label=\"Bio\"\n                                isDisabled={!isEditing}\n                                            helperText=\"\"\n                                            textcss={{ width: \"100%\" }}\n                                            sx={{\n                                                \"& .MuiOutlinedInput-root\": {\n                                                    \"& fieldset\": { border: \"none\" },\n                                                    \"&:hover fieldset\": { border: \"none\" },\n                                                    \"&.Mui-focused fieldset\": { border: \"none\" },\n                                                    borderBottom: \"1px solid #e0e0e0\",\n                                                    borderRadius: 0,\n                                                    \"&:hover\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                    \"&.Mui-focused\": {\n                                                        borderBottom: \"2px solid #E72B4A\",\n                                                    },\n                                                },\n                                                \"& .MuiInputLabel-root\": {\n                                                    \"&.Mui-focused\": {\n                                                        color: \"#E72B4A\",\n                                                    },\n                                                },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        description: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Stack>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n\n            {/* Contact Details Section */}\n            <Card \n                elevation={0} \n                        sx={{\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    marginBottom: \"24px\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Typography variant=\"h6\" sx={{ \n                        fontWeight: 600, \n                                color: \"#313033\",\n                        marginBottom: \"24px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 1\n                    }}>\n                        <LocationOnIcon sx={{ color: \"#E72B4A\" }} />\n                            Contact Details\n                        </Typography>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            defaultValue={data?.street_address1}\n                            CustomValue={data?.street_address1}\n                                label=\"Street Line 1\"\n                            isDisabled={!isEditing}\n                                helperText=\"\"\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                            }}\n                            onInput={(event) => {\n                                const Copy = {\n                                    ...data,\n                                    street_address1: event.target.value,\n                                };\n                                setData(Copy);\n                            }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            defaultValue={data?.street_address2}\n                            CustomValue={data?.street_address2}\n                                label=\"Street Line 2\"\n                            isDisabled={!isEditing}\n                                helperText=\"\"\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                            }}\n                            onInput={(event) => {\n                                const Copy = {\n                                    ...data,\n                                    street_address2: event.target.value,\n                                };\n                                setData(Copy);\n                            }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                        <CustomDropdown\n                                label=\"Country\"\n                            isDisabled={!isEditing}\n                            dropdowncss={{\n                                    width: \"100%\",\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        height: \"56px\",\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiSelect-select\": {\n                                        padding: \"16px 14px\",\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                    },\n                                    \"& .MuiSelect-icon\": {\n                                        color: \"#666\",\n                                    },\n                            }}\n                            items={countryNames}\n                            minwidthDropDown=\"300px\"\n                            activeItem={activeDropdown}\n                            handleChange={(listItems) => {\n                                setActiveDropdown(listItems);\n                                let response = countryValues.filter((country) =>\n                                    country?.country_name?.includes(listItems),\n                                );\n                                setData({\n                                    ...data,\n                                    country_id: response[0]?.country_id,\n                                });\n                                setSelectedCountryFromDropDown(response);\n                            }}\n                        />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                        <CustomDropdown\n                                label=\"State\"\n                            isDisabled={!isEditing}\n                                dropdowncss={{\n                                    width: \"100%\",\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        height: \"56px\",\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiSelect-select\": {\n                                        padding: \"16px 14px\",\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                    },\n                                    \"& .MuiSelect-icon\": {\n                                        color: \"#666\",\n                                    },\n                                }}\n                            items={stateNames}\n                            minwidthDropDown=\"300px\"\n                            activeItem={stateName}\n                            handleChange={(listItems) => {\n                                let response = stateValue.filter((state) =>\n                                    state?.state_name?.includes(listItems),\n                                );\n                                setData({\n                                    ...data,\n                                    state_id: response[0]?.state_id,\n                                });\n                                setSelectCityFromDropDown(response);\n                                setStateName(listItems);\n                            }}\n                        />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                        <CustomDropdown\n                                label=\"City\"\n                            isDisabled={!isEditing}\n                                dropdowncss={{\n                                    width: \"100%\",\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        height: \"56px\",\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiSelect-select\": {\n                                        padding: \"16px 14px\",\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                    },\n                                    \"& .MuiSelect-icon\": {\n                                        color: \"#666\",\n                                    },\n                                }}\n                            items={cityNames}\n                            minwidthDropDown=\"300px\"\n                            activeItem={citySelected}\n                            handleChange={(listItems) => {\n                                setCitySelected(listItems);\n                                let response = cityValues.filter((city) =>\n                                    city?.city_name?.includes(listItems),\n                                );\n                                setData({\n                                    ...data,\n                                    city_id: response[0]?.city_id,\n                                });\n                            }}\n                        />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <CustomTextField\n                                defaultValue={data?.zip_code}\n                                CustomValue={data?.zip_code}\n                                label=\"Zip Code\"\n                                isDisabled={!isEditing}\n                                helperText=\"\"\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        zip_code: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n\n            {/* Clinic Details Section */}\n            <Card \n                elevation={0} \n                sx={{ \n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    marginBottom: \"24px\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Typography variant=\"h6\" sx={{ \n                        fontWeight: 600, \n                        color: \"#313033\",\n                        marginBottom: \"24px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 1\n                    }}>\n                        <WorkIcon sx={{ color: \"#E72B4A\" }} />\n                        Clinic Details\n                    </Typography>\n\n                    {/* <Box sx={{ marginBottom: \"24px\" }}>\n                        <Checkbox\n                            checked={false}\n                            sx={{\n                                color: \"#E72B4A\",\n                                \"&.Mui-checked\": {\n                                    color: \"#E72B4A\",\n                                },\n                            }}\n                        />\n                        <Typography variant=\"body2\" sx={{ display: \"inline\", marginLeft: 1 }}>\n                            Same as Contact details\n                        </Typography> \n                    </Box> */}\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            defaultValue={data?.hospital_org}\n                            CustomValue={data?.hospital_org}\n                            label=\"Clinic Name\"\n                            isDisabled={!isEditing}\n                            helperText=\"\"\n                            textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                            onInput={(event) => {\n                                const Copy = { ...data, hospital_org: event.target.value };\n                                setData(Copy);\n                            }}\n                        />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                        <CustomTextField\n                            defaultValue={data?.council_name}\n                            CustomValue={data?.council_name}\n                            label=\"State Medical Council Name\"\n                            isDisabled={!isEditing}\n                                helperText=\"\"\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                            }}\n                            onInput={(event) => {\n                                const Copy = {\n                                    ...data,\n                                    council_name: event.target.value,\n                                };\n                                setData(Copy);\n                            }}\n                            />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n\n            {/* Action Buttons */}\n                    {isEditing && (\n                <Box sx={{ \n                    display: \"flex\", \n                    justifyContent: \"flex-end\", \n                    gap: 2,\n                    marginTop: \"24px\"\n                }}>\n                    <CustomButton\n                        label=\"Discard Changes\"\n                        isTransaprent={true}\n                        buttonCss={{\n                            width: \"160px\",\n                            height: \"48px\",\n                            borderRadius: \"8px\",\n                            fontWeight: 600,\n                            border: \"1px solid #E72B4A\",\n                            color: \"#E72B4A\"\n                        }}\n                        handleClick={() => setIsEditing(false)}\n                    />\n                        <CustomButton\n                            label=\"Save Changes\"\n                        isTransaprent={false}\n                        isDisabled={false}\n                        isElevated={false}\n                            buttonCss={{\n                                width: \"160px\",\n                            height: \"48px\",\n                            borderRadius: \"8px\",\n                            fontWeight: 600\n                            }}\n                            handleClick={() => {\n                                fetchData();\n                                setIsEditing(false);\n                            }}\n                        />\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default DoctorPersonalInfo;","import {\n    Box,\n    Typography,\n    Skeleton,\n    Card,\n    CardContent,\n    Grid,\n    Stack,\n    Chip,\n    Paper,\n    IconButton,\n    Tooltip,\n    Divider,\n    Avatar,\n    Button\n} from \"@mui/material\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./doctorprofessionalinfo.scss\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport SchoolIcon from \"@mui/icons-material/School\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport LocalHospitalIcon from \"@mui/icons-material/LocalHospital\";\nimport EmojiEventsIcon from \"@mui/icons-material/EmojiEvents\";\nimport CardMembershipIcon from \"@mui/icons-material/CardMembership\";\nimport CustomDropdown from \"../../../components/CustomDropdown/custom-dropdown\";\nimport CustomTextField from \"../../../components/CustomTextField/custom-text-field\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport CustomModal from \"../../../components/CustomModal\";\nimport CustomDatePicker from \"../../../components/CustomDatePicker\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport dayjs from \"dayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport WorkExperience from \"./WorkExperience\";\nimport Awards from \"./Awards\";\nimport License from \"./License\";\n\nconst ProfessionalDetails = () => {\n    const [loading, setLoading] = useState(false);\n    const [isEditing, setIsEditing] = useState(false);\n    const [isEditing1, setIsEditing1] = useState(false);\n    const [data, setData] = useState({\n        suid: localStorage.getItem(\"doctor_suid\"),\n        email: localStorage.getItem(\"email\"),\n        qualification: null,\n        qualified_year: null,\n        university_name: null,\n        degree: null,\n        speciality_id: null,\n    });\n    const [professional, setProfessional] = useState({\n        suid: localStorage.getItem(\"doctor_suid\"),\n        email: localStorage.getItem(\"email\"),\n        state_reg_number: null, //unique\n        country_reg_number: null, //unique\n        state_reg_date: \"null\",\n        country_reg_date: \"null\",\n    });\n    const [selectedDepartment, setSelectedDepartment] = useState(\"\"); // State for Department dropdown\n    const [labDepartments, setLabDepartments] = useState([]);\n    const [experience, setExperience] = useState([]);\n    const [award, setAward] = useState([]);\n    const [licenses, setLicenses] = useState([]);\n    const doctor_id = localStorage.getItem(\"doctor_suid\");\n    const [profileData, setProfileData] = useState([]);\n\n    // Work Experience Modal States\n    const [openDialog, setOpenDialog] = useState(false);\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [experienceData, setExperienceData] = useState({\n        jobTitle: \"\",\n        organization: \"\",\n        startDate: null,\n        endDate: null,\n        exp_id: \"\",\n    });\n\n    // License Modal States\n    const [openDialog1, setOpenDialog1] = useState(false);\n    const [isEditMode1, setIsEditMode1] = useState(false);\n    const [licenseData, setLicenseData] = useState({\n        lic_title: \"\",\n        lic_certificate_no: \"\",\n        lic_issuedby: \"\",\n        lic_date: null,\n        lic_description: \"\",\n        license_id: \"\",\n    });\n\n    // Awards Modal States\n    const [openDialog2, setopenDialog22] = useState(false);\n    const [isEditMode2, setisEditMode2] = useState(false);\n    const [awardData, setAwardData] = useState({\n        award_title: \"\",\n        award_issuedby: \"\",\n        award_date: null,\n        award_description: \"\",\n        award_id: \"\",\n    });\n\n    const fetchProfileInfo = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.get(\n                `sec/Doctor/doctorProfileDetailsbyId?doctor_id=${doctor_id}`,\n            );\n            const profileDataRaw = response?.data?.response[0];\n            console.log(\"Profile Data Raw:\", profileDataRaw);\n            if (profileDataRaw) {\n                const profileData = response.data.response[0];\n\n                // Log the entire response to verify the data\n                console.log(\"Full Profile Response:\", profileData);\n\n                setData((prevData) => ({\n                    ...prevData,\n                    qualification: profileData.qualification || \"\",\n                    qualified_year: profileData.qualified_year || \"\",\n                    university_name: profileData.university_name || \"\",\n                    degree: profileData.degree || \"\",\n                    DOB: profileData.DOB || \"\",\n                    speciality_id: profileData.speciality_id || \"\",\n                    state_reg_number: profileData.state_reg_number || \"\", //unique\n                    country_reg_number: profileData.country_reg_number || \"\", //unique\n                    state_reg_date: profileData.state_reg_date || \"\",\n                    country_reg_date: profileData.country_reg_date || \"\",\n                }));\n            }\n        } catch (error) {\n            console.error(\"Error fetching lab data:\", error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch Education Details\n    const fetchEducationDetails = async () => {\n        try {\n            const response = await axiosInstance.get(\n                `/sec/Doctor/getDoctorEducation/${doctor_id}`,\n            );\n            console.log(\"Education Details Response:\", response?.data);\n            const educationData = response?.data?.response?.[0];\n            \n            if (educationData) {\n                setData((prevData) => ({\n                    ...prevData,\n                    qualification: educationData.qualification || \"\",\n                    qualified_year: educationData.qualified_year || \"\",\n                    university_name: educationData.university_name || \"\",\n                    degree: educationData.degree || \"\",\n                    speciality_id: educationData.speciality_id || \"\",\n                }));\n            }\n        } catch (error) {\n            console.error(\"Error fetching education details:\", error.response);\n        }\n    };\n\n    // Fetch Professional Registration Details\n    const fetchProfessionalDetails = async () => {\n        try {\n            const response = await axiosInstance.get(\n                `/sec/Doctor/getDoctorProfession/${doctor_id}`,\n            );\n            console.log(\"Professional Details Response:\", response?.data);\n            const professionalData = response?.data?.response?.[0];\n            \n            if (professionalData) {\n                setProfessional((prevData) => ({\n                    ...prevData,\n                    state_reg_number: professionalData.state_reg_number || \"\",\n                    country_reg_number: professionalData.country_reg_number || \"\",\n                    state_reg_date: professionalData.state_reg_date || \"\",\n                    country_reg_date: professionalData.country_reg_date || \"\",\n                }));\n            }\n        } catch (error) {\n            console.error(\"Error fetching professional details:\", error.response);\n        }\n    };\n    useEffect(() => {\n        fetchProfileInfo();\n        fetchEducationDetails();\n        fetchProfessionalDetails();\n    }, []);\n\n\n    const fetchData = async () => {\n        try {\n            const response = await axiosInstance.post(\n                `/sec/Doctor/updateDoctorEducation?doctor_id=${doctor_id}`,\n                JSON.stringify(data),\n            );\n            console.log(\"Education Update Response:\", response);\n            // Refresh education data after update\n            fetchEducationDetails();\n        } catch (error) {\n            alert(\"Fill the details properly\", error);\n            console.log(error.response);\n        }\n    };\n\n    const fetchProfessional = async () => {\n        try {\n            const response = await axiosInstance.post(\n                `/sec/Doctor/updateDoctorProfession?doctor_id=${doctor_id}`,\n                JSON.stringify(professional),\n            );\n            console.log(\"Professional Update Response:\", response);\n            // Refresh professional data after update\n            fetchProfessionalDetails();\n        } catch (error) {\n            alert(\"Fill the details properly\", error);\n            console.log(error.response);\n        }\n    };\n\n    const fetchDepartments = async () => {\n        try {\n            const response = await axiosInstance.get(\"/sec/departments\");\n            const departments = response?.data?.response || [];\n            setLabDepartments(departments);\n        } catch (error) {\n            console.error(\"Error fetching departments:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchDepartments();\n    }, []);\n\n    // Department dropdown handler\n    const departmentItems = labDepartments.map((department) => ({\n        id: department.department_id,\n        name: department.department_name,\n    }));\n\n    const handleDropdownChange = (selectedDepartment) => {\n        const departmentId = departmentItems.find((item) => item.name === selectedDepartment)?.id;\n        setSelectedDepartment(selectedDepartment);\n\n        setData((prevState) => ({\n            ...prevState,\n            speciality_id: String(departmentId),\n        }));\n    };\n\n    const fetchExperience = async () => {\n        try {\n            const response = await axiosInstance.get(\n                `/sec/Doctor/getDoctorExperience?doctor_id=${doctor_id}`,\n            );\n            setExperience(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching experience:\", error);\n        }\n    };\n\n    const fetchAwards = async () => {\n        try {\n            const response = await axiosInstance.get(\n                `/sec/Doctor/getDoctorAwards?doctor_id=${doctor_id}`,\n            );\n            setAward(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching awards:\", error);\n        }\n    };\n\n    const fetchLicenses = async () => {\n        try {\n            const response = await axiosInstance.get(\n                `/sec/Doctor/getDoctorLicense?doctor_id=${doctor_id}`,\n            );\n            setLicenses(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching licenses:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchExperience();\n        fetchAwards();\n        fetchLicenses();\n    }, []);\n\n    const handleDateChange = (field, value) => {\n        setProfessional((prev) => ({\n            ...prev,\n            [field]: value ? dayjs(value) : null, // Ensure value is a dayjs object or null\n        }));\n    };\n\n    // Work Experience Handlers\n    const handleAdd = () => {\n        setExperienceData({\n            jobTitle: \"\",\n            organization: \"\",\n            startDate: null,\n            endDate: null,\n            exp_id: \"\",\n        });\n        setIsEditMode(false);\n        setOpenDialog(true);\n    };\n\n    const handleEdit = (index) => {\n        setExperienceData({\n            jobTitle: experience[index]?.job,\n            organization: experience[index]?.organisation,\n            startDate: experience[index]?.from_date ? dayjs(experience[index].from_date) : null,\n            endDate: experience[index]?.to_date && experience[index].to_date !== \"present\" ? dayjs(experience[index].to_date) : null,\n            exp_id: experience[index]?.doctor_experience_id,\n        });\n        setIsEditMode(true);\n        setOpenDialog(true);\n    };\n\n    const handleSave = async (exp_id) => {\n        const payload = {\n            suid: localStorage.getItem(\"doctor_suid\"),\n            email: localStorage.getItem(\"email\"),\n            job: experienceData.jobTitle,\n            organisation: experienceData.organization,\n            from_date: dayjs(experienceData.startDate).format(\"YYYY-MM-DD\"),\n            to_date: experienceData.endDate\n                ? dayjs(experienceData.endDate).format(\"YYYY-MM-DD\")\n                : \"present\",\n        };\n\n        if (isEditMode) {\n            payload.doctor_experience_id = exp_id;\n        }\n\n        try {\n            const response = await axiosInstance.post(\n                `/sec/Doctor/updateDoctorExperience`,\n                JSON.stringify(payload),\n            );\n\n            if (response.status === 200 || response.status === 201) {\n                console.log(\"Success:\", response.data);\n                alert(isEditMode ? \"Work Experience Updated\" : \"Work Experience Added\");\n                setOpenDialog(false);\n                fetchExperience(); // Refresh the list\n            } else {\n                console.error(\"Error:\", response.data);\n                alert(\"Failed to save work experience.\");\n            }\n        } catch (error) {\n            console.error(\"Error:\", error.response || error);\n            alert(\"An error occurred while saving work experience.\");\n        }\n    };\n\n    const handleChange = (field, value) => {\n        setExperienceData((prev) => ({\n            ...prev,\n            [field]: value ? dayjs(value) : null,\n        }));\n    };\n\n    const getModalTitle = () => {\n        const action = isEditMode ? \"Edit\" : \"Add\";\n        return `${action} Work Experience`;\n    };\n\n    // License Handlers\n    const handleAddLic = () => {\n        setLicenseData({\n            lic_title: \"\",\n            lic_certificate_no: \"\",\n            lic_issuedby: \"\",\n            lic_date: null,\n            lic_description: \"\",\n            license_id: \"\",\n        });\n        setIsEditMode1(false);\n        setOpenDialog1(true);\n    };\n\n    const handleEditLic = (index) => {\n        setLicenseData({\n            lic_title: licenses[index]?.lic_title,\n            lic_certificate_no: licenses[index]?.lic_certificate_no,\n            lic_issuedby: licenses[index]?.lic_issuedby,\n            lic_date: dayjs(licenses[index]?.lic_date),\n            lic_description: licenses[index]?.lic_description,\n            license_id: licenses[index]?.doctor_license_id,\n        });\n        setTimeout(() => {\n            setIsEditMode1(true);\n            setOpenDialog1(true);\n        }, 0);\n    };\n\n    const handleSaveLic = async (lic_id) => {\n        const payload = {\n            suid: localStorage.getItem(\"doctor_suid\"),\n            email: localStorage.getItem(\"email\"),\n            lic_title: licenseData.lic_title,\n            lic_certificate_no: licenseData.lic_certificate_no,\n            lic_issuedby: licenseData.lic_issuedby,\n            lic_date: dayjs(licenseData.lic_date).format(\"YYYY-MM-DD\"),\n            lic_description: licenseData.lic_description,\n        };\n\n        if (isEditMode1) {\n            payload.doctor_license_id = lic_id;\n        }\n\n        try {\n            const response = await axiosInstance.post(\n                `/sec/Doctor/updateDoctorLicense`,\n                JSON.stringify(payload),\n            );\n\n            if (response.status === 200 || response.status === 201) {\n                console.log(\"Success:\", response.data);\n                alert(isEditMode1 ? \"License Details Updated\" : \"License Details Added\");\n                setOpenDialog1(false);\n                fetchLicenses(); // Refresh the list\n            } else {\n                console.error(\"Error:\", response.data);\n                alert(\"Failed to save License Details.\");\n            }\n        } catch (error) {\n            console.error(\"Error:\", error.response || error);\n            alert(\"An error occurred while saving License Details.\");\n        }\n    };\n\n    const handleChangeLic = (field, value) => {\n        setLicenseData((prev) => ({\n            ...prev,\n            [field]: value ? dayjs(value) : null,\n        }));\n    };\n\n    const getLicModalTitle = () => {\n        const action = isEditMode1 ? \"Edit\" : \"Add\";\n        return `${action} Certification`;\n    };\n\n    // Awards Handlers\n    const handleAddAwa = () => {\n        setAwardData({\n            award_title: \"\",\n            award_issuedby: \"\",\n            award_date: null,\n            award_description: \"\",\n            award_id: \"\",\n        });\n        setisEditMode2(false);\n        setopenDialog22(true);\n    };\n\n    const handleEditAwa = (index) => {\n        setAwardData({\n            award_title: award[index]?.award_title,\n            award_issuedby: award[index]?.award_issuedby,\n            award_date: dayjs(award[index]?.award_date),\n            award_description: award[index]?.award_description,\n            award_id: award[index]?.doctor_awards_id,\n        });\n        setisEditMode2(true);\n        setopenDialog22(true);\n    };\n\n    const handleSaveAwa = async (id) => {\n        const payload = {\n            suid: localStorage.getItem(\"doctor_suid\"),\n            email: localStorage.getItem(\"email\"),\n            award_title: awardData.award_title,\n            award_issuedby: awardData.award_issuedby,\n            award_date: dayjs(awardData.award_date).format(\"YYYY-MM-DD\"),\n            award_description: awardData.award_description,\n        };\n\n        if (isEditMode2) {\n            payload.doctor_awards_id = id;\n        }\n\n        try {\n            const response = await axiosInstance.post(\n                `/sec/Doctor/updateDoctorAwards`,\n                JSON.stringify(payload),\n            );\n\n            if (response.status === 200 || response.status === 201) {\n                console.log(\"Success:\", response.data);\n                alert(isEditMode2 ? \"Award Updated\" : \"Award Added\");\n                setopenDialog22(false);\n                fetchAwards(); // Refresh the list\n            } else {\n                console.error(\"Error:\", response.data);\n                alert(\"Failed to save award details.\");\n            }\n        } catch (error) {\n            console.error(\"Error:\", error.response || error);\n            alert(\"An error occurred while saving award details.\");\n        }\n    };\n\n    const handleChangeAwa = (field, value) => {\n        setAwardData((prev) => ({\n            ...prev,\n            [field]: value ? dayjs(value) : null,\n        }));\n    };\n\n    const getAwaModalTitle = () => {\n        const action = isEditMode2 ? \"Edit\" : \"Add\";\n        return `${action} Awards`;\n    };\n\n    return (\n        <Box sx={{ width: \"100%\", padding: \"24px\", backgroundColor: \"#ffffff\", minHeight: \"100vh\" }}>\n            {/* Header Section */}\n            <Paper\n                elevation={0}\n                sx={{\n                    padding: \"24px\",\n                    marginBottom: \"24px\",\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                    <Typography variant=\"h4\" sx={{\n                        fontWeight: 600,\n                        color: \"#313033\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: 1\n                    }}>\n                        <WorkIcon sx={{ color: \"#E72B4A\" }} />\n                        Professional Details\n                    </Typography>\n\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                        <Chip\n                            label={`Doctor ID: ${localStorage.getItem(\"doctor_suid\") || \"DOC001\"}`}\n                            sx={{\n                                backgroundColor: \"#E72B4A\",\n                                color: \"white\",\n                                fontWeight: 500\n                            }}\n                        />\n                        <Tooltip title=\"Close\">\n                            <IconButton\n                                onClick={() => window.history.back()}\n                                sx={{\n                                    backgroundColor: \"#f5f5f5\",\n                                    \"&:hover\": { backgroundColor: \"#e0e0e0\" }\n                                }}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Box>\n                </Box>\n\n                {/* Navigation Tabs */}\n                <Box sx={{ display: \"flex\", gap: 1 }}>\n                    <NavLink\n                        to=\"/doctordashboard/doctorpersonalinfo\"\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                        Profile Information\n                    </NavLink>\n                    <NavLink\n                        to=\"/doctordashboard/doctorprofessionalinfo\"\n                        style={({ isActive }) => ({\n                            textDecoration: \"none\",\n                            padding: \"12px 24px\",\n                            borderRadius: \"8px\",\n                            color: isActive ? \"white\" : \"#313033\",\n                            backgroundColor: isActive ? \"#E72B4A\" : \"transparent\",\n                            fontWeight: 500,\n                            transition: \"all 0.2s ease\",\n                            border: isActive ? \"none\" : \"1px solid #e0e0e0\"\n                        })}\n                    >\n                        Professional Details\n                    </NavLink>\n                </Box>\n            </Paper>\n\n            {/* Education Details Section */}\n            <Card\n                elevation={0}\n                sx={{\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    marginBottom: \"24px\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                        <Typography variant=\"h6\" sx={{\n                            fontWeight: 600,\n                            color: \"#313033\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: 1\n                        }}>\n                            <SchoolIcon sx={{ color: \"#E72B4A\" }} />\n                            Education Details\n                        </Typography>\n\n                        <CustomButton\n                            label={isEditing ? \"Cancel Edit\" : \"Edit Education\"}\n                            isTransaprent={!isEditing}\n                            leftIcon={<EditIcon />}\n                            buttonCss={{\n                                borderRadius: \"8px\",\n                                padding: \"8px 16px\",\n                                fontWeight: 500,\n                                border: isEditing ? \"1px solid #d32f2f\" : \"1px solid #E72B4A\",\n                                color: isEditing ? \"#d32f2f\" : \"#E72B4A\"\n                            }}\n                            handleClick={() => setIsEditing(!isEditing)}\n                        />\n                    </Box>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                            <CustomTextField\n                                defaultValue={data?.qualification}\n                                CustomValue={data?.qualification}\n                                label=\"Qualification\"\n                                helperText=\"\"\n                                isDisabled={!isEditing}\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        qualification: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <CustomTextField\n                                defaultValue={data?.qualified_year}\n                                CustomValue={data?.qualified_year}\n                                label=\"Qualified Year\"\n                                helperText=\"\"\n                                isDisabled={!isEditing}\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        qualified_year: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <CustomTextField\n                                defaultValue={data?.university_name}\n                                CustomValue={data?.university_name}\n                                label=\"University Name\"\n                                helperText=\"\"\n                                isDisabled={!isEditing}\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        university_name: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <CustomTextField\n                                defaultValue={data?.degree}\n                                CustomValue={data?.degree}\n                                label=\"Degree\"\n                                helperText=\"\"\n                                isDisabled={!isEditing}\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...data,\n                                        degree: event.target.value,\n                                    };\n                                    setData(Copy);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <CustomDropdown\n                                label=\"Specialization\"\n                                isDisabled={!isEditing}\n                                items={departmentItems.map((item) => item.name)}\n                                activeItem={selectedDepartment}\n                                handleChange={handleDropdownChange}\n                                dropdowncss={{\n                                    width: \"100%\",\n                                    color: \"#787579\",\n                                }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    {/* Action Buttons */}\n                    {isEditing && (\n                        <Box sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            marginTop: \"32px\",\n                            paddingTop: \"24px\",\n                            borderTop: \"1px solid #e0e0e0\"\n                        }}>\n                            <CustomButton\n                                label=\"Save Education Details\"\n                                isTransaprent={false}\n                                isDisabled={false}\n                                isElevated={false}\n                                buttonCss={{\n                                    width: \"200px\",\n                                    height: \"48px\",\n                                    borderRadius: \"8px\",\n                                    fontWeight: 600\n                                }}\n                                handleClick={() => {\n                                    fetchData();\n                                    setIsEditing(false);\n                                }}\n                            />\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n\n            {/* Professional Registration Section */}\n            <Card\n                elevation={0}\n                sx={{\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    marginBottom: \"24px\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                        <Typography variant=\"h6\" sx={{\n                            fontWeight: 600,\n                            color: \"#313033\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: 1\n                        }}>\n                            <WorkIcon sx={{ color: \"#E72B4A\" }} />\n                            Professional Registration\n                        </Typography>\n\n                        <CustomButton\n                            label={isEditing1 ? \"Cancel Edit\" : \"Edit Registration\"}\n                            isTransaprent={!isEditing1}\n                            leftIcon={<EditIcon />}\n                            buttonCss={{\n                                borderRadius: \"8px\",\n                                padding: \"8px 16px\",\n                                fontWeight: 500,\n                                border: isEditing1 ? \"1px solid #d32f2f\" : \"1px solid #E72B4A\",\n                                color: isEditing1 ? \"#d32f2f\" : \"#E72B4A\"\n                            }}\n                            handleClick={() => setIsEditing1(!isEditing1)}\n                        />\n                    </Box>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                            <CustomTextField\n                                defaultValue={professional?.state_reg_number}\n                                CustomValue={professional?.state_reg_number}\n                                label=\"State Registration Number\"\n                                helperText=\"\"\n                                isDisabled={!isEditing1}\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...professional,\n                                        state_reg_number: event.target.value,\n                                    };\n                                    setProfessional(Copy);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <CustomTextField\n                                defaultValue={professional?.country_reg_number}\n                                CustomValue={professional?.country_reg_number}\n                                label=\"Country Registration Number\"\n                                helperText=\"\"\n                                isDisabled={!isEditing1}\n                                textcss={{ width: \"100%\" }}\n                                sx={{\n                                    \"& .MuiOutlinedInput-root\": {\n                                        \"& fieldset\": { border: \"none\" },\n                                        \"&:hover fieldset\": { border: \"none\" },\n                                        \"&.Mui-focused fieldset\": { border: \"none\" },\n                                        borderBottom: \"1px solid #e0e0e0\",\n                                        borderRadius: 0,\n                                        \"&:hover\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                        \"&.Mui-focused\": {\n                                            borderBottom: \"2px solid #E72B4A\",\n                                        },\n                                    },\n                                    \"& .MuiInputLabel-root\": {\n                                        \"&.Mui-focused\": {\n                                            color: \"#E72B4A\",\n                                        },\n                                    },\n                                }}\n                                onInput={(event) => {\n                                    const Copy = {\n                                        ...professional,\n                                        country_reg_number: event.target.value,\n                                    };\n                                    setProfessional(Copy);\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                <DatePicker\n                                    value={professional?.state_reg_date ? dayjs(professional.state_reg_date) : null}\n                                    disabled={!isEditing1}\n                                    label=\"State Registration Date\"\n                                    sx={{\n                                        width: \"100%\",\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                    }}\n                                    onChange={(item) => {\n                                        const formattedDate = item\n                                            ? item.format(\"YYYY-MM-DD\")\n                                            : null;\n                                        setProfessional({\n                                            ...professional,\n                                            state_reg_date: formattedDate,\n                                        });\n                                    }}\n                                />\n                            </LocalizationProvider>\n\n\n\n\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                <DatePicker\n                                    value={professional?.country_reg_date ? dayjs(professional.country_reg_date) : null}\n                                    disabled={!isEditing1}\n                                    label=\"Country Registration Date\"\n                                    sx={{\n                                        width: \"100%\",\n                                        \"& .MuiOutlinedInput-root\": {\n                                            \"& fieldset\": { border: \"none\" },\n                                            \"&:hover fieldset\": { border: \"none\" },\n                                            \"&.Mui-focused fieldset\": { border: \"none\" },\n                                            borderBottom: \"1px solid #e0e0e0\",\n                                            borderRadius: 0,\n                                            \"&:hover\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                            \"&.Mui-focused\": {\n                                                borderBottom: \"2px solid #E72B4A\",\n                                            },\n                                        },\n                                        \"& .MuiInputLabel-root\": {\n                                            \"&.Mui-focused\": {\n                                                color: \"#E72B4A\",\n                                            },\n                                        },\n                                    }}\n                                    onChange={(item) => {\n                                        const formattedDate = item\n                                            ? item.format(\"YYYY-MM-DD\")\n                                            : null;\n                                        setProfessional({\n                                            ...professional,\n                                            state_reg_date: formattedDate,\n                                        });\n                                    }}\n                                />\n                            </LocalizationProvider>\n\n\n\n                        </Grid>\n                    </Grid>\n\n                    {/* Action Buttons */}\n                    {isEditing1 && (\n                        <Box sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            marginTop: \"32px\",\n                            paddingTop: \"24px\",\n                            borderTop: \"1px solid #e0e0e0\"\n                        }}>\n                            <CustomButton\n                                label=\"Save Registration Details\"\n                                isTransaprent={false}\n                                isDisabled={false}\n                                isElevated={false}\n                                buttonCss={{\n                                    width: \"220px\",\n                                    height: \"48px\",\n                                    borderRadius: \"8px\",\n                                    fontWeight: 600\n                                }}\n                                handleClick={() => {\n                                    fetchProfessional();\n                                    setIsEditing1(false);\n                                }}\n                            />\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n\n            {/* Work Experience Section */}\n            <Card\n                elevation={0}\n                sx={{\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    marginBottom: \"24px\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                        <Typography variant=\"h6\" sx={{\n                            fontWeight: 600,\n                            color: \"#313033\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: 1\n                        }}>\n                            <WorkIcon sx={{ color: \"#E72B4A\" }} />\n                            Work Experience\n                        </Typography>\n\n                        <Box sx={{ display: \"flex\", gap: 1 }}>\n                            <IconButton sx={{ color: \"#E72B4A\" }} onClick={handleAdd}>\n                                <AddIcon />\n                            </IconButton>\n                        </Box>\n                    </Box>\n\n                    {/* Work Experience Entries */}\n                    {loading ? (\n                        // Enhanced skeleton loader for experience cards\n                        Array.from({ length: 3 }).map((_, index) => (\n                            <Box key={index} sx={{ marginBottom: \"20px\" }}>\n                                <Skeleton \n                                    variant=\"rectangular\" \n                                    width=\"100%\" \n                                    height={140} \n                                    sx={{ borderRadius: \"12px\" }}\n                                />\n                            </Box>\n                        ))\n                    ) : Array.isArray(experience) && experience.length > 0 ? (\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"20px\" }}>\n                            {experience.map((exp, index) => (\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        gap: 3,\n                                        padding: \"24px\",\n                                        border: \"1px solid #e0e0e0\",\n                                        borderRadius: \"16px\",\n                                        backgroundColor: \"#ffffff\",\n                                        boxShadow: \"0 2px 8px rgba(0,0,0,0.04)\",\n                                        transition: \"all 0.3s ease\",\n                                        \"&:hover\": {\n                                            boxShadow: \"0 4px 16px rgba(0,0,0,0.08)\",\n                                            borderColor: \"#E72B4A\",\n                                            transform: \"translateY(-2px)\"\n                                        }\n                                    }}\n                                >\n                                    <Avatar sx={{\n                                        backgroundColor: \"#E3F2FD\",\n                                        color: \"#1976D2\",\n                                        width: 56,\n                                        height: 56,\n                                        fontSize: \"24px\"\n                                    }}>\n                                        <LocalHospitalIcon />\n                                    </Avatar>\n                                    <Box sx={{ flex: 1 }}>\n                                        <Typography variant=\"h6\" sx={{ \n                                            fontWeight: 600, \n                                            color: \"#313033\",\n                                            marginBottom: \"4px\"\n                                        }}>\n                                            {exp.job}\n                                        </Typography>\n                                        <Typography variant=\"body1\" sx={{ \n                                            color: \"#666\",\n                                            marginBottom: \"8px\",\n                                            fontWeight: 500\n                                        }}>\n                                            {exp.organisation}\n                                        </Typography>\n                                        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n                                            <Chip\n                                                label={\n                                                    exp.to_date === \"present\"\n                                                        ? `${dayjs(exp.from_date).format(\"DD/MM/YYYY\")} - Present`\n                                                        : `${dayjs(exp.from_date).format(\"DD/MM/YYYY\")} - ${dayjs(\n                                                              exp.to_date,\n                                                          ).format(\"DD/MM/YYYY\")}`\n                                                }\n                                                sx={{\n                                                    backgroundColor: \"#E72B4A\",\n                                                    color: \"white\",\n                                                    fontWeight: 500,\n                                                    fontSize: \"12px\"\n                                                }}\n                                            />\n                                        </Box>\n                                    </Box>\n                                    <IconButton\n                                        onClick={() => handleEdit(index)}\n                                        sx={{\n                                            backgroundColor: \"#f5f5f5\",\n                                            color: \"#E72B4A\",\n                                            \"&:hover\": {\n                                                backgroundColor: \"#E72B4A\",\n                                                color: \"white\"\n                                            }\n                                        }}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </Box>\n                            ))}\n                        </Box>\n                    ) : (\n                        // Enhanced empty state card\n                        <Box\n                            sx={{\n                                padding: \"40px 24px\",\n                                textAlign: \"center\",\n                                border: \"2px dashed #e0e0e0\",\n                                borderRadius: \"16px\",\n                                backgroundColor: \"#fafafa\",\n                                transition: \"all 0.3s ease\",\n                                \"&:hover\": {\n                                    borderColor: \"#E72B4A\",\n                                    backgroundColor: \"#fff5f5\"\n                                }\n                            }}\n                        >\n                            <LocalHospitalIcon sx={{ \n                                fontSize: 48, \n                                color: \"#e0e0e0\", \n                                marginBottom: \"16px\" \n                            }} />\n                            <Typography variant=\"h6\" sx={{ \n                                marginBottom: \"8px\",\n                                color: \"#666\",\n                                fontWeight: 500\n                            }}>\n                                No Work Experience Found\n                            </Typography>\n                            <Typography variant=\"body2\" sx={{ \n                                color: \"#999\",\n                                marginBottom: \"16px\"\n                            }}>\n                                Add your first experience to showcase your professional journey.\n                            </Typography>\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n\n\n            {/* Awards Section */}\n            <Card\n                elevation={0}\n                sx={{\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    marginBottom: \"24px\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                        <Typography variant=\"h6\" sx={{\n                            fontWeight: 600,\n                            color: \"#313033\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: 1\n                        }}>\n                            <EmojiEventsIcon sx={{ color: \"#E72B4A\" }} />\n                            Awards\n                        </Typography>\n\n                        <Box sx={{ display: \"flex\", gap: 1 }}>\n                            <IconButton sx={{ color: \"#E72B4A\" }} onClick={handleAddAwa}>\n                                <AddIcon />\n                            </IconButton>\n                        </Box>\n                    </Box>\n\n                    {/* Awards Entries */}\n                    {loading ? (\n                        // Enhanced skeleton loader for awards cards\n                        Array.from({ length: 3 }).map((_, index) => (\n                            <Box key={index} sx={{ marginBottom: \"20px\" }}>\n                                <Skeleton \n                                    variant=\"rectangular\" \n                                    width=\"100%\" \n                                    height={160} \n                                    sx={{ borderRadius: \"12px\" }}\n                                />\n                            </Box>\n                        ))\n                    ) : Array.isArray(award) && award.length > 0 ? (\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"20px\" }}>\n                            {award.map((awa, index) => (\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: \"flex\",\n                                        alignItems: \"flex-start\",\n                                        gap: 3,\n                                        padding: \"24px\",\n                                        border: \"1px solid #e0e0e0\",\n                                        borderRadius: \"16px\",\n                                        backgroundColor: \"#ffffff\",\n                                        boxShadow: \"0 2px 8px rgba(0,0,0,0.04)\",\n                                        transition: \"all 0.3s ease\",\n                                        \"&:hover\": {\n                                            boxShadow: \"0 4px 16px rgba(0,0,0,0.08)\",\n                                            borderColor: \"#E72B4A\",\n                                            transform: \"translateY(-2px)\"\n                                        }\n                                    }}\n                                >\n                                    <Avatar sx={{\n                                        backgroundColor: \"#FCE4EC\",\n                                        color: \"#E72B4A\",\n                                        width: 56,\n                                        height: 56,\n                                        fontSize: \"20px\",\n                                        fontWeight: \"bold\"\n                                    }}>\n                                        A\n                                    </Avatar>\n                                    <Box sx={{ flex: 1 }}>\n                                        <Typography variant=\"h6\" sx={{ \n                                            fontWeight: 600, \n                                            color: \"#313033\",\n                                            marginBottom: \"4px\"\n                                        }}>\n                                            {awa.award_title}\n                                        </Typography>\n                                        <Typography variant=\"body1\" sx={{ \n                                            color: \"#666\",\n                                            marginBottom: \"8px\",\n                                            fontWeight: 500\n                                        }}>\n                                            {awa.award_issuedby}\n                                        </Typography>\n                                        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, marginBottom: \"8px\" }}>\n                                            <Chip\n                                                label={dayjs(awa.award_date).format(\"DD/MM/YYYY\")}\n                                                sx={{\n                                                    backgroundColor: \"#E72B4A\",\n                                                    color: \"white\",\n                                                    fontWeight: 500,\n                                                    fontSize: \"12px\"\n                                                }}\n                                            />\n                                        </Box>\n                                        {awa.award_description && (\n                                            <Typography variant=\"body2\" sx={{ \n                                                color: \"#999\",\n                                                fontStyle: \"italic\",\n                                                lineHeight: 1.5\n                                            }}>\n                                                {awa.award_description}\n                                            </Typography>\n                                        )}\n                                    </Box>\n                                    <IconButton\n                                        onClick={() => handleEditAwa(index)}\n                                        sx={{\n                                            backgroundColor: \"#f5f5f5\",\n                                            color: \"#E72B4A\",\n                                            \"&:hover\": {\n                                                backgroundColor: \"#E72B4A\",\n                                                color: \"white\"\n                                            }\n                                        }}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </Box>\n                            ))}\n                        </Box>\n                    ) : (\n                        // Enhanced empty state card\n                        <Box\n                            sx={{\n                                padding: \"40px 24px\",\n                                textAlign: \"center\",\n                                border: \"2px dashed #e0e0e0\",\n                                borderRadius: \"16px\",\n                                backgroundColor: \"#fafafa\",\n                                transition: \"all 0.3s ease\",\n                                \"&:hover\": {\n                                    borderColor: \"#E72B4A\",\n                                    backgroundColor: \"#fff5f5\"\n                                }\n                            }}\n                        >\n                            <EmojiEventsIcon sx={{ \n                                fontSize: 48, \n                                color: \"#e0e0e0\", \n                                marginBottom: \"16px\" \n                            }} />\n                            <Typography variant=\"h6\" sx={{ \n                                marginBottom: \"8px\",\n                                color: \"#666\",\n                                fontWeight: 500\n                            }}>\n                                No Awards Found\n                            </Typography>\n                            <Typography variant=\"body2\" sx={{ \n                                color: \"#999\",\n                                marginBottom: \"16px\"\n                            }}>\n                                Add your first award to showcase your achievements and recognition.\n                            </Typography>\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n\n            {/* Licenses & Certifications Section */}\n            <Card\n                elevation={0}\n                sx={{\n                    borderRadius: \"12px\",\n                    border: \"1px solid #e0e0e0\",\n                    marginBottom: \"24px\",\n                    backgroundColor: \"white\"\n                }}\n            >\n                <CardContent sx={{ padding: \"32px\" }}>\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"24px\" }}>\n                        <Typography variant=\"h6\" sx={{\n                            fontWeight: 600,\n                            color: \"#313033\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            gap: 1\n                        }}>\n                            <CardMembershipIcon sx={{ color: \"#E72B4A\" }} />\n                            Certifications & Licenses\n                        </Typography>\n\n                        <Box sx={{ display: \"flex\", gap: 1 }}>\n                            <IconButton sx={{ color: \"#E72B4A\" }} onClick={handleAddLic}>\n                                <AddIcon />\n                            </IconButton>\n                        </Box>\n                    </Box>\n\n                    {/* Licenses Entries */}\n                    {loading ? (\n                        // Enhanced skeleton loader for licenses cards\n                        Array.from({ length: 3 }).map((_, index) => (\n                            <Box key={index} sx={{ marginBottom: \"20px\" }}>\n                                <Skeleton \n                                    variant=\"rectangular\" \n                                    width=\"100%\" \n                                    height={180} \n                                    sx={{ borderRadius: \"12px\" }}\n                                />\n                            </Box>\n                        ))\n                    ) : Array.isArray(licenses) && licenses.length > 0 ? (\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"20px\" }}>\n                            {licenses.map((lic, index) => (\n                                <Box\n                                    key={index}\n                                    sx={{\n                                        display: \"flex\",\n                                        alignItems: \"flex-start\",\n                                        gap: 3,\n                                        padding: \"24px\",\n                                        border: \"1px solid #e0e0e0\",\n                                        borderRadius: \"16px\",\n                                        backgroundColor: \"#ffffff\",\n                                        boxShadow: \"0 2px 8px rgba(0,0,0,0.04)\",\n                                        transition: \"all 0.3s ease\",\n                                        \"&:hover\": {\n                                            boxShadow: \"0 4px 16px rgba(0,0,0,0.08)\",\n                                            borderColor: \"#E72B4A\",\n                                            transform: \"translateY(-2px)\"\n                                        }\n                                    }}\n                                >\n                                    <Avatar sx={{\n                                        backgroundColor: \"#FFF3E0\",\n                                        color: \"#F57C00\",\n                                        width: 56,\n                                        height: 56,\n                                        fontSize: \"20px\",\n                                        fontWeight: \"bold\"\n                                    }}>\n                                        <CardMembershipIcon />\n                                    </Avatar>\n                                    <Box sx={{ flex: 1 }}>\n                                        <Typography variant=\"h6\" sx={{ \n                                            fontWeight: 600, \n                                            color: \"#313033\",\n                                            marginBottom: \"4px\"\n                                        }}>\n                                            {lic.lic_title}\n                                        </Typography>\n                                        <Typography variant=\"body1\" sx={{ \n                                            color: \"#666\",\n                                            marginBottom: \"8px\",\n                                            fontWeight: 500\n                                        }}>\n                                            {lic.lic_issuedby}\n                                        </Typography>\n                                        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, marginBottom: \"8px\" }}>\n                                            <Chip\n                                                label={`Cert No: ${lic.lic_certificate_no}`}\n                                                sx={{\n                                                    backgroundColor: \"#F57C00\",\n                                                    color: \"white\",\n                                                    fontWeight: 500,\n                                                    fontSize: \"12px\"\n                                                }}\n                                            />\n                                            <Chip\n                                                label={dayjs(lic.lic_date).format(\"DD/MM/YYYY\")}\n                                                sx={{\n                                                    backgroundColor: \"#E72B4A\",\n                                                    color: \"white\",\n                                                    fontWeight: 500,\n                                                    fontSize: \"12px\"\n                                                }}\n                                            />\n                                        </Box>\n                                        {lic.lic_description && (\n                                            <Typography variant=\"body2\" sx={{ \n                                                color: \"#999\",\n                                                fontStyle: \"italic\",\n                                                lineHeight: 1.5\n                                            }}>\n                                                {lic.lic_description}\n                                            </Typography>\n                                        )}\n                                    </Box>\n                                    <IconButton\n                                        onClick={() => handleEditLic(index)}\n                                        sx={{\n                                            backgroundColor: \"#f5f5f5\",\n                                            color: \"#E72B4A\",\n                                            \"&:hover\": {\n                                                backgroundColor: \"#E72B4A\",\n                                                color: \"white\"\n                                            }\n                                        }}\n                                    >\n                                        <EditIcon />\n                                    </IconButton>\n                                </Box>\n                            ))}\n                        </Box>\n                    ) : (\n                        // Enhanced empty state card\n                        <Box\n                            sx={{\n                                padding: \"40px 24px\",\n                                textAlign: \"center\",\n                                border: \"2px dashed #e0e0e0\",\n                                borderRadius: \"16px\",\n                                backgroundColor: \"#fafafa\",\n                                transition: \"all 0.3s ease\",\n                                \"&:hover\": {\n                                    borderColor: \"#E72B4A\",\n                                    backgroundColor: \"#fff5f5\"\n                                }\n                            }}\n                        >\n                            <CardMembershipIcon sx={{ \n                                fontSize: 48, \n                                color: \"#e0e0e0\", \n                                marginBottom: \"16px\" \n                            }} />\n                            <Typography variant=\"h6\" sx={{ \n                                marginBottom: \"8px\",\n                                color: \"#666\",\n                                fontWeight: 500\n                            }}>\n                                No Certifications Found\n                            </Typography>\n                            <Typography variant=\"body2\" sx={{ \n                                color: \"#999\",\n                                marginBottom: \"16px\"\n                            }}>\n                                Add your first certification or license to showcase your credentials.\n                            </Typography>\n                        </Box>\n                    )}\n                </CardContent>\n            </Card>\n\n            {/* Work Experience Modal */}\n            {openDialog && (\n                <CustomModal\n                    isOpen={openDialog}\n                    conditionOpen={setOpenDialog}\n                    title={\n                        <Typography variant=\"h6\" className=\"modal-title\">\n                            {getModalTitle()}\n                        </Typography>\n                    }\n                    modalCss={{\n                        width: \"400px\",\n                        height: \"500px\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div\n                        className=\"textfield-cont\"\n                        style={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            gap: \"16px\",\n                            justifyContent: \"space-around\",\n                            width: \"100%\",\n                            marginBottom: \"20px\",\n                        }}\n                    >\n                        <CustomTextField\n                            label=\"Job Title\"\n                            helperText=\"\"\n                            defaultValue={experienceData?.jobTitle}\n                            textcss={{ width: \"180px\" }}\n                            onInput={(event) => {\n                                setExperienceData({\n                                    ...experienceData,\n                                    jobTitle: event.target.value,\n                                });\n                            }}\n                        />\n\n                        <CustomTextField\n                            helperText=\"\"\n                            label=\"Hospital/Organization\"\n                            defaultValue={experienceData?.organization}\n                            textcss={{ width: \"180px\" }}\n                            onInput={(event) => {\n                                setExperienceData({\n                                    ...experienceData,\n                                    organization: event.target.value,\n                                });\n                            }}\n                        />\n\n                        <CustomDatePicker\n                            label=\"Start Date\"\n                            value={experienceData?.startDate}\n                            onChange={(newValue) => handleChange(\"startDate\", newValue)}\n                            sx={{ width: \"180px\" }}\n                        />\n                        <CustomDatePicker\n                            label=\"End Date\"\n                            value={experienceData?.endDate}\n                            onChange={(newValue) => handleChange(\"endDate\", newValue)}\n                            sx={{ width: \"180px\" }}\n                        />\n                    </div>\n                    <div\n                        className=\"save-btn\"\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <CustomButton\n                            label=\"Save\"\n                            handleClick={() => {\n                                handleSave(experienceData.exp_id);\n                            }}\n                            buttonCss={{ width: \"170px\", height: \"48px\", borderRadius: \"20px\" }}\n                        />\n                    </div>\n                </CustomModal>\n            )}\n\n            {/* License Modal */}\n            {openDialog1 && (\n                <CustomModal\n                    isOpen={openDialog1}\n                    conditionOpen={setOpenDialog1}\n                    title={\n                        <Typography variant=\"h6\" className=\"modal-title\">\n                            {getLicModalTitle()}\n                        </Typography>\n                    }\n                    modalCss={{\n                        width: \"400px\",\n                        height: \"500px\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div\n                        className=\"textfield-cont\"\n                        style={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            gap: \"16px\",\n                            justifyContent: \"space-around\",\n                            width: \"100%\",\n                            marginBottom: \"20px\",\n                        }}\n                    >\n                        <CustomTextField\n                            helperText={\"\"}\n                            label=\"Certification Title\"\n                            defaultValue={licenseData?.lic_title}\n                            onInput={(event) => {\n                                setLicenseData({\n                                    ...licenseData,\n                                    lic_title: event.target.value,\n                                });\n                            }}\n                            textcss={{ width: \"450px\" }}\n                        />\n                        <CustomTextField\n                            helperText={\"\"}\n                            label=\"Certificate Number\"\n                            defaultValue={licenseData?.lic_certificate_no}\n                            value={licenseData?.lic_certificate_no}\n                            onInput={(event) => {\n                                setLicenseData({\n                                    ...licenseData,\n                                    lic_certificate_no: event.target.value,\n                                });\n                            }}\n                            textcss={{ width: \"180px\" }}\n                        />\n                        <CustomTextField\n                            helperText={\"\"}\n                            label=\"Issuing Authority\"\n                            defaultValue={licenseData?.lic_issuedby}\n                            onInput={(event) => {\n                                setLicenseData({\n                                    ...licenseData,\n                                    lic_issuedby: event.target.value,\n                                });\n                            }}\n                            textcss={{ width: \"180px\" }}\n                        />\n                        <CustomDatePicker\n                            label=\"Issue Date\"\n                            value={licenseData?.lic_date}\n                            onChange={(newValue) => handleChangeLic(\"lic_date\", newValue)}\n                            sx={{ width: \"450px\" }}\n                        />\n                        <CustomTextField\n                            rows={3}\n                            multiline\n                            helperText={\"\"}\n                            label=\"Description\"\n                            defaultValue={licenseData?.lic_description}\n                            onInput={(event) => {\n                                setLicenseData({\n                                    ...licenseData,\n                                    lic_description: event.target.value,\n                                });\n                            }}\n                            textcss={{ width: \"450px\" }}\n                        />\n                    </div>\n                    <div\n                        className=\"save-btn\"\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <CustomButton\n                            label=\"Save\"\n                            handleClick={() => {\n                                handleSaveLic(licenseData.license_id);\n                            }}\n                            buttonCss={{ width: \"170px\", height: \"48px\", borderRadius: \"20px\" }}\n                        />\n                    </div>\n                </CustomModal>\n            )}\n\n            {/* Awards Modal */}\n            {openDialog2 && (\n                <CustomModal\n                    isOpen={openDialog2}\n                    conditionOpen={setopenDialog22}\n                    title={\n                        <Typography variant=\"h6\" className=\"modal-title\">\n                            {getAwaModalTitle()}\n                        </Typography>\n                    }\n                    modalCss={{\n                        width: \"400px\",\n                        height: \"500px\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div\n                        className=\"textfield-cont\"\n                        style={{\n                            display: \"flex\",\n                            flexWrap: \"wrap\",\n                            gap: \"16px\",\n                            justifyContent: \"space-around\",\n                            width: \"100%\",\n                            marginBottom: \"20px\",\n                        }}\n                    >\n                        <CustomTextField\n                            helperText={\"\"}\n                            label=\"Award Title\"\n                            defaultValue={awardData?.award_title}\n                            onInput={(event) => {\n                                setAwardData({\n                                    ...awardData,\n                                    award_title: event.target.value,\n                                });\n                            }}\n                            textcss={{ width: \"450px\" }}\n                        />\n                        <CustomTextField\n                            helperText={\"\"}\n                            label=\"Issued By\"\n                            defaultValue={awardData?.award_issuedby}\n                            onInput={(event) => {\n                                setAwardData({\n                                    ...awardData,\n                                    award_issuedby: event.target.value,\n                                });\n                            }}\n                            textcss={{ width: \"180px\" }}\n                        />\n                        <CustomDatePicker\n                            label=\"Issue Date\"\n                            value={awardData.award_date}\n                            onChange={(newValue) => handleChangeAwa(\"award_date\", newValue)}\n                            sx={{ width: \"180px\" }}\n                        />\n                        <CustomTextField\n                            rows={3}\n                            multiline\n                            helperText={\"\"}\n                            label=\"Description\"\n                            defaultValue={awardData?.award_description}\n                            onInput={(event) => {\n                                setAwardData({\n                                    ...awardData,\n                                    award_description: event.target.value,\n                                });\n                            }}\n                            textcss={{ width: \"450px\" }}\n                        />\n                    </div>\n                    <div\n                        className=\"save-btn\"\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            width: \"100%\",\n                        }}\n                    >\n                        <CustomButton\n                            label=\"Save\"\n                            handleClick={() => {\n                                handleSaveAwa(awardData.award_id);\n                            }}\n                            buttonCss={{ width: \"170px\", height: \"48px\", borderRadius: \"20px\" }}\n                        />\n                    </div>\n                </CustomModal>\n            )}\n        </Box>\n    );\n};\n\nexport default ProfessionalDetails;","import {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    TablePagination,\n    Skeleton,\n    CircularProgress,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport { CloudUploadIcon } from \"@heroicons/react/outline\";\nimport DiagnostCenterTableCard from \"./DiagnostCenterTableCard\";\nimport CustomModal from \"../../../../components/CustomModal\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomDropdown from \"../../../../components/CustomDropdown\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar\";\n\nimport \"./sharelist.scss\";\n\nconst ShareList = () => {\n    const [cardData, setCardData] = useState([]);\n    const [labItems, setLabItems] = useState([]);\n    const [activeItem, setActiveItem] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const staff_id = localStorage.getItem(\"diagnostic_suid\");\n    const [pdfFileName, setPdfFileName] = useState(\"\");\n    const [pdfBase64, setPdfBase64] = useState(\"\");\n    const [buttonloading, setButtonloading] = useState(false)\n    const [snackBarOpen, setSnackBarOpen] = useState(false);\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\n    const [snackBarType, setSnackBarType] = useState(\"success\"); // \"success\", \"error\", etc.\n\n\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const resp = await axiosInstance(`/sec/hcf/reportShareList/${staff_id}`);\n            setCardData(Array.isArray(resp?.data?.response) ? resp.data.response : []);\n        } catch (err) {\n            console.log(\"Error:\", err);\n            setCardData([]); // Set to empty array on error\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const fetchLabsDepartments = async () => {\n        try {\n            const resp = await axiosInstance(`/sec/hcf/getHcfLabs/${staff_id}`);\n            setLabItems(resp?.data?.response || []);\n        } catch (err) {\n            console.log(\"Error:\", err);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n        fetchLabsDepartments();\n    }, []);\n\n    // Function to handle file input change\n    const handleFileInput = (file) => {\n        const uploadedFile = file?.target?.files[0]; // Get the uploaded file\n        if (uploadedFile) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const base64String = reader.result.split(\",\")[1]; // Extract base64 content\n                setPdfBase64(base64String);\n                setPdfFileName(uploadedFile.name.split(\".\")[0]); // Extract file name without extension\n            };\n            reader.readAsDataURL(uploadedFile); // Read file as base64\n        }\n    };\n    const postReport = async (test_id, pdfFileName, pdfBase64) => {\n        setButtonloading(true)\n        try {\n            await axiosInstance.post(\n                `/sec/hcf/testReportUpload`,\n                JSON.stringify({\n                    test_id: String(test_id),\n                    fileName: pdfFileName,\n                    file: pdfBase64,\n                    staff_id: staff_id,\n                }),\n            );\n            setSnackBarMessage(\"Report Shared successfully!\");\n            setSnackBarOpen(true);\n            setSnackBarType(\"success\");\n            fetchData(); // Refresh data after posting\n        } catch (err) {\n            setSnackBarMessage(\"Failed to upload report.\");\n            setSnackBarOpen(true);\n            setSnackBarType(\"error\");\n            console.log(\"Error:\", err);\n        } finally {\n            setButtonloading(false)\n        }\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <TableContainer component={Paper} style={{ background: \"white\" }}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name/Booking ID</TableCell>\n                        <TableCell align=\"right\">Date & Time</TableCell>\n                        <TableCell align=\"right\">Test Name</TableCell>\n                        <TableCell align=\"right\">Details</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {loading ? (\n                        Array.from(new Array(rowsPerPage)).map((_, index) => (\n                            <TableRow key={index}>\n                                <TableCell colSpan={6} align=\"center\">\n                                    <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\n                                </TableCell>\n                            </TableRow>\n                        ))\n                    ) : cardData.length > 0 ? (\n                        cardData\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((data) => {\n                                return (\n                                    <TableRow key={data?.suid}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            <DiagnostCenterTableCard\n                                                id={data?.test_id}\n                                                name={`${data?.first_name} ${data?.middle_name}${data?.last_name}`}\n                                                profile={data?.profile_picture}\n                                            />\n                                        </TableCell>\n                                        <TableCell align=\"right\">{data?.book_date}</TableCell>\n                                        <TableCell align=\"right\">{data?.test_name}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <div\n                                                style={{\n                                                    display: \"flex\",\n                                                    justifyContent: \"flex-end\",\n                                                    alignItems: \"center\",\n                                                }}\n                                            >\n                                                <CustomButton\n                                                    label=\"Share\"\n                                                    isElevated\n                                                    handleClick={() => setOpenDialog(!openDialog)}\n                                                    isTransparent={true}\n                                                    buttonCss={{ borderRadius: \"50px\" }}\n                                                />\n                                                <CustomModal\n                                                    isOpen={openDialog}\n                                                    title=\"Share\"\n                                                    class_name=\"share_list_modal\"\n                                                    disableBackdropClick={true}\n                                                    conditionOpen={setOpenDialog}\n                                                    maincontainerclassname=\"share_list_modal\"\n                                                    footer={\n                                                        <Box className=\"share_list_modal\">\n                                                            <Box\n                                                                sx={{\n                                                                    width: \"100%\",\n                                                                    display: \"content\",\n                                                                    justifyContent: \"center\",\n                                                                    alignItems: \"center\",\n                                                                    flexDirection: \"column\",\n                                                                }}\n                                                            >\n                                                                <CustomTextField\n                                                                    id={data?.suid}\n                                                                    helperText={\"\"}\n                                                                    textcss={{ width: \"100%\" }}\n                                                                    placeholder=\"Enter File Name Here\"\n                                                                    label=\"\"\n                                                                />\n                                                                <CustomDropdown\n                                                                    activeItem={activeItem}\n                                                                    items={labItems}\n                                                                    label=\"Select Labs\"\n                                                                    CustomSx={{\n                                                                        width: \"100%\",\n                                                                        marginTop: \"2%\",\n                                                                    }}\n                                                                    handleChange={(item) =>\n                                                                        setActiveItem(item)\n                                                                    }\n                                                                />\n                                                                <CustomTextField\n                                                                    type=\"file\"\n                                                                    placeholder=\"Upload File\"\n                                                                    helperText={\"\"}\n                                                                    leftIcon={<CloudUploadIcon />}\n                                                                    textcss={{ marginTop: \"2%\" }}\n                                                                    onInput={handleFileInput} // Call file input handler\n                                                                />\n                                                                <CustomButton\n                                                                    label={buttonloading ? <CircularProgress size={24} color=\"inherit\" /> : \"Share\"}\n                                                                    isTransparent={true}\n                                                                    buttonCss={{\n                                                                        borderRadius: \"30px\",\n                                                                        marginTop: \"2%\",\n                                                                    }}\n                                                                    handleClick={() => {\n                                                                        postReport(\n                                                                            data?.test_id,\n                                                                            pdfFileName,\n                                                                            pdfBase64,\n                                                                        );\n                                                                    }\n                                                                    }\n\n                                                                />\n                                                            </Box>\n                                                        </Box>\n                                                    }\n                                                >\n                                                    <Box className=\"Book-appointment-modal\">\n                                                        <Box\n                                                            sx={{ width: \"100%\", height: \"100%\" }}\n                                                        />\n                                                    </Box>\n                                                </CustomModal>\n                                                <span style={{ marginLeft: \"1%\" }}>\n                                                    {data?.status}\n                                                </span>\n                                            </div>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })\n                    ) : (\n                        <TableRow>\n                            <TableCell colSpan={5} align=\"center\">\n                                <NoAppointmentCard text_one=\"No Data Available\" />\n                            </TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n            <CustomSnackBar\n                isOpen={snackBarOpen}\n                message={snackBarMessage}\n                type={snackBarType}\n                hideDuration={4000}\n                handleAction={() => setSnackBarOpen(false)}\n            />\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={cardData.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </TableContainer>\n\n    );\n};\n\nexport default ShareList;\n","import {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    TablePagination,\n    Skeleton,\n} from \"@mui/material\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport DiagnostCenterTableCard from \"./DiagnostCenterTableCard\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\n\nconst Shared = () => {\n    const [cardData, setCardData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const staff_id = localStorage.getItem('diagnostic_suid');\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const resp = await axiosInstance(`/sec/hcf/reportShared/${staff_id}`);\n            // setCardData(resp?.data?.response || []);\n            setCardData(Array.isArray(resp?.data?.response) ? resp.data.response : []);\n        } catch (err) {\n            console.log(\"Error:\", err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const memoizedCardData = useMemo(() => {\n        return cardData.map(data => ({\n            id: data?.test_id,\n            name: `${data?.first_name} ${data?.middle_name} ${data?.last_name}`,\n            bookDate: `${data?.book_date} ${data?.book_time}` || \"N/A\",\n            testName: data?.test_name || \"N/A\",\n            status: data?.status || \"N/A\",\n            testFile: data?.report_name || \"N/A\",\n            profile_picture: data?.profile_picture || \" \"\n        }));\n    }, [cardData]);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <TableContainer component={Paper} style={{ background: \"white\" }}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name/Booking ID</TableCell>\n                        <TableCell align=\"right\">Date & Time</TableCell>\n                        <TableCell align=\"right\">Test Name</TableCell>\n                        <TableCell align=\"right\">File Name</TableCell>\n                        <TableCell align=\"right\">Details</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                {loading ? (\n                        Array.from(new Array(rowsPerPage)).map((_, index) => (\n                            <TableRow key={index}>\n                                <TableCell colSpan={6} align=\"center\">\n                                    <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\n                                </TableCell>\n                            </TableRow>\n                        ))\n                    ) : memoizedCardData.length > 0 ? (\n                        memoizedCardData\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map(data => (\n                                <TableRow key={data.id}>\n                                    <TableCell>\n                                        <DiagnostCenterTableCard id={data.id} name={data.name} profile={data.profile_picture}/>\n                                    </TableCell>\n                                    <TableCell align=\"right\">{data.bookDate}</TableCell>\n                                    <TableCell align=\"right\">{data.testName}</TableCell>\n                                    <TableCell align=\"right\" sx={{color: \"#E72B4A\"}}>{data.testFile}</TableCell>\n                                    <TableCell align=\"right\">{data.status}</TableCell>\n                                </TableRow>\n                            ))\n                    ) : (\n                        <TableRow>\n                            <TableCell colSpan={5} align=\"center\">\n                                <NoAppointmentCard text_one=\"No Data Found\" />\n                            </TableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={memoizedCardData.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </TableContainer>\n    );\n};\n\nexport default Shared;\n","import {\n    Box,\n    Paper,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport pen from \"../../../../static/images/DrImages/Pen.svg\";\nimport { AuditCards } from \"../../DiagnosticManage/DiagnosticCenterAuditLog/AuditCards\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport ShareList from \"./ShareList\";\nimport Shared from \"./Shared\";\n\nconst DiagnosticCenterChats = () => {\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"reports\");\n        localStorage.setItem(\"path\", \"report\");\n    }, []);\n    useEffect(() => {\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    }, []);\n    const [value, setValue] = useState([null, null]);\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n    const [doctor, setDoctor] = useState(true);\n    const grey = \"#E6E1E5\";\n    const [bgColor, setBgColor] = useState(grey);\n    const changeColor = () => {\n        const black = \"#000000\";\n        setBgColor(black);\n    };\n    return (\n        <>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"98%\",\n                    height: \"100%\",\n                    height: \"90%\",\n                    flexDirection: \"row\",\n                }}\n            >\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <nav className=\"NavBar-Container-Appoinement\">\n                        <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/request\"}>\n                            Request\n                        </NavLink>\n                        <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/examination\"}>\n                            Examination\n                        </NavLink>\n                        <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/report\"}>\n                            Report\n                        </NavLink>\n                        {/* <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/Chart\"}>\n                            Chart\n                        </NavLink> */}\n                    </nav>\n                    {/* <CustomButton \n                            buttonCss={{ position : \"absolute\" , right : \"0\" , borderRadius : \"6.25rem\" }} \n                            isTransaprent={true} \n                            label=\"Add Staff\"\n                            // handleClick={() => {navigate(\"/hcfadmin/doctor/adddoctor\")}}\n                                /> */}\n                </nav>\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"block\",\n                        height: \"100%\",\n                    }}\n                >\n                    <div className=\"search-date\">\n                        {/* <Box\n                            display={\"flex\"}\n                            margin={\"10px\"}\n                            flexWrap={\"wrap\"}\n                            border={1}\n                            borderColor=\"#AEAAAE\"\n                            borderRadius={\"25px\"}\n                            width={\"50em\"}\n                            height=\"38px\"\n                            backgroundColor=\"#E6E1E5\"\n                        >\n                            <Stack direction=\"row\" alignItems=\"center\" gap={1} padding={\"10px\"}>\n                                <SearchIcon sx={{ margin: \"0 0 0 0%\", color: \"#AEAAAE\" }} />\n                                <Typography\n                                    variant=\"body1\"\n                                    sx={{ textAlign: \"left\", color: \"#AEAAAE\" }}\n                                >\n                                    Search Patient Name / ID\n                                </Typography>\n                            </Stack>\n                        </Box> */}\n                        <div\n                            style={{\n                                display: \"flex\",\n                                margin: \"10px\",\n                                border: \"1px solid #AEAAAE\",\n                                borderRadius: \"25px\",\n                                height: \"38px\",\n                                backgroundColor: \"#E6E1E5\",\n                                position: \"relative\",\n                                overflow: \"hidden\", // Prevent border overflow on animation\n                                boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n                                width: \"200px\", // Adjust width for better alignment\n                            }}\n                        >\n                            <button\n                                style={{\n                                    flex: 1,\n                                    border: \"none\",\n                                    borderRadius: \"25px\",\n                                    height: \"100%\",\n                                    color: doctor ? \"#F5F5F5\" : \"#28282B\",\n                                    backgroundColor: doctor ? \"#28282B\" : \"transparent\",\n                                    transition: \"background-color 0.3s ease, color 0.3s ease\",\n                                    fontWeight: \"bold\",\n                                    cursor: \"pointer\",\n                                }}\n                                onClick={() => {\n                                    setDoctor(!doctor), changeColor;\n                                }}\n                            >\n                                Share List\n                            </button>\n                            <button\n                                style={{\n                                    flex: 1,\n                                    border: \"none\",\n                                    borderRadius: \"25px\",\n                                    height: \"100%\",\n                                    color: doctor ? \"#28282B\" : \"#F5F5F5\",\n                                    backgroundColor: doctor ? \"transparent\" : \"#28282B\",\n                                    transition: \"background-color 0.3s ease, color 0.3s ease\",\n                                    fontWeight: \"bold\",\n                                    cursor: \"pointer\",\n                                }}\n                                onClick={() => {\n                                    setDoctor(!doctor), changeColor;\n                                }}\n                            >\n                                Shared\n                            </button>\n                        </div>\n\n                        {/* <div style={{ display: \"flex\", marginLeft: \"100px\" }}>\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                <DateRangePicker\n                                    disablePast\n                                    value={value}\n                                    maxDate={getWeeksAfter(value[0], 4)}\n                                    onChange={(newValue) => {\n                                        setValue(newValue);\n                                    }}\n                                    renderInput={(startProps, endProps) => (\n                                        <React.Fragment>\n                                            <TextField {...startProps} />\n                                            <Box sx={{ mx: 2 }}> to </Box>\n                                            <TextField {...endProps} />\n                                        </React.Fragment>\n                                    )}\n                                />\n                            </LocalizationProvider>\n                        </div> */}\n                    </div>\n                    {doctor ? <ShareList /> : <Shared />}\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default DiagnosticCenterChats;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DiagnosticCenterCharts = () => {\n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"reports\");\n        localStorage.setItem(\"path\", \"Chart\");\n    }, []);\n    useEffect( () => {\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    } ,[])\n    return (\n        <>\n            <Box sx={{ display: \"flex\", width: \"98%\", height: \"100%\", height: \"90%\" }}>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/request\"}>\n                        Request\n                    </NavLink>\n                    <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/examination\"}>\n                        Examination\n                    </NavLink>\n                    <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/report\"}>\n                        Report\n                    </NavLink>\n                    {/* <NavLink to={\"/diagnostCenterDashboard/diagnosticCenterReports/Chart\"}>\n                        Chart\n                    </NavLink> */}\n                </nav>\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        <div className=\"\">Enter your code here Chats</div>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default DiagnosticCenterCharts;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport DrImage from \"../../../static/images/DrImages/image2.png\";\n\nexport const BookingHistoryDrCard = ({ name, specialist, BookingId , profileImage }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img\n                        src={profileImage}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        {specialist} | Booking ID : {BookingId}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import { Box, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination, Skeleton } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport { BookingHistoryDrCard } from \"./BookingHistoryDrCard\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport { currencysign } from \"../../../constants/const\";\n\nconst BookingHistory = () => {\n    const [bookingHistoryData, setBookingHistoryData] = useState([]);\n    const [loading, setLoading] = useState(true); // For skeleton loading\n    const [page, setPage] = useState(0); // For pagination\n    const [rowsPerPage, setRowsPerPage] = useState(5); // Rows per page\n    const [patientId, setPatientID] = useState(localStorage.getItem(\"patient_suid\"));\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance(`/sec/patient/appointmentHistory/${patientId}`);\n            setBookingHistoryData(response?.data?.response || []);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"manage\");\n        localStorage.setItem(\"path\", \"bookinghistory\");\n        setPatientID(localStorage.getItem(\"patient_suid\"));\n        fetchData();\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Paginate data\n    const paginatedData = bookingHistoryData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", }}>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/patientdashboard/manage/bookinghistory\"}>Booking History</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/transactions\"}>Transaction</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/reports\"}>Report</NavLink>\n                </nav>\n\n                <Box className=\"allfile-main-container\">\n                    <Box component={\"div\"} sx={{ position: \"relative\", top: \"4.5em\", width: \"100%\", display: \"flex\", height: \"90%\" }}>\n                        <TableContainer component={Paper} sx={{ backgroundColor: \"#ffff\" }}>\n                            <Table sx={{ minWidth: 650 }} aria-label=\"booking history table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Name & Details</TableCell>\n                                        <TableCell align=\"center\">Status</TableCell>\n                                        <TableCell align=\"center\">Date & Time</TableCell>\n                                        <TableCell align=\"center\">Package</TableCell>\n                                        <TableCell align=\"center\">Amount</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {loading\n                                        ? Array.from(new Array(rowsPerPage)).map((_, index) => (\n                                              <TableRow key={index}>\n                                                  {Array.from(new Array(5)).map((_, colIndex) => (\n                                                      <TableCell key={colIndex}>\n                                                          <Skeleton variant=\"text\" />\n                                                      </TableCell>\n                                                  ))}\n                                              </TableRow>\n                                          ))\n                                        : paginatedData.length === 0 ? (\n                                            <TableRow>\n                                                    <NoAppointmentCard text_one={\"There is no Booking history\"} />\n                                            </TableRow>\n                                          ) : (\n                                            paginatedData.map((row) => (\n                                                <TableRow key={row?.appointment_id}>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        <BookingHistoryDrCard\n                                                            name={`${row?.first_name} ${row?.middle_name} ${row?.last_name}`}\n                                                            specialist={\"Neurologist\"}\n                                                            BookingId={\"001\"}\n                                                            profileImage={`${row?.profile_picture}`}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <CustomButton\n                                                            buttonCss={{\n                                                                display: \"inline-flex\",\n                                                                height: \"2rem\",\n                                                                padding: \"0.5rem 1rem\",\n                                                                justifyContent: \"center\",\n                                                                alignItems: \"center\",\n                                                                gap: \"0.5rem\",\n                                                                flexShrink: \"0\",\n                                                                borderRadius: \"6.25rem\",\n                                                            }}\n                                                            isTransaprent={\"true\"}\n                                                            label={`${row?.status}`}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography\n                                                            sx={{\n                                                                color: \"#939094\",\n                                                                fontFamily: \"Poppins\",\n                                                                fontSize: \"0.875rem\",\n                                                                fontWeight: \"500\",\n                                                            }}\n                                                        >\n                                                            {row?.appointment_date.split(\"T\")[0]} |{\" \"}\n                                                            {row?.appointment_time}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography\n                                                            sx={{\n                                                                color: \"#939094\",\n                                                                fontFamily: \"Poppins\",\n                                                                fontSize: \"0.875rem\",\n                                                                fontWeight: \"500\",\n                                                            }}\n                                                        >\n                                                            {row?.plan_duration} | {row?.plan_name}\n                                                        </Typography>\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        <Typography\n                                                            sx={{\n                                                                color: \"#E72B4A\",\n                                                                fontFamily: \"Poppins\",\n                                                                fontSize: \"0.875rem\",\n                                                                fontWeight: \"500\",\n                                                            }}\n                                                        >\n                                                            {currencysign} {row?.plan_fee}\n                                                        </Typography>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))\n                                          )}\n                                </TableBody>\n                            </Table>\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 15]}\n                                component=\"div\"\n                                count={bookingHistoryData.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                onPageChange={handleChangePage}\n                                onRowsPerPageChange={handleChangeRowsPerPage}\n                            />\n                        </TableContainer>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default BookingHistory;\n","import {\n    Box,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    Skeleton,\n    Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport { ReceiveCard, FaildCard, SendCard } from \"./TransactionCard\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport { currencysign } from \"../../../constants/const\";\nimport \"./transaction.scss\";\n\nconst Transactions = () => {\n    const [data, setData] = useState([]); // Transaction data\n    const [loading, setLoading] = useState(true); // Loading state\n    const [page, setPage] = useState(0); // Current page\n    const [rowsPerPage, setRowsPerPage] = useState(5); // Rows per page\n    const patient_id = localStorage.getItem(\"patient_suid\"); // Fetch patient ID from localStorage\n\n    useEffect(() => {\n        // Set active component for navigation\n        localStorage.setItem(\"activeComponent\", \"manage\");\n        localStorage.setItem(\"path\", \"transactions\");\n        fetchData(patient_id);\n    }, [patient_id]);\n\n    const fetchData = async (patient_id) => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.get(`/sec/patient/transaction/${patient_id}`);\n            setData(response?.data?.response || []); // Update transaction data\n        } catch (error) {\n            console.error(\"Error fetching transaction data:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/patientdashboard/manage/bookinghistory\"}>\n                        Booking History\n                    </NavLink>\n                    <NavLink to={\"/patientdashboard/manage/transactions\"}>Transaction</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/reports\"}>Report</NavLink>\n                </nav>\n\n                <Box className=\"allfile-main-container\">\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            position: \"relative\",\n                            top: \"4em\",\n                            width: \"100%\",\n                            display: \"flex\",\n                            height: \"90%\",\n                            flexDirection: \"column\",\n                        }}\n                    >\n                        {loading ? (\n                            // Display Skeleton Loader while loading\n                            <Box sx={{ padding: \"1rem\" }}>\n                                {[...Array(rowsPerPage)].map((_, index) => (\n                                    <Skeleton\n                                        key={index}\n                                        variant=\"rectangular\"\n                                        height={50}\n                                        sx={{ marginBottom: \"0.5rem\" }}\n                                    />\n                                ))}\n                            </Box>\n                        ) : data.length === 0 ? (\n                            // Display a message when no transactions exist\n                            <NoAppointmentCard\n                                text_one={\"You don't have any transactions\"}\n                                ButtonLabel=\"Explore Appointments\"\n                                ButtonPath=\"/patientdashboard/dashboard/explore\"\n                            />\n                        ) : (\n                            // Display transaction data in a table\n                            <TableContainer component={Paper} sx={{ backgroundColor: \"#ffffff\" }}>\n                                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Transaction & ID</TableCell>\n                                            <TableCell align=\"center\">Date & Time</TableCell>\n                                            <TableCell align=\"center\">Amount</TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {data\n                                            .slice(\n                                                page * rowsPerPage,\n                                                page * rowsPerPage + rowsPerPage,\n                                            )\n                                            .map((row) => (\n                                                <TableRow\n                                                    key={row.transaction_id}\n                                                    sx={{\n                                                        \"&:last-child td, &:last-child th\": {\n                                                            border: 0,\n                                                        },\n                                                    }}\n                                                >\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {row?.status === \"canceled\" ? (\n                                                            <ReceiveCard\n                                                                Payment={\"Paymemt Faild\"}\n                                                                TRXID={row?.transaction_id || \"N/A\"}\n                                                            />\n                                                        ) : (\n                                                            <SendCard\n                                                                Payment={\"Payment Sucessfull\"}\n                                                                TRXID={row?.transaction_id || \"N/A\"}\n                                                            />\n                                                        )}\n                                                    </TableCell>\n                                                    <TableCell align=\"center\">\n                                                        {row?.appointment_date\n                                                            ? row.appointment_date.split(\"T\")[0]\n                                                            : \"N/A\"}\n                                                        |{row?.appointment_time || \"N/A\"}\n                                                    </TableCell>\n                                                    <TableCell\n                                                        align=\"center\"\n                                                        sx={{ color: \"#E72B4A\" }}\n                                                    >\n                                                        {`${currencysign}${row?.amount || \"NA\"}`}\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                    </TableBody>\n                                </Table>\n                                <TablePagination\n                                    component=\"div\"\n                                    count={data.length}\n                                    page={page}\n                                    onPageChange={handleChangePage}\n                                    rowsPerPage={rowsPerPage}\n                                    onRowsPerPageChange={handleChangeRowsPerPage}\n                                    rowsPerPageOptions={[5, 10, 25]}\n                                />\n                            </TableContainer>\n                        )}\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default Transactions;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { NavLink, Outlet, useNavigate } from \"react-router-dom\";\nimport './patientreports.scss';\n\nconst Reports = () => {\n    const navigate = useNavigate();\n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"manage\");\n        localStorage.setItem(\"path\", \"reports\");\n        navigate(\"/patientdashboard/manage/reports/request\")\n    }, []);\n\n\n    return (\n        <Box sx={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\", width: \"100%\" }}>\n            <Box>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/patientdashboard/manage/bookinghistory\"}>\n                        Booking History\n                    </NavLink>\n                    <NavLink to={\"/patientdashboard/manage/transactions\"}>Transaction</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/reports\"}>Report</NavLink>\n                    {/* <NavLink to={\"/patientdashboard/manage/subscriptions\"}>Subscription</NavLink> */}\n                </nav>\n            </Box>\n            <Box\n                component={\"div\"}\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                }}\n            >\n                <nav className=\"NavBar-Container-patient-reports\">\n                    <NavLink to={\"/patientdashboard/manage/reports/request\"}>Request</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/reports/examined\"}>Examined</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/reports/received\"}>Received</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/reports/shared\"}>Shared</NavLink>\n                </nav>\n                <Box sx={{ position: \"relative\"}}>\n                    {/* <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        Action\n                    </Typography> */}\n                    {/* <Typography>Action</Typography> */}\n                </Box>\n            </Box>\n            <Box sx={{ position: \"relative\", top: \"7em\", width: \"100%\" , height : \"100%\" }}>\n                <Outlet />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Reports;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport img from \"../../../../static/images/DrImages/image10.png\";\n\nexport const PatientSearchTable = ({ name, Id, profile }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img src={profile || img} style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }} />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        Booking ID : {Id}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    TablePagination,\n    Skeleton,\n    Typography,\n} from \"@mui/material\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport { PatientSearchTable } from \"../../../../HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticPatientSearch/PatientSearchTable\";\nimport { currencysign } from \"../../../../constants/const\";\nimport \"./allfiles.scss\";\n\nconst AllFiles = () => {\n    const [value, setValue] = useState([null, null]);\n    const [tableData, setTableData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n\n    const patient_id = localStorage.getItem(\"patient_suid\");\n    const status = \"requested\";\n    const fetchData = async (patient_id, status) => {\n        setLoading(true);\n        try {\n            // Corrected URL string interpolation\n            const response = await axiosInstance.get(\n                `/sec/patient/reportsRequested/${patient_id}/${status}`,\n            );\n\n            // Handle the response\n            setTableData(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData(patient_id, status); // Pass both patient_id and status to the function\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <>\n            {/* Date Range Picker */}\n            {/* <Box className=\"date-picker-container\">\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DateRangePicker\n                        disablePast\n                        value={value}\n                        maxDate={getWeeksAfter(value[0], 4)}\n                        onChange={(newValue) => setValue(newValue)}\n                        renderInput={(startProps, endProps) => (\n                            <>\n                                <TextField {...startProps} />\n                                <Box sx={{ mx: 2 }}>to</Box>\n                                <TextField {...endProps} />\n                            </>\n                        )}\n                    />\n                </LocalizationProvider>\n            </Box> */}\n\n            <Box className=\"allfile-main-container\">\n                <Box>\n                    <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Lab Name/Booking ID</TableCell>\n                                    <TableCell align=\"right\">Date</TableCell>\n                                    <TableCell align=\"right\">Schedule</TableCell>\n                                    <TableCell align=\"right\">Test Name</TableCell>\n                                    <TableCell align=\"right\">Price</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {loading ? (\n                                    Array.from(new Array(rowsPerPage)).map((_, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell colSpan={5}>\n                                                <Skeleton variant=\"rectangular\" height={40} />\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                                ) : tableData.length === 0 ? (\n                                    <TableRow>\n                                        <NoAppointmentCard text_one={\"No Data Found\"} />\n                                    </TableRow>\n                                ) : (\n                                    tableData\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row, index) => (\n                                            <TableRow\n                                                key={row?.labID || index}\n                                                sx={{\n                                                    \"&:last-child td, &:last-child th\": {\n                                                        border: 0,\n                                                    },\n                                                }}\n                                            >\n                                                <TableCell>\n                                                    <PatientSearchTable\n                                                        profile={row?.profile_picture}\n                                                        name={row?.lab_name}\n                                                        Id={row?.booking_id}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row?.book_date}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row?.scheduled}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row?.test_name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {`${currencysign}${row?.test_price || \"NA\"}`}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                )}\n                            </TableBody>\n                        </Table>\n                        <TablePagination\n                            component=\"div\"\n                            count={tableData.length}\n                            page={page}\n                            onPageChange={handleChangePage}\n                            rowsPerPage={rowsPerPage}\n                            onRowsPerPageChange={handleChangeRowsPerPage}\n                            rowsPerPageOptions={[5, 10, 25]}\n                        />\n                    </TableContainer>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default AllFiles;\n","import {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Typography,\n    TablePagination,\n    Skeleton,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { PatientSearchTable } from \"../../../../HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticPatientSearch/PatientSearchTable\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport \"./examined.scss\";\n\nconst Examined = () => {\n    const [value, setValue] = useState([null, null]);\n    const [tableData, setTableData] = useState([]);\n    const patient_id = localStorage.getItem(\"patient_suid\");\n    const status = \"examine\";\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n\n    const fetchData = async (patient_id, status) => {\n        setLoading(true);\n        try {\n            // Corrected URL string interpolation\n            const response = await axiosInstance.get(\n                `/sec/patient/reportsExamine/${patient_id}/${status}`,\n            );\n\n            // Handle the response\n            setTableData(response?.data?.response || []);\n        } catch (error) {\n            console.error(\"Error fetching data:\", error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData(patient_id, status); // Pass both patient_id and status to the function\n    }, []);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    return (\n        <>\n            {/* Date Range Picker */}\n            {/* <Box sx={{ width: \"100%\" }}>\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                    <DateRangePicker\n                        disablePast\n                        value={value}\n                        maxDate={getWeeksAfter(value[0], 4)}\n                        onChange={(newValue) => setValue(newValue)}\n                        renderInput={(startProps, endProps) => (\n                            <>\n                                <TextField {...startProps} />\n                                <Box sx={{ mx: 2 }}> to </Box>\n                                <TextField {...endProps} />\n                            </>\n                        )}\n                    />\n                </LocalizationProvider>\n            </Box> */}\n\n            <Box className=\"allfile-main-container\">\n                <Box>\n                    <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Lab Name/Booking ID</TableCell>\n                                    <TableCell align=\"right\">Date & Time</TableCell>\n                                    <TableCell align=\"right\">Schedule</TableCell>\n                                    <TableCell align=\"right\">Test Name</TableCell>\n                                    <TableCell align=\"right\">Price</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {loading ? (\n                                    Array.from(new Array(rowsPerPage)).map((_, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell colSpan={5}>\n                                                <Skeleton variant=\"rectangular\" height={40} />\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                                ) : tableData.length === 0 ? (\n                                    <TableRow>\n                                        <NoAppointmentCard text_one={\"No Data Found\"} />\n                                    </TableRow>\n                                ) : (\n                                    tableData\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row, index) => (\n                                            <TableRow\n                                                key={index}\n                                                sx={{\n                                                    \"&:last-child td, &:last-child th\": {\n                                                        border: 0,\n                                                    },\n                                                }}\n                                            >\n                                                <TableCell component=\"th\" scope=\"row\">\n                                                    <PatientSearchTable\n                                                        name={row?.lab_name}\n                                                        Id={row?.booking_id}\n                                                        profile={row?.profile_picture}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">{\n                                                    row?.book_date\n                                                }</TableCell>\n                                                <TableCell align=\"right\">{\n                                                    row?.scheduled}</TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row?.test_name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row?.test_price}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                                )}\n                            </TableBody>\n                        </Table>\n                        <TablePagination\n                        component=\"div\"\n                        count={tableData.length}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        rowsPerPage={rowsPerPage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                        rowsPerPageOptions={[5, 10, 25]}\n                    />\n                    </TableContainer>\n                    \n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default Examined;\n","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport subsLogo from \"../../../static/images/DrImages/Subs.png\";\n\nconst Subscriptions = () => {\n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"manage\");\n        localStorage.setItem(\"path\", \"subscriptions\");\n    }, []);\n    return (\n        <>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/patientdashboard/manage/bookinghistory\"}>\n                        Booking History\n                    </NavLink>\n                    <NavLink to={\"/patientdashboard/manage/transactions\"}>Transaction</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/reports\"}>Report</NavLink>\n                    <NavLink to={\"/patientdashboard/manage/subscriptions\"}>Subscription</NavLink>\n                </nav>\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"16.875rem\",\n                    }}\n                >\n                    <img style={{ width: \"100%\", height: \"100%\" }} src={subsLogo}></img>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default Subscriptions;\n","var _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgMinimise = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 21,\n    height: 21,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"#fff\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.61 10.111v5.3c0 2.2-1.8 4-4 4H5.11c-2.2 0-4-1.8-4-4v-10.5c0-2.2 1.8-4 4-4h5.2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.61 6.811h-4v-4M13.61 6.811l6-5.9\"\n  }))));\n};\nexport { SvgMinimise as ReactComponent };\nexport default __webpack_public_path__ + \"192f9e1acad1f0817d6910d5aaa4c51c.svg\";","var _g, _defs;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgMic = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 33,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#Mic_svg__a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.36 19.327a3.983 3.983 0 0 0 3.986-4l.013-8c0-2.213-1.787-4-4-4s-4 1.787-4 4v8c0 2.214 1.787 4 4 4Zm7.066-4c0 4-3.387 6.8-7.067 6.8s-7.066-2.8-7.066-6.8H7.026c0 4.547 3.627 8.307 8 8.96v4.373h2.666v-4.373c4.374-.64 8-4.4 8-8.96h-2.266Z\",\n    fill: \"#fff\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m4.986 5.915 22.747 22.746\",\n    stroke: \"#E72B4A\",\n    strokeWidth: 3\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"Mic_svg__a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    transform: \"translate(.36 .661)\",\n    d: \"M0 0h32v32H0z\"\n  })))));\n};\nexport { SvgMic as ReactComponent };\nexport default __webpack_public_path__ + \"0d56a8b29398c0c4d8f36a478c4cd010.svg\";","var _g, _defs;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgVideocam = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#Videocam_svg__a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.36 10.67v-3.5c0-.55-.45-1-1-1h-12c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4Z\",\n    fill: \"#fff\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m.986.798 22.747 22.746\",\n    stroke: \"#E72B4A\",\n    strokeWidth: 3\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"Videocam_svg__a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    transform: \"translate(.36 .17)\",\n    d: \"M0 0h24v24H0z\"\n  })))));\n};\nexport { SvgVideocam as ReactComponent };\nexport default __webpack_public_path__ + \"b0f4824b75f4755db72291d2dfecc68d.svg\";","var _g, _defs;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgFlipCameraIos = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#Flip_camera_ios_svg__a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.36 5.839h-3.17l-1.83-2h-6l-1.83 2H4.36c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2Zm-8 13c-2.76 0-5-2.24-5-5h-2l2.5-2.5 2.5 2.5h-2c0 2.21 1.79 4 4 4 .58 0 1.13-.13 1.62-.35l.74.74c-.71.37-1.5.61-2.36.61Zm4.5-2.5-2.5-2.5h2c0-2.21-1.79-4-4-4-.58 0-1.13.13-1.62.35l-.74-.73c.71-.38 1.5-.62 2.36-.62 2.76 0 5 2.24 5 5h2l-2.5 2.5Z\",\n    fill: \"#fff\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m.986 1.796 22.747 22.746\",\n    stroke: \"#E72B4A\",\n    strokeWidth: 3\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"Flip_camera_ios_svg__a\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    transform: \"translate(.36 .839)\",\n    d: \"M0 0h24v24H0z\"\n  })))));\n};\nexport { SvgFlipCameraIos as ReactComponent };\nexport default __webpack_public_path__ + \"d54d4d4a1ed688716ac62ef248b19dd3.svg\";","import React, { useState } from \"react\";\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\nimport WifiCalling3Icon from \"@mui/icons-material/WifiCalling3\";\nimport VideoCallIcon from \"@mui/icons-material/VideoCall\";\nimport AttachmentIcon from \"@mui/icons-material/Attachment\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport FlipCameraIosIcon from \"@mui/icons-material/FlipCameraIos\";\nimport VideocamIcon from \"@mui/icons-material/Videocam\";\nimport mini from \"../../../static/images/DrImages/minimise.svg\";\nimport john from \"../../../static/images/DrImages/image10.png\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport img from \"../../../static/images/DrImages/image10.png\";\nimport CusttomButton from \"../../../components/CustomButton/custom-button\";\nimport mic from \"../../../static/images/DrImages/Mic.svg\";\nimport videocam from \"../../../static/images/DrImages/Videocam.svg\";\nimport camera from \"../../../static/images/DrImages/Flip camera ios.svg\";\n\nconst VideoCall = () => {\n    const [state, setState] = useState(true);\n    const [video, setVideo] = useState(true);\n    const [cam, setCam] = useState(true);\n    const handleClick = () => {\n        setState(!state);\n    };\n    const handleCl = () => {\n        setVideo(!video);\n    };\n    const handleCli = () => {\n        setCam(!cam);\n    };\n    return (\n        <div style={{ background: \"#484649\", height: \"100%\", display: \"flex\", gap: \"1rem\" }}>\n            <div style={{ background: \"#313033\", width: \"60%\" }}>\n                <div style={{ textAlign: \"end\" }}>\n                    <img src={mini} style={{ marginTop: \"1rem\" }} />\n                </div>\n                <div style={{ textAlign: \"center\", marginTop: \"\" }}>\n                    <img\n                        src={john}\n                        style={{\n                            borderRadius: \"50%\",\n                            height: \"10%\",\n                            width: \"10%\",\n                            marginTop: \"20%\",\n                        }}\n                    />\n                </div>\n                <h3 style={{ color: \"white\", textAlign: \"center\" }}>John Doe</h3>\n                <p style={{ color: \"white\", textAlign: \"center\" }}>Calling</p>\n                <div\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        gap: \"1rem\",\n                        marginTop: \"5%\",\n                    }}\n                >\n                    <button\n                        onClick={handleClick}\n                        style={{ background: \"#484649\", borderRadius: \"50%\", border: \"none\" }}\n                    >\n                        {state ? (\n                            <img src={mic} />\n                        ) : (\n                            <KeyboardVoiceIcon style={{ color: \"white\" }} />\n                        )}\n                    </button>\n                    <button\n                        onClick={handleCl}\n                        style={{ background: \"#484649\", borderRadius: \"50%\", border: \"none\" }}\n                    >\n                        {video ? (\n                            <img src={videocam} />\n                        ) : (\n                            <VideocamIcon style={{ color: \"white\" }} />\n                        )}\n                    </button>\n                    <button\n                        onClick={handleCli}\n                        style={{ background: \"#484649\", borderRadius: \"50%\", border: \"none\" }}\n                    >\n                        {cam ? (\n                            <img src={camera} />\n                        ) : (\n                            <FlipCameraIosIcon style={{ color: \"white\" }} />\n                        )}\n                    </button>\n                    <CustomButton label=\"End Call\" />\n                </div>\n            </div>\n            <div style={{ background: \"#313033\", width: \"40%\", margin: \"10px\" }}>\n                <div style={{ borderBottom: \"1px solid #E6E1E5\", display: \"flex\", margin: \"10px\" }}>\n                    <div style={{ display: \"flex\" }}>\n                        <img src={img} style={{ height: \"30px\", borderRadius: \"10px\" }} />\n                        <div style={{ marginLeft: \"10px\" }}>\n                            <h3 style={{ marginTop: \"10px\", color: \"white\" }}>John Doe</h3>\n                        </div>\n                    </div>\n                </div>\n                <div style={{ textAlign: \"center\", margin: \"auto\", margin: \"2%\" }}>\n                    <div\n                        style={{\n                            background: \"transparent\",\n                            textAlign: \"center\",\n                            width: \"30%\",\n                            margin: \"auto\",\n                            borderRadius: \"10px\",\n                            color: \"#AEAAAE\",\n                            border: \"#AEAAAE 1px solid\",\n                        }}\n                    >\n                        Session Start\n                    </div>\n                    <div style={{ background: \"#EFEFEF\", textAlign: \"start\", width: \"60%\" }}>\n                        <div style={{ color: \"#E72B4A\", marginLeft: \"10px\" }}>\n                            <p>Hi,</p>\n                            <p>good afternoon Dr. Marcia</p>\n                        </div>\n                        <p style={{ color: \"#AEAAAE\", fontSize: \"10PX\", textAlign: \"end\" }}>\n                            12:00 PM\n                        </p>\n                    </div>\n\n                    <div style={{ background: \"#E72B4A\", textAlign: \"start\", width: \"60%\" }}>\n                        <div style={{ color: \"white\", marginLeft: \"10px\" }}>\n                            <p>Hello, Good Afternoon</p>\n                        </div>\n                        <p style={{ color: \"white\", fontSize: \"10PX\", textAlign: \"end\" }}>\n                            3:00 PM\n                        </p>\n                    </div>\n                </div>\n                <div style={{ borderTop: \"1px solid #E6E1E5\", marginTop: \"60%\", display: \"flex\" }}>\n                    <input\n                        style={{\n                            border: \"none\",\n                            background: \"#E6E1E5\",\n                            padding: \"5px\",\n                            marginTop: \"10px\",\n                            width: \"70%\",\n                        }}\n                        placeholder=\"Type Here ...\"\n                    />\n                    <div style={{ marginTop: \"10px\", marginLeft: \"3%\" }}>\n                        <AttachmentIcon style={{ color: \"#AEAAAE\" }} />\n                    </div>\n                    <div style={{ marginTop: \"10px\", marginLeft: \"3%\" }}>\n                        <CameraAltIcon style={{ color: \"#AEAAAE\" }} />\n                    </div>\n                    <CusttomButton label={<SendIcon />} buttonCss={{ marginLeft: \"10px\" }} />\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default VideoCall;\n","import React, { useState } from \"react\";\nimport KeyboardVoiceIcon from \"@mui/icons-material/KeyboardVoice\";\nimport WifiCalling3Icon from \"@mui/icons-material/WifiCalling3\";\nimport VideoCallIcon from \"@mui/icons-material/VideoCall\";\nimport AttachmentIcon from \"@mui/icons-material/Attachment\";\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport img from \"../../../static/images/DrImages/image10.png\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport john from \"../../../static/images/DrImages/image10.png\";\nimport mini from \"../../../static/images/DrImages/minimise.svg\";\nimport CusttomButton from \"../../../components/CustomButton/custom-button\";\nimport mic from \"../../../static/images/DrImages/Mic.svg\";\n\nconst VoiceCall = () => {\n    const [state, setState] = useState(true);\n    const handleClick = () => {\n        setState(!state);\n    };\n    return (\n        <>\n            <div style={{ background: \"#484649\", height: \"100%\", display: \"flex\", gap: \"1rem\" }}>\n                <div style={{ background: \"#313033\", width: \"60%\" }}>\n                    <div style={{ textAlign: \"end\" }}>\n                        <img src={mini} style={{ marginTop: \"1rem\" }} />\n                    </div>\n                    <div>\n                        <img\n                            src={john}\n                            style={{\n                                borderRadius: \"50%\",\n                                height: \"10%\",\n                                width: \"10%\",\n                                marginTop: \"40%\",\n                            }}\n                        />\n                    </div>\n                    <h3 style={{ color: \"white\" }}>John Doe</h3>\n                    <p style={{ color: \"white\" }}>Calling</p>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            gap: \"1rem\",\n                            marginTop: \"10%\",\n                        }}\n                    >\n                        <CustomButton\n                            label={state ? <KeyboardVoiceIcon /> : <img src={mic} />}\n                            handleClick={handleClick}\n                        />\n                        <CustomButton label=\"End Call\" />\n                    </div>\n                    <p style={{ marginTop: \"10%\" }}></p>\n                </div>\n                <div style={{ background: \"#313033\", width: \"40%\", margin: \"10px\" }}>\n                    <div\n                        style={{\n                            borderBottom: \"1px solid #E6E1E5\",\n                            display: \"flex\",\n                            margin: \"10px\",\n                        }}\n                    >\n                        <div style={{ display: \"flex\" }}>\n                            <img src={img} style={{ height: \"30px\", borderRadius: \"10px\" }} />\n                            <div style={{ marginLeft: \"10px\" }}>\n                                <h3 style={{ marginTop: \"10px\", color: \"white\" }}>John Doe</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <div style={{ textAlign: \"center\", margin: \"auto\", margin: \"2%\" }}>\n                        <div\n                            style={{\n                                background: \"transparent\",\n                                textAlign: \"center\",\n                                width: \"30%\",\n                                margin: \"auto\",\n                                borderRadius: \"10px\",\n                                color: \"#AEAAAE\",\n                                border: \"#AEAAAE 1px solid\",\n                            }}\n                        >\n                            Session Start\n                        </div>\n                        <div style={{ background: \"#EFEFEF\", textAlign: \"start\", width: \"60%\" }}>\n                            <div style={{ color: \"#E72B4A\", marginLeft: \"10px\" }}>\n                                <p>Hi,</p>\n                                <p>good afternoon Dr. Marcia</p>\n                            </div>\n                            <p style={{ color: \"#AEAAAE\", fontSize: \"10PX\", textAlign: \"end\" }}>\n                                12:00 PM\n                            </p>\n                        </div>\n\n                        <div style={{ background: \"#E72B4A\", textAlign: \"start\", width: \"60%\" }}>\n                            <div style={{ color: \"white\", marginLeft: \"10px\" }}>\n                                <p>Hello, Good Afternoon</p>\n                            </div>\n                            <p style={{ color: \"white\", fontSize: \"10PX\", textAlign: \"end\" }}>\n                                3:00 PM\n                            </p>\n                        </div>\n                    </div>\n                    <div\n                        style={{\n                            borderTop: \"1px solid #E6E1E5\",\n                            marginTop: \"80%\",\n                            display: \"flex\",\n                        }}\n                    >\n                        <input\n                            style={{\n                                border: \"none\",\n                                background: \"#E6E1E5\",\n                                padding: \"5px\",\n                                marginTop: \"10px\",\n                                width: \"70%\",\n                            }}\n                            placeholder=\"Type Here ...\"\n                        />\n                        <div style={{ marginTop: \"10px\", marginLeft: \"3%\" }}>\n                            <AttachmentIcon style={{ color: \"#AEAAAE\" }} />\n                        </div>\n                        <div style={{ marginTop: \"10px\", marginLeft: \"3%\" }}>\n                            <CameraAltIcon style={{ color: \"#AEAAAE\" }} />\n                        </div>\n                        <CusttomButton label={<SendIcon />} buttonCss={{ marginLeft: \"10px\" }} />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default VoiceCall;\n","import { Box, Typography, Skeleton } from \"@mui/material\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../drdetailscard.scss\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport hcfpic from \"../../../../../static/images/DrImages/doctor_alter.jpeg\";\nimport CustomButton from \"../../../../../components/CustomButton/custom-button\";\n\nconst useStyles = makeStyles({\n    drname: {\n        color: \"#313033\",\n        fontFamily: \"Poppins\",\n        fontSize: \"20px\",\n        fontStyle: \"normal\",\n        fontWeight: \"900\",\n        lineHeight: \"30px\",\n    },\n    specialist: {\n        fontFamily: \"Poppins\",\n        fontSize: \"16px\",\n        fontStyle: \"normal\",\n        fontWeight: \"400\",\n        lineHeight: \"24px\",\n    },\n    cardContainer: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n});\n\nconst Container1 = ({\n    Fname,\n    profile_picture,\n    company_name,\n    business_name,\n    worktime,\n    isLoading, // Suggest passing isLoading from parent for better control\n}) => {\n    const classes = useStyles();\n    const navigate = useNavigate();\n    const handleBackClick = () => {\n        // Navigate to 'patientdashboard/dashboard/explore'\n        navigate(\"/patientdashboard/dashboard/explore\");\n    };\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            {/* Button Container */}\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <CustomButton\n                    label=\"Back\"\n                    isTransaprent={true}\n                    leftIcon={<ChevronLeftIcon />}\n                    buttonCss={{ border: \"none\" }}\n                    handleClick={handleBackClick}\n                    />\n                \n            </Box>\n\n            {/* Doctor Card */}\n            <Box className={classes.cardContainer}>\n                <Box sx={{ display: \"flex\", marginTop: \"1%\", width: \"70%\" }}>\n                    {/* Doctor Image */}\n                    <Box sx={{ width: \"213px\", height: \"184px\" }}>\n                        {isLoading ? (\n                            <Skeleton variant=\"rectangular\" width=\"100%\" height=\"100%\" />\n                        ) : (\n                            <Box\n                                component={\"img\"}\n                                src={profile_picture || hcfpic}\n                                sx={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                    borderRadius: \"8px\",\n                                    padding: \"2%\",\n                                }}\n                            />\n                        )}\n                    </Box>\n                    {/* Doctor Details */}\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            width: \"100%\",\n                            alignItems: \"center\",\n                            padding: \"2%\",\n                        }}\n                    >\n                        <Box>\n                            <Typography className={classes.drname}>\n                                {isLoading ? <Skeleton width={100} /> : business_name}\n                            </Typography>\n                            <Typography className={classes.specialist}>\n                                {isLoading ? <Skeleton width={80} /> : company_name}\n                            </Typography>\n                            \n                        </Box>\n                    </Box>\n                </Box>\n\n                {/* Working Time */}\n                <Box sx={{ marginTop: \"70px\" }}>\n                    <Typography className={classes.drname}>\n                        {isLoading ? <Skeleton width={120} /> : \"Working Time\"}\n                    </Typography>\n                    <Typography className={classes.specialist}>\n                        {isLoading ? \n                            <Skeleton width={150} />\n                         : worktime}\n                    </Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nContainer1.propTypes = {\n    Fname: PropTypes.string,\n    profile_picture: PropTypes.string,\n    company_name: PropTypes.string,\n    business_name: PropTypes.string,\n    service_day_from: PropTypes.string,\n    service_day_to: PropTypes.string,\n    isLoading: PropTypes.bool, // New prop type for loading\n};\n\nContainer1.defaultProps = {\n    isLoading: false, // Set a default value for loading state\n};\n\nexport default Container1;\n","var _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgIcon = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 28,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 11.345a5.096 5.096 0 1 0 0-10.193 5.096 5.096 0 0 0 0 10.193Z\",\n    fill: \"#F395A5\",\n    stroke: \"#F395A5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.343 26.8c3.314 0 6.124-2.865 4.445-5.722-1.974-3.358-5.625-5.621-9.788-5.621s-7.815 2.263-9.788 5.621c-1.679 2.857 1.13 5.723 4.444 5.723h10.687Z\",\n    fill: \"#E72B4A\",\n    stroke: \"#E72B4A\"\n  }))));\n};\nexport { SvgIcon as ReactComponent };\nexport default __webpack_public_path__ + \"d504abe43cc8ea470ce1167f9d4ad92e.svg\";","var _path, _path2, _circle, _circle2, _circle3;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgMessage = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 26,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m6.226 23.138-5.283.948 1.355-5.283 3.928 4.335Z\",\n    fill: \"#F395A5\",\n    stroke: \"#F395A5\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 25.169c6.734 0 12.192-5.459 12.192-12.192C25.192 6.244 19.734.785 13 .785 6.267.785.81 6.244.81 12.977.809 19.71 6.267 25.169 13 25.169Z\",\n    fill: \"#E72B4A\",\n    stroke: \"#E72B4A\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8.207,\n    cy: 13.633,\n    r: 1.549,\n    fill: \"#F395A5\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 13,\n    cy: 13.633,\n    r: 1.549,\n    fill: \"#F395A5\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 17.793,\n    cy: 13.633,\n    r: 1.549,\n    fill: \"#F395A5\"\n  })));\n};\nexport { SvgMessage as ReactComponent };\nexport default __webpack_public_path__ + \"fa2933749d93d4d46188f3e33e873912.svg\";","var _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgBag = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 30,\n    height: 28,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.227 7.264c0-3.142 2.57-5.713 5.713-5.713 3.142 0 5.713 2.57 5.713 5.713\",\n    stroke: \"#F395A5\",\n    strokeWidth: 3\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.795 26.403H6.085c-2.285 0-4.142-1.714-4.285-3.999l-.714-9.998C.8 9.978 2.8 7.836 5.37 7.836h19.281c2.428 0 4.428 2.142 4.285 4.57l-.714 9.998c-.286 2.285-2.143 4-4.428 4Z\",\n    fill: \"#E72B4A\",\n    stroke: \"#E72B4A\",\n    strokeWidth: 1.5\n  }))));\n};\nexport { SvgBag as ReactComponent };\nexport default __webpack_public_path__ + \"ade6f78f37b666a930e430f737387634.svg\";","var _path, _path2;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgGroup92 = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 34,\n    height: 34,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.183 4.39c.715-1.55 2.918-1.55 3.633 0l2.376 5.153a2 2 0 0 0 1.581 1.149l5.635.668c1.695.2 2.375 2.295 1.122 3.454l-4.166 3.853a2 2 0 0 0-.604 1.858l1.106 5.566c.333 1.674-1.449 2.968-2.938 2.134l-4.952-2.771a2 2 0 0 0-1.953 0l-4.952 2.771c-1.49.834-3.271-.46-2.938-2.134l1.105-5.566a2 2 0 0 0-.603-1.858l-4.166-3.853c-1.253-1.159-.573-3.253 1.122-3.454l5.635-.668a2 2 0 0 0 1.58-1.149l2.377-5.153Z\",\n    fill: \"#E72B4A\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4.098c0-.858 1.167-1.115 1.526-.336l2.667 5.781a2 2 0 0 0 1.58 1.149l5.635.668c1.695.2 2.376 2.295 1.123 3.454l-4.166 3.853a2 2 0 0 0-.604 1.858l1.106 5.566c.332 1.674-1.45 2.968-2.939 2.134l-4.905-2.745A2 2 0 0 1 17 23.735V4.098Z\",\n    fill: \"#F395A5\"\n  })));\n};\nexport { SvgGroup92 as ReactComponent };\nexport default __webpack_public_path__ + \"84b413e3abb47a29731870dc88edcb84.svg\";","import { Box, Typography, Skeleton } from \"@mui/material\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport personIcon from \"../../../../../static/images/DrImages/icon.svg\";\nimport messageIcon from \"../../../../../static/images/DrImages/message.svg\";\nimport bagIcon from \"../../../../../static/images/DrImages/bag.svg\";\nimport starIcon from \"../../../../../static/images/DrImages/Group 92.svg\";\n\nconst DrExp = [\n    {\n        logo: personIcon,\n        number: \"4000+\",\n        type: \"Patient\",\n    },\n    {\n        logo: bagIcon,\n        number: \"10+\",\n        type: \"Experience\",\n    },\n    {\n        logo: starIcon,\n        number: \"4.8\",\n        type: \"Rating\",\n    },\n    {\n        logo: messageIcon,\n        number: \"3027\",\n        type: \"Reviews\",\n    },\n];\n\nconst useStyles = makeStyles({\n    logoDesign: {\n        height: \"70px\",\n        width: \"70px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"50px\",\n        backgroundColor: \"#FDEAED\",\n    },\n});\n\nconst Container2 = ({ isLoading }) => {\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            {isLoading ? (\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        marginTop: \"5%\",\n                        width: \"100%\",\n                    }}\n                >\n                    {DrExp.map((_, index) => (\n                        <Box key={index} sx={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Skeleton\n                                variant=\"circular\"\n                                width={56}\n                                height={56}\n                                sx={{ backgroundColor: \"#FDEAED\", marginRight: \"10%\" }}\n                            />\n                            <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                                <Skeleton\n                                    variant=\"text\"\n                                    width={40}\n                                    height={30}\n                                    sx={{ marginBottom: 1 }}\n                                />\n                                <Skeleton variant=\"text\" width={60} height={20} />\n                            </Box>\n                        </Box>\n                    ))}\n                </Box>\n            ) : (\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"5%\" }}>\n                    {DrExp.map((fieldsData, index) => (\n                        <Box key={index} sx={{ display: \"flex\" }}>\n                            {/* For image */}\n                            <Box\n                                sx={{\n                                    height: \"56px\",\n                                    width: \"56px\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    backgroundColor: \"#FDEAED\",\n                                    borderRadius: \"50px\",\n                                }}\n                            >\n                                <Box component=\"img\" src={fieldsData.logo} alt=\"Doctor Logo\" />\n                            </Box>\n                            <Box\n                                sx={{\n                                    marginLeft: \"10%\",\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    alignItems: \"flex-start\",\n                                }}\n                            >\n                                <Typography\n                                    component=\"h3\"\n                                    sx={{\n                                        fontFamily: \"Poppins\",\n                                        fontSize: \"20px\",\n                                        fontStyle: \"normal\",\n                                        fontWeight: \"500\",\n                                        lineHeight: \"30px\",\n                                        color: \"#E72B4A\",\n                                    }}\n                                >\n                                    {fieldsData.number}\n                                </Typography>\n                                <Typography component=\"h4\">{fieldsData.type}</Typography>\n                            </Box>\n                        </Box>\n                    ))}\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default Container2;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { NavLink, Outlet, useNavigate, useParams } from \"react-router-dom\";\nimport CustomButton from \"../../../../../components/CustomButton\";\n\nconst Container4 = ({ID, description}) => {\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        navigate(`/patientdashboard/hcfDetailCard/${ID}/about`, { state: { description } })\n    },[description])\n    return (\n        <Box\n            style={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                marginTop: \"20px\",\n                marginLeft: \"20px\",\n            }}\n        >\n            <nav className=\"NavBar-Container-Appoinement\">\n            <NavLink to={`/patientdashboard/hcfDetailCard/${ID}/about`} state={{ description }}>About</NavLink>\n            <NavLink to={`/patientdashboard/hcfDetailCard/${ID}/department`}>\n                    Department\n                </NavLink>\n                <NavLink to={`/patientdashboard/hcfDetailCard/${ID}/labs`}>Labs</NavLink>\n            </nav>\n            <Outlet />\n        </Box>\n    );\n};\n\nexport default Container4;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport Container1 from \"./Container1\";\nimport Container2 from \"./Container2\";\nimport Container4 from \"./Container4\";\nimport messageIcon from \"../../../../../static/images/DrImages/message.svg\";\nimport bagIcon from \"../../../../../static/images/DrImages/bag.svg\";\nimport starIcon from \"../../../../../static/images/DrImages/Group 92.svg\";\nimport axiosInstance from \"../../../../../config/axiosInstance\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport { formatDateDay } from \"../../../../../constants/const\";\n\nconst HCFDetailedCard = () => {\n    const params = useParams();\n    const ID = params.hcfID;\n    console.log(ID);\n\n    const [hcfData, setHCFDataId] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);  // Track loading state\n    const [isError, setIsError] = useState(false);    // Track error state\n\n    const fetchDataHCFCardsId = async () => {\n        try {\n            setIsLoading(true); // Start loading\n            const response = await axiosInstance(`/sec/patient/dashboardHcfdetailsbyId/${ID}`);\n            console.log(\"Fetch the response : \", response?.data?.response[0]);\n            setHCFDataId(response?.data?.response[0]);\n            setIsLoading(false); // End loading\n        } catch (error) {\n            console.log(error.response);\n            setIsLoading(false); // End loading\n            setIsError(true);    // Set error state\n        }\n    };\n\n    useEffect(() => {\n        fetchDataHCFCardsId();\n    }, [ID]);\n\n    const fallbackText = \"Not Available\";\n    const isDataEmpty = !hcfData;\n\n    return (\n        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n            {/* Loading Skeleton */}\n            {isLoading && !isError ? (\n                <Skeleton height={200} />\n            ) : isError ? (\n                <Box sx={{ padding: 2, color: \"red\" }}>Error fetching data, please try again later.</Box>\n            ) : (\n                <>\n                    {/* Main Content */}\n                    <Container1\n                        business_name={`${hcfData?.first_name ?? fallbackText} ${hcfData?.middle_name ?? fallbackText} ${hcfData?.last_name ?? fallbackText}`}\n                        company_name={hcfData?.company_name ?? fallbackText}\n                        worktime={`${formatDateDay(hcfData?.service_day_from) ?? fallbackText} - ${formatDateDay(hcfData?.service_day_to) ?? fallbackText}`}\n                        Qualification={hcfData?.hcf_name ?? fallbackText}\n                        profile_picture={hcfData?.profile_picture ?? \"\"}\n                        isLoading={isLoading} // Pass isLoading prop to Container1\n                    />\n                    <Container4 \n                        sx={{ marginTop: \"-50px\" }} \n                        ID={ID} \n                        isLoading={isLoading} \n                        description={hcfData?.about ?? fallbackText}\n                    />\n                </>\n            )}\n        </Box>\n    );\n};\n\nexport default HCFDetailedCard;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst SuperAdminDashboard = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        navigate(\"/superadmin/dashboard/maindashboard\");\n        // document.getElementById(\"search_bar_modal\").style.display = \"none\";\n\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default SuperAdminDashboard;\n","import React, { useEffect, useState } from \"react\";\n// import \"./SuperAdminhistory.scss\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport { Box } from \"@mui/material\";\n\nconst SuperAdminHistory = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"doctor\"\n            ? \"/superadmin/history/doctor\"\n            : localStorage.getItem(\"path\") == \"patient\"\n            ? \"/superadmin/history/patient\"\n            : localStorage.getItem(\"path\") == \"hcf\"\n            ? \"/superadmin/history/hcf\"\n            : \"/superadmin/history/doctor\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n\n    }, []);\n\n    useEffect( () => {\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    } ,[])\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default SuperAdminHistory;\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\n\nconst SuperAdminAccessibilty = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"doctor\"\n            ? \"/superadmin/accessibility/doctors\"\n            : localStorage.getItem(\"path\") == \"patient\"\n            ? \"/superadmin/accessibility/patient\"\n            : localStorage.getItem(\"path\") == \"hcf\"\n            ? \"/superadmin/accessibility/hcf\"\n            : \"/superadmin/accessibility/doctors\",\n    );\n    useEffect(() => {\n        // make a sideEffect here\n        navigate(String(navigateToRoute));\n    }, []);\n\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default SuperAdminAccessibilty;\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { Outlet, useNavigate } from \"react-router-dom\";\n\nconst SuperAdminLogsBody = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"auditlogs\"\n            ? \"/superadmin/logs/auditlogs\"\n            : \"/superadmin/logs/auditlogs\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default SuperAdminLogsBody;\n","import React, { useEffect, useState } from \"react\";\n// import \"./SuperAdminhistory.scss\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport { Box } from \"@mui/material\";\n\nconst SuperAdminTransaction = () => {\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"doctor\"\n            ? \"/superadmin/transaction/doctor\"\n            : localStorage.getItem(\"path\") == \"hcf\"\n            ? \"/superadmin/transaction/hcf\"\n            : \"/superadmin/transaction/doctor\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default SuperAdminTransaction;\n","import React, { useEffect, useState } from \"react\";\n// import \"./SuperAdminhistory.scss\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport { Box } from \"@mui/material\";\n\nconst SuperAdminPackage = () => {\n    console.log(\"Entered Super admin package\")\n    const navigate = useNavigate();\n\n    const [navigateToRoute, setNavigateToRoute] = useState(\n        localStorage.getItem(\"path\") == \"packagepatient\"\n            ? \"/superadmin/package/packagepatient\"\n            : localStorage.getItem(\"path\") == \"packagedoctor\"\n            ? \"/superadmin/package/packagedoctor\"\n            : \"/superadmin/package/packagepatient\",\n    );\n    useEffect(() => {\n        navigate(String(navigateToRoute));\n    }, []);\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    // console.log(\"params : \" ,params);\n    console.log(\"location : \", location.pathname);\n    localStorage.setItem(\"path\", location.pathname);\n    return (\n        <>\n            <Box sx={{ width: \"100%\", height: \"95vh\" }}>\n                <Outlet />\n            </Box>\n        </>\n    );\n};\n\nexport default SuperAdminPackage;\n","import React, { useEffect, useState } from \"react\";\nimport { Drafts } from \"@mui/icons-material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport MonetizationOnIcon from \"@mui/icons-material/MonetizationOn\";\nimport ReceiptIcon from \"@mui/icons-material/Receipt\";\nimport CustomMenuDrawer from \"../../components/CustomMenuDrawer/custom-menu-drawer\";\nimport SuperAdminDashboard from \"../SuperAdminDashboard/SuperAdminDashboard\";\nimport SuperAdminHistory from \"../SuperAdminHistory/SuperAdminhistory\";\nimport SuperAdminAccessibilty from \"../SuperAdminAcessibility/SuperAdminAccessibility\";\nimport SuperAdminLogsBody from \"../SuperAdminLogs/SuperAdminLogsBody\";\n// import SuperAdminPackage from \"../SuperAdminPackage/SuperAdminPackage\";\nimport SuperAdminTransaction from \"../SuperAdminTransaction/SperAdminTransaction\";\nimport SuperAdminPackage from \"../SuperAdminPackage/SuperAdminPackage\";\n\nfunction SuperAdminBody() {\n    const drawerList1 = [\n        { name: \"Dashboard\", icon: <Drafts /> },\n        { name: \"History\", icon: <PersonIcon /> },\n        { name: \"Acessibility\", icon: <ListAltIcon /> },\n        { name: \"Logs\", icon: <SettingsIcon /> },\n        { name: \"Packages\", icon: <MonetizationOnIcon /> },\n        { name: \"Transaction\", icon: <ReceiptIcon /> },\n    ];\n    const drawerComponentList = {\n        // dashboard: <MainDashboard/>,\n        dashboard: <SuperAdminDashboard />,\n        history: <SuperAdminHistory />,\n        acessibility: <SuperAdminAccessibilty />,\n        logs: <SuperAdminLogsBody />,\n        packages: <SuperAdminPackage />,\n        transaction: <SuperAdminTransaction />,\n    };\n\n    const [activeComponent, setActiveComponent] = useState();\n    useEffect(() => {\n        localStorage.getItem(\"activeComponent\") === \"history\"\n            ? setActiveComponent(drawerComponentList.history)\n            : localStorage.getItem(\"activeComponent\") === \"acessibility\"\n            ? setActiveComponent(drawerComponentList.acessibility)\n            : localStorage.getItem(\"activeComponent\") === \"logs\"\n            ? setActiveComponent(drawerComponentList.logs)\n            : localStorage.getItem(\"activeComponent\") === \"package\"\n            ? setActiveComponent(drawerComponentList.package)\n            : localStorage.getItem(\"activeComponent\") === \"transaction\"\n            ? setActiveComponent(drawerComponentList.transaction)\n            : setActiveComponent(drawerComponentList.dashboard);\n    }, []);\n\n    return (\n        <>\n            <div className=\"usage\">\n                <div className=\"component-library\">\n                    <div className=\"items\">\n                        <CustomMenuDrawer\n                            headerLabel={\"custom drawer\"}\n                            list1={drawerList1}\n                            // list2={drawerList2}\n                            profilepath={\"superadmin\"}\n                            handleOnMenuSelect={(item) =>\n                                setActiveComponent(drawerComponentList[item.toLowerCase()])\n                            }\n                        >\n                            {/* <Box sx={{width : \"100%\"}}> */}\n                            {activeComponent}\n                            {/* </Box> */}\n                        </CustomMenuDrawer>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SuperAdminBody;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n    Box,\n    Paper,\n    Typography,\n    Card,\n    CardContent,\n    Skeleton,\n    Button,\n    Grid,\n    Chip,\n    Divider,\n} from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar\";\nimport dayjs from \"dayjs\";\n\nconst DiagnostLabs = () => {\n    const { labId } = useParams();\n    const navigate = useNavigate();\n    const [labData, setLabData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [snackType, setSnackType] = useState(\"success\");\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackOpen, setSnackOpen] = useState(false);\n    const hcf_id = localStorage.getItem(\"hcfadmin_suid\");\n\n    // Fetch lab data by labId\n    const fetchLabData = async () => {\n        setLoading(true);\n        try {\n            console.log(\"Fetching lab data for labId:\", labId);\n            const response = await axiosInstance.get(`/sec/hcf/getHcfLab/${hcf_id}`);\n            console.log(\"All labs response:\", response?.data);\n            \n            // Find the specific lab by labId\n            const allLabs = response?.data?.response || [];\n            const specificLab = allLabs.find(lab => lab.exam_id == labId);\n            \n            if (specificLab) {\n                setLabData(specificLab);\n                console.log(\"Found lab data:\", specificLab);\n            } else {\n                console.log(\"Lab not found with ID:\", labId);\n                setSnackType(\"error\");\n                setSnackMessage(\"Lab not found!\");\n                setSnackOpen(true);\n            }\n        } catch (error) {\n            console.error(\"Error fetching lab data:\", error);\n            setSnackType(\"error\");\n            setSnackMessage(\"Error fetching lab data!\");\n            setSnackOpen(true);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (labId && hcf_id) {\n            fetchLabData();\n        }\n    }, [labId, hcf_id]);\n\n    const handleBack = () => {\n        navigate(\"/hcfadmin/diagnosticcenter/labs\");\n    };\n\n    const handleEdit = () => {\n        navigate(`/hcfadmin/diagnosticcenter/labs/${labId}/edit`);\n    };\n\n    const handleDelete = async () => {\n        if (window.confirm(\"Are you sure you want to delete this lab?\")) {\n            try {\n                await axiosInstance.delete(`/sec/hcf/deleteLab?exam_id=${labId}`);\n                setSnackType(\"success\");\n                setSnackMessage(\"Lab deleted successfully!\");\n                setSnackOpen(true);\n                setTimeout(() => {\n                    navigate(\"/hcfadmin/diagnosticcenter/labs\");\n                }, 2000);\n            } catch (error) {\n                console.error(\"Error deleting lab:\", error);\n                setSnackType(\"error\");\n                setSnackMessage(\"Error deleting lab!\");\n                setSnackOpen(true);\n            }\n        }\n    };\n\n    if (loading) {\n        return (\n            <Box sx={{ p: 3 }}>\n                <Skeleton variant=\"rectangular\" width=\"100%\" height={200} />\n                <Box sx={{ mt: 2 }}>\n                    <Skeleton variant=\"text\" width=\"60%\" height={40} />\n                    <Skeleton variant=\"text\" width=\"40%\" height={30} />\n                    <Skeleton variant=\"text\" width=\"80%\" height={30} />\n                </Box>\n            </Box>\n        );\n    }\n\n    if (!labData) {\n        return (\n            <Box sx={{ p: 3, textAlign: \"center\" }}>\n                <Typography variant=\"h5\" color=\"error\">\n                    Lab not found\n                </Typography>\n                <Button \n                    variant=\"contained\" \n                    onClick={handleBack}\n                    sx={{ mt: 2 }}\n                >\n                    Go Back\n                </Button>\n            </Box>\n        );\n    }\n\n    return (\n        <Box sx={{ p: 3 }}>\n            {/* Header */}\n            <Box sx={{ display: \"flex\", alignItems: \"center\", mb: 3 }}>\n                <Button\n                    startIcon={<ArrowBackIcon />}\n                    onClick={handleBack}\n                    sx={{ mr: 2 }}\n                >\n                    Back\n                </Button>\n                <Typography variant=\"h4\" component=\"h1\">\n                    Lab Details\n                </Typography>\n            </Box>\n\n            {/* Lab Details Card */}\n            <Card sx={{ mb: 3 }}>\n                <CardContent>\n                    <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"flex-start\", mb: 2 }}>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {labData.exam_name || \"Lab Name Not Available\"}\n                        </Typography>\n                        <Box sx={{ display: \"flex\", gap: 1 }}>\n                            <Button\n                                variant=\"outlined\"\n                                startIcon={<EditIcon />}\n                                onClick={handleEdit}\n                                color=\"primary\"\n                            >\n                                Edit\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                startIcon={<DeleteIcon />}\n                                onClick={handleDelete}\n                                color=\"error\"\n                            >\n                                Delete\n                            </Button>\n                        </Box>\n                    </Box>\n\n                    <Divider sx={{ mb: 2 }} />\n\n                    <Grid container spacing={3}>\n                        {/* Basic Information */}\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h6\" sx={{ mb: 2, color: \"primary.main\" }}>\n                                Basic Information\n                            </Typography>\n                            \n                            <Box sx={{ mb: 2 }}>\n                                <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                                    Lab Name\n                                </Typography>\n                                <Typography variant=\"body1\">\n                                    {labData.exam_name || \"Not specified\"}\n                                </Typography>\n                            </Box>\n\n                            <Box sx={{ mb: 2 }}>\n                                <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                                    Department\n                                </Typography>\n                                <Typography variant=\"body1\">\n                                    {labData.department_name || \"Not specified\"}\n                                </Typography>\n                            </Box>\n\n                            <Box sx={{ mb: 2 }}>\n                                <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                                    Description\n                                </Typography>\n                                <Typography variant=\"body1\">\n                                    {labData.description || \"No description available\"}\n                                </Typography>\n                            </Box>\n                        </Grid>\n\n                        {/* Working Hours */}\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h6\" sx={{ mb: 2, color: \"primary.main\" }}>\n                                Working Hours\n                            </Typography>\n                            \n                            <Box sx={{ mb: 2 }}>\n                                <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                                    Working Days\n                                </Typography>\n                                <Typography variant=\"body1\">\n                                    {labData.lab_working_days_from && labData.lab_working_days_to \n                                        ? `${dayjs(labData.lab_working_days_from).format(\"MMM DD, YYYY\")} - ${dayjs(labData.lab_working_days_to).format(\"MMM DD, YYYY\")}`\n                                        : \"Not specified\"\n                                    }\n                                </Typography>\n                            </Box>\n\n                            <Box sx={{ mb: 2 }}>\n                                <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                                    Working Time\n                                </Typography>\n                                <Typography variant=\"body1\">\n                                    {labData.lab_working_time_from && labData.lab_working_time_to \n                                        ? `${labData.lab_working_time_from} - ${labData.lab_working_time_to}`\n                                        : \"Not specified\"\n                                    }\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    </Grid>\n\n                    {/* Status */}\n                    <Box sx={{ mt: 3, pt: 2, borderTop: \"1px solid #e0e0e0\" }}>\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\" sx={{ mb: 1 }}>\n                            Status\n                        </Typography>\n                        <Chip \n                            label=\"Active\" \n                            color=\"success\" \n                            size=\"small\"\n                        />\n                    </Box>\n                </CardContent>\n            </Card>\n\n            {/* Snackbar for notifications */}\n            <CustomSnackBar\n                snackType={snackType}\n                snackMessage={snackMessage}\n                snackOpen={snackOpen}\n                setSnackOpen={setSnackOpen}\n            />\n        </Box>\n    );\n};\n\nexport default DiagnostLabs;","import React, { useEffect, useState } from \"react\";\n// import DoctorStatisticsNavbar from \"../../CustomDoctorComponent/DoctorStatisticsNavbar/DoctorStatisticsNavbar\";\nimport {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    CircularProgress,\n    TablePagination,\n    Avatar,\n    Skeleton,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport { PaginationCard } from \"../../../PatientDashboard/PatientAppointment/PatientCards\";\nimport { DoctorBookingCard } from \"../../../DoctorModule/DoctorStatistics/DoctorBookingHistory/DoctorBookingCard\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport { baseURL } from \"../../../constants/const\";\nimport DateModal from \"../../../components/DateModal/DateModal\";\nimport FilterModal from \"../../../components/FilterModal/FilterModal\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\nconst rows = [\n    createData(\n        <DoctorBookingCard name={\"Jolie\"} patientId={\"0001\"} Id={\"001\"} />,\n        <CustomButton label=\"Complete\" isTransaprent />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                textAlign: \"center\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.625rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"400\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01-02-2023 10:30 AM\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                textAlign: \"center\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.625rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"400\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            30min | Messaging pack\n        </Typography>,\n        <h5 style={{ color: \"red\" }}>₹12</h5>,\n    ),\n    createData(\n        <DoctorBookingCard name={\"Jolie\"} patientId={\"0001\"} Id={\"002\"} />,\n        <CustomButton label=\"Cancelled\" isTransaprent />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                textAlign: \"center\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.625rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"400\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01-02-2023 10:30 AM\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",          \n                textAlign: \"center\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.625rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"400\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            30min | Video call pack\n        </Typography>,\n        <h5 style={{ color: \"red\" }}>$20</h5>,\n    ),\n];\n\nconst SuperAdminLogs = () => {\n    const [cardData, setCardData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(10);\n    const [totalRows, setTotalRows] = useState(0);\n\n    \n    const fetchData = async (pageNum = 0, pageSize = rowsPerPage) => {\n        setLoading(true);\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/auditLogs',{\n                params: {\n                    page: pageNum + 1,\n                    limit: pageSize,\n                },  \n            });\n            console.log(\"Dashboard Response from API: \",resp?.data);\n            setCardData(resp?.data?.response || []);\n            setTotalRows(resp?.data?.response?.totalCount || 0);\n        }catch(err){\n            console.log(\"Error : \", err);\n            setCardData([]);\n            setTotalRows(0);\n        }finally {\n            setLoading(false);\n        }\n      };\n      \n      useEffect( () => {\n        fetchData(page, rowsPerPage);\n      },[page, rowsPerPage] )\n    \n      React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"logs\");\n        localStorage.setItem(\"path\", \"auditlogs\");\n    }, []);\n\n\n    const handlePageChange = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleRowsPerPageChange = (event) => {\n        const newRowsPerPage = parseInt(event.target.value, 10);\n        setRowsPerPage(newRowsPerPage);\n        setPage(0);\n    };\n\n    // const paginatedData = cardData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n    const renderSkeletonRow = () => (\n        <TableRow>\n            <TableCell><Skeleton variant=\"rounded\" width={200} height={50} /></TableCell>\n            <TableCell align=\"center\"><Skeleton variant=\"text\" width={100} /></TableCell>\n            <TableCell align=\"center\"><Skeleton variant=\"text\" width={100} /></TableCell>\n            <TableCell align=\"center\"><Skeleton variant=\"text\" width={100} /></TableCell>\n            <TableCell align=\"center\"><Skeleton variant=\"text\" width={100} /></TableCell>\n        </TableRow>\n    );\n    \n\n\n    \n    return (\n        <>\n            <div className=\"nav-d-f-container\">\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/superadmin/logs/auditlogs\"}>Audit Logs</NavLink>\n                </nav>\n                <div className=\"date-filter1\">\n                    <DateModal />\n                    <FilterModal />\n                </div>\n            </div>\n            <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                    <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 650}} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"Right\"><strong>Name & ID</strong></TableCell>\n                                    <TableCell align=\"center\"><strong>Status</strong></TableCell>\n                                    <TableCell align=\"center\"><strong>Action ID</strong></TableCell>\n                                    <TableCell align=\"center\"><strong>Action</strong></TableCell>\n                                    <TableCell align=\"center\"><strong>Timestamp</strong></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {loading ? (\n                                Array.from({ length: rowsPerPage }).map((_, index) => (\n                                    renderSkeletonRow()\n                                ))\n                            ) : cardData?.length ? (\n                                cardData.map((data) => (\n                                //     <TableRow>\n                                //         <TableCell colSpan={5} align=\"center\">\n                                //         <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" padding=\"20px\">\n                                //             <CircularProgress />\n                                //             </Box>\n                                //         </TableCell>\n                                //     </TableRow>\n                                // ) : paginatedData?.length ? (\n                                //     paginatedData.map((data) => (\n                                        <TableRow\n                                            key={data?.event_id}\n                                            // sx={{\n                                            //     \"&:last-child td, &:last-child th\": { border: 0 },\n                                            // }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\" align=\"Right\">\n                                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                                <Avatar\n                                                src={data?.imageUrl || 'defaultImagePath.png'} \n                                                alt={data?.event_name || \"Profile Image\"}\n                                                variant=\"rounded\"\n                                                style={{ width: \"52px\", height: \"55px\", marginRight: \"10px\" }}\n                                                />\n                                                <div>\n                                                    <Typography variant=\"body1\" style={{ fontWeight: \"light\" }}>\n                                                        {data?.event_name || \"Name not available\"}\n                                                        </Typography>\n                                                        <Typography variant=\"body2\" color=\"textSecondary\">\n                                                            ID: {data?.event_id || \"N/A\"}\n                                                        </Typography>\n                                                        </div>\n                                                        </div>\n                                            </TableCell>\n                                            <TableCell align=\"center\">{data?.access_role || \"null\"}</TableCell>\n                                            <TableCell align=\"center\">{data?.event_id || \"null\"}</TableCell>\n                                            <TableCell align=\"center\">{data?.event_source || \"null\"}</TableCell>\n                                            <TableCell align=\"center\">{data?.time_spent? (\n                                                  \n                                                <>\n                                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                                    {new Date(data.time_spent).toLocaleDateString()} {/* Time */}\n                                                    </Typography>\n                                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                                        {new Date(data.time_spent).toLocaleTimeString()} {/* Date */}\n                                                        </Typography>\n                                                        </>\n                                                        ) : \"null\" }\n                                                                </TableCell>\n                                                            </TableRow>\n                                                            ))\n                                                        ) : (\n                                                        <TableRow>\n                                        <TableCell colSpan={5} align=\"center\">\n                                        <NoAppointmentCard message=\"No Audit Logs Found\" />\n                                            {/* <Typography>No Data Found</Typography> */}\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                        <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={totalRows}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handlePageChange}\n                        onRowsPerPageChange={handleRowsPerPageChange}\n                    />\n\n                    </TableContainer>\n                    <div style={{ marginTop: \"2rem\" }}>\n                        {/* <PaginationCard /> */}\n                    </div>\n            </Box>\n        </>\n    );\n};\n\nexport default SuperAdminLogs; ","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport const TableData = ({ image, name }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img\n                        src={image}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"1 rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    Skeleton,\n} from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport dept from \"../../../static/images/DrImages/Out Patient Department.png\";\nimport { TableData } from \"./TableData\";\nimport name from \"../../../static/images/DrImages/Name.png\";\nimport exam from \"../../../static/images/DrImages/Examination.png\";\n\nfunction createData(name, calories, fat, carbs, protein, action) {\n    return { name, calories, fat, carbs, protein, action };\n}\n\nconst rows = [\n    createData(\n        <TableData image={dept} name={\"No of Doctor\"} />,\n        <></>,\n        <Typography\n            sx={{\n                color: \"#E72B4A\",\n                fontFamily: \"Poppins\",\n                fontSize: \"2rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"600\",\n                lineHeight: \"4.625rem\",\n                marginTop: \"30px\",\n                marginLeft: \"20px\",\n            }}\n        >\n            23\n        </Typography>,\n    ),\n    createData(\n        <TableData image={name} name={\"No of Patient\"} />,\n        <></>,\n        <Typography\n            sx={{\n                color: \"#E72B4A\",\n                fontFamily: \"Poppins\",\n                fontSize: \"2rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"600\",\n                lineHeight: \"4.625rem\",\n                marginTop: \"30px\",\n                marginLeft: \"20px\",\n            }}\n        >\n            16\n        </Typography>,\n    ),\n    createData(\n        <TableData image={exam} name={\"No of HCF\"} />,\n        <></>,\n        <Typography\n            sx={{\n                color: \"#E72B4A\",\n                fontFamily: \"Poppins\",\n                fontSize: \"2rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"600\",\n                lineHeight: \"4.625rem\",\n                marginTop: \"30px\",\n                marginLeft: \"20px\",\n            }}\n        >\n            5\n        </Typography>,\n    ),\n];\n\nconst DashboardTable = () => {\n    const [loading, setLoading] = useState(true);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const open = Boolean(anchorEl);\n    \n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenDialogCancle(false);\n        setOpenDialogReschedule(false);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const [openDialogCancle, setOpenDialogCancle] = useState(false);\n    const [openDialogReschedule, setOpenDialogReschedule] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => setLoading(false), 1000);\n    }, []);\n\n    return (\n        <>\n            <Box\n                component={\"div\"}\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"block\",\n                    height: \"100%\",\n                }}\n            >\n                <div className=\"\">\n                    <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                            <TableBody>\n                            {loading\n                                ? [1, 2, 3].map((_, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell align=\"right\">\n                                            <Skeleton variant=\"rectangular\" width={120} height={40} />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Skeleton variant=\"text\" width={60} height={40} />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Skeleton variant=\"text\" width={60} height={40} />\n                                        </TableCell>\n                                        <TableCell align=\"right\">\n                                            <Skeleton variant=\"circular\" width={40} height={40} />\n                                        </TableCell>\n                                    </TableRow>\n                                  ))\n                                :rows.map((row) => (\n                                    <TableRow\n                                        key={row.name}\n                                        sx={{\n                                            \"&:last-child td, &:last-child th\": { border: 0 },\n                                        }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{row.calories}</TableCell>\n                                        <TableCell align=\"right\">{row.fat}</TableCell>\n                                        <TableCell align=\"right\">{row.carbs}</TableCell>\n                                        <TableCell align=\"right\">\n                                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                                                <MoreHorizIcon\n                                                    sx={{\n                                                        cursor: \"pointer\",\n                                                        color: \"#E6E1E5\",\n                                                        border: \"1px solid #E6E1E5\",\n                                                        borderRadius: \"50px\",\n                                                    }}\n                                                    onClick={handleClick}\n                                                />\n                                                <Menu\n                                                    id=\"basic-menu\"\n                                                    open={open}\n                                                    onClose={handleClose}\n                                                    MenuListProps={{\n                                                        \"aria-labelledby\": \"basic-button\",\n                                                    }}\n                                                >\n                                                    {/* ---------------------- Appointments and Re-Schedule--------------------------------------------------- */}\n                                                    <MenuItem\n                                                        onClick={() =>\n                                                            setOpenDialogCancle(!openDialogCancle)\n                                                        }\n                                                    >\n                                                        Weekly\n                                                    </MenuItem>\n                                                    <MenuItem\n                                                        onClick={() =>\n                                                            setOpenDialogCancle(!openDialogCancle)\n                                                        }\n                                                    >\n                                                        Mothly\n                                                    </MenuItem>\n                                                </Menu>\n                                            </div>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </Box>\n        </>\n    );\n};\nexport default DashboardTable;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    Skeleton,\n} from \"@mui/material\";\nimport { Box, Paper } from \"@mui/material\";\nimport Dept from \"../../../static/images/DrImages/Out Patient Department.png\";\nimport Name from \"../../../static/images/DrImages/Name.png\";\nimport Examine from \"../../../static/images/DrImages/Examination.png\";\nimport DashboardTable from \"./DashboardTable\";\nimport axios from \"axios\"\nimport axiosInstance from \"../../../config/axiosInstance\"\nimport { useNavigate } from \"react-router-dom\";\nimport { data } from \"../../../constants/const\";\n\n\nconst AdminDashboard = () => {\n    const [cardData, setCardData] = useState();\n    const [error, setError] = useState(null);\n    const [patientCount, setPatientCount] = useState();\n    const [doctorCount, setDoctorCount] = useState();\n    const [healthcareFacilityCount, setHealthcareFacilityCount] = useState();\n    const [loading, setLoading] = useState(true);\n    const navigate = useNavigate();\n\n    const fetchData = async () => {\n        setLoading(true);\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/DashboardCount');\n            console.log(\"Dashboard DAta reject cd: \",resp?.data);\n            setCardData(resp?.data);\n            setDoctorCount(resp?.data.DOCTORS);\n            setPatientCount(resp?.data.PATIENT);\n            setHealthcareFacilityCount(resp?.data.HCF);\n\n        }catch (err) {\n            console.error(\"Error fetching dashboard data: \", err);\n            setError(err.message || \"Failed to fetch dashboard data\");\n          }  finally {\n            setLoading(false);\n        }\n      }\n      \n      useEffect( () => {\n        fetchData();\n      },[] );\n      \n      const handleNavigate = (path) => {\n        navigate(path);\n    };\n\n    return (\n        <>\n            <div style={{ display: \"flex\" }}>\n                <div className=\"DoctorDashboardCard\" onClick={() => handleNavigate('/superadmin/history/doctor')}>\n                    <div className=\"Number-Container\">\n                    {loading ? (\n                            <Skeleton variant=\"text\" width={100} height={80} />\n                        ) : (\n                        <Typography\n                            sx={{\n                                color: \"#E72B4A\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"3rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"600\",\n                                lineHeight: \"4.625rem\",\n                                marginTop: \"30px\",\n                                marginLeft: \"20px\",\n                            }}\n                        >\n                            {doctorCount}\n                        </Typography>\n                        )}\n                    </div>\n                    <div className=\"Number-Container\">\n                    {loading ? (\n                            <Skeleton variant=\"rectangular\" width={100} height={100} />\n                        ) : (\n                            <>\n                        <Typography\n                            sx={{\n                                color: \"#313033\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"1.5rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"1.5rem\",\n                                marginLeft: \"10px\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            <strong>Doctor</strong>\n                        </Typography>\n                        <Box\n                            component={\"img\"}\n                            sx={{\n                                width: \"100px\",\n                                height: \"100px\",\n                                marginLeft: \"150px\",\n                                marginTop: \"-90px\",\n                            }}\n                            src={Dept}\n                            alt=\"Our Patient Department\"\n                        ></Box>\n                        </>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"DoctorDashboardCard\" style={{ marginLeft: \"20px\" }} onClick={() => handleNavigate('/superadmin/history/patient')}>\n                    <div className=\"Number-Container\">\n                    {loading ? (\n                            <Skeleton variant=\"text\" width={100} height={80} />\n                        ) : (\n                        <Typography\n                            sx={{\n                                color: \"#E72B4A\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"3rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"600\",\n                                lineHeight: \"4.625rem\",\n                                marginTop: \"30px\",\n                                marginLeft: \"20px\",\n                            }}\n                        >\n                           {patientCount}\n                        </Typography>\n                        )}\n                    </div>\n                    <div className=\"Number-Container\">\n                    {loading ? (\n                            <Skeleton variant=\"rectangular\" width={100} height={100} />\n                        ) : (\n                            <>\n                        <Typography\n                            sx={{\n                                color: \"#313033\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"1.5rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"1.5rem\",\n                                marginLeft: \"10px\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            <strong>Patient</strong>\n                        </Typography>\n                        <Box\n                            component={\"img\"}\n                            sx={{\n                                width: \"100px\",\n                                height: \"100px\",\n                                marginLeft: \"150px\",\n                                marginTop: \"-90px\",\n                            }}\n                            src={Name}\n                            alt=\"Name\"\n                        ></Box>\n                        </>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"DoctorDashboardCard\" style={{ marginLeft: \"20px\" }} onClick={() => handleNavigate('/superadmin/history/hcf')}>\n                    <div className=\"Number-Container\">\n                    {loading ? (\n                            <Skeleton variant=\"text\" width={100} height={80} />\n                        ) : (\n                        <Typography\n                            sx={{\n                                color: \"#E72B4A\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"3rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"600\",\n                                lineHeight: \"4.625rem\",\n                                marginTop: \"30px\",\n                                marginLeft: \"20px\",\n                            }}\n                        >\n                            {healthcareFacilityCount}\n                        </Typography>\n                        )}\n                    </div>\n                    <div className=\"Number-Container\">\n                    {loading ? (\n                            <Skeleton variant=\"rectangular\" width={100} height={100} />\n                        ) : (\n                            <>\n                        <Typography\n                            sx={{\n                                color: \"#313033\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"1.5rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"1.5rem\",\n                                marginLeft: \"10px\",\n                                marginTop: \"10px\",\n                            }}\n                        >\n                            <strong>HCF</strong>\n                        </Typography>\n                        <Box\n                            component={\"img\"}\n                            sx={{\n                                width: \"100px\",\n                                height: \"100px\",\n                                marginLeft: \"150px\",\n                                marginTop: \"-90px\",\n                            }}\n                            src={Examine}\n                            alt=\"Examination\"\n                        ></Box>\n                        </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AdminDashboard;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport const PatientDetail = ({ image, name, age, gender }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img\n                        src={image}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        {gender}/{age}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import {\n    Box,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\nimport { PatientDetail } from \"../../SuperAdminHistory/SuperAdminHistoryPatient/PatientDetail\";\nimport pat1 from \"../../../static/images/DrImages/pat1.png\";\nimport pat2 from \"../../../static/images/DrImages/pat2.png\";\nimport pat3 from \"../../../static/images/DrImages/pat3.png\";\n\nfunction createData(name, calories, fat, carbs, protein, action) {\n    return { name, calories, fat, carbs, protein, action };\n}\n\nconst rows = [\n    createData(\n        <PatientDetail image={pat3} name={\"Antony\"} gender={\"Male\"} age={\"65y\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Opthalmologist\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dr. Emily William\n        </Typography>,\n        <CustomButton label=\"View\" isTransaprent />,\n    ),\n    createData(\n        <PatientDetail image={pat2} name={\"Aisha\"} gender={\"Female\"} age={\"30y\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dermatologist\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dr. Maria Garcia\n        </Typography>,\n        <CustomButton label=\"View\" isTransaprent />,\n    ),\n    createData(\n        <PatientDetail image={pat1} name={\"Peter\"} gender={\"Male\"} age={\"35y\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Nutrition\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dr. Charles Grace\n        </Typography>,\n        <CustomButton label=\"View\" isTransaprent />,\n    ),\n];\n\nconst PatientDetailss = () => {\n    return (\n        <>\n            <Box\n                component={\"div\"}\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"block\",\n                    height: \"100%\",\n                }}\n            >\n                <div className=\"\">\n                    <TableContainer component={Paper} style={{ background: \"white\" }}>\n                        <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow style={{ fontWeight: \"bold\" }}>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell align=\"right\">ID No</TableCell>\n                                    <TableCell align=\"right\">Department</TableCell>\n                                    <TableCell align=\"right\">Consulted</TableCell>\n                                    <TableCell align=\"right\">Report</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {rows.map((row) => (\n                                    <TableRow\n                                        key={row.name}\n                                        sx={{\n                                            \"&:last-child td, &:last-child th\": { border: 0 },\n                                        }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{row.calories}</TableCell>\n                                        <TableCell align=\"right\">{row.fat}</TableCell>\n                                        <TableCell align=\"right\">{row.carbs}</TableCell>\n                                        <TableCell align=\"right\">{row.protein}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </div>\n            </Box>\n        </>\n    );\n};\nexport default PatientDetailss;\n","import React, { useEffect } from \"react\";\n\nimport AdminDashboard from \"./AdminDashboard\";\nimport DashboardTable from \"./DashboardTable\";\nimport PatientDetailss from \"./PatientDetailss\";\n\nconst SuperAdminMainDashboard = () => {\n    // useEffect(() => {\n    //     document.getElementById(\"search_bar_modal\").style.display = \"none\";\n\n    // },[])\n    return (\n        <>\n            <AdminDashboard />\n            <DashboardTable />\n        </>\n    );\n};\n\nexport default SuperAdminMainDashboard;\n","import React, { useState, useEffect} from \"react\";\n// import \"./superadminhistorydoctor.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n    Box,\n    Paper,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport pat1 from \"../../../static/images/DrImages/pat1.png\";\nimport pat2 from \"../../../static/images/DrImages/pat2.png\";\nimport pat3 from \"../../../static/images/DrImages/pat3.png\";\nimport { PatientDetail } from \"./PatientDetail\";\nimport axiosInstance from \"../../../config/axiosInstance\";\n\nfunction createData(name, calories, fat, carbs, protein, action) {\n    return { name, calories, fat, carbs, protein, action };\n}\n\nconst rows = [\n    createData(\n        <PatientDetail image={pat3} name={\"Antony\"} gender={\"Male\"} age={\"65y\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Opthalmologist\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dr. Emily William\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            12:00 PM\n        </Typography>,\n    ),\n    createData(\n        <PatientDetail image={pat2} name={\"Aisha\"} gender={\"Female\"} age={\"30y\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dermatologist\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dr. Maria Garcia\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            12:00 PM\n        </Typography>,\n    ),\n    createData(\n        <PatientDetail image={pat1} name={\"Peter\"} gender={\"Male\"} age={\"35y\"} />,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            01234\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Nutrition\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            Dr. Charles Grace\n        </Typography>,\n        <Typography\n            sx={{\n                color: \"#939094\",\n                fontFamily: \"Poppins\",\n                fontSize: \"0.875rem\",\n                fontStyle: \"normal\",\n                fontWeight: \"500\",\n                lineHeight: \"0.9375rem\",\n                letterSpacing: \"0.005rem\",\n            }}\n        >\n            12:00 PM\n        </Typography>,\n    ),\n];\n\nconst SuperAdminHistoryPatient = () => {\n    const [cardData, setCardData] = useState();\n    const fetchData = async () => {\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/DashboardPatientConsulted');\n            console.log(\"Dashboard Response from API: \",resp?.data);\n            setCardData(resp?.data?.response);\n        }catch(err){\n            console.log(\"Error : \", err)\n        }\n      }\n      \n      useEffect( () => {\n        fetchData();\n      },[] )\n    \n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"history\");\n        localStorage.setItem(\"path\", \"patient\");\n    }, []);\n    const [value, setValue] = useState([null, null]);\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n    return (\n        <>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"98%\",\n                    height: \"100%\",\n                    height: \"90%\",\n                    flexDirection: \"row\",\n                }}\n            >\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/superadmin/history/doctor\"}>Doctor</NavLink>\n                    <NavLink to={\"/superadmin/history/patient\"}>Patient</NavLink>\n                    <NavLink to={\"/superadmin/history/hcf\"}>HCF</NavLink>\n                </nav>\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"block\",\n                        height: \"100%\",\n                    }}\n                >\n                    <div className=\"search-date\">\n                        <Box\n                            display={\"flex\"}\n                            margin={\"10px\"}\n                            flexWrap={\"wrap\"}\n                            border={1}\n                            borderColor=\"#AEAAAE\"\n                            borderRadius={\"25px\"}\n                            width={\"56em\"}\n                            height=\"38px\"\n                            backgroundColor=\"#E6E1E5\"\n                        >\n                            <Stack direction=\"row\" alignItems=\"center\" gap={1} padding={\"10px\"}>\n                                <SearchIcon sx={{ margin: \"0 0 0 0%\", color: \"#AEAAAE\" }} />\n                                <Typography\n                                    variant=\"body1\"\n                                    sx={{ textAlign: \"left\", color: \"#AEAAAE\" }}\n                                >\n                                    Search Patient Name / ID\n                                </Typography>\n                            </Stack>\n                        </Box>\n                        <div style={{ display: \"flex\", marginLeft: \"100px\" }}>\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                <DateRangePicker\n                                    disablePast\n                                    value={value}\n                                    maxDate={getWeeksAfter(value[0], 4)}\n                                    onChange={(newValue) => {\n                                        setValue(newValue);\n                                    }}\n                                    renderInput={(startProps, endProps) => (\n                                        <React.Fragment>\n                                            <TextField {...startProps} />\n                                            <Box sx={{ mx: 2 }}> to </Box>\n                                            <TextField {...endProps} />\n                                        </React.Fragment>\n                                    )}\n                                />\n                            </LocalizationProvider>\n                        </div>\n                    </div>\n                    <div className=\"\">\n                        <TableContainer component={Paper} style={{ background: \"white\" }}>\n                            <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow style={{ fontWeight: \"bold\" }}>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell align=\"right\">ID No</TableCell>\n                                        <TableCell align=\"right\">Department</TableCell>\n                                        <TableCell align=\"right\">Contact Details</TableCell>\n                                        <TableCell align=\"right\">Time</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {cardData?.map((data) => (\n                                        <TableRow\n                                            key={data?.suid}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\": { border: 0 },\n                                            }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                                                {data?.first_name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{data?.suid}</TableCell>\n                                            <TableCell align=\"right\">{data?.speciality_id}</TableCell>\n                                            <TableCell align=\"right\">{data?.contact_no_primary}</TableCell>\n                                            <TableCell align=\"right\">{data?.appointment_date}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </div>\n                </Box>\n            </Box>\n        </>\n    );\n};\nexport default SuperAdminHistoryPatient;\n","import React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport ContainerThree from \"../../../../../../PatientDashboard/DrDetailsCard/ContainerThree\";\nimport { useLocation } from \"react-router-dom\";\n\n\nconst About = () => {\n    const ID = useParams();\n    console.log(\"Params abour : \" , ID.hcfID)\n    const location = useLocation();\n    const { description } = location.state || {}; // Fall back to empty object if no state is passed\n    return (\n        <>\n            <nav className=\"NavBar-Container-Appoinement\">\n                <NavLink to={`/patientdashboard/hcfDetailCard/${ID.hcfID}/about`}>About</NavLink>\n                <NavLink to={`/patientdashboard/hcfDetailCard/${ID.hcfID}/department`}>\n                    Department\n                </NavLink>\n                <NavLink to={`/patientdashboard/hcfDetailCard/${ID.hcfID}/labs`}>Labs</NavLink>\n            </nav>\n            <div className=\"about-data\" style={{ marginTop: \"4rem\", width: \"100%\" }}>\n                <ContainerThree description={description}/>\n            </div>\n        </>\n    );\n};\n\nexport default About;\n","import { Box, Typography } from \"@mui/material\";\nimport React, { Fragment, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport CustomButton from \"../../../../../components/CustomButton/custom-button\";\nimport CustomModal from \"../../../../../components/CustomModal/custom-modal\";\n// import SingleLineGridList from \"./Crousal\";\nimport personIcon from \"../../../../../static/images/DrImages/icon.svg\";\nimport messageIcon from \"../../../../../static/images/DrImages/message.svg\";\nimport bagIcon from \"../../../../../static/images/DrImages/bag.svg\";\nimport HCFStepper from \"./HCFStepper\";\nimport starIcon from \"../../../../../static/images/DrImages/Group 92.svg\";\n\nconst Container3 = ({ test_id, about, amount, service_day_from, service_day_to }) => {\n    const [openDialog, setOpenDialog] = useState(false);\n    const DrExp = [\n        {\n            logo: personIcon,\n            number: \"4000+\",\n            type: \"Patient\",\n        },\n        {\n            logo: bagIcon,\n            number: \"10+\",\n            type: \"Experience\",\n        },\n        {\n            logo: starIcon,\n            number: \"4.8\",\n            type: \"Rating\",\n        },\n        {\n            logo: messageIcon,\n            number: \"3027\",\n            type: \"Reviews\",\n        },\n    ];\n\n    const useStyles = makeStyles({\n        drname: {\n            color: \"#313033\",\n            fontFamily: \"Poppins\",\n            fontSize: \"20px\",\n            fontStyle: \"normal\",\n            fontWeight: \"900\",\n            lineHeight: \"30px\",\n        },\n        specialist: {\n            fontFamily: \"Poppins\",\n            fontSize: \"16px\",\n            fontStyle: \"normal\",\n            fontWeight: \"400\",\n            lineHeight: \"24px\",\n        },\n        cardContainer: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            width: \"100%\",\n            justifyContent: \"space-between\",\n        },\n        BookAppointmentContainer: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n        BookAppointmentContainerDetails: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-end\",\n        },\n        fourthContainer: {\n            width: \"100%\",\n            border: \"1px solid #E6E1E5 \",\n            display: \"flex\",\n            borderRadius: \"8px\",\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            marginTop: \"1%\",\n        },\n        textField: {\n            fontFamily: \"Poppins\",\n            fontSize: \"30px\",\n            fontStyle: \"normal\",\n            fontWeight: \"500\",\n            lineHeight: \"30px\",\n            color: \"#313033\",\n            padding: \"2% 0 1% 1%\",\n        },\n        fourthInnerContainer: {\n            display: \"flex\",\n            width: \"100%\",\n            alignItems: \"flex-start\",\n            padding: \"1%\",\n        },\n        logoDesign: {\n            height: \"70px\",\n            width: \"70px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: \"50px\",\n            backgroundColor: \"#FDEAED\",\n        },\n        // universityFields : {\n        //     display: \"flex\",\n        //     flexDirection: \"column\",\n        //     alignItems: \"flex-start\",\n        // }\n    });\n\n    const DrDetailsCard = () => {\n        const classes = useStyles();\n        const navigate = useNavigate();\n        // console.log(data);\n        const handleOpen = (condition) => {\n            // setOpenDialog(condition);\n        };\n    };\n\n    return (\n        <Box sx={{ width: \"100%\", display: \"flex\", marginTop: \"20px\" }}>\n            {/* About me container */}\n\n            {/* Reviews container */}\n            <Box\n                sx={{\n                    width: \"33%\",\n                    height: \"100%\",\n                    borderRadius: \"8px\",\n                    marginLeft: \"1%\",\n                    border: \"1px solid #E6E1E5\",\n                    padding: \"2%\",\n                }}\n            >\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        fontFamily: \"Poppins\",\n                        fontSize: \"16px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"600\",\n                        lineHeight: \"24px\",\n                    }}\n                >\n                    Test Name\n                    <Box sx={{ color: \"gray\", fontWeight: \"light\" }}>Price: {amount}</Box>\n                </Box>\n                <Box sx={{ display: \"flex\" }}>\n                    <Typography\n                        sx={{\n                            textAlign: \"left\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"18px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"21px\" /* 150% */,\n                            color: \"#939094\",\n                            marginTop: \"1%\",\n                        }}\n                    >\n                        Timing :Mon to Friday,1:00pm to 3:00\n                        <Typography sx={{ display: \"flex\", marginTop: \"2%\" }}>\n                            Description : {about}{\" \"}\n                        </Typography>\n                    </Typography>\n                    {/* <CustomButton label=\"Buy\"   buttonCss={{marginLeft:\"150px\",width:\"50px\",height:\"40px\",marginTop:\"50px\"}}></CustomButton> */}\n                    <CustomButton\n                        label={\"Buy\"}\n                        isElevated\n                        buttonCss={{ height: \"40px\", display: \"block\", margin: \"auto\" }}\n                        handleClick={() => setOpenDialog(true)}\n                    />\n                    <CustomModal\n                        isOpen={openDialog}\n                        title={\"dialog title\"}\n                        footer={<Fragment></Fragment>}\n                    >\n                        <div>\n                            <HCFStepper />\n                        </div>\n                    </CustomModal>\n                </Box>\n            </Box>\n\n            \n        </Box>\n    );\n};\n\nexport default Container3;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Container5 from \"../Container5\";\nimport Container3 from \"../Container3\";\nimport { baseURL, CallCardData } from \"../../../../../../constants/const\";\nimport { Box } from \"@mui/material\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport axiosInstance from \"../../../../../../config/axiosInstance\";\nimport CustomButton from \"../../../../../../components/CustomButton\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\nimport NoAppointmentCard from \"../../../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst Department = () => {\n    const [departData, setDepartData] = useState([]);\n    const [nav_specialization, setNav_specialization] = useState([]);\n    const [specializationCardData, setSpecializationCardData] = useState(\"\");\n    const [specializationDoc, setSpecializationDoc] = useState(\"CARDIOLOGIST\");\n    const [isLoadingNav, setIsLoadingNav] = useState(false); // For navigation specialization\n    const [isLoadingCard, setIsLoadingCard] = useState(false); // For specialization card data\n\n    const ID = useParams();\n\n    const scrollContainerRef = useRef(null);\n\n    const handleScrollLeft = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft -= 100;\n        }\n    };\n\n    const handleScrollRight = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft += 100;\n        }\n    };\n\n    const DoctorSpecialization = async (specialist) => {\n        try {\n            setIsLoadingCard(true);\n            const response = await axiosInstance(`/sec/patient/getHcfdocByDept/${specialist}/6`);\n            setSpecializationCardData(response?.data?.response[specialist] || []);\n        } catch (err) {\n            console.log(\"Specialization error:\", err);\n            setSpecializationCardData([]); // Ensure empty state on error\n        } finally {\n            setIsLoadingCard(false);\n        }\n    };\n\n    useEffect(() => {\n        if (specializationDoc !== \"\") {\n            DoctorSpecialization(specializationDoc);\n        }\n    }, [specializationDoc]);\n\n    const navSpecialization = async () => {\n        try {\n            setIsLoadingNav(true);\n            const resp = await axios.get(`${baseURL}/sec/patient/doctorDepartments`);\n            setNav_specialization(resp?.data?.response);\n        } catch (err) {\n            console.log(\"Nav specialization error:\", err);\n        } finally {\n            setIsLoadingNav(false);\n        }\n    };\n\n    useEffect(() => {\n        navSpecialization();\n    }, []);\n\n    return (\n        <>\n            <nav className=\"NavBar-Container-Appoinement\">\n                <NavLink to={`/patientdashboard/hcfDetailCard/${ID.hcfID}/about`}>About</NavLink>\n                <NavLink to={`/patientdashboard/hcfDetailCard/${ID.hcfID}/department`}>Department</NavLink>\n                <NavLink to={`/patientdashboard/hcfDetailCard/${ID.hcfID}/labs`}>Labs</NavLink>\n            </nav>\n            <div className=\"about-data\" style={{ marginTop: \"4rem\", width: \"100%\" }}>\n                {/* Horizontal scroll container */}\n                <Box sx={{ width: \"100%\" }}>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\n                        <div onClick={handleScrollLeft}>\n                            <ChevronLeftIcon />\n                        </div>\n                        <Box\n                            sx={{ display: \"flex\", position: \"relative\" }}\n                            className={\"horizontal-scroll-container NavBar-Container-one\"}\n                        >\n                            <div\n                                ref={scrollContainerRef}\n                                style={{ overflowX: \"auto\", display: \"flex\" }}\n                            >\n                                {isLoadingNav ? (\n                                    Array.from({ length: 7 }).map((_, index) => (\n                                        <Skeleton\n                                            key={index}\n                                            width={220}\n                                            height={26}\n                                            style={{ margin: \"0 5px\", borderRadius: \"20px\" }}\n                                        />\n                                    ))\n                                ) : (\n                                    nav_specialization.map((specialization, index) => (\n                                        <CustomButton\n                                            key={index}\n                                            to={`/patientdashboard/${specialization?.department_name.toLowerCase()}`}\n                                            label={`${specialization?.department_name}`}\n                                            isTransaprent={\n                                                specialization.department_name.toLowerCase() ===\n                                                specializationDoc.toLowerCase()\n                                                    ? false\n                                                    : true\n                                            }\n                                            buttonCss={{\n                                                borderRadius: \"50px\",\n                                                padding: \"0 6.5%\",\n                                                marginRight: \"1%\",\n                                                whiteSpace: \"normal\",\n                                            }}\n                                            handleClick={() => {\n                                                setSpecializationDoc(specialization?.department_name);\n                                            }}\n                                        />\n                                    ))\n                                )}\n                            </div>\n                        </Box>\n                        <div onClick={handleScrollRight}>\n                            <ChevronRightIcon />\n                        </div>\n                    </Box>\n\n                    {/* Card data section */}\n                    {isLoadingCard ? (\n    <Skeleton\n        width=\"100%\"\n        height={200}\n        borderRadius=\"16px\"\n        style={{ margin: \"1% 0\" }}\n    />\n) : specializationCardData && specializationCardData.length > 0 ? (\n    <CallCardData\n        linkPath={`/patientdashboard/hcfDetailCard/hcfdoctor/`}\n        sendCardData={specializationCardData}\n        textField={\"\"}\n        hcfID={ID}\n    />\n) : (\n    <NoAppointmentCard text_one={\"NO Doctor found\"}/>\n)}\n                </Box>\n            </div>\n        </>\n    );\n};\n\nexport default Department;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport Container5 from \"../Container5\";\nimport Container3 from \"../Container3\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport { Box, Skeleton } from \"@mui/material\";\nimport axiosInstance from \"../../../../../../config/axiosInstance\";\nimport CustomButton from \"../../../../../../components/CustomButton\";\nimport { HCFCardsData } from \"../../../../../../constants/const\";\n\nconst Labs = () => {\n    const { hcfID } = useParams();\n    const [nav_specialization, setNav_specialization] = useState([]);\n    const scrollContainerRef = useRef(null);\n    const [specializationHCF, setSpecializationHCF] = useState(\"Microbiology\");\n    const [specializationCardData, setSpecializationCardData] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state added\n\n    const navSpecialization = async () => {\n        setLoading(true); // Start loading\n        try {\n            const resp = await axiosInstance(`/sec/labDepartments`);\n            setNav_specialization(resp?.data?.response);\n        } catch (err) {\n            console.log(\"Nav specialization error : \", err);\n        } finally {\n            setLoading(false); // End loading\n        }\n    };\n\n    useEffect(() => {\n        navSpecialization();\n    }, []);\n\n    const handleScrollLeft = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft -= 100;\n        }\n    };\n\n    const handleScrollRight = () => {\n        if (scrollContainerRef.current) {\n            scrollContainerRef.current.scrollLeft += 100;\n        }\n    };\n\n    const HCFLabDoctor = async () => {\n        setLoading(true); // Start loading for specialization data\n        try {\n            const resp = await axiosInstance(`/sec/patient/SingleLabFilters/${specializationHCF}/${hcfID}`);\n            setSpecializationCardData(resp?.data?.response[specializationHCF] || []);\n        } catch (err) {\n            setSpecializationCardData([]);\n            console.log(\"Nav specialization error : \", err);\n        } finally {\n            setLoading(false); // End loading\n        }\n    };\n\n    useEffect(() => {\n        HCFLabDoctor();\n    }, [specializationHCF]);\n\n    return (\n        <>\n            <nav className=\"NavBar-Container-Appoinement\">\n                <NavLink to={`/patientdashboard/hcfDetailCard/${hcfID}/about`}>About</NavLink>\n                <NavLink to={`/patientdashboard/hcfDetailCard/${hcfID}/department`}>Department</NavLink>\n                <NavLink to={`/patientdashboard/hcfDetailCard/${hcfID}/labs`}>Labs</NavLink>\n            </nav>\n            <div className=\"about-data\" style={{ marginTop: \"4rem\", width: \"100%\" }}>\n                {/* Skeleton loader for the buttons */}\n                <Box sx={{ width: \"100%\" }}>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", width: \"100%\" }}>\n                        <div onClick={handleScrollLeft}>\n                            <ChevronLeftIcon />\n                        </div>\n                        <Box sx={{ display: \"flex\", position: \"relative\", width: \"100%\" }} className=\"horizontal-scroll-container NavBar-Container-one\">\n                            <div ref={scrollContainerRef} style={{ overflowX: \"auto\", display: \"flex\" }}>\n                                {\n                                    nav_specialization.map((specialization, index) => (\n                                        <CustomButton\n                                            key={index}\n                                            to={`/patientdashboard/${specialization?.lab_department_name.toLowerCase()}`}\n                                            label={`${specialization?.lab_department_name.toLowerCase()}`}\n                                            isTransaprent={\n                                                specialization.lab_department_name.toLowerCase() ===\n                                                specializationHCF.toLowerCase()\n                                                    ? false\n                                                    : true\n                                            }\n                                            buttonCss={{\n                                                borderRadius: \"50px\",\n                                                padding: \"0 6.5%\",\n                                                marginRight: \"1%\",\n                                                whiteSpace: \"normal\",\n                                                textWrap: \"nowrap\",\n                                            }}\n                                            handleClick={() => {\n                                                setSpecializationHCF(specialization?.lab_department_name);\n                                            }}\n                                        />\n                                    ))\n                                }\n                            </div>\n                        </Box>\n                        <div onClick={handleScrollRight}>\n                            <ChevronRightIcon />\n                        </div>\n                    </Box>\n\n                    {/* Skeleton loader for HCFCardsData content */}\n                    {loading ? (\n                        <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 2, mt: 3 }}>\n                            {Array.from(new Array(5)).map((_, index) => (\n                                <Skeleton key={index} variant=\"rectangular\" width={250} height={150} />\n                            ))}\n                        </Box>\n                    ) : (\n                        <HCFCardsData\n                            sendCardData={specializationCardData}\n                        />\n                    )}\n                </Box>\n            </div>\n        </>\n    );\n};\n\nexport default Labs;\n","import React, { useState } from \"react\";\nimport \"./SelectRoleLogin.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Stack } from \"@mui/material\";\nimport CustomRadioButton from \"../../../components/CustomRadioButton/custom-radio-button\";\nimport CustomButton from \"../../../components/CustomButton/custom-button\";\n\nconst SelectRoleLogin = () => {\n    // useNavigate hook for navigate\n    const navigate = useNavigate();\n\n    // from here\n\n    const handleSubmit = () => {\n        if (radioVal === \"I am a Patient\") {\n            localStorage.setItem(\"signUp\", \"patient\");\n            navigate(\"/patientLogin\");\n        } else if (radioVal === \"I am a Doctor\") {\n            localStorage.setItem(\"signUp\", \"doctor\");\n            navigate(\"/doctorLogin\");\n        } else if (radioVal === \"I am a Healthcare Facility\") {\n            // navigate(\"/selecthcfprofiletype\");\n            navigate(\"/HCFRoleType\");\n        } else if (radioVal === \"I Am The Super Admin\") {\n            localStorage.setItem(\"signUp\", \"super_admin\");\n            navigate(\"/superadminlogin\");\n        } else {\n            alert(\"Invalid option\");\n        }\n\n        // const navigateToRoute =\n        //     radioVal === \"I am a Patient\"\n        //         ? \"/patientlogin\"\n        //         : radioVal === \"I am a Doctor\"\n        //         ? \"/doctorlogin\"\n        //         : radioVal === \"I am a Healthcare Facility\"\n        //         ? \"/selecthcfprofiletype\"\n        //         : radioVal === \"I Am The Super Admin\"\n        //         ? \"/superadmin\"\n        //         : null;\n\n        // navigate(navigateToRoute);\n    };\n    const radioValues = [\n        \"I am a Patient\",\n        \"I am a Doctor\",\n        \"I am a Healthcare Facility\",\n        // \"I Am The Super Admin\",\n    ];\n    const [radioVal, setRadioVal] = useState(radioValues[0]);\n\n    // till here\n    return (\n        <div className=\"register-photo\">\n            <Box className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <Box className=\"component-library\">\n                <Box sx={{display:\"flex\" , flexDirection:\"column\",justifyContent:\"center\", alignItems:\"center\"}}>\n                    <div className=\"logo\">\n                        <img src=\"images/logo.png\" alt=\"Logo\"/>\n                    </div>\n\n                    <h2 className=\"\">\n                        <strong>Please</strong> <strong>select to login</strong>\n                    </h2>\n                    </Box>\n\n                    <CustomRadioButton\n                                    label={\"\"}\n                                    radiocss={{\n                                        border: \" 1px solid #E6E1E5\",\n                                        // padding: \"0px 10px\",\n                                        borderRadius: \"16px\",\n                                        width: \"300px\",\n                                        height: \"6em\",\n                                        margin: \"10px\",\n                                    }}\n                                    handleChange={({ target }) => setRadioVal(target.value)}\n                                    value={radioVal}\n                                    items={radioValues}\n                                    />\n                                    <CustomButton\n                            label={\"Continue\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={{\n                                width:\"22em\",\n                                padding: \"8px 100px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                                borderRadius: \"100px\",\n                                margin:\"25px\"\n                            }}\n                        />\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default SelectRoleLogin;\n","import React, { useState } from \"react\";\nimport { Box, CircularProgress } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./HCFAdminLogin.scss\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\n\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport { useAuthentication } from \"../../../../loginComponent/UserProvider\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\nimport { baseURL, emailRegex, passwordRegex } from \"../../../../constants/const\";\nimport { decodeJWT } from \"../../../../utils/jwtUtils\";\nimport Cookies from \"js-cookie\";\n\nconst HcfAdminLogin = () => {\n    const [showPassword, setShowPassword] = useState(true);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showSnack, setShowSnack] = useState(false);\n    const [helperTextMessage, setHelperTextMessage] = useState(false);\n    const [passwordHelperTextMessage, setPasswordHelperTextMessage] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n    const [errorMessageOpen, setErrorMessageOpen] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const navigate = useNavigate();\n    const { HealthCare } = useAuthentication();\n\n    const fetchData = async () => {\n        if (!email || !password) {\n            setErrorMessage(\"Please enter email and password\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        if (!emailRegex.test(email)) {\n            setErrorMessage(\"Please enter a valid email\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        if (!passwordRegex.test(password)) {\n            setErrorMessage(\"Password must meet the required criteria\");\n            setErrorMessageOpen(true);\n            return;\n        }\n\n        const requestData = {\n            email,\n            password,\n            login_with_email: true,\n            mobile: null,\n            role_id: 2,\n        };\n\n        try {\n            setLoading(true);\n            setShowSnack(true);\n            const response = await axios.post(\n                `${baseURL}/sec/auth/login`,\n                JSON.stringify(requestData),\n                {\n                    headers: {\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                    },\n                },\n            );\n\n            const resData = response?.data?.response;\n            console.log(\"Login response data:\", resData);\n\n            if (resData?.body === \"INCOMPLETE_PROFILE\") {\n                // For incomplete profile, store email and suid from response\n                console.log(\"Incomplete profile detected, using response data:\", resData);\n                \n                // Store the email and suid from the response\n                localStorage.setItem(\"hcfadmin_Email\", resData.email || email);\n                localStorage.setItem(\"hcfadmin_suid\", resData.suid);\n                \n                // Store additional info for debugging\n                console.log(\"Stored email for incomplete profile:\", resData.email || email);\n                console.log(\"Stored suid for incomplete profile:\", resData.suid);\n                console.log(\"Navigating to signup for incomplete profile\");\n                \n                navigate(\"/hcfadminsignup\");\n            } else if (resData?.access_token) {\n                // Decode JWT token to extract user information\n                const userInfo = decodeJWT(resData.access_token);\n                console.log(\"Decoded user info from JWT:\", userInfo);\n\n                localStorage.setItem(\"access_token\", resData.access_token);\n                localStorage.setItem(\"hcfadmin_Email\", resData.email);\n                localStorage.setItem(\"hcfadmin_suid\", resData.suid);\n                localStorage.setItem(\"profile\", resData.profile_picture);\n                Cookies.set(\"hcfadmin_Email\", resData.email, { expires: 7 });\n\n                // Store JWT decoded information\n                localStorage.setItem(\"user_id\", userInfo.userId);\n                localStorage.setItem(\"role_id\", userInfo.roleId || \"\");\n                localStorage.setItem(\"jwt_email\", userInfo.email || resData.email);\n\n\n                HealthCare(resData.email);\n                navigate(\"/hcfadmin/notification\", { replace: true });\n                setErrorMessageOpen(false);\n            } else {\n                setShowError(true);\n            }\n        } catch (error) {\n            console.log(\"Login error: \", error);\n    \n            const apiError = error?.response?.data?.error || \"Something went wrong\";\n        \n            setErrorMessage(apiError); // Set proper error message from response\n            setErrorMessageOpen(true); // Open the snackbar with the error\n            setShowSnack(false);       // Hide the loading snackbar if open\n            setShowError(false);       // Hide generic error snackbar (optional)\n            setLoading(false);\n        \n            // optionally clear inputs, but don’t clear them too early\n            // setEmail(null);\n            // setPassword(null);\n        } finally {\n            setLoading(false);\n            setShowSnack(false);\n        }\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar\n                isOpen={showError}\n                message={\"Some error occurred, please try later\"}\n                type=\"error\"\n            />\n\n            <CustomSnackBar\n                isOpen={showSnack}\n                message={\"Please wait while we are logging you in\"}\n                type=\"success\"\n            />\n\n            <CustomSnackBar isOpen={errorMessageOpen} message={errorMessage} type=\"error\" />\n\n            <Box className=\"form-container\">\n                <div className=\"image-holder\" />\n\n                <Box className=\"component-library\">\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div className=\"logo1\">\n                            <img src=\"images/logo.png\" alt=\"Logo\" width=\"200\" />\n                        </div>\n                        <h2 className=\"text-center\">\n                            <strong>HCF Admin Login</strong>\n                        </h2>\n                    </Box>\n\n                    <CustomTextField\n                        id=\"email-input\"\n                        label=\"Email\"\n                        defaultValue={email}\n                        value={email}\n                        helperText={email && (helperTextMessage ? \"Valid Email\" : \"Invalid Email\")}\n                        onChange={(event) => {\n                            const val = event.target.value;\n                            setEmail(val);\n                            setHelperTextMessage(emailRegex.test(val));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                    />\n\n                    <CustomTextField\n                        id=\"password-input\"\n                        label=\"Password\"\n                        defaultValue={password}\n                        value={password}\n                        type={showPassword ? \"password\" : \"text\"}\n                        helperText={\n                            password &&\n                            (passwordHelperTextMessage ? \"Valid Password\" : \"Password must be 8+ characters with a number and special character\")\n                        }\n                        onChange={(event) => {\n                            const val = event.target.value;\n                            setPassword(val);\n                            setPasswordHelperTextMessage(passwordRegex.test(val));\n                        }}\n                        textcss={{ width: \"19.5em\" }}\n                        rightIcon={\n                            showPassword ? (\n                                <VisibilityIcon onClick={() => setShowPassword(false)} />\n                            ) : (\n                                <VisibilityOffIcon onClick={() => setShowPassword(true)} />\n                            )\n                        }\n                    />\n\n                    <CustomButton\n                        label={loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Log In\"}\n                        isDisabled={loading}\n                        handleClick={fetchData}\n                        buttonCss={{\n                            width: \"100%\",\n                            padding: \"10px\",\n                            borderRadius: \"100px\",\n                            marginTop: \"20px\",\n                        }}\n                        aria-label=\"Submit login form\"\n                    />\n\n                    <div className=\"forgotpassword\" style={{ fontSize: \"small\" }}>\n                        <Link to=\"/forgotpassword\" className=\"link\">\n                            Forgot Password\n                        </Link>\n                    </div>\n                    <div className=\"mobile\" style={{ fontSize: \"small\" }}>\n                        <Link \n                            to=\"/loginwithotp\" \n                            className=\"link\"\n                            onClick={() => localStorage.setItem(\"signUp\", \"hcf_admin\")}\n                        >\n                            Log In with OTP\n                        </Link>\n                    </div>\n                    <div\n                        className=\"already\"\n                        style={{\n                            display: \"inline\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            fontSize: \"small\",\n                        }}\n                    >\n                        I Don&apos;t have an account &nbsp;\n                        <Link to=\"/signupPage\" className=\"link\">\n                            Create Account\n                        </Link>\n                    </div>\n                </Box>\n            </Box>\n        </div>\n    );\n};\n\nexport default HcfAdminLogin;\n","// import React from 'react'\nimport React, { useEffect, useState } from \"react\";\nimport \"./superadmin.scss\";\nimport { IconButton, InputAdornment, Stack, TextField } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport { useAuthentication } from \"../../../../loginComponent/UserProvider\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\nimport { baseURL } from \"../../../../constants/const\";\n\nconst SuperAdminLogin = () => {\n    const [showPassword, setShowPassword] = useState(true);\n    const [islogin, setIslogin] = useState(false);\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [showSnack, setShowSnack] = useState(false);\n    const regularExpression = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n    const [data, setData] = useState({\n        email: null,\n        password: null,\n        login_with_email: null,\n        mobile: null,\n    });\n\n    const navigate = useNavigate();\n    const Authentication = useAuthentication();\n    const fetchData = async () => {\n        console.log(\"Entered the fetch data\");\n        setShowSnack(true);\n        // navigate(\"/skelatonLoader\" , {replace : true});\n        try {\n            // const response = await axiosInstance.post(\"/sec/auth/login\",JSON.stringify(data),{\"Accept\" : \"Application/json\"});\n            const response = await axios.post(\n                `${baseURL}/sec/auth/login`,\n                JSON.stringify(data),\n                { Accept: \"Application/json\" },\n            );\n            console.log(\"REsponase : \", response);\n\n            if (response?.data?.error === \"INCOMPLETE_PROFILE\") {\n                alert(\"sign up\");\n                navigate(\"/doctorsignup\");\n            } else {\n                console.log(\"email : \", response?.data?.response?.email);\n                console.log(\"access_token : \", response?.data?.response?.access_token);\n                console.log(\"doctor suid : \", response?.data?.response?.suid);\n\n                Authentication.PatientLogin(email);\n                // alert(\"succesfully loggedIn\");\n                // navigate('/patientverification' , {replace : true});\n                console.log(\"navigate to patient\");\n                setIslogin(false);\n                navigate(\"/superadmin\", { replace: true });\n            }\n        } catch (error) {\n            console.log(error);\n            alert(\"Enter Correct username and password\", error);\n            setEmail(null);\n            setPassword(null);\n            setIslogin(false);\n        }\n    };\n\n    useEffect(() => {\n        if (islogin === true) {\n            fetchData();\n        }\n    }, [islogin]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (email === null && password === null) {\n            alert(\"Email and Password\");\n            setIslogin(false);\n            return false;\n        }\n        // else if(regularExpression.test(password)){\n        //     alert(\"password should contain atleast one number and one special character\");\n        //     return false;\n        // }\n        setData({\n            email: email,\n            password: password,\n            // mobile: \"9994483286\",\n            login_with_email: true,\n        });\n        setIslogin(!islogin);\n        // fetchData();\n        return null;\n    };\n\n    return (\n        <div className=\"register-photo\">\n            <CustomSnackBar\n                isOpen={showSnack}\n                // actionLabel={\"action\"}\n                // handleAction={() => setShowSnack(true)}\n                message={\"Please Wait while we are logging you in\"}\n                type=\"success\"\n            />\n            <div className=\"form-container\">\n                <div className=\"image-holder\"></div>\n\n                <div>\n                    <div className=\"logo1\">\n                        <img src=\"images/logo.png\" alt=\"Logo\" width=\"200\" />\n                    </div>\n\n                    <h2 className=\"text-center\">\n                        <strong>Super Admin Login</strong>\n                    </h2>\n\n                    <div className=\"component-library \">\n                        <div className=\"items \">\n                            <div className=\"field-center\">\n                                <Stack spacing={10} alignItems=\"center\" flexDirection=\"column\">\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Email\"}\n                                        defaultValue={email}\n                                        helperText={\"Mobile or Email\"}\n                                        // isValid\n                                        onChange={(event) => setEmail(event.target.value)}\n                                        textcss={{\n                                            width: \"22.5em\",\n                                            height: \"56px\",\n                                        }}\n                                    />\n                                </Stack>\n\n                                <Stack\n                                    spacing={10}\n                                    alignItems=\"center\"\n                                    flexDirection=\"column\"\n                                    sx={{ marginTop: \"2%\" }}\n                                >\n                                    <CustomTextField\n                                        id={\"standard-helperText1\"}\n                                        label={\"Password\"}\n                                        defaultValue={password}\n                                        helperText={\"Password\"}\n                                        // isValid\n                                        onChange={(event) => setPassword(event.target.value)}\n                                        inputType={\"password\"}\n                                        textcss={{\n                                            width: \"22.5em\",\n                                            height: \"56px\",\n                                        }}\n                                        // rightIcon={\n                                        //     showPassword ? (\n                                        //         <VisibilityIcon onClick = {() => setShowPassword(false)} />\n                                        //     ) : (\n                                        //         <VisibilityOffIcon onClick = {() => setShowPassword(true)}/>\n                                        //     )\n                                        // }\n                                    />\n                                </Stack>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <CustomButton\n                            label={\"Log In\"}\n                            isTransaprent={false}\n                            isDisabled={false}\n                            isElevated={false}\n                            handleClick={handleSubmit}\n                            buttonCss={{\n                                width: \"25.8em\",\n                                height: \"3.5em\",\n                                padding: \"8px 16px\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n\n                                borderRadius: \"100px\",\n                                marginLeft: \"-70px\",\n                                marginTop: \"37px\",\n                            }}\n                        />\n                    </div>\n                    <div className=\"forgotpassword\">\n                        <Link to=\"/patientforgotpassword\" className=\"link\">\n                            Forgot Password\n                        </Link>\n                    </div>\n                    <div className=\"mobile\">\n                        <Link \n                            to=\"/loginwithotp\" \n                            className=\"link\"\n                            onClick={() => localStorage.setItem(\"signUp\", \"super_admin\")}\n                        >\n                            Log In with OTP\n                        </Link>\n                    </div>\n                    <div className=\"already\">\n                        I Don&apos;t have an account &nbsp;\n                        <Link to=\"/patientsignup\" className=\"link\">\n                            Create Account\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SuperAdminLogin;\n","import React from \"react\";\n\nimport { useContext, createContext, useState, useEffect, useRef } from \"react\";\n\nexport const MeetingAppContext = createContext();\n\nexport const useMeetingAppContext = () => useContext(MeetingAppContext);\n\nexport const MeetingAppProvider = ({ children }) => {\n  const [selectedMic, setSelectedMic] = useState({ id: null, label: null });\n  const [selectedWebcam, setSelectedWebcam] = useState({ id: null, label: null });\n  const [selectedSpeaker, setSelectedSpeaker] = useState({ id: null, label: null });\n  const [isCameraPermissionAllowed, setIsCameraPermissionAllowed] = useState(null);\n  const [isMicrophonePermissionAllowed, setIsMicrophonePermissionAllowed] = useState(null);\n  const [raisedHandsParticipants, setRaisedHandsParticipants] = useState([]);\n  const [sideBarMode, setSideBarMode] = useState(null);\n  const [pipMode, setPipMode] = useState(false);\n\n  const useRaisedHandParticipants = () => {\n    const raisedHandsParticipantsRef = useRef();\n\n    const participantRaisedHand = (participantId) => {\n      const raisedHandsParticipants = [...raisedHandsParticipantsRef.current];\n\n      const newItem = { participantId, raisedHandOn: new Date().getTime() };\n\n      const participantFound = raisedHandsParticipants.findIndex(\n        ({ participantId: pID }) => pID === participantId\n      );\n\n      if (participantFound === -1) {\n        raisedHandsParticipants.push(newItem);\n      } else {\n        raisedHandsParticipants[participantFound] = newItem;\n      }\n\n      setRaisedHandsParticipants(raisedHandsParticipants);\n    };\n\n    useEffect(() => {\n      raisedHandsParticipantsRef.current = raisedHandsParticipants;\n    }, [raisedHandsParticipants]);\n\n    const _handleRemoveOld = () => {\n      const raisedHandsParticipants = [...raisedHandsParticipantsRef.current];\n\n      const now = new Date().getTime();\n\n      const persisted = raisedHandsParticipants.filter(({ raisedHandOn }) => {\n        return parseInt(raisedHandOn) + 15000 > parseInt(now);\n      });\n\n      if (raisedHandsParticipants.length !== persisted.length) {\n        setRaisedHandsParticipants(persisted);\n      }\n    };\n\n    useEffect(() => {\n      const interval = setInterval(_handleRemoveOld, 1000);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }, []);\n\n    return { participantRaisedHand };\n  };\n\n  return (\n    <MeetingAppContext.Provider\n      value={{\n        // states\n\n        raisedHandsParticipants,\n        selectedMic,\n        selectedWebcam,\n        selectedSpeaker,\n        sideBarMode,\n        pipMode,\n        isCameraPermissionAllowed,\n        isMicrophonePermissionAllowed,\n\n        // setters\n\n        setRaisedHandsParticipants,\n        setSelectedMic,\n        setSelectedWebcam,\n        setSelectedSpeaker,\n        setSideBarMode,\n        setPipMode,\n        useRaisedHandParticipants,\n        setIsCameraPermissionAllowed,\n        setIsMicrophonePermissionAllowed,\n      }}\n    >\n      {children}\n    </MeetingAppContext.Provider>\n  );\n};\n","import React from \"react\";\n\nfunction MicOnIcon(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      {...props}\n    >\n      <mask\n        id=\"mask0_27_238\"\n        style={{ maskType: \"alpha\" }}\n        width=\"24\"\n        height=\"24\"\n        x=\"0\"\n        y=\"0\"\n        maskUnits=\"userSpaceOnUse\"\n      >\n        <path fill=\"#D9D9D9\" d=\"M0 0H24V24H0z\"></path>\n      </mask>\n      <g fill=\"#050A0E\" mask=\"url(#mask0_27_238)\">\n        <path\n          fill={\"#E72B4A\"}\n          fillRule=\"evenodd\"\n          d=\"M9.655 2.996A3.307 3.307 0 008.6 5.4v6.8c0 .902.38 1.767 1.055 2.404a3.71 3.71 0 002.545.996 3.71 3.71 0 002.546-.996A3.307 3.307 0 0015.8 12.2V5.4c0-.902-.38-1.767-1.054-2.404A3.71 3.71 0 0012.2 2a3.71 3.71 0 00-2.545.996zm-3.119 8.198c.17.16.264.376.264.601v.405c0 1.353.569 2.65 1.582 3.606A5.565 5.565 0 0012.2 17.3a5.565 5.565 0 003.818-1.494c1.013-.956 1.582-2.253 1.582-3.606v-.405c0-.225.095-.441.264-.6a.928.928 0 01.636-.25c.239 0 .468.09.636.25.17.159.264.375.264.6v.405c0 1.656-.64 3.256-1.8 4.498-1.16 1.243-2.76 2.043-4.5 2.25V20.7h1.8c.239 0 .468.09.636.249.17.16.264.376.264.601a.827.827 0 01-.264.601.928.928 0 01-.636.249H9.5a.928.928 0 01-.636-.249.827.827 0 01-.264-.601c0-.225.095-.442.264-.601A.928.928 0 019.5 20.7h1.8v-1.752C7.748 18.53 5 15.668 5 12.2v-.405c0-.225.095-.441.264-.6a.928.928 0 01.636-.25c.239 0 .468.09.636.25z\"\n          clipRule=\"evenodd\"\n        ></path>\n      </g>\n    </svg>\n  );\n}\n\nexport default MicOnIcon;\n","import React from \"react\";\n\nfunction MicOffIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <mask\n        id=\"mask0_25_170\"\n        style={{ maskType: \"alpha\" }}\n        width=\"24\"\n        height=\"24\"\n        x=\"0\"\n        y=\"0\"\n        maskUnits=\"userSpaceOnUse\"\n      >\n        <path fill=\"#D9D9D9\" d=\"M0 0H24V24H0z\"></path>\n      </mask>\n      <g fill=\"#050A0E\" mask=\"url(#mask0_25_170)\">\n        <path\n          fill={\"#E72B4A\"}\n          fillRule=\"evenodd\"\n          d=\"M8.6 10.692V12.2c0 .902.38 1.767 1.054 2.404a3.71 3.71 0 002.546.996c.346 0 .687-.047 1.014-.138L8.6 10.692zm5.915 6.116a5.665 5.665 0 01-2.315.492 5.565 5.565 0 01-3.819-1.494C7.37 14.85 6.8 13.553 6.8 12.2v-.405a.827.827 0 00-.264-.6.928.928 0 00-.636-.25.928.928 0 00-.637.25.827.827 0 00-.263.6v.405c0 3.468 2.748 6.33 6.3 6.748V20.7H9.5a.928.928 0 00-.637.249.827.827 0 00-.263.601c0 .225.095.442.263.601.17.16.398.249.637.249h5.4c.238 0 .467-.09.636-.249a.827.827 0 00.264-.601.827.827 0 00-.264-.601.927.927 0 00-.636-.249h-1.8v-1.752a7.495 7.495 0 002.67-.842l-1.255-1.298zm4.16-1.633l-1.343-1.388A4.84 4.84 0 0017.6 12.2v-.405c0-.225.095-.441.263-.6a.927.927 0 01.637-.25c.238 0 .467.09.636.25.169.159.264.375.264.6v.405a6.491 6.491 0 01-.726 2.975zM15.8 12.203L8.654 4.814a3.34 3.34 0 011-1.818A3.71 3.71 0 0112.2 2c.955 0 1.87.358 2.545.996A3.307 3.307 0 0115.8 5.4v6.803z\"\n          clipRule=\"evenodd\"\n        ></path>\n        <rect\n          fill={\"#E72B4A\"}\n          width=\"24.979\"\n          height=\"1.817\"\n          x=\"3.306\"\n          y=\"3\"\n          rx=\"0.909\"\n          transform=\"rotate(45.956 3.306 3)\"\n        ></rect>\n      </g>\n    </svg>\n  );\n}\n\nexport default MicOffIcon;\n","import React from \"react\";\n\nfunction WebcamOnIcon(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      {...props}\n    >\n      <mask\n        id=\"mask0_27_287\"\n        style={{ maskType: \"alpha\" }}\n        width=\"24\"\n        height=\"24\"\n        x=\"0\"\n        y=\"0\"\n        maskUnits=\"userSpaceOnUse\"\n      >\n        <path fill=\"#D9D9D9\" d=\"M0 0H24V24H0z\"></path>\n      </mask>\n      <g mask=\"url(#mask0_27_287)\">\n        <path\n          fill={\"#E72B4A\"}\n          d=\"M22.03 7.187a.98.98 0 00-1.079 0l-3.774 1.94a3.3 3.3 0 00-3.236-3.126H4.236A3.178 3.178 0 001 9.236v6.47a3.178 3.178 0 003.235 3.236h9.706a3.3 3.3 0 003.235-3.127l3.881 1.94a1.136 1.136 0 001.4-.43.972.972 0 00.109-.54V8.158a1.286 1.286 0 00-.538-.971z\"\n        ></path>\n      </g>\n    </svg>\n  );\n}\n\nexport default WebcamOnIcon;\n","import * as React from \"react\";\n\nconst WebcamOffIcon = (props) => (\n  <svg\n    width={24}\n    height={24}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g clipPath=\"url(#a)\">\n      <path\n        d=\"M22.359 17.84a1.196 1.196 0 0 0 .548-1.017V7.786a1.36 1.36 0 0 0-.548-1.017.97.97 0 0 0-1.095 0L17.43 8.804a3.4 3.4 0 0 0-3.286-3.286h-4.052L22.14 17.949c-.001-.11.108-.11.219-.11Zm.219 3.841-5.257-5.424L6.916 5.517 2.863 1.34a1.036 1.036 0 0 0-1.533 0 1.117 1.117 0 0 0 0 1.583l2.519 2.596A3.379 3.379 0 0 0 1 8.91v6.78a3.386 3.386 0 0 0 .945 2.415 3.175 3.175 0 0 0 2.341.975h9.857a2.84 2.84 0 0 0 2.082-.791l4.819 4.972a1.06 1.06 0 0 0 1.533 0 1.144 1.144 0 0 0 0-1.582v.002Z\"\n        fill=\"#E72B4A\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path\n          fill={props.fillcolor}\n          transform=\"translate(1 1)\"\n          d=\"M0 0h21.905v22.59H0z\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default WebcamOffIcon;\n","import * as React from \"react\";\n\nconst ScreenShareIcon = (props) => (\n  <svg\n    width={24}\n    height={24}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M20 18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10a2 2 0 0 0 2 2H1c-.55 0-1 .45-1 1s.45 1 1 1h22c.55 0 1-.45 1-1s-.45-1-1-1h-3Zm-7-3.53v-2.19c-2.78 0-4.61.85-6 2.72.56-2.67 2.11-5.33 6-5.87V7l3.61 3.36c.21.2.21.53 0 .73L13 14.47Z\"\n      fill={props.fillcolor}\n    />\n  </svg>\n);\n\nexport default ScreenShareIcon;\n","import * as React from \"react\";\n\nconst ChatIcon = (props) => (\n  <svg\n    width={24}\n    height={24}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M12 2.25c-2.66 0-5.276.195-7.833.57C2 3.139.5 5.038.5 7.17v6.59c0 2.132 1.5 4.031 3.667 4.349.96.141 1.929.256 2.904.346v4.332a.821.821 0 0 0 1.402.58l4.583-4.581a.428.428 0 0 1 .291-.123 53.608 53.608 0 0 0 6.486-.554C22 17.79 23.5 15.892 23.5 13.76V7.169c0-2.133-1.5-4.03-3.667-4.348A53.825 53.825 0 0 0 12 2.25ZM7.893 9.232a1.232 1.232 0 1 0 0 2.464 1.232 1.232 0 0 0 0-2.464Zm2.875 1.232a1.232 1.232 0 1 1 2.465 0 1.232 1.232 0 0 1-2.465 0Zm5.34-1.232a1.232 1.232 0 1 0 0 2.465 1.232 1.232 0 0 0 0-2.465Z\"\n      fill={\"#E72B4A\"}\n    />\n  </svg>\n);\n\nexport default ChatIcon;\n","import * as React from \"react\";\n\nconst ParticipantsIcon = (props) => (\n  <svg\n    width={24}\n    height={24}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M4.5 6.375a4.125 4.125 0 1 1 8.25 0 4.125 4.125 0 0 1-8.25 0Zm9.75 2.25a3.375 3.375 0 1 1 6.75 0 3.375 3.375 0 0 1-6.75 0ZM1.5 19.125a7.125 7.125 0 1 1 14.25 0v.003l-.001.119a.749.749 0 0 1-.363.63 13.067 13.067 0 0 1-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 0 1-.364-.63l-.001-.122Zm15.75.003-.001.144a2.25 2.25 0 0 1-.233.96c1.746.108 3.49-.24 5.06-1.01a.75.75 0 0 0 .42-.643 4.874 4.874 0 0 0-6.957-4.611 8.586 8.586 0 0 1 1.71 5.157v.003h.001Z\"\n      fill={props.fillcolor}\n    />\n  </svg>\n);\n\nexport default ParticipantsIcon;\n","import React from \"react\";\n\nfunction EndIcon(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      {...props}\n    >\n      <mask\n        id=\"mask0_27_262\"\n        style={{ maskType: \"alpha\" }}\n        width=\"24\"\n        height=\"24\"\n        x=\"0\"\n        y=\"0\"\n        maskUnits=\"userSpaceOnUse\"\n      >\n        <path fill=\"#D9D9D9\" d=\"M0 0H24V24H0z\"></path>\n      </mask>\n      <g mask=\"url(#mask0_27_262)\">\n        <path\n          fill={\"#E72B4A\"}\n          d=\"M12.001 9.858a15.938 15.938 0 00-4.6.668v2.883a.932.932 0 01-.556.836 11.66 11.66 0 00-2.665 1.717 1.04 1.04 0 01-.7.265 1.016 1.016 0 01-.705-.274l-2.48-2.298a.884.884 0 010-1.319A17.65 17.65 0 0112.001 8a17.65 17.65 0 0111.704 4.336.888.888 0 01.218 1.018.873.873 0 01-.218.296l-2.476 2.298a1.049 1.049 0 01-1.405.01 11.656 11.656 0 00-2.665-1.718.932.932 0 01-.556-.835V10.52A16.098 16.098 0 0012 9.858z\"\n        ></path>\n      </g>\n    </svg>\n  );\n}\n\nexport default EndIcon;\n","import * as React from \"react\";\n\nconst RaiseHandIcon = (props) => (\n  <svg\n    width={24}\n    height={24}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g clipPath=\"url(#a)\">\n      <mask\n        id=\"b\"\n        style={{\n          maskType: \"alpha\",\n        }}\n        maskUnits=\"userSpaceOnUse\"\n        x={0}\n        y={1}\n        width={24}\n        height={24}\n      >\n        <path fill=\"#D9D9D9\" d=\"M0 1h24v24H0z\" />\n      </mask>\n      <g mask=\"url(#b)\">\n        <path\n          d=\"M10.903 2.55c0-.278.101-.546.281-.742a.921.921 0 0 1 .68-.308c.254 0 .499.11.679.308.18.196.281.464.281.742v7.671c.442.151.871.357 1.28.615V3.95c0-.278.102-.546.282-.742a.921.921 0 0 1 .68-.308c.254 0 .498.11.678.308.18.196.282.464.282.742v10.208a3.681 3.681 0 0 0-1.626.75 4.126 4.126 0 0 0-1.149 1.465 7.123 7.123 0 0 1 3.415-.873c.17 0 .333-.074.453-.205a.734.734 0 0 0 .187-.495v-2.115c.003-.83.307-1.625.844-2.212a.918.918 0 0 1 .674-.29c.25.004.49.114.667.308a1.1 1.1 0 0 1 .282.73c.003.273-.092.537-.265.736-.089.097-.16.212-.207.338a1.127 1.127 0 0 0-.074.4V15.5h-.004c-.05 1.408-.584 2.743-1.496 3.74l-1.482 1.62c-.96 1.05-2.263 1.64-3.622 1.64h-1.72c-1.698 0-3.327-.738-4.528-2.05-1.2-1.313-1.875-3.093-1.875-4.95V6.75c0-.278.101-.546.281-.742a.92.92 0 0 1 .68-.308.92.92 0 0 1 .679.308c.18.196.281.464.281.742v5.151a6.466 6.466 0 0 1 1.28-1.065V3.95c0-.278.102-.546.282-.742a.92.92 0 0 1 .68-.308.92.92 0 0 1 .678.308c.18.196.282.464.282.742v6.09c.422-.092.85-.14 1.28-.14V2.55Z\"\n          fill={props.fillcolor}\n        />\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path fill={props.fillcolor} d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default RaiseHandIcon;\n","import * as React from \"react\";\nconst PipIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={48}\n    height={48}\n    viewBox=\"0 96 960 960\"\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      d=\"M80 536v-60h178L57 276l43-43 200 200V256h60v280H80Zm60 360q-24 0-42-18t-18-42V606h60v230h340v60H140Zm680-280V316H430v-60h390q24 0 42 18t18 42v300h-60ZM540 896V676h340v220H540Z\"\n      fill={\"#E72B4A\"}\n    />\n  </svg>\n);\nexport default PipIcon;\n","import React from \"react\";\nimport Lottie from \"lottie-react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\n\nexport const OutlinedButton = ({\n  bgColor,\n  onClick,\n  Icon,\n  isFocused,\n  tooltip,\n  badge,\n  lottieOption,\n  disabledOpacity,\n  renderRightComponent,\n  disabled,\n  large,\n  btnID,\n  color,\n  focusIconColor,\n  isRequestProcessing,\n  borderColor,\n  buttonText,\n}) => {\n  const [mouseOver, setMouseOver] = useState(false);\n  const [mouseDown, setMouseDown] = useState(false);\n  const [blinkingState, setBlinkingState] = useState(1);\n\n  const [tooltipShow, setTooltipShow] = useState(false);\n  const btnRef = useRef();\n  const tooltipRef = useRef();\n\n  const openTooltip = () => {\n    createPopper(btnRef.current, tooltipRef.current, {\n      placement: \"top\",\n      modifiers: [\n        {\n          name: \"offset\",\n          options: {\n            offset: [-50, 0],\n          },\n        },\n      ],\n    });\n    setTooltipShow(true);\n  };\n  const closeTooltip = () => {\n    setTooltipShow(false);\n  };\n\n  const intervalRef = useRef();\n\n  const iconSize = 24 * (large ? 1.7 : 1);\n\n  const startBlinking = () => {\n    intervalRef.current = setInterval(() => {\n      setBlinkingState((s) => (s === 1 ? 0.4 : 1));\n    }, 600);\n  };\n\n  const stopBlinking = () => {\n    clearInterval(intervalRef.current);\n\n    setBlinkingState(1);\n  };\n\n  useEffect(() => {\n    if (isRequestProcessing) {\n      startBlinking();\n    } else {\n      stopBlinking();\n    }\n  }, [isRequestProcessing]);\n\n  useEffect(() => {\n    return () => {\n      stopBlinking();\n    };\n  }, []);\n\n  return (\n    <>\n      <div\n        ref={btnRef}\n        onMouseEnter={() => {\n          setMouseOver(true);\n          openTooltip();\n        }}\n        onMouseLeave={() => {\n          setMouseOver(false);\n          closeTooltip();\n        }}\n        onMouseDown={() => {\n          setMouseDown(true);\n        }}\n        onMouseUp={() => {\n          setMouseDown(false);\n        }}\n      >\n        <div\n          className={`flex items-center justify-center  rounded-lg ${\n            bgColor ? `${bgColor}` : isFocused ? \"bg-white\" : \"bg-gray-750\"\n          } ${\n            mouseOver\n              ? \"border-2 border-transparent border-solid\"\n              : borderColor\n              ? `border-2 border-[${borderColor}] border-solid`\n              : bgColor\n              ? \"border-2 border-transparent border-solid\"\n              : \"border-2 border-solid border-[#ffffff33]\"\n          } md:m-2 m-1`}\n          style={{\n            transition: \"all 200ms\",\n            transitionTimingFunction: \"ease-in-out\",\n            opacity: blinkingState,\n          }}\n        >\n          <button\n            className={`${\n              disabled ? \"cursor-default\" : \"cursor-pointer\"\n            } flex items-center justify-center`}\n            id={btnID}\n            onMouseEnter={() => {\n              setMouseOver(true);\n            }}\n            onMouseLeave={() => {\n              setMouseOver(false);\n            }}\n            onMouseDown={() => {\n              setMouseDown(true);\n            }}\n            onMouseUp={() => {\n              setMouseDown(false);\n            }}\n            disabled={disabled}\n            onClick={onClick}\n            style={{backgroundColor : \"black\",borderRadius : \"50px\" , padding : \"10px\"}}\n          >\n            <div\n              className=\"flex items-center justify-center p-1 m-1 rounded-lg\"\n              style={{\n                opacity: disabled ? disabledOpacity || 0.7 : 1,\n                transform: `scale(${mouseOver ? (mouseDown ? 0.95 : 1.1) : 1})`,\n                transition: `all ${200 * 1}ms`,\n                transitionTimingFunction: \"linear\",\n              }}\n            >\n              {Icon &&\n                (lottieOption ? (\n                  <div className={`flex items-center justify-center`}>\n                    <div\n                      style={{\n                        height: iconSize,\n                        width:\n                          (iconSize * lottieOption?.width) /\n                          lottieOption?.height,\n                      }}\n                    >\n                      <Lottie\n                        loop={lottieOption.loop}\n                        autoPlay={lottieOption.autoPlay}\n                        animationData={lottieOption.animationData}\n                        rendererSettings={{\n                          preserveAspectRatio:\n                            lottieOption.rendererSettings.preserveAspectRatio,\n                        }}\n                        isClickToPauseDisabled\n                      />\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <Icon\n                      style={{\n                        color: isFocused\n                          ? focusIconColor || \"#1C1F2E\"\n                          : color\n                          ? color\n                          : \"#fff\",\n                        height: iconSize,\n                        width: iconSize,\n                      }}\n                      fillcolor={\n                        isFocused\n                          ? focusIconColor || \"#1C1F2E\"\n                          : color\n                          ? color\n                          : \"#fff\"\n                      }\n                    />\n                    {badge && (\n                      <p\n                        className={`${\n                          isFocused ? \"text-black\" : \"text-white\"\n                        } text-base ml-2`}\n                      >\n                        {badge}\n                      </p>\n                    )}\n                  </>\n                ))}\n            </div>\n            {buttonText ? (\n              <p className=\"text-sm text-white font-semibold mr-2 text-center\">\n                {buttonText}\n              </p>\n            ) : null}\n          </button>\n          {typeof renderRightComponent === \"function\" && renderRightComponent()}\n        </div>\n      </div>\n      <div\n        style={{ zIndex: 999 }}\n        className={`${\n          tooltipShow && (mouseOver || mouseDown) ? \"\" : \"hidden\"\n        } overflow-hidden flex flex-col items-center justify-center whitespace-pre-line`}\n        ref={tooltipRef}\n      >\n        <div className={\"rounded-md p-1.5 bg-black \"}>\n          {/* <p className=\"text-base text-white \">{tooltip || \"\"}</p> */}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst useIsTab = () => {\n  const isTablet = useMediaQuery({\n    minWidth: 768,\n    maxWidth: 1223, // 991,\n  });\n\n  return isTablet;\n};\n\nexport default useIsTab;\n","import React from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst useIsMobile = (maxWidth) => {\n  const isMobile = useMediaQuery({ maxWidth: maxWidth || 767 });\n  return isMobile;\n};\n\nexport default useIsMobile;\n","import React, { useRef, useState } from \"react\";\nimport Lottie from \"lottie-react\";\nimport { createPopper } from \"@popperjs/core\";\n\nexport const MobileIconButton = ({\n  badge,\n  onClick,\n  Icon,\n  isFocused,\n  bgColor,\n  disabledOpacity,\n  focusIconColor,\n  disabled,\n  large,\n  tooltipTitle,\n  btnID,\n  buttonText,\n  lottieOption,\n}) => {\n  const [mouseOver, setMouseOver] = useState(false);\n  const [mouseDown, setMouseDown] = useState(false);\n\n  const [tooltipShow, setTooltipShow] = useState(false);\n  const btnRef = useRef();\n  const tooltipRef = useRef();\n\n  const openTooltip = () => {\n    createPopper(btnRef.current, tooltipRef.current, {\n      placement: \"bottom\",\n    });\n    setTooltipShow(true);\n  };\n  const closeTooltip = () => {\n    setTooltipShow(false);\n  };\n\n  const iconSize = 24 * (large ? 1.7 : 1);\n\n  return (\n    <>\n      <div ref={btnRef} onMouseEnter={openTooltip} onMouseLeave={closeTooltip}>\n        <div\n          className=\"p-0 rounded-lg\"\n          style={{\n            transition: `all ${200 * 0.5}ms`,\n            transitionTimingFunction: \"linear\",\n          }}\n        >\n          <button\n            className=\"flex flex-col items-center justify-center\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            id={btnID}\n            onMouseEnter={() => {\n              setMouseOver(true);\n            }}\n            onMouseLeave={() => {\n              setMouseOver(false);\n            }}\n            onMouseDown={() => {\n              setMouseDown(true);\n            }}\n            onMouseUp={() => {\n              setMouseDown(false);\n            }}\n            disabled={disabled}\n            onClick={onClick}\n          >\n            <div\n              className=\"p-1 relative flex items-center justify-center rounded-lg\"\n              style={{\n                opacity: disabled ? disabledOpacity || 0.7 : 1,\n                transform: `scale(${mouseOver ? (mouseDown ? 0.95 : 1.1) : 1})`,\n                transition: `all ${200 * 0.5}ms`,\n                transitionTimingFunction: \"linear\",\n              }}\n            >\n              {badge && (\n                <div class=\"inline-flex absolute -top-2 -right-3 justify-center items-center w-6 h-6 text-xs font-bold text-white bg-black rounded-full\">\n                  {badge}\n                </div>\n              )}\n\n              {lottieOption ? (\n                <div\n                  className={`flex items-center justify-center p-[5px] rounded-[5px]`}\n                  style={{ backgroundColor: bgColor }}\n                >\n                  <div\n                    style={{\n                      height: iconSize,\n                      width:\n                        (iconSize * lottieOption?.width) / lottieOption?.height,\n                    }}\n                  >\n                    <Lottie\n                      loop={lottieOption.loop}\n                      autoPlay={lottieOption.autoPlay}\n                      animationData={lottieOption.animationData}\n                      rendererSettings={{\n                        preserveAspectRatio:\n                          lottieOption.rendererSettings.preserveAspectRatio,\n                      }}\n                      isClickToPauseDisabled\n                    />\n                  </div>\n                </div>\n              ) : (\n                <Icon\n                  style={{\n                    color: isFocused ? focusIconColor || \"#fff\" : \"#95959E\",\n                    height: iconSize,\n                    width: iconSize,\n                  }}\n                  fillcolor={isFocused ? focusIconColor || \"#fff\" : \"#95959E\"}\n                />\n              )}\n            </div>\n            <div>\n              {/* {buttonText ? (\n                <p\n                  className={`${\n                    isFocused ? \"text-white\" : \"text-gray-900\"\n                  } text-sm`}\n                >\n                  {buttonText}\n                </p>\n              ) : null} */}\n            </div>\n          </button>\n        </div>\n      </div>\n      <div\n        style={{ zIndex: 999 }}\n        className={`${\n          tooltipShow ? \"\" : \"hidden\"\n        } overflow-hidden flex flex-col items-center justify-center pb-1`}\n        ref={tooltipRef}\n      >\n        <div className={\"rounded-md p-1.5 bg-black \"}>\n          <p className=\"text-base text-white \">{tooltipTitle || \"\"}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const json_verify = (s) => {\n  try {\n    JSON.parse(s);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport function getQualityScore(stats) {\n  const packetLossPercent = stats.packetsLost / stats.totalPackets || 0;\n  const jitter = stats.jitter;\n  const rtt = stats.rtt;\n  let score = 100;\n  score -= packetLossPercent * 50 > 50 ? 50 : packetLossPercent * 50;\n  score -= ((jitter / 30) * 25 > 25 ? 25 : (jitter / 30) * 25) || 0;\n  score -= ((rtt / 300) * 25 > 25 ? 25 : (rtt / 300) * 25) || 0;\n  return score / 10;\n}\n\nexport function formatAMPM(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var strTime = hours + \":\" + minutes + \" \" + ampm;\n  return strTime;\n}\n\nexport const trimSnackBarText = (text = \"\") => {\n  const maxLength = 52;\n\n  return text.length > maxLength ? `${text.substr(0, maxLength - 5)}...` : text;\n};\n\nexport const nameTructed = (name, tructedLength) => {\n  if (name?.length > tructedLength) {\n    if (tructedLength === 15) {\n      return `${name.substr(0, 12)}...`;\n    } else {\n      return `${name.substr(0, tructedLength)}...`;\n    }\n  } else {\n    return name;\n  }\n};\n\nexport const sideBarModes = {\n  PARTICIPANTS: \"PARTICIPANTS\",\n  CHAT: \"CHAT\",\n};\n\nexport function debounce(func, wait, immediate) {\n  var timeout;\n\n  return function executedFunction() {\n    var context = this;\n    var args = arguments;\n\n    var later = function () {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n\n    clearTimeout(timeout);\n\n    timeout = setTimeout(later, wait);\n\n    if (callNow) func.apply(context, args);\n  };\n}\n","import React from \"react\";\nimport { createCameraVideoTrack , createMicrophoneAudioTrack } from \"@videosdk.live/react-sdk\";\n\nconst useMediaStream = () => {\n\n  const getVideoTrack = async ({ webcamId, encoderConfig }) => {\n    try {\n      const track = await createCameraVideoTrack({\n        cameraId: webcamId ,\n        encoderConfig: encoderConfig ?  encoderConfig :\"h540p_w960p\",\n        optimizationMode: \"motion\",\n        multiStream: false,\n      });\n\n      return track;\n    } catch(error) {\n      return null;\n    }\n  };\n\n  const getAudioTrack = async ({micId}) => {\n    try{\n      const track = await createMicrophoneAudioTrack({\n        microphoneId: micId\n      });\n      return track;\n    } catch(error) {\n      return null;\n    }\n  };\n\n  return { getVideoTrack,getAudioTrack };\n};\n\nexport default useMediaStream;\n","import { Constants, useMeeting, usePubSub, useMediaDevice } from \"@videosdk.live/react-sdk\";\nimport React, { Fragment, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  ClipboardIcon,\n  CheckIcon,\n  ChevronDownIcon,\n  DotsHorizontalIcon,\n} from \"@heroicons/react/outline\";\nimport recordingBlink from \"../../static/animations/recording-blink.json\";\nimport useIsRecording from \"../../hooks/useIsRecording\";\nimport RecordingIcon from \"../../icons/Bottombar/RecordingIcon\";\nimport MicOnIcon from \"../../icons/Bottombar/MicOnIcon\";\nimport MicOffIcon from \"../../icons/Bottombar/MicOffIcon\";\nimport WebcamOnIcon from \"../../icons/Bottombar/WebcamOnIcon\";\nimport WebcamOffIcon from \"../../icons/Bottombar/WebcamOffIcon\";\nimport ScreenShareIcon from \"../../icons/Bottombar/ScreenShareIcon\";\nimport ChatIcon from \"../../icons/Bottombar/ChatIcon\";\nimport ParticipantsIcon from \"../../icons/Bottombar/ParticipantsIcon\";\nimport EndIcon from \"../../icons/Bottombar/EndIcon\";\nimport RaiseHandIcon from \"../../icons/Bottombar/RaiseHandIcon\";\nimport PipIcon from \"../../icons/Bottombar/PipIcon\";\nimport { OutlinedButton } from \"../../components/buttons/OutlinedButton\";\nimport useIsTab from \"../../hooks/useIsTab\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\nimport { MobileIconButton } from \"../../components/buttons/MobileIconButton\";\nimport { sideBarModes } from \"../../utils/common\";\nimport { Dialog, Popover, Transition } from \"@headlessui/react\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useMeetingAppContext } from \"../../MeetingAppContextDef\";\nimport useMediaStream from \"../../hooks/useMediaStream\";\nimport \"./bottombar.scss\";\nimport MicIcon from '@mui/icons-material/Mic';\nimport { Translate } from \"@mui/icons-material\";\n\nfunction PipBTN({ isMobile, isTab }) {\n  const { pipMode, setPipMode } = useMeetingAppContext();\n\n  const getRowCount = (length) => {\n    return length > 2 ? 2 : length > 0 ? 1 : 0;\n  };\n  const getColCount = (length) => {\n    return length < 2 ? 1 : length < 5 ? 2 : 3;\n  };\n\n  const pipWindowRef = useRef(null);\n  const togglePipMode = async () => {\n    //Check if PIP Window is active or not\n    //If active we will turn it off\n    if (pipWindowRef.current) {\n      await document.exitPictureInPicture();\n      pipWindowRef.current = null;\n      return;\n    }\n\n    //Check if browser supports PIP mode else show a message to user\n    if (\"pictureInPictureEnabled\" in document) {\n      //Creating a Canvas which will render our PIP Stream\n      const source = document.createElement(\"canvas\");\n      const ctx = source.getContext(\"2d\");\n\n      //Create a Video tag which we will popout for PIP\n      const pipVideo = document.createElement(\"video\");\n      pipWindowRef.current = pipVideo;\n      pipVideo.autoplay = true;\n\n      //Creating stream from canvas which we will play\n      const stream = source.captureStream();\n      pipVideo.srcObject = stream;\n      drawCanvas();\n\n      //When Video is ready we will start PIP mode\n      pipVideo.onloadedmetadata = () => {\n        pipVideo.requestPictureInPicture();\n      };\n      await pipVideo.play();\n\n      //When the PIP mode starts, we will start drawing canvas with PIP view\n      pipVideo.addEventListener(\"enterpictureinpicture\", (event) => {\n        drawCanvas();\n        setPipMode(true);\n      });\n\n      //When PIP mode exits, we will dispose the track we created earlier\n      pipVideo.addEventListener(\"leavepictureinpicture\", (event) => {\n        pipWindowRef.current = null;\n        setPipMode(false);\n        pipVideo.srcObject.getTracks().forEach((track) => track.stop());\n      });\n\n      //These will draw all the video elements in to the Canvas\n      function drawCanvas() {\n        //Getting all the video elements in the document\n        const videos = document.querySelectorAll(\"video\");\n        try {\n          //Perform initial black paint on the canvas\n          ctx.fillStyle = \"black\";\n          ctx.fillRect(0, 0, source.width, source.height);\n\n          //Drawing the participant videos on the canvas in the grid format\n          const rows = getRowCount(videos.length);\n          const columns = getColCount(videos.length);\n          for (let i = 0; i < rows; i++) {\n            for (let j = 0; j < columns; j++) {\n              if (j + i * columns <= videos.length || videos.length === 1) {\n                ctx.drawImage(\n                  videos[j + i * columns],\n                  j < 1 ? 0 : source.width / (columns / j),\n                  i < 1 ? 0 : source.height / (rows / i),\n                  source.width / columns,\n                  source.height / rows\n                );\n              }\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        //If pip mode is on, keep drawing the canvas when ever new frame is requested\n        if (document.pictureInPictureElement === pipVideo) {\n          requestAnimationFrame(drawCanvas);\n        }\n      }\n    } else {\n      alert(\"PIP is not supported by your browser\");\n    }\n  };\n\n  return isMobile || isTab ? (\n    <MobileIconButton\n      id=\"pip-btn\"\n      // tooltipTitle={pipMode ? \"Stop PiP\" : \"Start Pip\"}\n      buttonText={pipMode ? \"Stop PiP\" : \"Start Pip\"}\n      isFocused={pipMode}\n      Icon={PipIcon}\n      onClick={() => {\n        togglePipMode();\n      }}\n      disabled={false}\n    />\n  ) : (\n    <OutlinedButton\n      Icon={PipIcon}\n      onClick={() => {\n        togglePipMode();\n      }}\n      isFocused={pipMode}\n      // tooltip={pipMode ? \"Stop PiP\" : \"Start Pip\"}\n      disabled={false}\n    />\n  );\n}\n\nconst MicBTN = () => {\n  const {\n    selectedMic,\n    setSelectedMic,\n    selectedSpeaker,\n    setSelectedSpeaker,\n    isMicrophonePermissionAllowed\n  } = useMeetingAppContext()\n\n  const {\n     getMicrophones, getPlaybackDevices\n  } = useMediaDevice();\n\n  const mMeeting = useMeeting();\n  const [mics, setMics] = useState([]);\n  const [speakers, setSpeakers] = useState([])\n  const localMicOn = mMeeting?.localMicOn;\n  const changeMic = mMeeting?.changeMic;\n\n  const getMics = async () => {\n    const mics = await getMicrophones();\n    const speakers = await getPlaybackDevices();\n\n    mics && mics?.length && setMics(mics);\n    speakers && speakers?.length && setSpeakers(speakers)\n  };\n\n  const [tooltipShow, setTooltipShow] = useState(false);\n  const btnRef = useRef();\n  const tooltipRef = useRef();\n\n  const openTooltip = () => {\n    createPopper(btnRef.current, tooltipRef.current, {\n      placement: \"top\",\n    });\n    setTooltipShow(true);\n  };\n  const closeTooltip = () => {\n    setTooltipShow(false);\n  };\n  return (\n    <>\n      <OutlinedButton\n        Icon={localMicOn ? MicOnIcon : MicOffIcon}\n        onClick={() => { mMeeting.toggleMic() }}\n        bgColor={localMicOn ? \"bg-gray-750\" : \"#E72B4A\"}\n        borderColor={localMicOn && \"#ffffff33\"}\n        isFocused={localMicOn}\n        focusIconColor={localMicOn && \"white\"}\n        tooltip={\"\"}\n        renderRightComponent={() => {\n          return (\n            <>\n            {/* from here  */}\n              {/* <Popover className=\"BottomBar-popover-container\"> \n                {({ close }) => (\n                  <>\n                    <Popover.Button disabled={!isMicrophonePermissionAllowed} className=\"bottom-bar-popover-button\">\n                      <div\n                        ref={btnRef}\n                        onMouseEnter={openTooltip}\n                        onMouseLeave={closeTooltip}\n                      >\n                        <button\n                          onClick={() => { getMics() }}\n                        >\n                          <ChevronDownIcon\n                            className=\"bottom-bar-popover-button-downicon\"\n                            style={{\n                              color: mMeeting.localMicOn ? \"white\" : \"black\",\n                            }}\n                          />\n                        </button>\n                      </div>\n                    </Popover.Button>\n                    <Transition\n                      as={Fragment}\n                      enter=\"botton-bar-transition-enter\"\n                      enterFrom=\"botton-bar-transition-enterfrom\"\n                      enterTo=\".botton-bar-transition-enterto\"\n                      leave=\"botton-bar-transition-leave\"\n                      leaveFrom=\"botton-bar-transition-leavefrom\"\n                      leaveTo=\"botton-bar-transition-leaveto\"\n                    >\n                      <Popover.Panel className=\"bottom-bar-popover-panel-main-container\">\n                        <div className=\"bottom-bar-popover-panel-inner-container-one\">\n                          <div className={\"bottom-bar-popover-panel-inner-container-two\"}>\n                            <div>\n                              <div className=\"bottom-bar-popover-panel-inner-container-three\">\n                                <p className=\"bottom-bar-popover-panel-inner-container-three-paragraph\">\n                                  {\"MICROPHONE\"}\n                                </p>\n                              </div>\n                              <div className=\"bottom-bar-popover-panel-inner-container-four\">\n                                {mics.map(({ deviceId, label }, index) => (\n                                  <div\n                                    className={`bottom-bar-popover-panel-inner-container-four-mic-container ${deviceId === selectedMic.id &&\n                                      \"bottom-bar-popover-panel-inner-container-four-mic-container-inner\"\n                                      }`}\n                                  >\n                                    <button\n                                      className={`bottom-bar-popover-panel-inner-container-four-mic-button ${deviceId === selectedMic.id &&\n                                        \"bottom-bar-popover-panel-inner-container-four-mic-button-color\"\n                                        }`}\n                                      key={`mics_${deviceId}`}\n                                      onClick={() => {\n                                        setSelectedMic({ id: deviceId });\n                                        changeMic(deviceId);\n                                        close();\n                                      }}\n                                    >\n                                      {label || `Mic ${index + 1}`}\n                                    </button>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                            <hr className='bottom-bar-popover-panel-inner-container-four-mic-hr' />\n                            <div>\n                              <div className=\"bottom-bar-popover-panel-inner-container-five\">\n                                <p className=\"bottom-bar-popover-panel-inner-container-five-paragraph\">\n                                  {\"SPEAKER\"}\n                                </p>\n                              </div>\n                                <div className=\"bottom-bar-popover-panel-inner-container-six\">\n                                {speakers.map(({ deviceId, label }, index) => (\n                                  <div\n                                    className={`bottom-bar-popover-panel-inner-container-six-speaker-container ${deviceId === selectedSpeaker.id &&\n                                      \"bottom-bar-popover-panel-inner-container-four-mic-button-color\"\n                                      }`}\n                                  >\n                                    <button\n                                      className={`bottom-bar-popover-panel-inner-container-six-speaker-container-button ${deviceId === selectedSpeaker.id &&\n                                        \"bottom-bar-popover-panel-inner-container-four-mic-button-color\"\n                                        }`}\n                                      key={`speakers_${deviceId}`}\n                                      onClick={() => {\n                                        setSelectedSpeaker({ id: deviceId });\n                                        close();\n                                      }}\n                                    >\n                                      {label || `Speaker ${index + 1}`}\n                                    </button>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n\n                          </div>\n                        </div>\n\n                      </Popover.Panel>\n                    </Transition>\n                  </>\n                )}\n              </Popover> */}\n              {/* <div\n                style={{ zIndex: 999 }}\n                className={`${tooltipShow ? \"\" : \"bottom-bar-popover-panel-inner-container-seven\"\n                  } bottom-bar-popover-panel-inner-container-seven-two`}\n                ref={tooltipRef}\n              >\n                <div className={\"bottom-bar-popover-panel-inner-container-eight\"}>\n                  <p className=\"bottom-bar-popover-panel-inner-container-eight-paragraph\">\n                    {\"Change microphone\"}\n                  </p>\n                </div>\n              </div> */}\n            </>\n          );\n        }}\n      />\n    </>\n  );\n};\n\nconst WebCamBTN = () => {\n  const {\n    selectedWebcam,\n    setSelectedWebcam,\n    isCameraPermissionAllowed,\n  } = useMeetingAppContext()\n  const {getCameras} = useMediaDevice();\n  const mMeeting = useMeeting();\n  const [webcams, setWebcams] = useState([]);\n  const { getVideoTrack } = useMediaStream();\n\n  const localWebcamOn = mMeeting?.localWebcamOn;\n  const changeWebcam = mMeeting?.changeWebcam;\n\n  const getWebcams = async () => {\n    let webcams = await getCameras();\n    webcams && webcams?.length && setWebcams(webcams);\n  };\n\n  const [tooltipShow, setTooltipShow] = useState(false);\n  const btnRef = useRef();\n  const tooltipRef = useRef();\n\n  const openTooltip = () => {\n    createPopper(btnRef.current, tooltipRef.current, {\n      placement: \"top\",\n    });\n    setTooltipShow(true);\n  };\n  const closeTooltip = () => {\n    setTooltipShow(false);\n  };\n\n  return (\n    <>\n      <OutlinedButton\n        Icon={localWebcamOn ? WebcamOnIcon : WebcamOffIcon}\n        onClick={async () => {\n          let track;\n          if (!localWebcamOn) {\n            track = await getVideoTrack({\n              webcamId: selectedWebcam.id\n            });\n          }\n          mMeeting.toggleWebcam(track);\n        }}\n        bgColor={localWebcamOn ? \"bg-gray-750\" : \"bg-white\"}\n        borderColor={localWebcamOn && \"#ffffff33\"}\n        isFocused={localWebcamOn}\n        focusIconColor={localWebcamOn && \"white\"}\n        tooltip={\"\"}\n        renderRightComponent={() => {\n          return (\n            <>\n              {/* <Popover className=\"relative\">\n                {({ close }) => (\n                  <>\n                    <Popover.Button disabled={!isCameraPermissionAllowed} className=\"flex items-center justify-center mt-1 mr-1 focus:outline-none\">\n                      <div\n                        ref={btnRef}\n                        onMouseEnter={openTooltip}\n                        onMouseLeave={closeTooltip}\n                      >\n                        <button\n                          onClick={() => { getWebcams() }}\n                        >\n                          <ChevronDownIcon\n                            className=\"h-4 w-4\"\n                            style={{\n                              color: localWebcamOn ? \"white\" : \"black\",\n                            }}\n                          />\n                        </button>\n                      </div>\n                    </Popover.Button>\n                    <Transition\n                      as={Fragment}\n                      enter=\"transition ease-out duration-200\"\n                      enterFrom=\"opacity-0 translate-y-1\"\n                      enterTo=\"opacity-100 translate-y-0\"\n                      leave=\"transition ease-in duration-150\"\n                      leaveFrom=\"opacity-100 translate-y-0\"\n                      leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                      <Popover.Panel className=\"absolute left-1/2 bottom-full z-10 mt-3 w-72 -translate-x-1/2 transform px-4 sm:px-0 pb-4\">\n                        <div className=\"overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5\">\n                          <div className={\" bg-gray-750 py-1\"}>\n                            <div>\n                              <div className=\"flex items-center p-3 pb-0\">\n                                <p className=\"ml-3 text-sm text-gray-900\">\n                                  {\"WEBCAM\"}\n                                </p>\n                              </div>\n                              <div className=\"flex flex-col\">\n                                {webcams.map(({ deviceId, label }, index) => (\n                                  <div\n                                    className={`px-3 py-1 my-1 pl-6 text-white ${deviceId === selectedWebcam.id &&\n                                      \"bg-gray-150\"\n                                      }`}\n                                  >\n                                    <button\n                                      className={`flex flex-1 w-full text-left ${deviceId === selectedWebcam.id &&\n                                        \"bg-gray-150\"\n                                        }`}\n                                      key={`output_webcams_${deviceId}`}\n                                      onClick={() => {\n                                        setSelectedWebcam({ id: deviceId });\n                                        changeWebcam(deviceId);\n                                        close();\n                                      }}\n                                    >\n                                      {label || `Webcam ${index + 1}`}\n                                    </button>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Popover.Panel>\n                    </Transition>\n                  </>\n                )}\n              </Popover>\n              <div\n                style={{ zIndex: 999 }}\n                className={`${tooltipShow ? \"\" : \"hidden\"\n                  } overflow-hidden flex flex-col items-center justify-center pb-4`}\n                ref={tooltipRef}\n              >\n                <div className={\"rounded-md p-1.5 bg-black \"}>\n                  <p className=\"text-base text-white \">{\"Change webcam\"}</p>\n                </div>\n              </div> */}\n            </>\n          );\n        }}\n      />\n    </>\n  );\n};\n\nexport function BottomBar({\n  bottomBarHeight,\n  setIsMeetingLeft\n}) {\n \n  const { sideBarMode, setSideBarMode } = useMeetingAppContext();\n  const RaiseHandBTN = ({ isMobile, isTab }) => {\n    const { publish } = usePubSub(\"RAISE_HAND\");\n    const RaiseHand = () => {\n      publish(\"Raise Hand\");\n    };\n\n    return isMobile || isTab ? (\n      <MobileIconButton\n        id=\"RaiseHandBTN\"\n        tooltipTitle={\"Raise hand\"}\n        Icon={RaiseHandIcon}\n        onClick={RaiseHand}\n        buttonText={\"Raise Hand\"}\n      />\n    ) : (\n      <OutlinedButton\n        onClick={RaiseHand}\n        tooltip={\"Raise Hand\"}\n        Icon={RaiseHandIcon}\n      />\n    );\n  };\n\n  const RecordingBTN = () => {\n    const { startRecording, stopRecording, recordingState } = useMeeting();\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: recordingBlink,\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n      height: 64,\n      width: 160,\n    };\n\n    const isRecording = useIsRecording();\n    const isRecordingRef = useRef(isRecording);\n\n    useEffect(() => {\n      isRecordingRef.current = isRecording;\n    }, [isRecording]);\n\n    const { isRequestProcessing } = useMemo(\n      () => ({\n        isRequestProcessing:\n          recordingState === Constants.recordingEvents.RECORDING_STARTING ||\n          recordingState === Constants.recordingEvents.RECORDING_STOPPING,\n      }),\n      [recordingState]\n    );\n\n    const _handleClick = () => {\n      const isRecording = isRecordingRef.current;\n\n      if (isRecording) {\n        stopRecording();\n      } else {\n        startRecording();\n      }\n    };\n\n    return (\n      <OutlinedButton\n        Icon={RecordingIcon}\n        onClick={_handleClick}\n        isFocused={isRecording}\n        tooltip={\n          recordingState === Constants.recordingEvents.RECORDING_STARTED\n            ? \"Stop Recording\"\n            : recordingState === Constants.recordingEvents.RECORDING_STARTING\n              ? \"Starting Recording\"\n              : recordingState === Constants.recordingEvents.RECORDING_STOPPED\n                ? \"Start Recording\"\n                : recordingState === Constants.recordingEvents.RECORDING_STOPPING\n                  ? \"Stopping Recording\"\n                  : \"Start Recording\"\n        }\n        lottieOption={isRecording ? defaultOptions : null}\n        isRequestProcessing={isRequestProcessing}\n      />\n    );\n  };\n\n \n\n  const ScreenShareBTN = ({ isMobile, isTab }) => {\n    const { localScreenShareOn, toggleScreenShare, presenterId } = useMeeting();\n\n    return isMobile || isTab ? (\n      <MobileIconButton\n        id=\"screen-share-btn\"\n        tooltipTitle={\n          presenterId\n            ? localScreenShareOn\n              ? \"Stop Presenting\"\n              : null\n            : \"Present Screen\"\n        }\n        buttonText={\n          presenterId\n            ? localScreenShareOn\n              ? \"Stop Presenting\"\n              : null\n            : \"Present Screen\"\n        }\n        isFocused={localScreenShareOn}\n        Icon={ScreenShareIcon}\n        onClick={() => {\n          toggleScreenShare();\n        }}\n        disabled={\n          presenterId\n            ? localScreenShareOn\n              ? false\n              : true\n            : isMobile\n              ? true\n              : false\n        }\n      />\n    ) : (\n      <OutlinedButton\n        Icon={ScreenShareIcon}\n        onClick={() => {\n          toggleScreenShare();\n        }}\n        isFocused={localScreenShareOn}\n        tooltip={\n          presenterId\n            ? localScreenShareOn\n              ? \"Stop Presenting\"\n              : null\n            : \"Present Screen\"\n        }\n        disabled={presenterId ? (localScreenShareOn ? false : true) : false}\n      />\n    );\n  };\n\n  const LeaveBTN = () => {\n    const { leave } = useMeeting();\n\n    return (\n      <OutlinedButton\n        Icon={EndIcon}\n        bgColor=\"bg-red-150\"\n        onClick={() => {\n          leave();\n          setIsMeetingLeft(true);\n        }}\n        tooltip=\"\"\n      />\n    );\n  };\n\n  const ChatBTN = ({ isMobile, isTab }) => {\n    return isMobile || isTab ? (\n      <MobileIconButton\n        tooltipTitle={\"Chat\"}\n        buttonText={\"Chat\"}\n        Icon={ChatIcon}\n        isFocused={sideBarMode === sideBarModes.CHAT}\n        onClick={() => {\n          setSideBarMode((s) =>\n            s === sideBarModes.CHAT ? null : sideBarModes.CHAT\n          );\n        }}\n      />\n    ) : (\n      <OutlinedButton\n        Icon={ChatIcon}\n        onClick={() => {\n          setSideBarMode((s) =>\n            s === sideBarModes.CHAT ? null : sideBarModes.CHAT\n          );\n        }}\n        isFocused={sideBarMode === \"CHAT\"}\n        tooltip=\"\"\n      />\n    );\n  };\n\n  const ParticipantsBTN = ({ isMobile, isTab }) => {\n    const { participants } = useMeeting();\n    return isMobile || isTab ? (\n      <MobileIconButton\n        tooltipTitle={\"\"}\n        isFocused={sideBarMode === sideBarModes.PARTICIPANTS}\n        buttonText={\"Participants\"}\n        disabledOpacity={1}\n        Icon={ParticipantsIcon}\n        onClick={() => {\n          setSideBarMode((s) =>\n            s === sideBarModes.PARTICIPANTS ? null : sideBarModes.PARTICIPANTS\n          );\n        }}\n        badge={`${new Map(participants)?.size}`}\n      />\n    ) : (\n      <OutlinedButton\n        Icon={ParticipantsIcon}\n        onClick={() => {\n          setSideBarMode((s) =>\n            s === sideBarModes.PARTICIPANTS ? null : sideBarModes.PARTICIPANTS\n          );\n        }}\n        isFocused={sideBarMode === sideBarModes.PARTICIPANTS}\n        // tooltip={\"View \\nParticipants\"}\n        badge={`${new Map(participants)?.size}`}\n      />\n    );\n  };\n\n  const MeetingIdCopyBTN = () => {\n    const { meetingId } = useMeeting();\n    const [isCopied, setIsCopied] = useState(false);\n    return (\n      <div className=\"flex items-center justify-center lg:ml-0 ml-4 mt-4 xl:mt-0\" style={{display : \"none\"}}>\n        <div className=\"flex border-2 border-gray-850 p-2 rounded-md items-center justify-center\">\n          <h1 className=\"text-white text-base \">{meetingId}</h1>\n          <button\n            className=\"ml-2\"\n            onClick={() => {\n              navigator.clipboard.writeText(meetingId);\n              setIsCopied(true);\n              setTimeout(() => {\n                setIsCopied(false);\n              }, 3000);\n            }}\n          >\n            {isCopied ? (\n              <CheckIcon className=\"h-5 w-5 text-green-400\" />\n            ) : (\n              <ClipboardIcon className=\"h-5 w-5 text-white\" />\n            )}\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const tollTipEl = useRef();\n  const isMobile = useIsMobile();\n  const isTab = useIsTab();\n  const [open, setOpen] = useState(false);\n\n  const handleClickFAB = () => {\n    setOpen(true);\n  };\n\n  const handleCloseFAB = () => {\n    setOpen(false);\n  };\n\n  const BottomBarButtonTypes = useMemo(\n    () => ({\n      END_CALL: \"END_CALL\",\n      CHAT: \"CHAT\",\n      PARTICIPANTS: \"PARTICIPANTS\",\n      SCREEN_SHARE: \"SCREEN_SHARE\",\n      WEBCAM: \"WEBCAM\",\n      MIC: \"MIC\",\n      RAISE_HAND: \"RAISE_HAND\",\n      RECORDING: \"RECORDING\",\n      PIP: \"PIP\",\n      MEETING_ID_COPY: \"MEETING_ID_COPY\",\n    }),\n    []\n  );\n\n  const otherFeatures = [\n    { icon: BottomBarButtonTypes.RAISE_HAND },\n    { icon: BottomBarButtonTypes.PIP },\n    { icon: BottomBarButtonTypes.SCREEN_SHARE },\n    { icon: BottomBarButtonTypes.CHAT },\n    { icon: BottomBarButtonTypes.PARTICIPANTS },\n    { icon: BottomBarButtonTypes.MEETING_ID_COPY },\n  ];\n\n  return isMobile || isTab ? (\n    <div\n      className=\"bottom-bar-layout-container\"\n      style={{ height: bottomBarHeight }}\n    >\n      <LeaveBTN /> Leave Button\n      <MicBTN />Mic Button\n      <WebCamBTN /> Web Cam\n      {/* <RecordingBTN /> */}\n      <OutlinedButton Icon={DotsHorizontalIcon} onClick={handleClickFAB} />\n      <Transition appear show={Boolean(open)} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"bottom-bar-layout-container-dialog\"\n          style={{ zIndex: 9999 }}\n          onClose={handleCloseFAB}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"bottom-bar-layout-container-transition-enter\"\n            enterFrom=\"bottom-bar-layout-container-transition-enterfrom\"\n            enterTo=\"bottom-bar-layout-container-transition-enterto\"\n            leave=\"bottom-bar-layout-container-transition-leave\"\n            leaveFrom=\"bottom-bar-layout-container-transition-leavefrom\"\n            leaveTo=\"bottom-bar-layout-container-transition-leaveto\"\n          >\n            <div className=\"bottom-bar-layout-container-transition-inner\" />\n          </Transition.Child>\n\n          <Transition.Child\n            as={Fragment}\n            enter=\"bottom-bar-layout-container-transition-enter\"\n            enterFrom=\"bottom-bar-layout-container-transition-enterfrom\"\n            enterTo=\"bottom-bar-layout-container-transition-enterto\"\n            leave=\"bottom-bar-layout-container-transition-leave\"\n            leaveFrom=\"bottom-bar-layout-container-transition-leavefrom\"\n            leaveTo=\"bottom-bar-layout-container-transition-leaveto\"\n          >\n            <div className=\"bottom-bar-layout-container-transition-two-main\">\n              <div className=\"bottom-bar-layout-container-transition-two-main-inner\">\n                <Dialog.Panel className=\"bottom-bar-layout-container-transition-two-main-inner-dialog\">\n                  <div className=\"bottom-bar-layout-container-transition-two-main-inner-two\">\n                    <div className=\"bottom-bar-layout-container-transition-two-main-inner-three\">\n                      {otherFeatures.map(({ icon }) => {\n                        return (\n                          <div\n                            className={`bottom-bar-layout-container-transition-two-main-inner-four ${icon === BottomBarButtonTypes.MEETING_ID_COPY\n                              ? \"bottom-bar-layout-container-transition-two-main-inner-four-one\"\n                              : \"bottom-bar-layout-container-transition-two-main-inner-four-two\"\n                              }`}\n                          >\n                            {icon === BottomBarButtonTypes.RAISE_HAND ? (\n                              <RaiseHandBTN isMobile={isMobile} isTab={isTab} />\n                            ) : icon === BottomBarButtonTypes.SCREEN_SHARE ? (\n                              <ScreenShareBTN\n                                isMobile={isMobile}\n                                isTab={isTab}\n                              />\n                            ) : icon === BottomBarButtonTypes.CHAT ? (\n                              <ChatBTN isMobile={isMobile} isTab={isTab} />\n                            ) : icon === BottomBarButtonTypes.PARTICIPANTS ? (\n                              <ParticipantsBTN\n                                isMobile={isMobile}\n                                isTab={isTab}\n                              />\n                            ) : icon ===\n                              BottomBarButtonTypes.MEETING_ID_COPY ? (\n                              <MeetingIdCopyBTN\n                                isMobile={isMobile}\n                                isTab={isTab}\n                              />\n                            ) : icon === BottomBarButtonTypes.PIP ? (\n                              <PipBTN isMobile={isMobile} isTab={isTab} />\n                            ) : null}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </Dialog.Panel>\n              </div>\n            </div>\n          </Transition.Child>\n        </Dialog>\n      </Transition>\n    </div>\n  ) : (\n\n    <div style={{\n                  display : \"flex\" , \n                  backgroundColor : \"#00\" , \n                  justifyContent : \"space-evenly\" , \n                  zIndex : \"9999\" ,\n                  position : \"fixed\",\n                  bottom : \"0%\",\n                  width : \"30%\",\n                  right : \"50%\",\n                  transform : \"translate(50% , -50%)\"\n                    }} >\n      <MeetingIdCopyBTN />\n      <MicBTN />\n      <WebCamBTN />\n      <PipBTN isMobile={isMobile} isTab={isTab} />\n      <LeaveBTN />\n      <ChatBTN isMobile={isMobile} isTab={isTab} />\n      {/* <ParticipantsBTN isMobile={isMobile} isTab={isTab} /> */}\n\n    </div>\n\n  );\n}\n\n{/* <div className=\"\">\n\n<div className=\"\" ref={tollTipEl}>\n  <RecordingBTN />\n  <RaiseHandBTN isMobile={isMobile} isTab={isTab} />\n  <ScreenShareBTN isMobile={isMobile} isTab={isTab} />\n</div>\n<div className=\"\">\n</div>\n</div> */}","export const trimSnackBarText = (text = \"\") => {\n  const maxLength = 52;\n\n  return text.length > maxLength ? `${text.substr(0, maxLength - 5)}...` : text;\n};\n\nexport const nameTructed = (name, tructedLength) => {\n  if (name?.length > tructedLength) {\n    if (tructedLength === 15) {\n      return `${name.substr(0, 12)}...`;\n    } else {\n      return `${name.substr(0, tructedLength)}...`;\n    }\n  } else {\n    return name;\n  }\n};\n\nexport const json_verify = (s) => {\n  try {\n    JSON.parse(s);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport function formatAMPM(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var strTime = hours + \":\" + minutes + \" \" + ampm;\n  return strTime;\n}\n","import { PaperAirplaneIcon } from \"@heroicons/react/solid\";\nimport { useMeeting, usePubSub } from \"@videosdk.live/react-sdk\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { formatAMPM, json_verify, nameTructed } from \"../../utils/helper\";\nimport \"./chatpanel.scss\";\n\nconst ChatMessage = ({ senderId, senderName, text, timestamp }) => {\n    const mMeeting = useMeeting();\n    const localParticipantId = mMeeting?.localParticipant?.id;\n    const localSender = localParticipantId === senderId;\n\n    return (\n        <div\n            className={`chat-panel-main-container ${localSender\n                ? \"chat-panel-main-container-flex-end\"\n                : \"chat-panel-main-container-flex-start\"\n                } `}\n            style={{\n                maxWidth: \"100%\",\n                overflow: \"auto\"\n            }}\n        >\n            <div\n                className={`chat-panel-main-container ${localSender\n                    ? \"chat-panel-main-container-flex-end\"\n                    : \"chat-panel-main-container-flex-start\"\n                    } flex-col py-1 px-2 rounded-md bg-gray-700`}\n            >\n                <p style={{ color: \"#ffffff80\" }}>\n                    {localSender ? \"\" : nameTructed(senderName, 15)}\n                </p>\n                <div>\n                    <p className=\"chat-panel-chat-text-p\">{text}</p>\n                </div>\n                <div className=\"mt-1\">\n                    <p\n                        style={{ color: \"#ffffff\", fontSize: \"x-small\", fontStyle: \"italic\" }}\n                        className=\"chat-panel-time-p\"\n                    >\n                        {formatAMPM(new Date(timestamp))}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst ChatInput = ({ inputHeight }) => {\n    const [message, setMessage] = useState(\"\");\n    const { publish } = usePubSub(\"CHAT\");\n    const input = useRef();\n\n    return (\n        <div\n            className=\"chat-panel-chat-input-main-container\"\n        // style={{ height: \"7%\" }}\n        >\n            <div class=\"chat-panel-chat-input-main-container-inner\">\n                <div style={{ width: \"86%\", height: \"100%\" }}>\n                    <input\n                        type=\"text\"\n                        className=\"py-4 text-base text-white border-gray-400 border bg-gray-750 rounded pr-10 pl-2 focus:outline-none w-full\"\n                        placeholder=\"Write your message\"\n                        autocomplete=\"off\"\n                        style={{\n                            width: \"99%\",\n                            height: \"99%\",\n                            padding: \"2% 4%\",\n                            borderRadius: \"14px\",\n                        }}\n                        ref={input}\n                        value={message}\n                        onChange={(e) => {\n                            setMessage(e.target.value);\n                        }}\n                        onKeyPress={(e) => {\n                            if (e.key === \"Enter\" && !e.shiftKey) {\n                                e.preventDefault();\n                                const messageText = message.trim();\n\n                                if (messageText.length > 0) {\n                                    publish(messageText, { persist: true });\n                                    setTimeout(() => {\n                                        setMessage(\"\");\n                                    }, 100);\n                                    input.current?.focus();\n                                }\n                            }\n                        }}\n                    />\n                </div>\n\n                <div\n                    style={{ width: \"12%\", height: \"100%\" }}\n                    class=\"absolute inset-y-0 right-0 flex mr-2 rotate-90 \"\n                >\n                    <button\n                        disabled={message.length < 2}\n                        type=\"submit\"\n                        className=\"p-1 focus:outline-none focus:shadow-outline\"\n                        onClick={() => {\n                            const messageText = message.trim();\n                            if (messageText.length > 0) {\n                                publish(messageText, { persist: true });\n                                setTimeout(() => {\n                                    setMessage(\"\");\n                                }, 100);\n                                input.current?.focus();\n                            }\n                        }}\n                        style={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            transform: \"rotate(90deg)\",\n                            background: \"#28282B\",\n                            cursor: \"pointer\"\n                        }}\n                    >\n                        <PaperAirplaneIcon\n                            className={`w-6 h-6 ${message.length < 2 ? \"text-gray-500 \" : \"text-white\"\n                                }`}\n                            fill=\"#E71B4A\"\n                        />\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst ChatMessages = ({ listHeight }) => {\n    const listRef = useRef();\n    const { messages } = usePubSub(\"CHAT\");\n    const chatContainerRef = useRef(null);\n\n    // const scrollToBottom = (data) => {\n    //     if (!data) {\n    //         if (listRef.current) {\n    //             listRef.current.scrollTop = listRef.current.scrollHeight;\n    //         }\n    //     } else {\n    //         const { text } = data;\n\n    //         if (json_verify(text)) {\n    //             const { type } = JSON.parse(text);\n    //             if (type === \"CHAT\") {\n    //                 if (listRef.current) {\n    //                     listRef.current.scrollTop = listRef.current.scrollHeight;\n    //                 }\n    //             }\n    //         }\n    //     }\n    // };\n\n    useEffect(() => {\n        // scrollToBottom();\n        // Scroll to the bottom whenever messages change\n        if (chatContainerRef.current) {\n            chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    return messages ? (\n        <div ref={listRef} className=\"chat-messages-main-container\">\n            <div className=\"chat-messages-main-container-inner\" ref={chatContainerRef}>\n                {messages.map((msg, i) => {\n                    const { senderId, senderName, message, timestamp } = msg;\n                    return (\n                        <ChatMessage\n                            key={`chat_item_${i}`}\n                            {...{ senderId, senderName, text: message, timestamp }}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    ) : (\n        <p>No messages</p>\n    );\n};\n\nexport function ChatPanel({ panelHeight }) {\n    const inputHeight = 72;\n    const listHeight = panelHeight - inputHeight;\n\n    return (\n        <div\n            style={{\n                padding: \"0 3%\",\n                height: \"92%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n            }}\n        >\n            <ChatMessages listHeight={listHeight} />\n            <ChatInput inputHeight={inputHeight} />\n        </div>\n    );\n}\n","import * as React from \"react\";\n\nconst MicOffIcon = (props) => (\n  <svg\n    width={18}\n    height={18}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M14.835 7.607h-1.417c.003.594-.12 1.18-.363 1.721l1.027 1.033c.49-.834.75-1.785.753-2.754Zm-3.346.138c0-.045.012-.092.012-.138V2.573a2.537 2.537 0 0 0-.713-1.816A2.5 2.5 0 0 0 9 0a2.484 2.484 0 0 0-1.787.757 2.522 2.522 0 0 0-.713 1.816v.153l4.988 5.02ZM2.562.895 1.5 1.963l5.009 5.043v.61c0 .665.262 1.304.73 1.776A2.484 2.484 0 0 0 9 10.129c.182-.003.364-.025.542-.067l1.383 1.392c-.603.283-1.26.43-1.925.432a4.294 4.294 0 0 1-3.088-1.216 4.357 4.357 0 0 1-1.325-3.063H3.167a5.88 5.88 0 0 0 1.475 3.742 5.797 5.797 0 0 0 3.525 1.897v2.747h1.666v-2.746a5.88 5.88 0 0 0 2.117-.76L15.438 16l1.062-1.066L2.562.894Z\"\n      fill=\"#9E9EA7\"\n    />\n  </svg>\n);\n\nexport default MicOffIcon;\n","import * as React from \"react\";\n\nconst MicOnIcon = (props) => (\n  <svg\n    width={18}\n    height={18}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M8.92 10.11a2.525 2.525 0 0 0 2.531-2.525l.008-5.048a2.537 2.537 0 1 0-5.074 0v5.048a2.531 2.531 0 0 0 2.535 2.524Zm4.482-2.525a4.373 4.373 0 0 1-4.482 4.29 4.373 4.373 0 0 1-4.483-4.29H3a5.88 5.88 0 0 0 5.075 5.654V16h1.692v-2.761a5.88 5.88 0 0 0 5.074-5.654h-1.439Z\"\n      fill={\"#fff\"}\n    />\n  </svg>\n);\n\nexport default MicOnIcon;\n","import * as React from \"react\";\n\nconst SvgComponent = (props) => (\n  <svg\n    width={24}\n    height={24}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g clipPath=\"url(#a)\">\n      <mask\n        id=\"b\"\n        style={{\n          maskType: \"alpha\",\n        }}\n        maskUnits=\"userSpaceOnUse\"\n        x={0}\n        y={1}\n        width={24}\n        height={24}\n      >\n        <path fill=\"#E72B4A\" d=\"M0 1h24v24H0z\" />\n      </mask>\n      <g mask=\"url(#b)\">\n        <path\n          d=\"M10.903 2.55c0-.278.101-.546.281-.742a.921.921 0 0 1 .68-.308c.254 0 .499.11.679.308.18.196.281.464.281.742v7.671c.442.151.871.357 1.28.615V3.95c0-.278.102-.546.282-.742a.921.921 0 0 1 .68-.308c.254 0 .498.11.678.308.18.196.282.464.282.742v10.208a3.681 3.681 0 0 0-1.626.75 4.126 4.126 0 0 0-1.149 1.465 7.123 7.123 0 0 1 3.415-.873c.17 0 .333-.074.453-.205a.734.734 0 0 0 .187-.495v-2.115c.003-.83.307-1.625.844-2.212a.918.918 0 0 1 .674-.29c.25.004.49.114.667.308a1.1 1.1 0 0 1 .282.73c.003.273-.092.537-.265.736-.089.097-.16.212-.207.338a1.127 1.127 0 0 0-.074.4V15.5h-.004c-.05 1.408-.584 2.743-1.496 3.74l-1.482 1.62c-.96 1.05-2.263 1.64-3.622 1.64h-1.72c-1.698 0-3.327-.738-4.528-2.05-1.2-1.313-1.875-3.093-1.875-4.95V6.75c0-.278.101-.546.281-.742a.92.92 0 0 1 .68-.308.92.92 0 0 1 .679.308c.18.196.281.464.281.742v5.151a6.466 6.466 0 0 1 1.28-1.065V3.95c0-.278.102-.546.282-.742a.92.92 0 0 1 .68-.308.92.92 0 0 1 .678.308c.18.196.282.464.282.742v6.09c.422-.092.85-.14 1.28-.14V2.55Z\"\n          fill={props.fillcolor}\n        />\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path fill={props.fillcolor} d=\"M0 0h24v24H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default SvgComponent;\n","import * as React from \"react\";\n\nconst VideoCamOffIcon = (props) => (\n  <svg\n    width={18}\n    height={18}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M16.858 11.741a.844.844 0 0 0 .29-.305.813.813 0 0 0 .104-.404v-6.3a.926.926 0 0 0-.116-.398.956.956 0 0 0-.278-.312.712.712 0 0 0-.788 0l-2.756 1.419a2.337 2.337 0 0 0-.715-1.598 2.482 2.482 0 0 0-1.648-.693H8.037l8.663 8.668c0-.077.078-.077.158-.077Zm.157 2.679-3.78-3.782L5.753 3.15 2.84.236A.745.745 0 0 0 2.29 0a.765.765 0 0 0-.552.236.778.778 0 0 0-.237.552.758.758 0 0 0 .237.552l1.811 1.81a2.449 2.449 0 0 0-1.48.812A2.312 2.312 0 0 0 1.5 5.515v4.728c-.006.31.05.618.167.907.117.29.291.553.513.777.217.219.479.393.768.51.29.116.601.174.915.17h7.088c.275.01.55-.034.806-.128.258-.095.492-.24.69-.424l3.466 3.467a.762.762 0 0 0 .551.228.783.783 0 0 0 .551-.228.785.785 0 0 0 .229-.552.785.785 0 0 0-.229-.552v.002Z\"\n      fill=\"#9E9EA7\"\n    />\n  </svg>\n);\n\nexport default VideoCamOffIcon;\n","import * as React from \"react\";\n\nconst VideoCamOnIcon = (props) => (\n  <svg\n    width={18}\n    height={18}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <mask\n      id=\"a\"\n      style={{\n        maskType: \"alpha\",\n      }}\n      maskUnits=\"userSpaceOnUse\"\n      x={0}\n      y={0}\n      width={18}\n      height={18}\n    >\n      <path fill=\"#D9D9D9\" d=\"M0 0h18v18H0z\" />\n    </mask>\n    <g mask=\"url(#a)\">\n      <path\n        d=\"M17.549 3.99a.818.818 0 0 0-.9 0L13.5 5.61a2.754 2.754 0 0 0-2.7-2.61H2.7A2.652 2.652 0 0 0 0 5.7v5.4a2.652 2.652 0 0 0 2.7 2.7h8.1a2.754 2.754 0 0 0 2.699-2.61l3.24 1.62a.947.947 0 0 0 1.168-.36.81.81 0 0 0 .09-.45V4.8a1.073 1.073 0 0 0-.448-.81Z\"\n        fill={\"#E72B4A\"}\n      />\n    </g>\n  </svg>\n);\n\nexport default VideoCamOnIcon;\n","import { useMeeting, useParticipant } from \"@videosdk.live/react-sdk\";\nimport React, { useMemo } from \"react\";\nimport MicOffIcon from \"../../icons/ParticipantTabPanel/MicOffIcon\";\nimport MicOnIcon from \"../../icons/ParticipantTabPanel/MicOnIcon\";\nimport RaiseHand from \"../../icons/ParticipantTabPanel/RaiseHand\";\nimport VideoCamOffIcon from \"../../icons/ParticipantTabPanel/VideoCamOffIcon\";\nimport VideoCamOnIcon from \"../../icons/ParticipantTabPanel/VideoCamOnIcon\";\nimport { useMeetingAppContext } from \"../../MeetingAppContextDef\";\nimport { nameTructed } from \"../../utils/helper\";\n\nfunction ParticipantListItem({ participantId, raisedHand }) {\n  const { micOn, webcamOn, displayName, isLocal } =\n    useParticipant(participantId);\n\n  return (\n    <div className=\"mt-2 m-2 p-2 bg-gray-700 rounded-lg mb-0\">\n      <div className=\"flex flex-1 items-center justify-center relative\">\n        <div\n          style={{\n            color: \"#212032\",\n            backgroundColor: \"#757575\",\n          }}\n          className=\"h-10 w-10 text-lg mt-0 rounded overflow-hidden flex relative items-center justify-center\"\n        >\n          {displayName?.charAt(0).toUpperCase()}\n        </div>\n        <div className=\"ml-2 mr-1 flex flex-1\">\n          <p className=\"text-base text-white overflow-hidden whitespace-pre-wrap overflow-ellipsis\">\n            {isLocal ? \"You\" : nameTructed(displayName, 15)}\n          </p>\n        </div>\n        {raisedHand && (\n          <div className=\"flex items-center justify-center m-1 p-1\">\n            <RaiseHand fillcolor={\"#fff\"} />\n          </div>\n        )}\n        <div className=\"m-1 p-1\">{micOn ? <MicOnIcon /> : <MicOffIcon />}</div>\n        <div className=\"m-1 p-1\">\n          {webcamOn ? <VideoCamOnIcon /> : <VideoCamOffIcon />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function ParticipantPanel({ panelHeight }) {\n  const { raisedHandsParticipants } = useMeetingAppContext();\n  const mMeeting = useMeeting();\n  const participants = mMeeting.participants;\n\n  const sortedRaisedHandsParticipants = useMemo(() => {\n    const participantIds = [...participants.keys()];\n\n    const notRaised = participantIds.filter(\n      (pID) =>\n        raisedHandsParticipants.findIndex(\n          ({ participantId: rPID }) => rPID === pID\n        ) === -1\n    );\n\n    const raisedSorted = raisedHandsParticipants.sort((a, b) => {\n      if (a.raisedHandOn > b.raisedHandOn) {\n        return -1;\n      }\n      if (a.raisedHandOn < b.raisedHandOn) {\n        return 1;\n      }\n      return 0;\n    });\n\n    const combined = [\n      ...raisedSorted.map(({ participantId: p }) => ({\n        raisedHand: true,\n        participantId: p,\n      })),\n      ...notRaised.map((p) => ({ raisedHand: false, participantId: p })),\n    ];\n\n    return combined;\n  }, [raisedHandsParticipants, participants]);\n\n  const filterParticipants = (sortedRaisedHandsParticipants) =>\n    sortedRaisedHandsParticipants;\n\n  const part = useMemo(\n    () => filterParticipants(sortedRaisedHandsParticipants, participants),\n\n    [sortedRaisedHandsParticipants, participants]\n  );\n\n  return (\n    <div\n      className={`flex w-full flex-col bg-gray-750 overflow-y-auto `}\n      style={{ height: panelHeight }}\n    >\n      <div\n        className=\"flex flex-col flex-1\"\n        style={{ height: panelHeight - 100 }}\n      >\n        {[...participants.keys()].map((participantId, index) => {\n          const { raisedHand, participantId: peerId } = part[index];\n          return (\n            <ParticipantListItem\n              participantId={peerId}\n              raisedHand={raisedHand}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { useMeeting } from \"@videosdk.live/react-sdk\";\nimport React, { Fragment } from \"react\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\nimport useIsTab from \"../../hooks/useIsTab\";\nimport { XIcon } from \"@heroicons/react/outline\";\nimport { ChatPanel } from \"./ChatPanel\";\nimport { ParticipantPanel } from \"./ParticipantPanel\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useMeetingAppContext } from \"../../MeetingAppContextDef\";\nimport \"./sidebarContainer.scss\";\nimport logo from \"../../../static/images/icon.png\"\n\nconst SideBarTabView = ({\n  height,\n  sideBarContainerWidth,\n  panelHeight,\n  panelHeaderHeight,\n  panelHeaderPadding,\n  panelPadding,\n  handleClose,\n}) => {\n  const { participants } = useMeeting();\n  const { sideBarMode } = useMeetingAppContext();\n\n  return (\n    <div\n      className=\"side-bar-tab-view-container \"\n      // style={{\n      //   height,\n      //   width: sideBarContainerWidth,\n      //   paddingTop: panelPadding,\n      //   paddingLeft: panelPadding,\n      //   paddingRight: panelPadding,\n      //   paddingBottom: panelPadding,\n      // }}\n    >\n      <div style={{height : \"100%\"}} >\n        <div\n          className=\"side-bar-tab-view-container-inner\"\n          // style={{\n          //   // height: height,\n          //   borderRadius: 10,\n          //   overflow: \"hidden\",\n          // }}\n        >\n          <>\n            {sideBarMode && (\n              <div\n                className={`side-bar-tab-view-container-inner-sidebarmode-one`}\n                style={{\n                  padding: panelHeaderPadding,\n                  // height: panelHeaderHeight - 1,\n                  borderBottom: \"1px solid #70707033\",\n                }}\n              >\n                <img src={logo} ></img>\n                <p className=\"side-bar-tab-view-container-inner-sidebarmode-one-paragraph\">\n                  {sideBarMode === \"PARTICIPANTS\"\n                    ? `${\n                        sideBarMode.charAt(0).toUpperCase() +\n                          sideBarMode.slice(1).toLowerCase() || \"\"\n                      } (${new Map(participants)?.size})`\n                    : sideBarMode.charAt(0).toUpperCase() +\n                        sideBarMode.slice(1).toLowerCase() || \"\"}\n                </p>\n                <button\n                  // className=\"text-white\"\n                  onClick={handleClose}\n                  style={{ margin: 0, padding: 0 , color : \"white\" }}\n                >\n                  <XIcon className=\"side-bar-tab-view-container-inner-sidebarmode-xicon\" />\n                </button>\n              </div>\n            )}\n            {sideBarMode === \"PARTICIPANTS\" ? (\n              <ParticipantPanel panelHeight={panelHeight} />\n            ) : sideBarMode === \"CHAT\" ? (\n              <ChatPanel panelHeight={panelHeight} />\n            ) : null}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nexport function SidebarConatiner({ height, sideBarContainerWidth }) {\n  const { raisedHandsParticipants, sideBarMode, setSideBarMode } =\n    useMeetingAppContext();\n  const isMobile = useIsMobile();\n  const isTab = useIsTab();\n  const isLGDesktop = useMediaQuery({ minWidth: 1024, maxWidth: 1439 });\n  const isXLDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const panelPadding = 8;\n\n  const paddedHeight = height - panelPadding * 3.5;\n\n  const panelHeaderHeight = isMobile\n    ? 40\n    : isTab\n    ? 44\n    : isLGDesktop\n    ? 48\n    : isXLDesktop\n    ? 52\n    : 0;\n\n  const panelHeaderPadding = isMobile\n    ? 6\n    : isTab\n    ? 8\n    : isLGDesktop\n    ? 10\n    : isXLDesktop\n    ? 12\n    : 0;\n\n  const handleClose = () => {\n    setSideBarMode(null);\n  };\n\n  return sideBarMode ? (\n    isTab || isMobile ? (\n      <Transition appear show={sideBarMode ? true : false} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"side-bar-container\"\n          style={{ zIndex: 9999  }}\n          onClose={handleClose}\n        >\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"side-bar-container-transition-child-container-one\" />\n          </Transition.Child>\n\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"translate-y-full opacity-0 scale-95\"\n            enterTo=\"translate-y-0 opacity-100 scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"translate-y-0 opacity-100 scale-100\"\n            leaveTo=\"translate-y-full opacity-0 scale-95\"\n          >\n            <div className=\"side-bar-container-inner-one\">\n              <div className=\"side-bar-container-inner-one-one\">\n                <Dialog.Panel className=\"side-bar-container-inner-one-dialog-panel\">\n                  <SideBarTabView\n                    height={\"100%\"}\n                    sideBarContainerWidth={\"100%\"}\n                    panelHeight={height}\n                    raisedHandsParticipants={raisedHandsParticipants}\n                    panelHeaderHeight={panelHeaderHeight}\n                    panelHeaderPadding={panelHeaderPadding}\n                    panelPadding={panelPadding}\n                    handleClose={handleClose}\n                  />\n                </Dialog.Panel>\n              </div>\n            </div>\n          </Transition.Child>\n        </Dialog>\n      </Transition>\n    ) : (\n      <SideBarTabView\n        height={paddedHeight}\n        sideBarContainerWidth={sideBarContainerWidth}\n        panelHeight={paddedHeight - panelHeaderHeight - panelHeaderPadding}\n        raisedHandsParticipants={raisedHandsParticipants}\n        panelHeaderHeight={panelHeaderHeight}\n        panelHeaderPadding={panelHeaderPadding}\n        panelPadding={panelPadding}\n        handleClose={handleClose}\n      />\n    )\n  ) : (\n    <></>\n  );\n}\n","import * as React from \"react\";\n\nconst MicOffSmallIcon = (props) => (\n  <svg\n    width={20}\n    height={21}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <mask\n      id=\"a\"\n      style={{\n        maskType: \"alpha\",\n      }}\n      maskUnits=\"userSpaceOnUse\"\n      x={0}\n      y={0}\n      width={20}\n      height={21}\n    >\n      <path fill=\"#D9D9D9\" d=\"M0 .543h20v20H0z\" />\n    </mask>\n    <g mask=\"url(#a)\" fill={props.fillcolor ? props.fillcolor : \"#050A0E\"}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.167 9.453v1.256c0 .752.316 1.473.878 2.004.563.531 1.326.83 2.122.83.288 0 .572-.04.844-.115L7.167 9.453Zm4.929 5.096a4.72 4.72 0 0 1-1.93.41 4.638 4.638 0 0 1-3.181-1.244 4.134 4.134 0 0 1-1.319-3.006v-.337a.689.689 0 0 0-.22-.5.773.773 0 0 0-.53-.208.773.773 0 0 0-.53.207.689.689 0 0 0-.22.501v.337c0 2.89 2.29 5.275 5.25 5.624v1.46h-1.5a.773.773 0 0 0-.53.207.689.689 0 0 0-.22.501c0 .188.08.368.22.5.14.134.332.208.53.208h4.5c.2 0 .39-.074.53-.207a.689.689 0 0 0 .22-.501.689.689 0 0 0-.22-.5.773.773 0 0 0-.53-.208h-1.5v-1.46a6.246 6.246 0 0 0 2.226-.702l-1.046-1.082Zm3.466-1.36-1.119-1.157c.147-.423.223-.87.223-1.323v-.337c0-.188.08-.368.22-.5a.773.773 0 0 1 .53-.208c.2 0 .39.075.53.207.141.133.22.313.22.501v.337c0 .866-.21 1.713-.604 2.48Zm-2.395-2.477L7.21 4.555c.106-.57.395-1.1.834-1.516a3.092 3.092 0 0 1 2.122-.83c.795 0 1.558.299 2.12.83.563.532.88 1.252.88 2.004V10.712Z\"\n      />\n      <rect\n        x={2.755}\n        y={3.043}\n        width={20.816}\n        height={1.515}\n        rx={0.757}\n        transform=\"rotate(45.956 2.755 3.043)\"\n      />\n    </g>\n  </svg>\n);\n\nexport default MicOffSmallIcon;\n","import * as React from \"react\";\n\nfunction NetworkIcon(props) {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path d=\"M3.8 9.33333H2V13H3.8V9.33333Z\" fill={props.color1} />\n      <path d=\"M7.39998 7.5H5.59998V13H7.39998V7.5Z\" fill={props.color2} />\n      <path d=\"M11 5.20831H9.20001V13H11V5.20831Z\" fill={props.color3} />\n      <path d=\"M14.6 2H12.8V13H14.6V2Z\" fill={props.color4} />\n    </svg>\n  );\n}\n\nexport default NetworkIcon;\n","import * as React from \"react\";\nconst SpeakerIcon = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#fff\"\n      d=\"M8.8 4.19c0-.63-.537-1.142-1.2-1.142-.663 0-1.2.511-1.2 1.142v6.858c0 .63.537 1.143 1.2 1.143.663 0 1.2-.512 1.2-1.143V4.19ZM4.8 1.905c0-.631-.537-1.143-1.2-1.143-.663 0-1.2.512-1.2 1.143v11.428c0 .631.537 1.143 1.2 1.143.663 0 1.2-.512 1.2-1.143V1.905ZM12.8 1.905c0-.631-.537-1.143-1.2-1.143-.663 0-1.2.512-1.2 1.143v11.428c0 .631.537 1.143 1.2 1.143.663 0 1.2-.512 1.2-1.143V1.905Z\"\n    />\n  </svg>\n);\nexport default SpeakerIcon;\n","import React from \"react\";\nimport { Popover, Transition } from \"@headlessui/react\";\nimport { XIcon } from \"@heroicons/react/outline\";\nimport { useParticipant } from \"@videosdk.live/react-sdk\";\nimport { Fragment, useEffect, useMemo, useRef, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useMediaQuery } from \"react-responsive\";\nimport useIsMobile from \"../hooks/useIsMobile\";\nimport useIsTab from \"../hooks/useIsTab\";\nimport useWindowSize from \"../hooks/useWindowSize\";\nimport MicOffSmallIcon from \"../icons/MicOffSmallIcon\";\nimport NetworkIcon from \"../icons/NetworkIcon\";\nimport SpeakerIcon from \"../icons/SpeakerIcon\";\nimport { getQualityScore, nameTructed } from \"../utils/common\";\nimport * as ReactDOM from \"react-dom\";\nimport { useMeetingAppContext } from \"../MeetingAppContextDef\";\nimport \"./participantViewCornerDisplay.scss\";\nimport { RotateLeft } from \"@mui/icons-material\";\n\nexport const CornerDisplayName = ({\n  participantId,\n  isPresenting,\n  displayName,\n  isLocal,\n  micOn,\n  mouseOver,\n  isActiveSpeaker,\n}) => {\n  const isMobile = useIsMobile();\n  const isTab = useIsTab();\n  const isLGDesktop = useMediaQuery({ minWidth: 1024, maxWidth: 1439 });\n  const isXLDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const { height: windowHeight } = useWindowSize();\n\n  const [statsBoxHeightRef, setStatsBoxHeightRef] = useState(null);\n  const [statsBoxWidthRef, setStatsBoxWidthRef] = useState(null);\n\n  const [coords, setCoords] = useState({}); // takes current button coordinates\n\n  const statsBoxHeight = useMemo(\n    () => statsBoxHeightRef?.offsetHeight,\n    [statsBoxHeightRef]\n  );\n\n  const statsBoxWidth = useMemo(\n    () => statsBoxWidthRef?.offsetWidth,\n    [statsBoxWidthRef]\n  );\n\n  const analyzerSize = isXLDesktop\n    ? 32\n    : isLGDesktop\n    ? 28\n    : isTab\n    ? 24\n    : isMobile\n    ? 20\n    : 18;\n\n  const show = useMemo(() => mouseOver, [mouseOver]);\n\n  const {\n    webcamStream,\n    micStream,\n    screenShareStream,\n    getVideoStats,\n    getAudioStats,\n    getShareStats,\n  } = useParticipant(participantId);\n\n  const statsIntervalIdRef = useRef();\n  const [score, setScore] = useState({});\n  const [audioStats, setAudioStats] = useState({});\n  const [videoStats, setVideoStats] = useState({});\n\n  const updateStats = async () => {\n    let stats = [];\n    let audioStats = [];\n    let videoStats = [];\n    if (isPresenting) {\n      stats = await getShareStats();\n    } else if (webcamStream) {\n      stats = await getVideoStats();\n    } else if (micStream) {\n      stats = await getAudioStats();\n    }\n\n    if (webcamStream || micStream || isPresenting) {\n      videoStats = isPresenting ? await getShareStats() : await getVideoStats();\n      audioStats = isPresenting ? [] : await getAudioStats();\n    }\n\n    // setScore(stats?.score);\n    let score = stats\n      ? stats.length > 0\n        ? getQualityScore(stats[0])\n        : 100\n      : 100;\n\n    setScore(score);\n    setAudioStats(audioStats);\n    setVideoStats(videoStats);\n  };\n\n  const qualityStateArray = [\n    { label: \"\", audio: \"Audio\", video: \"Video\" },\n    {\n      label: \"Latency\",\n      audio:\n        audioStats && audioStats[0]?.rtt ? `${audioStats[0]?.rtt} ms` : \"-\",\n      video:\n        videoStats && videoStats[0]?.rtt ? `${videoStats[0]?.rtt} ms` : \"-\",\n    },\n    {\n      label: \"Jitter\",\n      audio:\n        audioStats && audioStats[0]?.jitter\n          ? `${parseFloat(audioStats[0]?.jitter).toFixed(2)} ms`\n          : \"-\",\n      video:\n        videoStats && videoStats[0]?.jitter\n          ? `${parseFloat(videoStats[0]?.jitter).toFixed(2)} ms`\n          : \"-\",\n    },\n    {\n      label: \"Packet Loss\",\n      audio: audioStats\n        ? audioStats[0]?.packetsLost\n          ? `${parseFloat(\n              (audioStats[0]?.packetsLost * 100) / audioStats[0]?.totalPackets\n            ).toFixed(2)}%`\n          : \"-\"\n        : \"-\",\n      video: videoStats\n        ? videoStats[0]?.packetsLost\n          ? `${parseFloat(\n              (videoStats[0]?.packetsLost * 100) / videoStats[0]?.totalPackets\n            ).toFixed(2)}%`\n          : \"-\"\n        : \"-\",\n    },\n    {\n      label: \"Bitrate\",\n      audio:\n        audioStats && audioStats[0]?.bitrate\n          ? `${parseFloat(audioStats[0]?.bitrate).toFixed(2)} kb/s`\n          : \"-\",\n      video:\n        videoStats && videoStats[0]?.bitrate\n          ? `${parseFloat(videoStats[0]?.bitrate).toFixed(2)} kb/s`\n          : \"-\",\n    },\n    {\n      label: \"Frame rate\",\n      audio: \"-\",\n      video:\n        videoStats &&\n        (videoStats[0]?.size?.framerate === null ||\n          videoStats[0]?.size?.framerate === undefined)\n          ? \"-\"\n          : `${videoStats ? videoStats[0]?.size?.framerate : \"-\"}`,\n    },\n    {\n      label: \"Resolution\",\n      audio: \"-\",\n      video: videoStats\n        ? videoStats && videoStats[0]?.size?.width === null\n          ? \"-\"\n          : `${videoStats[0]?.size?.width}x${videoStats[0]?.size?.height}`\n        : \"-\",\n    },\n    {\n      label: \"Codec\",\n      audio: audioStats && audioStats[0]?.codec ? audioStats[0]?.codec : \"-\",\n      video: videoStats && videoStats[0]?.codec ? videoStats[0]?.codec : \"-\",\n    },\n    {\n      label: \"Cur. Layers\",\n      audio: \"-\",\n      video:\n        videoStats && !isLocal\n          ? videoStats && videoStats[0]?.currentSpatialLayer === null\n            ? \"-\"\n            : `S:${videoStats[0]?.currentSpatialLayer || 0} T:${\n                videoStats[0]?.currentTemporalLayer || 0\n              }`\n          : \"-\",\n    },\n    {\n      label: \"Pref. Layers\",\n      audio: \"-\",\n      video:\n        videoStats && !isLocal\n          ? videoStats && videoStats[0]?.preferredSpatialLayer === null\n            ? \"-\"\n            : `S:${videoStats[0]?.preferredSpatialLayer || 0} T:${\n                videoStats[0]?.preferredTemporalLayer || 0\n              }`\n          : \"-\",\n    },\n  ];\n\n  useEffect(() => {\n    if (webcamStream || micStream || screenShareStream) {\n      updateStats();\n\n      if (statsIntervalIdRef.current) {\n        clearInterval(statsIntervalIdRef.current);\n      }\n\n      statsIntervalIdRef.current = setInterval(updateStats, 500);\n    } else {\n      if (statsIntervalIdRef.current) {\n        clearInterval(statsIntervalIdRef.current);\n        statsIntervalIdRef.current = null;\n      }\n    }\n\n    return () => {\n      if (statsIntervalIdRef.current) clearInterval(statsIntervalIdRef.current);\n    };\n  }, [webcamStream, micStream, screenShareStream]);\n\n  return (\n    <>\n      <div\n        className=\"participant-view-corner-display-name-container\"\n        style={{\n          backgroundColor: \"#00000066\",\n          transition: \"all 200ms\",\n          transitionTimingFunction: \"linear\",\n          transform: `scale(${show ? 1 : 0})`,\n        }}\n      >\n        {!micOn && !isPresenting ? (\n          <MicOffSmallIcon fillcolor=\"white\" />\n        ) : micOn && isActiveSpeaker ? (\n          <SpeakerIcon />\n        ) : null}\n        <p className=\"participant-view-corner-display-name-paragraph\">\n          {isPresenting\n            ? isLocal\n              ? `You are presenting`\n              : `${nameTructed(displayName, 15)} is presenting`\n            : isLocal\n            ? \"You\"\n            : nameTructed(displayName, 26)}\n        </p>\n      </div>\n\n      {(webcamStream || micStream || screenShareStream) && (\n        <div>\n          <div\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n            className=\"participant-view-stream-container\"\n          >\n            <Popover className=\"relative \">\n              {({ close }) => (\n                <>\n                  <Popover.Button\n                    className={`participant-view-stream-popover `}\n                    style={{\n                      backgroundColor:\n                        score > 7\n                          ? \"#3BA55D\"\n                          : score > 4\n                          ? \"#faa713\"\n                          : \"#FF5D5D\",\n                    }}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      const rect = e.target.getBoundingClientRect();\n                      setCoords({\n                        left: Math.round(rect.x + rect.width / 2),\n                        top: Math.round(rect.y + window.scrollY),\n                      });\n                    }}\n                  >\n                    <div>\n                      <NetworkIcon\n                        color1={\"#ffffff\"}\n                        color2={\"#ffffff\"}\n                        color3={\"#ffffff\"}\n                        color4={\"#ffffff\"}\n                        style={{\n                          height: analyzerSize * 0.6,\n                          width: analyzerSize * 0.6,\n                        }}\n                      />\n                    </div>\n                  </Popover.Button>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"opacity-0 translate-y-1\"\n                    enterTo=\"opacity-100 translate-y-0\"\n                    leave=\"transition ease-in duration-150\"\n                    leaveFrom=\"opacity-100 translate-y-0\"\n                    leaveTo=\"opacity-0 translate-y-1\"\n                  >\n                    <Popover.Panel style={{ zIndex: 999 }} className=\"participant-view-stream-popover-panel\">\n                      {ReactDOM.createPortal(\n                        <div\n                          ref={setStatsBoxWidthRef}\n                          style={{\n                            top:\n                              coords?.top + statsBoxHeight > windowHeight\n                                ? windowHeight - statsBoxHeight - 20\n                                : coords?.top,\n                            left:\n                              coords?.left - statsBoxWidth < 0\n                                ? 12\n                                : coords?.left - statsBoxWidth,\n                          }}\n                          className={`absolute`}\n                        >\n                          <div\n                            ref={setStatsBoxHeightRef}\n                            className=\"participant-view-stream-popover-inner-container\"\n                          >\n                            <div\n                              className={`lg`}\n                              style={{\n                                backgroundColor:\n                                  score > 7\n                                    ? \"#3BA55D\"\n                                    : score > 4\n                                    ? \"#faa713\"\n                                    : \"#FF5D5D\",\n                              }}\n                            >\n                              <p className=\"participant-view-stream-popover-inner-container-two-paragraph \">{`Quality Score : ${\n                                score > 7\n                                  ? \"Good\"\n                                  : score > 4\n                                  ? \"Average\"\n                                  : \"Poor\"\n                              }`}</p>\n\n                              <button\n                                className=\"participant-view-stream-popover-inner-container-two-button\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  close();\n                                }}\n                              >\n                                <XIcon\n                                  // className=\"text-white\"\n                                  style={{ height: 16, width: 16  , color : \"white\"}}\n                                />\n                              </button>\n                            </div>\n                            <div className=\"participant-view-stream-popover-inner-container-three\">\n                              <div className=\"participant-view-stream-popover-inner-container-three-inner-container\">\n                                {qualityStateArray.map((item, index) => {\n                                  return (\n                                    <div\n                                      // className=\"flex\"\n                                      style={{\n                                        display: \"flex\",\n                                        borderBottom:\n                                          index === qualityStateArray.length - 1\n                                            ? \"\"\n                                            : `1px solid #ffffff33`,\n                                      }}\n                                    >\n                                      <div className=\"participant-view-stream-popover-inner-container-three-inner-container-two\">\n                                        {index !== 0 && (\n                                          <p className=\"participant-view-stream-popover-inner-container-three-inner-container-two-paragraph\">\n                                            {item.label}\n                                          </p>\n                                        )}\n                                      </div>\n                                      <div\n                                        className=\"participant-view-stream-popover-inner-container-three-inner-container-three \"\n                                        style={{\n                                          borderLeft: `1px solid #ffffff33`,\n                                        }}\n                                      >\n                                        <p className=\"participant-view-stream-popover-inner-container-three-inner-container-three-paragraph \">\n                                          {item.audio}\n                                        </p>\n                                      </div>\n                                      <div\n                                        className=\"participant-view-stream-popover-inner-container-three-inner-container-four\"\n                                        style={{\n                                          borderLeft: `1px solid #ffffff33`,\n                                        }}\n                                      >\n                                        <p className=\"participant-view-stream-popover-inner-container-three-inner-container-four-paragraph\">\n                                          {item.video}\n                                        </p>\n                                      </div>\n                                    </div>\n                                  );\n                                })}\n                              </div>\n                            </div>\n                          </div>\n                        </div>,\n                        document.body\n                      )}\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport function ParticipantView({ participantId }) {\n  const {\n    displayName,\n    webcamStream,\n    micStream,\n    webcamOn,\n    micOn,\n    isLocal,\n    mode,\n    isActiveSpeaker,\n  } = useParticipant(participantId);\n\n  const {selectedSpeaker} = useMeetingAppContext();\n  const micRef = useRef(null);\n  const [mouseOver, setMouseOver] = useState(false);\n\n  useEffect(() => {\n    if (micRef.current) {\n      if (micOn && micStream) {\n        const mediaStream = new MediaStream();\n        mediaStream.addTrack(micStream.track);\n        micRef.current.srcObject = mediaStream;\n        try{\n          micRef.current.setSinkId(selectedSpeaker.id);\n        }catch(err){\n          console.log(\"Setting speaker device failed\", err);\n        }\n        micRef.current\n          .play()\n          .catch((error) =>\n            console.error(\"micRef.current.play() failed\", error)\n          );\n      } else {\n        micRef.current.srcObject = null;\n      }\n    }\n  }, [micStream, micOn,selectedSpeaker]);\n  \n  const webcamMediaStream = useMemo(() => {\n    if (webcamOn && webcamStream) {\n      const mediaStream = new MediaStream();\n      mediaStream.addTrack(webcamStream.track);\n      return mediaStream;\n    }\n  }, [webcamStream, webcamOn]);\n  return mode === \"CONFERENCE\" ? (\n    <div\n      onMouseEnter={() => {\n        setMouseOver(true);\n      }}\n      onMouseLeave={() => {\n        setMouseOver(false);\n      }}\n      className={`participant-view-main-container`}\n      style={{height : \"100%\"}}\n    >\n      <audio ref={micRef} autoPlay muted={isLocal} />\n      {webcamOn ? (\n        <ReactPlayer\n          //\n          playsinline // very very imp prop\n          playIcon={<></>}\n          style={{ transform: \"rotateY(180deg)\" }}\n          //\n          pip={false}\n          light={false}\n          controls={false}\n          muted={true}\n          playing={true}\n          //\n          url={webcamMediaStream}\n          //\n          height={\"100%\"}\n          width={\"100%\"}\n          onError={(err) => {\n            console.log(err, \"participant video error\");\n          }}\n        />\n      ) : (\n        <div className=\"participant-view-main-container-inner\">\n          <div\n            className={`participant-view-main-container-inner-div `}\n          >\n            <p className=\"participant-view-main-container-inner-div-paragraph\">\n              {String(displayName).charAt(0).toUpperCase()}\n            </p>\n          </div>\n        </div>\n      )}\n      <CornerDisplayName\n        {...{\n          isLocal,\n          displayName,\n          micOn,\n          webcamOn,\n          isPresenting: false,\n          participantId,\n          mouseOver,\n          isActiveSpeaker,\n        }}\n      />\n    </div>\n  ) : null;\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n// Hook\nexport default function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowSize;\n}\n","import React from \"react\";\nimport { useMeetingAppContext } from \"../MeetingAppContextDef\";\nimport { ParticipantView } from \"./ParticipantView\";\nimport \"./participantgrid.scss\";\n\nconst MemoizedParticipant = React.memo(\n  ParticipantView,\n  (prevProps, nextProps) => {\n    return prevProps.participantId === nextProps.participantId;\n  }\n);\n\nfunction ParticipantGrid({ participantIds, isPresenting }) {\n  const { sideBarMode } = useMeetingAppContext();\n  const isMobile = window.matchMedia(\n    \"only screen and (max-width: 768px)\"\n  ).matches;\n\n  const perRow =\n    isMobile || isPresenting\n      ? participantIds.length < 4\n        ? 1\n        : participantIds.length < 9\n        ? 2\n        : 3\n      : participantIds.length < 5\n      ? 2\n      : participantIds.length < 7\n      ? 3\n      : participantIds.length < 9\n      ? 4\n      : participantIds.length < 10\n      ? 3\n      : participantIds.length < 11\n      ? 4\n      : 4;\n\n  return (\n    <div\n      className={`participant-grid-main-container ${\n        participantIds.length < 2 && !sideBarMode && !isPresenting\n          ? \"participant-grid-main-container-sidebar-two\"\n          : participantIds.length < 3 && !sideBarMode && !isPresenting\n          ? \"participant-grid-main-container-sidebar-three \"\n          : participantIds.length < 4 && !sideBarMode && !isPresenting\n          ? \"participant-grid-main-container-sidebar-four\"\n          : participantIds.length > 4 && !sideBarMode && !isPresenting\n          ? \"participant-grid-main-container-sidebar-five\"\n          : \"participant-grid-main-container-sidebar-default\"\n      }`}\n    >\n      <div className=\"participant-grid-inner-container \">\n        {Array.from(\n          { length: Math.ceil(participantIds.length / perRow) },\n          (_, i) => {\n            return (\n              <div\n                key={`participant-${i}`}\n                className={`participant-grid-inner-container-one ${\n                  isPresenting\n                    ? participantIds.length === 1\n                      ? \"participant-grid-inner-container-one-one\"\n                      : \"participant-grid-inner-container-one-two\"\n                    : \"participant-grid-inner-container-one-three\"\n                }`}\n              >\n                {participantIds\n                  .slice(i * perRow, (i + 1) * perRow)\n                  .map((participantId) => {\n                    return (\n                      <div\n                        key={`participant_${participantId}`}\n                        className={`participant-grid-inner-container-one ${\n                          isPresenting\n                            ? participantIds.length === 1\n                              ? \"participant-grid-inner-container-two\"\n                              : participantIds.length === 2\n                              ? \"participant-grid-inner-container-two-one\"\n                              : \"participant-grid-inner-container-two-two\"\n                            : \"participant-grid-inner-container-two-default\"\n                        } participant-grid-inner-container-two-three ${\n                          participantIds.length === 1\n                            ? \"participant-grid-inner-container-two-four\"\n                            : \"participant-grid-inner-container-two-five\"\n                        } participant-grid-inner-container-two-six`}\n                      >\n                        <MemoizedParticipant participantId={participantId} />\n                      </div>\n                    );\n                  })}\n              </div>\n            );\n          }\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport const MemoizedParticipantGrid = React.memo(\n  ParticipantGrid,\n  (prevProps, nextProps) => {\n    return (\n      JSON.stringify(prevProps.participantIds) ===\n        JSON.stringify(nextProps.participantIds) &&\n      prevProps.isPresenting === nextProps.isPresenting\n    );\n  }\n);\n","import React, { useMemo } from \"react\";\nimport { useMeeting } from \"@videosdk.live/react-sdk\";\nimport { MemoizedParticipantGrid } from \"../../components/ParticipantGrid\";\n\nfunction ParticipantsViewer({ isPresenting }) {\n  const {\n    participants,\n    pinnedParticipants,\n    activeSpeakerId,\n    localParticipant,\n    localScreenShareOn,\n    presenterId,\n  } = useMeeting();\n\n  const participantIds = useMemo(() => {\n    const pinnedParticipantId = [...pinnedParticipants.keys()].filter(\n      (participantId) => {\n        return participantId !== localParticipant.id;\n      }\n    );\n    const regularParticipantIds = [...participants.keys()].filter(\n      (participantId) => {\n        return (\n          ![...pinnedParticipants.keys()].includes(participantId) &&\n          localParticipant.id !== participantId\n        );\n      }\n    );\n\n    const ids = [\n      localParticipant.id,\n      ...pinnedParticipantId,\n      ...regularParticipantIds,\n    ].slice(0, isPresenting ? 6 : 16);\n\n    if (activeSpeakerId) {\n      if (!ids.includes(activeSpeakerId)) {\n        ids[ids.length - 1] = activeSpeakerId;\n      }\n    }\n    return ids;\n  }, [\n    participants,\n    activeSpeakerId,\n    pinnedParticipants,\n    presenterId,\n    localScreenShareOn,\n  ]);\n\n  return (\n    <MemoizedParticipantGrid\n      participantIds={participantIds}\n      isPresenting={isPresenting}\n    />\n  );\n}\n\nconst MemorizedParticipantView = React.memo(\n  ParticipantsViewer,\n  (prevProps, nextProps) => {\n    return prevProps.isPresenting === nextProps.isPresenting;\n  }\n);\n\nexport default MemorizedParticipantView;\n","import * as React from \"react\";\n\nconst ScreenShareIcon = (props) => (\n  <svg\n    className=\"MuiSvgIcon-root \"\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    style={{\n      height: 48,\n      width: 48,\n    }}\n    {...props}\n  >\n    <path\n      fill=\"#fff\"\n      d=\"M20 18c1.1 0 1.99-.9 1.99-2L22 6a2 2 0 0 0-2-2H4c-1.11 0-2 .89-2 2v10a2 2 0 0 0 2 2H0v2h24v-2h-4zm-7-3.53v-2.19c-2.78 0-4.61.85-6 2.72.56-2.67 2.11-5.33 6-5.87V7l4 3.73-4 3.74z\"\n    />\n  </svg>\n);\n\nexport default ScreenShareIcon;\n","import React from \"react\";\nimport { useMeeting, useParticipant } from \"@videosdk.live/react-sdk\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport MicOffSmallIcon from \"../icons/MicOffSmallIcon\";\nimport ScreenShareIcon from \"../icons/ScreenShareIcon\";\nimport SpeakerIcon from \"../icons/SpeakerIcon\";\nimport { nameTructed } from \"../utils/helper\";\nimport { CornerDisplayName } from \"./ParticipantView\";\nimport \"./presenterview.scss\"\n\nexport function PresenterView({ height }) {\n  const mMeeting = useMeeting();\n  const presenterId = mMeeting?.presenterId;\n\n  const videoPlayer = useRef();\n\n  const {\n    micOn,\n    webcamOn,\n    isLocal,\n    screenShareStream,\n    screenShareAudioStream,\n    screenShareOn,\n    displayName,\n    isActiveSpeaker,\n  } = useParticipant(presenterId);\n\n  const mediaStream = useMemo(() => {\n    if (screenShareOn) {\n      const mediaStream = new MediaStream();\n      mediaStream.addTrack(screenShareStream.track);\n      return mediaStream;\n    }\n  }, [screenShareStream, screenShareOn]);\n\n  const audioPlayer = useRef();\n\n  useEffect(() => {\n    if (\n      !isLocal &&\n      audioPlayer.current &&\n      screenShareOn &&\n      screenShareAudioStream\n    ) {\n      const mediaStream = new MediaStream();\n      mediaStream.addTrack(screenShareAudioStream.track);\n\n      audioPlayer.current.srcObject = mediaStream;\n      audioPlayer.current.play().catch((err) => {\n        if (\n          err.message ===\n          \"play() failed because the user didn't interact with the document first. https://goo.gl/xX8pDD\"\n        ) {\n          console.error(\"audio\" + err.message);\n        }\n      });\n    } else {\n      audioPlayer.current.srcObject = null;\n    }\n  }, [screenShareAudioStream, screenShareOn, isLocal]);\n\n  return (\n    <div\n      className={`presenter-view-main-container `}\n    >\n      <audio autoPlay playsInline controls={false} ref={audioPlayer} />\n      <div className={\"presenter-view-main-container-inner-container \"}>\n        <ReactPlayer\n          ref={videoPlayer}\n          //\n          playsinline // very very imp prop\n          playIcon={<></>}\n          //\n          pip={false}\n          light={false}\n          controls={false}\n          muted={true}\n          playing={true}\n          //\n          url={mediaStream}\n          //\n          height={\"100%\"}\n          width={\"100%\"}\n          style={{\n            filter: isLocal ? \"blur(1rem)\" : undefined,\n          }}\n          onError={(err) => {\n            console.log(err, \"presenter video error\");\n          }}\n        />\n        <div\n          className=\"presenter-view-main-container-inner-container-one\"\n          style={{\n            transition: \"all 200ms\",\n            transitionTimingFunction: \"linear\",\n          }}\n        >\n          {!micOn ? (\n            <MicOffSmallIcon fillcolor=\"white\" />\n          ) : micOn && isActiveSpeaker ? (\n            <SpeakerIcon />\n          ) : (\n            <></>\n          )}\n\n          <p className=\"presenter-view-paragraph \">\n            {isLocal\n              ? `You are presenting`\n              : `${nameTructed(displayName, 15)} is presenting`}\n          </p>\n        </div>\n        {isLocal ? (\n          <>\n            <div className=\"presenter-view-islocal-container\">\n              <ScreenShareIcon\n                style={{ height: 48, width: 48, color: \"white\" }}\n              />\n              <div className=\"presenter-view-islocal-paragraph-container\">\n                <p className=\"presenter-view-islocal-paragraph-container-inner \">\n                  You are presenting to everyone\n                </p>\n              </div>\n              <div className=\"presenter-view-mt-8-container\">\n                <button\n                  className=\"presenter-view-mt-8-container-button \"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    mMeeting.toggleScreenShare();\n                  }}\n                >\n                  STOP PRESENTING\n                </button>\n              </div>\n            </div>\n            <CornerDisplayName\n              {...{\n                isLocal,\n                displayName,\n                micOn,\n                webcamOn,\n                isPresenting: true,\n                participantId: presenterId,\n                isActiveSpeaker,\n              }}\n            />\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport animationData from \"../../static/animations/join_meeting.json\";\nimport Lottie from \"lottie-react\";\nimport useIsTab from \"../../hooks/useIsTab\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\n\nconst WaitingToJoinScreen = () => {\n  const waitingMessages = [\n    { index: 0, text: \"Creating a room for you...\" },\n    { index: 1, text: \"Almost there...\" },\n  ];\n  const [message, setMessage] = useState(waitingMessages[0]);\n\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    intervalRef.current = setInterval(() => {\n      setMessage((s) =>\n        s.index === waitingMessages.length - 1\n          ? s\n          : waitingMessages[s.index + 1]\n      );\n    }, 3000);\n\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  const isTab = useIsTab();\n  const isMobile = useIsMobile();\n\n  const animationDefaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return (\n    <div\n      className=\"bg-gray-800\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        // backgroundColor: theme.palette.darkTheme.main,\n      }}\n    >\n      <div className=\"flex flex-col\">\n        <div\n          style={{\n            height: isTab ? 200 : isMobile ? 200 : 250,\n            width: isTab ? 200 : isMobile ? 200 : 250,\n          }}\n        >\n          <Lottie\n            loop={animationDefaultOptions.loop}\n            autoplay={animationDefaultOptions.autoplay}\n            animationData={animationDefaultOptions.animationData}\n            rendererSettings={{\n              preserveAspectRatio:\n                animationDefaultOptions.rendererSettings.preserveAspectRatio,\n            }}\n            style={{ height: \"100%\", width: \"100%\" }}\n          />\n        </div>\n        <h1 className=\"text-white text-center font-bold mt-1 text-xl\">\n          {message.text}\n        </h1>\n      </div>\n    </div>\n  );\n};\n\nexport default WaitingToJoinScreen;\n","import React from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { Fragment } from \"react\";\n\nconst ConfirmBox = ({\n  successText,\n  rejectText,\n  onSuccess,\n  open,\n  onReject,\n  title,\n  subTitle,\n  subTitleColor,\n}) => {\n  return (\n    <>\n      <Transition appear show={open} as={Fragment}>\n        <Dialog as=\"div\" className=\"relative z-10\" onClose={() => {}}>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" /> \n          </Transition.Child>\n\n          <div className=\"fixed inset-0 overflow-y-auto\">\n            <div className=\"flex min-h-full items-center justify-center  text-center\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-out duration-300\"\n                enterFrom=\"opacity-0 scale-95\"\n                enterTo=\"opacity-100 scale-100\"\n                leave=\"ease-in duration-200\"\n                leaveFrom=\"opacity-100 scale-100\"\n                leaveTo=\"opacity-0 scale-95\"\n              >\n                <Dialog.Panel className=\"w-11/12 max-w-md transform overflow-hidden rounded bg-gray-750 p-4 text-left align-middle shadow-xl transition-all\">\n                  <Dialog.Title className=\"text-base font-medium  text-white \">\n                    {title}\n                  </Dialog.Title>\n                  <div className=\"mt-2\">\n                    <p\n                      className=\"text-base\"\n                      style={{\n                        color: subTitleColor ? subTitleColor : \"#9FA0A7\",\n                      }}\n                    >\n                      {subTitle}\n                    </p>\n                  </div>\n\n                  <div className=\"mt-6 flex justify-end\">\n                    {rejectText && (\n                      <button\n                        type=\"button\"\n                        className=\"mr-2 rounded px-4 py-2 text-sm font-medium text-white hover:bg-gray-700 \"\n                        onClick={onReject}\n                      >\n                        {rejectText}\n                      </button>\n                    )}\n                    <button\n                      type=\"button\"\n                      className=\"rounded border border-white bg-transparent px-4 py-2 text-sm font-medium text-white hover:bg-gray-700\"\n                      onClick={onSuccess}\n                    >\n                      {successText}\n                    </button>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </Dialog>\n      </Transition>\n    </>\n  );\n};\n\nexport default ConfirmBox;\n","import React, { useState, useEffect, useRef, createRef } from \"react\";\nimport { Constants, useMeeting, usePubSub } from \"@videosdk.live/react-sdk\";\nimport { BottomBar } from \"./components/BottomBar\";\nimport { SidebarConatiner } from \"../components/sidebar/SidebarContainer\";\nimport MemorizedParticipantView from \"./components/ParticipantView\";\nimport { PresenterView } from \"../components/PresenterView\";\nimport { nameTructed, trimSnackBarText } from \"../utils/helper\";\nimport WaitingToJoinScreen from \"../components/screens/WaitingToJoinScreen\";\nimport ConfirmBox from \"../components/ConfirmBox\";\nimport useIsMobile from \"../hooks/useIsMobile\";\nimport useIsTab from \"../hooks/useIsTab\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { toast } from \"react-toastify\";\nimport { useMeetingAppContext } from \"../MeetingAppContextDef\";\nimport \"./meetingcontainer.scss\";\nimport { useParams } from \"react-router-dom\";\nimport axiosInstance from \"../../config/axiosInstance\";\n\n// Function to convert HH:MM:SS to total seconds\nconst convertToSeconds = (timeString) => {\n    const [hours, minutes, seconds] = timeString.split(\":\").map(Number);\n    return hours * 3600 + minutes * 60 + seconds;\n};\n\nexport function MeetingContainer({ onMeetingLeave, setIsMeetingLeft }) {\n    const { setSelectedMic, setSelectedWebcam, setSelectedSpeaker } = useMeetingAppContext();\n\n    const { useRaisedHandParticipants } = useMeetingAppContext();\n    const bottomBarHeight = 60;\n\n    const [containerHeight, setContainerHeight] = useState(0);\n    const [containerWidth, setContainerWidth] = useState(0);\n    const [localParticipantAllowedJoin, setLocalParticipantAllowedJoin] = useState(null);\n    const [meetingErrorVisible, setMeetingErrorVisible] = useState(false);\n    const [meetingError, setMeetingError] = useState(false);\n    const [remainingTime, setRemainingTime] = useState(\"--:--\");\n    const [remainingTimeInSeconds, setRemainingTimeInSeconds] = useState(null); // New state for remaining time in seconds\n    const params = useParams();\n    console.log(\"params : \", params?.appID);\n    const mMeetingRef = useRef();\n    const containerRef = createRef();\n    const containerHeightRef = useRef();\n    const containerWidthRef = useRef();\n\n    useEffect(() => {\n        containerHeightRef.current = containerHeight;\n        containerWidthRef.current = containerWidth;\n    }, [containerHeight, containerWidth]);\n\n    const isMobile = useIsMobile();\n    const isTab = useIsTab();\n    const isLGDesktop = useMediaQuery({ minWidth: 1024, maxWidth: 1439 });\n    const isXLDesktop = useMediaQuery({ minWidth: 1440 });\n\n    const sideBarContainerWidth = isXLDesktop\n        ? 400\n        : isLGDesktop\n        ? 360\n        : isTab\n        ? 320\n        : isMobile\n        ? 280\n        : 240;\n\n    useEffect(() => {\n        containerRef.current?.offsetHeight && setContainerHeight(containerRef.current.offsetHeight);\n        containerRef.current?.offsetWidth && setContainerWidth(containerRef.current.offsetWidth);\n\n        window.addEventListener(\"resize\", ({ target }) => {\n            containerRef.current?.offsetHeight &&\n                setContainerHeight(containerRef.current.offsetHeight);\n            containerRef.current?.offsetWidth &&\n                setContainerWidth(containerRef.current.offsetWidth);\n        });\n    }, [containerRef]);\n\n    const { participantRaisedHand } = useRaisedHandParticipants();\n\n    const _handleMeetingLeft = () => {\n        setIsMeetingLeft(true);\n    };\n\n    const _handleOnRecordingStateChanged = ({ status }) => {\n        if (\n            status === Constants.recordingEvents.RECORDING_STARTED ||\n            status === Constants.recordingEvents.RECORDING_STOPPED\n        ) {\n            toast(\n                `${\n                    status === Constants.recordingEvents.RECORDING_STARTED\n                        ? \"Meeting recording is started\"\n                        : \"Meeting recording is stopped.\"\n                }`,\n                {\n                    position: \"bottom-left\",\n                    autoClose: 4000,\n                    hideProgressBar: true,\n                    closeButton: false,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"light\",\n                },\n            );\n        }\n    };\n\n    function onParticipantJoined(participant) {\n        // Change quality to low, med or high based on resolution\n        participant && participant.setQuality(\"high\");\n    }\n\n    function onEntryResponded(participantId, name) {\n        if (mMeetingRef.current?.localParticipant?.id === participantId) {\n            if (name === \"allowed\") {\n                setLocalParticipantAllowedJoin(true);\n            } else {\n                setLocalParticipantAllowedJoin(false);\n                setTimeout(() => {\n                    _handleMeetingLeft();\n                }, 3000);\n            }\n        }\n    }\n\n    function onMeetingJoined() {\n        console.log(\"onMeetingJoined\");\n    }\n\n    function onMeetingLeft() {\n        setSelectedMic({ id: null, label: null });\n        setSelectedWebcam({ id: null, label: null });\n        setSelectedSpeaker({ id: null, label: null });\n        onMeetingLeave();\n    }\n\n    const _handleOnError = (data) => {\n        const { code, message } = data;\n        console.log(\"meetingErr\", code, message);\n\n        const joiningErrCodes = [4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010];\n\n        const isJoiningError = joiningErrCodes.findIndex((c) => c === code) !== -1;\n        const isCriticalError = `${code}`.startsWith(\"500\");\n\n        new Audio(\n            isCriticalError\n                ? `https://static.videosdk.live/prebuilt/notification_critical_err.mp3`\n                : `https://static.videosdk.live/prebuilt/notification_err.mp3`,\n        ).play();\n\n        setMeetingErrorVisible(true);\n        setMeetingError({\n            code,\n            message: isJoiningError ? \"Unable to join meeting!\" : message,\n        });\n    };\n\n    const mMeeting = useMeeting({\n        onParticipantJoined,\n        onEntryResponded,\n        onMeetingJoined,\n        onMeetingLeft,\n        onError: _handleOnError,\n        onRecordingStateChanged: _handleOnRecordingStateChanged,\n    });\n\n    const isPresenting = mMeeting.presenterId ? true : false;\n\n    useEffect(() => {\n        mMeetingRef.current = mMeeting;\n    }, [mMeeting]);\n\n    usePubSub(\"RAISE_HAND\", {\n        onMessageReceived: (data) => {\n            const localParticipantId = mMeeting?.localParticipant?.id;\n\n            const { senderId, senderName } = data;\n\n            const isLocal = senderId === localParticipantId;\n\n            new Audio(`https://static.videosdk.live/prebuilt/notification.mp3`).play();\n\n            toast(`${isLocal ? \"You\" : nameTructed(senderName, 15)} raised hand 🖐🏼`, {\n                position: \"bottom-left\",\n                autoClose: 4000,\n                hideProgressBar: true,\n                closeButton: false,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n\n            participantRaisedHand(senderId);\n        },\n    });\n\n    usePubSub(\"CHAT\", {\n        onMessageReceived: (data) => {\n            const localParticipantId = mMeeting?.localParticipant?.id;\n\n            const { senderId, senderName, message } = data;\n\n            const isLocal = senderId === localParticipantId;\n\n            if (!isLocal) {\n                new Audio(`https://static.videosdk.live/prebuilt/notification.mp3`).play();\n\n                toast(`${trimSnackBarText(`${nameTructed(senderName, 15)} says: ${message}`)}`, {\n                    position: \"bottom-left\",\n                    autoClose: 4000,\n                    hideProgressBar: true,\n                    closeButton: false,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"light\",\n                });\n            }\n        },\n    });\n\n    const fetch_remainingtime = async () => {\n        try {\n            const response = await axiosInstance(\n                `/sec/patient/getAppointmentDateTime/${params?.appID}`,\n            );\n            const remainingTimeStr = response?.data?.remainingTime;\n            console.log(\"this is the remaining time  : \", remainingTime);\n            console.log(\"this is the remaining time  : \", response?.data?.joinCallflag);\n            if (!response?.data?.joinCallflag) {\n                alert(\"leave the meeting\");\n                onMeetingLeft(); // End the call when time is up\n            }\n\n            if (remainingTimeStr) {\n                const seconds = convertToSeconds(remainingTimeStr);\n                setRemainingTimeInSeconds(seconds);\n            }\n        } catch (err) {\n            onMeetingLeft(); // End the call when time is up\n            console.error(\"this is error while fetching the time  : \", err);\n        }\n    };\n\n    useEffect(() => {\n        fetch_remainingtime();\n    }, [params?.appID]);\n\n    // Countdown logic\n    useEffect(() => {\n        if (remainingTimeInSeconds === null) return;\n\n        const countdownInterval = setInterval(() => {\n            setRemainingTimeInSeconds((prev) => {\n                if (prev <= 0) {\n                    clearInterval(countdownInterval);\n                    onMeetingLeft(); // End the call when time is up\n                    return 0;\n                }\n                return prev - 1;\n            });\n        }, 1000);\n\n        return () => clearInterval(countdownInterval);\n    }, [remainingTimeInSeconds]);\n\n    // Convert remaining time in seconds to HH:MM:SS format\n    const formatTime = (seconds) => {\n        const hours = Math.floor(seconds / 3600);\n        const minutes = Math.floor((seconds % 3600) / 60);\n        const secs = seconds % 60;\n        return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}:${String(\n            secs,\n        ).padStart(2, \"0\")}`;\n    };\n\n    return (\n        <div className=\"meeting-container-main\">\n            <div ref={containerRef} className=\"meeting-inner-container-one\">\n                <h1 className=\"meeting-time\" >\n                    {/* Remaining Time:{\" \"} */}\n                    {remainingTimeInSeconds !== null ? formatTime(remainingTimeInSeconds) : \"--:--\"}\n                </h1>\n\n                {typeof localParticipantAllowedJoin === \"boolean\" ? (\n                    localParticipantAllowedJoin ? (\n                        <>\n                            <div className={`meeting-inner-container-two`}>\n                                <div className={`meeting-inner-container-three `}>\n                                    {isPresenting ? (\n                                        <PresenterView height={containerHeight - bottomBarHeight} />\n                                    ) : null}\n                                    {isPresenting && isMobile ? null : (\n                                        <MemorizedParticipantView isPresenting={isPresenting} />\n                                    )}\n                                </div>\n\n                                <SidebarConatiner\n                                    height={containerHeight - bottomBarHeight}\n                                    sideBarContainerWidth={sideBarContainerWidth}\n                                />\n                            </div>\n\n                            <BottomBar\n                                bottomBarHeight={bottomBarHeight}\n                                setIsMeetingLeft={setIsMeetingLeft}\n                            />\n                        </>\n                    ) : (\n                        <></>\n                    )\n                ) : (\n                    !mMeeting.isMeetingJoined && <WaitingToJoinScreen />\n                )}\n                <ConfirmBox\n                    open={meetingErrorVisible}\n                    successText=\"OKAY\"\n                    onSuccess={() => {\n                        setMeetingErrorVisible(false);\n                    }}\n                    title={`Error Code: ${meetingError.code}`}\n                    subTitle={meetingError.message}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport function LeaveScreen({ setIsMeetingLeft }) {\n  return (\n    <div className=\"bg-gray-800 h-screen flex flex-col flex-1 items-center justify-center\">\n      <h1 className=\"text-white text-4xl\">You left the meeting!</h1>\n      <div className=\"mt-12\">\n        <button\n          className=\"`w-full bg-purple-350 text-white px-16 py-3 rounded-lg text-sm\"\n          onClick={() => {\n            setIsMeetingLeft(false);\n          }}\n        >\n          Rejoin the Meeting\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { CheckIcon, ClipboardIcon } from \"@heroicons/react/outline\";\nimport React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"./MeetingDetailsScreen.scss\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport { useParams } from \"react-router-dom\";\nimport CustomButton from \"../../components/CustomButton\";\n\nexport function MeetingDetailsScreen({\n    onClickJoin,\n    _handleOnCreateMeeting,\n    participantName,\n    setParticipantName,\n    onClickStartMeeting,\n}) {\n    const [meetingId, setMeetingId] = useState(\"\");\n    const [meetingIdError, setMeetingIdError] = useState(false);\n    const [isCopied, setIsCopied] = useState(false);\n    const [iscreateMeetingClicked, setIscreateMeetingClicked] = useState(false);\n    const [isJoinMeetingClicked, setIsJoinMeetingClicked] = useState(false);\n    const [socketID, setSocketID] = useState(null);\n    const [isDisableButon, setIdDisableButton] = useState(true);\n    const params = useParams();\n\n    // api to pass the meeting id , doctor id\n    const fetch_getSocketID = async () => {\n        try {\n            const response = await axiosInstance(`/sec/patient/getUpdateSocketId/${params?.appID}`);\n            if (response?.data?.response === \"Generate SocketID\") {\n                console.log(\"this is generate response \", response?.data?.response);\n                setMeetingId(\"\");\n                setSocketID(null);\n            } else {\n                console.log(\"this is the socket id : \", response?.data?.response[0]?.socket_id);\n                setMeetingId(response?.data?.response[0]?.socket_id)\n                setSocketID(response?.data?.response[0]?.socket_id);\n            }\n        } catch (error) {\n            console.log(\"this is the error in video : \", error);\n        }\n    };\n\n    // check for the appointment date and time\n    const fetch_CheckForTheAppointmentDateAndTime = async () => {\n        try {\n            const response = await axiosInstance(\n                `/sec/patient/getAppointmentDateTime/${params?.appID}`,\n            );\n            console.log(\"check for date and appointment : \", response?.data?.joinCallflag);\n\n            if (response?.data?.joinCallflag) {\n                console.log(\"false response\");\n                setIdDisableButton(false);\n                fetch_getSocketID();\n            } else {\n                console.log(\"response is true\");\n                setIdDisableButton(true);\n            }\n        } catch (error) {\n            console.log(\"Error in video : \", error);\n        }\n    };\n\n    const update_socketID = async (meetingId) => {\n        try {\n            const reponse = await axiosInstance.put(\"/sec/patient/putSocketId/\", {\n                appointment_id: params?.appID,\n                socket_id: meetingId,\n            });\n            alert('this is success : ',meetingId)\n        } catch (error) {\n          console.log(`Error while uploading the socket ID : ${error}`)\n        }\n    };\n\n    useEffect(() => {\n        fetch_CheckForTheAppointmentDateAndTime();\n    }, []);\n\n    return (\n        <div className={`meeting-detail-main-container`}>\n            {iscreateMeetingClicked ? (\n                <div className=\"meeting-clicked-container\">\n                    <p className=\"meeting-paragraph-container\">{`Meeting code : ${meetingId}`}</p>\n                    <button\n                        className=\"button-container\"\n                        onClick={() => {\n                            navigator.clipboard.writeText(meetingId);\n                            setIsCopied(true);\n                            setTimeout(() => {\n                                setIsCopied(false);\n                            }, 3000);\n                        }}\n                    >\n                        {isCopied ? (\n                            <CheckIcon className=\"check-icon-container\" />\n                        ) : (\n                            <ClipboardIcon className=\"clipboard-container\" />\n                        )}\n                    </button>\n                </div>\n            ) : isJoinMeetingClicked ? (\n                <>\n                    {/* <input\n                        defaultValue={meetingId}\n                        onChange={(e) => {\n                            setMeetingId(e.target.value);\n                        }}\n                        placeholder={\"Enter meeting Id\"}\n                        className=\"joinMeeting-input-container\"\n                    /> */}\n                    {meetingIdError && (\n                        <p className=\"meetingErrorId\">{`Please enter valid meetingId`}</p>\n                    )}\n                </>\n            ) : null}\n\n            {(iscreateMeetingClicked || isJoinMeetingClicked) && (\n                <>\n                    <input\n                        value={participantName}\n                        onChange={(e) => setParticipantName(e.target.value)}\n                        placeholder=\"Enter your name\"\n                        className=\"created-meeting-joined-input\"\n                    />\n\n                    {/* <p className=\"text-xs text-white mt-1 text-center\">\n            Your name will help everyone identify you in the meeting.\n          </p> */}\n                    <button\n                        disabled={participantName.length < 3}\n                        className={`meeting-button-width ${\n                            participantName.length < 3\n                                ? \"created-meeting-joined-input-gray\"\n                                : \"created-meeting-joined-input-purple\"\n                        }  text-white px-2 py-3 rounded-xl mt-5`}\n                        onClick={(e) => {\n                            if (iscreateMeetingClicked) {\n                                onClickStartMeeting();\n                            } else {\n                                if (meetingId.match(\"\\\\w{4}\\\\-\\\\w{4}\\\\-\\\\w{4}\")) {\n                                    onClickJoin(meetingId);\n                                } else setMeetingIdError(true);\n                            }\n                        }}\n                    >\n                        {iscreateMeetingClicked ? \"Start a meeting\" : \"Join a meeting\"}\n                    </button>\n                </>\n            )}\n\n            {!iscreateMeetingClicked && !isJoinMeetingClicked && (\n                <div className=\"inner-created-meeting-clicked-container-two\">\n                    {socketID === null || undefined ? (\n                        <CustomButton\n                            className={\"inner-created-meeting-clicked-container-three\"}\n                            isDisabled={isDisableButon}\n                            label={\"Create a meeting\"}\n                            handleClick={async (e) => {\n                                const { meetingId, err } = await _handleOnCreateMeeting();\n\n                                if (meetingId) {\n                                    setMeetingId(meetingId);\n                                    setIscreateMeetingClicked(true);\n                                    update_socketID(meetingId);\n                                } else {\n                                    toast(`${err}`, {\n                                        position: \"bottom-left\",\n                                        autoClose: 4000,\n                                        hideProgressBar: true,\n                                        closeButton: false,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        progress: undefined,\n                                        theme: \"light\",\n                                    });\n                                }\n                            }}\n                        />\n                    ) : (\n                        // <button\n                        //     className=\"inner-created-meeting-clicked-container-three\"\n                        //     disabled={false}\n                        //     onClick={async (e) => {\n                        //         const { meetingId, err } = await _handleOnCreateMeeting();\n\n                        //         if (meetingId) {\n                        //             setMeetingId(meetingId);\n                        //             setIscreateMeetingClicked(true);\n                        //         } else {\n                        //             toast(`${err}`, {\n                        //                 position: \"bottom-left\",\n                        //                 autoClose: 4000,\n                        //                 hideProgressBar: true,\n                        //                 closeButton: false,\n                        //                 pauseOnHover: true,\n                        //                 draggable: true,\n                        //                 progress: undefined,\n                        //                 theme: \"light\",\n                        //             });\n                        //         }\n                        //     }}\n                        // >\n                        //     Create a meeting\n                        // </button>\n                        <CustomButton\n                            className={\"join-meeting-button\"}\n                            isDisabled={isDisableButon}\n                            handleClick={(e) => {\n                                setIsJoinMeetingClicked(true);\n                            }}\n                            label=\"Join a Meeting\"\n                        />\n\n                        // <button\n                        //     className=\"join-meeting-button\"\n                        //     disabled={false}\n                        //     onClick={(e) => {\n                        //         setIsJoinMeetingClicked(true);\n                        //     }}\n                        // >\n                        //     Join a meeting\n                        // </button>\n                    )}\n                    {/* create a meeting */}\n\n                    {/* Join meeting */}\n                </div>\n            )}\n        </div>\n    );\n}\n","const API_BASE_URL = \"https://api.videosdk.live\";\n// const VIDEOSDK_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlrZXkiOiJmMmU1MzliOC1kODIyLTQxYjAtOGY4Mi0wZGZlYjNhZDhlMmEiLCJwZXJtaXNzaW9ucyI6WyJhbGxvd19qb2luIl0sImlhdCI6MTcxNTQwODU5NywiZXhwIjoxNzMwOTYwNTk3fQ.gFrFntFx9AsmG5NNgdAI1TIsMMYQyQsvrYaizDOpb6A\";\nconst VIDEOSDK_TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlrZXkiOiJiZjA3NDZhYy1hNGU0LTQ2ZmYtODUxZS00ODdmMjAwMDZjNTkiLCJwZXJtaXNzaW9ucyI6WyJhbGxvd19qb2luIl0sImlhdCI6MTczMjI3ODcwNywiZXhwIjoxNzYzODE0NzA3fQ.aQCfG8k_1Ez6H_A-a55WzbpZKG9wKIupjaqhGOK-dy0\"\n// generate the token and paste it here \n// const API_AUTH_URL = process.env.REACT_APP_AUTH_URL;\n\nconst API_AUTH_URL = \"\";\n\nexport const getToken = async () => {\n  if (VIDEOSDK_TOKEN && API_AUTH_URL) {\n    console.error(\n      \"Error: Provide only ONE PARAMETER - either Token or Auth API\"\n    );\n  } else if (VIDEOSDK_TOKEN) {\n    return VIDEOSDK_TOKEN;\n  } else if (API_AUTH_URL) {\n    const res = await fetch(`${API_AUTH_URL}/get-token`, {\n      method: \"GET\",\n    });\n    const { token } = await res.json();\n    return token;\n  } else {\n    console.error(\"Error: \", Error(\"Please add a token or Auth Server URL\"));\n  }\n};\n\nexport const createMeeting = async ({ token }) => {\n  const url = `${API_BASE_URL}/v2/rooms`;\n  const options = {\n    method: \"POST\",\n    headers: { Authorization: token, \"Content-Type\": \"application/json\" },\n  };\n\n  const response = await fetch(url, options)\n  const data = await response.json()\n\n  if (data.roomId) {\n    return { meetingId: data.roomId, err: null }\n  } else {\n    return { meetingId: null, err: data.error }\n  }\n\n};\n\nexport const validateMeeting = async ({ roomId, token }) => {\n  const url = `${API_BASE_URL}/v2/rooms/validate/${roomId}`;\n\n  const options = {\n    method: \"GET\",\n    headers: { Authorization: token, \"Content-Type\": \"application/json\" },\n  };\n\n  const response = await fetch(url, options)\n\n  if (response.status === 400) {\n    const data = await response.text()\n    return { meetingId: null, err: data }\n  }\n\n  const data = await response.json()\n\n  if (data.roomId) {\n    return { meetingId: data.roomId, err: null }\n  } else {\n    return { meetingId: null, err: data.error }\n  }\n\n};\n","import * as React from \"react\";\n\nconst WebcamOffIcon = (props) => (\n  <svg\n    width={24}\n    height={24}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <g clipPath=\"url(#a)\">\n      <path\n       fill={\"#E72B4A\"}\n        d=\"M22.359 17.84a1.196 1.196 0 0 0 .548-1.017V7.786a1.36 1.36 0 0 0-.548-1.017.97.97 0 0 0-1.095 0L17.43 8.804a3.4 3.4 0 0 0-3.286-3.286h-4.052L22.14 17.949c-.001-.11.108-.11.219-.11Zm.219 3.841-5.257-5.424L6.916 5.517 2.863 1.34a1.036 1.036 0 0 0-1.533 0 1.117 1.117 0 0 0 0 1.583l2.519 2.596A3.379 3.379 0 0 0 1 8.91v6.78a3.386 3.386 0 0 0 .945 2.415 3.175 3.175 0 0 0 2.341.975h9.857a2.84 2.84 0 0 0 2.082-.791l4.819 4.972a1.06 1.06 0 0 0 1.533 0 1.144 1.144 0 0 0 0-1.582v.002Z\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"a\">\n        <path\n          fill={\"#E72B4A\"}\n          transform=\"translate(1 1)\"\n          d=\"M0 0h21.905v22.59H0z\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default WebcamOffIcon;\n","import React from \"react\";\n\nfunction MicOffIcon(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <mask\n        id=\"mask0_25_170\"\n        style={{ maskType: \"alpha\" }}\n        width=\"24\"\n        height=\"24\"\n        x=\"0\"\n        y=\"0\"\n        maskUnits=\"userSpaceOnUse\"\n      >\n        <path fill=\"#D9D9D9\" d=\"M0 0H24V24H0z\"></path>\n      </mask>\n      <g\n        fill={props.fillcolor ? props.fillcolor : \"#050A0E\"}\n        mask=\"url(#mask0_25_170)\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M8.6 10.692V12.2c0 .902.38 1.767 1.054 2.404a3.71 3.71 0 002.546.996c.346 0 .687-.047 1.014-.138L8.6 10.692zm5.915 6.116a5.665 5.665 0 01-2.315.492 5.565 5.565 0 01-3.819-1.494C7.37 14.85 6.8 13.553 6.8 12.2v-.405a.827.827 0 00-.264-.6.928.928 0 00-.636-.25.928.928 0 00-.637.25.827.827 0 00-.263.6v.405c0 3.468 2.748 6.33 6.3 6.748V20.7H9.5a.928.928 0 00-.637.249.827.827 0 00-.263.601c0 .225.095.442.263.601.17.16.398.249.637.249h5.4c.238 0 .467-.09.636-.249a.827.827 0 00.264-.601.827.827 0 00-.264-.601.927.927 0 00-.636-.249h-1.8v-1.752a7.495 7.495 0 002.67-.842l-1.255-1.298zm4.16-1.633l-1.343-1.388A4.84 4.84 0 0017.6 12.2v-.405c0-.225.095-.441.263-.6a.927.927 0 01.637-.25c.238 0 .467.09.636.25.169.159.264.375.264.6v.405a6.491 6.491 0 01-.726 2.975zM15.8 12.203L8.654 4.814a3.34 3.34 0 011-1.818A3.71 3.71 0 0112.2 2c.955 0 1.87.358 2.545.996A3.307 3.307 0 0115.8 5.4v6.803z\"\n          clipRule=\"evenodd\"\n        ></path>\n        <rect\n          width=\"24.979\"\n          height=\"1.817\"\n          x=\"3.306\"\n          y=\"3\"\n          rx=\"0.909\"\n          transform=\"rotate(45.956 3.306 3)\"\n        ></rect>\n      </g>\n    </svg>\n  );\n}\n\nexport default MicOffIcon;\n","import React from \"react\";\n\nfunction MicPermissionDenied() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"56\"\n      height=\"56\"\n      fill=\"none\"\n      viewBox=\"0 0 56 56\"\n    >\n      <g filter=\"url(#filter0_d_20_1262)\">\n        <rect width=\"48\" height=\"48\" x=\"4\" y=\"4\" fill=\"#FF5D5D\" rx=\"24\"></rect>\n      </g>\n      <g filter=\"url(#filter1_d_20_1262)\">\n        <circle cx=\"44\" cy=\"12\" r=\"8\" fill=\"#FF8A00\"></circle>\n      </g>\n      <path\n        fill=\"#fff\"\n        d=\"M44.876 8.258v3.432c0 .368-.022.734-.066 1.098-.044.36-.102.728-.174 1.104h-1.26c-.072-.376-.13-.744-.174-1.104a9.141 9.141 0 01-.066-1.098V8.258h1.74zm-1.944 7.8c0-.144.026-.278.078-.402.056-.124.13-.232.222-.324.096-.092.208-.164.336-.216.128-.056.268-.084.42-.084.148 0 .286.028.414.084.128.052.24.124.336.216.096.092.17.2.222.324a1.007 1.007 0 010 .81.956.956 0 01-.222.324 1.09 1.09 0 01-.75.294c-.152 0-.292-.026-.42-.078a1.053 1.053 0 01-.336-.216 1.085 1.085 0 01-.222-.324 1.074 1.074 0 01-.078-.408zM35.641 27.436h-1.745a5.043 5.043 0 01-.447 2.104l1.265 1.261a6.636 6.636 0 00.927-3.365zm-4.122.17c0-.057.016-.113.016-.17v-6.155a3.08 3.08 0 10-6.16 0v.19l6.144 6.134zM20.523 19.23l-1.309 1.307 6.17 6.167v.738a3.071 3.071 0 003.738 3.001l1.704 1.703a5.662 5.662 0 01-2.371.528c-2.834 0-5.442-2.154-5.442-5.232h-1.745c0 3.503 2.793 6.397 6.16 6.894v3.36h2.053v-3.364a7.281 7.281 0 002.608-.928l4.297 4.293 1.309-1.303L20.523 19.23z\"\n      ></path>\n      <defs>\n        <filter\n          id=\"filter0_d_20_1262\"\n          width=\"56\"\n          height=\"56\"\n          x=\"0\"\n          y=\"0\"\n          colorInterpolationFilters=\"sRGB\"\n          filterUnits=\"userSpaceOnUse\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            result=\"hardAlpha\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n          ></feColorMatrix>\n          <feOffset></feOffset>\n          <feGaussianBlur stdDeviation=\"2\"></feGaussianBlur>\n          <feComposite in2=\"hardAlpha\" operator=\"out\"></feComposite>\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"></feColorMatrix>\n          <feBlend\n            in2=\"BackgroundImageFix\"\n            result=\"effect1_dropShadow_20_1262\"\n          ></feBlend>\n          <feBlend\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_20_1262\"\n            result=\"shape\"\n          ></feBlend>\n        </filter>\n        <filter\n          id=\"filter1_d_20_1262\"\n          width=\"20\"\n          height=\"20\"\n          x=\"34\"\n          y=\"4\"\n          colorInterpolationFilters=\"sRGB\"\n          filterUnits=\"userSpaceOnUse\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            result=\"hardAlpha\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n          ></feColorMatrix>\n          <feOffset dy=\"2\"></feOffset>\n          <feGaussianBlur stdDeviation=\"1\"></feGaussianBlur>\n          <feComposite in2=\"hardAlpha\" operator=\"out\"></feComposite>\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\"></feColorMatrix>\n          <feBlend\n            in2=\"BackgroundImageFix\"\n            result=\"effect1_dropShadow_20_1262\"\n          ></feBlend>\n          <feBlend\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_20_1262\"\n            result=\"shape\"\n          ></feBlend>\n        </filter>\n      </defs>\n    </svg>\n  );\n}\n\nexport default MicPermissionDenied;\n","import React from \"react\";\n\nfunction CameraPermissionDenied() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"56\"\n      height=\"56\"\n      fill=\"none\"\n      viewBox=\"0 0 56 56\"\n    >\n      <g filter=\"url(#filter0_d_20_1271)\">\n        <rect width=\"48\" height=\"48\" x=\"4\" y=\"4\" fill=\"#FF5D5D\" rx=\"24\"></rect>\n      </g>\n      <g filter=\"url(#filter1_d_20_1271)\">\n        <circle cx=\"44\" cy=\"12\" r=\"8\" fill=\"#FF8A00\"></circle>\n      </g>\n      <path\n        fill=\"#fff\"\n        d=\"M44.876 8.258v3.432c0 .368-.022.734-.066 1.098-.044.36-.102.728-.174 1.104h-1.26c-.072-.376-.13-.744-.174-1.104a9.141 9.141 0 01-.066-1.098V8.258h1.74zm-1.944 7.8c0-.144.026-.278.078-.402.056-.124.13-.232.222-.324.096-.092.208-.164.336-.216.128-.056.268-.084.42-.084.148 0 .286.028.414.084.128.052.24.124.336.216.096.092.17.2.222.324a1.007 1.007 0 010 .81.956.956 0 01-.222.324 1.09 1.09 0 01-.75.294c-.152 0-.292-.026-.42-.078a1.053 1.053 0 01-.336-.216 1.085 1.085 0 01-.222-.324 1.074 1.074 0 01-.078-.408z\"\n      ></path>\n      <g clipPath=\"url(#clip0_20_1271)\">\n        <path\n          fill=\"#fff\"\n          d=\"M37.501 32.909c.155-.097.282-.23.37-.388.087-.157.132-.334.13-.513v-8a1.176 1.176 0 00-.146-.504 1.216 1.216 0 00-.354-.396.904.904 0 00-1 0l-3.5 1.8a2.967 2.967 0 00-.907-2.028A3.15 3.15 0 0030 22h-3.7l11 11.006c-.001-.097.099-.097.2-.097zm.2 3.401l-4.8-4.802-9.5-9.508-3.7-3.7a.946.946 0 00-.7-.3.972.972 0 00-.7.3.988.988 0 00-.3.701.963.963 0 00.3.7l2.3 2.299a3.11 3.11 0 00-1.878 1.03A2.936 2.936 0 0018 25.004v6.003c-.008.394.064.785.212 1.152.148.367.369.702.65.986.277.279.609.499.977.648.367.148.763.221 1.161.215h9c.35.013.697-.042 1.024-.162.326-.12.624-.304.876-.538l4.4 4.402a.971.971 0 00.7.29.996.996 0 00.7-.29.997.997 0 00.29-.7.997.997 0 00-.29-.701v.002z\"\n        ></path>\n      </g>\n      <defs>\n        <filter\n          id=\"filter0_d_20_1271\"\n          width=\"56\"\n          height=\"56\"\n          x=\"0\"\n          y=\"0\"\n          colorInterpolationFilters=\"sRGB\"\n          filterUnits=\"userSpaceOnUse\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            result=\"hardAlpha\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n          ></feColorMatrix>\n          <feOffset></feOffset>\n          <feGaussianBlur stdDeviation=\"2\"></feGaussianBlur>\n          <feComposite in2=\"hardAlpha\" operator=\"out\"></feComposite>\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"></feColorMatrix>\n          <feBlend\n            in2=\"BackgroundImageFix\"\n            result=\"effect1_dropShadow_20_1271\"\n          ></feBlend>\n          <feBlend\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_20_1271\"\n            result=\"shape\"\n          ></feBlend>\n        </filter>\n        <filter\n          id=\"filter1_d_20_1271\"\n          width=\"20\"\n          height=\"20\"\n          x=\"34\"\n          y=\"4\"\n          colorInterpolationFilters=\"sRGB\"\n          filterUnits=\"userSpaceOnUse\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n          <feColorMatrix\n            in=\"SourceAlpha\"\n            result=\"hardAlpha\"\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n          ></feColorMatrix>\n          <feOffset dy=\"2\"></feOffset>\n          <feGaussianBlur stdDeviation=\"1\"></feGaussianBlur>\n          <feComposite in2=\"hardAlpha\" operator=\"out\"></feComposite>\n          <feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\"></feColorMatrix>\n          <feBlend\n            in2=\"BackgroundImageFix\"\n            result=\"effect1_dropShadow_20_1271\"\n          ></feBlend>\n          <feBlend\n            in=\"SourceGraphic\"\n            in2=\"effect1_dropShadow_20_1271\"\n            result=\"shape\"\n          ></feBlend>\n        </filter>\n        <clipPath id=\"clip0_20_1271\">\n          <path\n            fill=\"#fff\"\n            d=\"M0 0H20V20H0z\"\n            transform=\"translate(18 18)\"\n          ></path>\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\nexport default CameraPermissionDenied;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { MeetingDetailsScreen } from \"../MeetingDetailsScreen\";\nimport { createMeeting, getToken, validateMeeting } from \"../../api\";\nimport ConfirmBox from \"../ConfirmBox\";\nimport {\n  Constants,\n  useMediaDevice\n} from \"@videosdk.live/react-sdk\";\nimport useMediaStream from \"../../hooks/useMediaStream\";\nimport useIsMobile from \"../../hooks/useIsMobile\";\nimport WebcamOffIcon from \"../../icons/WebcamOffIcon\";\nimport WebcamOnIcon from \"../../icons/Bottombar/WebcamOnIcon\";\nimport MicOffIcon from \"../../icons/MicOffIcon\";\nimport MicOnIcon from \"../../icons/Bottombar/MicOnIcon\";\nimport MicPermissionDenied from \"../../icons/MicPermissionDenied\";\nimport CameraPermissionDenied from \"../../icons/CameraPermissionDenied\";\nimport DropDown from \"../DropDown\";\nimport DropDownCam from \"../DropDownCam\";\nimport DropDownSpeaker from \"../DropDownSpeaker\";\nimport NetworkStats from \"../NetworkStats\";\nimport { useMeetingAppContext } from \"../../MeetingAppContextDef\";\nimport { toast } from \"react-toastify\";\nimport \"./joinScreen.scss\";\nimport VideocamIcon from '@mui/icons-material/Videocam';\n\nexport function JoiningScreen({\n  participantName,\n  setParticipantName,\n  setMeetingId,\n  setToken,\n  onClickStartMeeting,\n  micOn,\n  webcamOn,\n  setWebcamOn,\n  setMicOn,\n  customAudioStream,\n  setCustomAudioStream,\n  setCustomVideoStream\n}) {\n\n  const {\n    selectedWebcam,\n    selectedMic,\n    setSelectedMic,\n    setSelectedWebcam,\n    setSelectedSpeaker,\n    isCameraPermissionAllowed,\n    isMicrophonePermissionAllowed,\n    setIsCameraPermissionAllowed,\n    setIsMicrophonePermissionAllowed\n  } = useMeetingAppContext()\n\n  const [{ webcams, mics, speakers }, setDevices] = useState({\n    webcams: [],\n    mics: [],\n    speakers: [],\n  });\n  const { getVideoTrack, getAudioTrack } = useMediaStream();\n  const {\n    checkPermissions,\n    getCameras,\n    getMicrophones,\n    requestPermission,\n    getPlaybackDevices,\n  } = useMediaDevice({ onDeviceChanged });\n  const [audioTrack, setAudioTrack] = useState(null);\n  const [videoTrack, setVideoTrack] = useState(null);\n  const [dlgMuted, setDlgMuted] = useState(false);\n  const [dlgDevices, setDlgDevices] = useState(false);\n  const [didDeviceChange, setDidDeviceChange] = useState(false)\n\n  const videoPlayerRef = useRef();\n  const videoTrackRef = useRef();\n  const audioTrackRef = useRef();\n  const audioAnalyserIntervalRef = useRef();\n  const permissonAvaialble = useRef();\n  const webcamRef = useRef();\n  const micRef = useRef();\n  const isMobile = useIsMobile();\n\n  useEffect(() => { webcamRef.current = webcamOn }, [webcamOn])\n\n  useEffect(() => { micRef.current = micOn }, [micOn])\n\n  useEffect(() => {\n    permissonAvaialble.current = {\n      isCameraPermissionAllowed,\n      isMicrophonePermissionAllowed,\n    };\n  }, [isCameraPermissionAllowed, isMicrophonePermissionAllowed]);\n\n  useEffect(() => {\n    if (micOn) {\n      audioTrackRef.current = audioTrack;\n      startMuteListener();\n    }\n\n  }, [micOn, audioTrack]);\n\n  useEffect(() => {\n    if (webcamOn) {\n      videoTrackRef.current = videoTrack;\n\n      var isPlaying =\n        videoPlayerRef.current.currentTime > 0 &&\n        !videoPlayerRef.current.paused &&\n        !videoPlayerRef.current.ended &&\n        videoPlayerRef.current.readyState >\n        videoPlayerRef.current.HAVE_CURRENT_DATA;\n\n      if (videoTrack) {\n        const videoSrcObject = new MediaStream([videoTrack]);\n\n        if (videoPlayerRef.current) {\n          videoPlayerRef.current.srcObject = videoSrcObject;\n          if (videoPlayerRef.current.pause && !isPlaying) {\n            videoPlayerRef.current\n              .play()\n              .catch((error) => console.log(\"error\", error));\n          }\n        }\n      } else {\n        if (videoPlayerRef.current) {\n          videoPlayerRef.current.srcObject = null;\n        }\n      }\n    }\n  }, [webcamOn, videoTrack]);\n\n  useEffect(() => {\n    getCameraDevices();\n  }, [isCameraPermissionAllowed]);\n\n  useEffect(() => {\n    getAudioDevices();\n  }, [isMicrophonePermissionAllowed]);\n\n  useEffect(() => {\n    checkMediaPermission();\n    return () => { };\n  }, []);\n\n  const _toggleWebcam = () => {\n    const videoTrack = videoTrackRef.current;\n\n    if (webcamOn) {\n      if (videoTrack) {\n        videoTrack.stop();\n        setVideoTrack(null);\n        setCustomVideoStream(null)\n        setWebcamOn(false);\n      }\n    } else {\n      getDefaultMediaTracks({ mic: false, webcam: true });\n      setWebcamOn(true);\n    }\n  }\n\n  const _toggleMic = () => {\n    const audioTrack = audioTrackRef.current;\n\n    if (micOn) {\n      if (audioTrack) {\n        audioTrack.stop();\n        setAudioTrack(null);\n        setCustomAudioStream(null)\n        setMicOn(false);\n      }\n    } else {\n      getDefaultMediaTracks({ mic: true, webcam: false });\n      setMicOn(true);\n    }\n  }\n\n  const changeWebcam = async (deviceId) => {\n    if (webcamOn) {\n      const currentvideoTrack = videoTrackRef.current;\n      if (currentvideoTrack) {\n        currentvideoTrack.stop();\n      }\n\n      const stream = await getVideoTrack({\n        webcamId: deviceId\n      })\n      setCustomVideoStream(stream);\n      const videoTracks = stream?.getVideoTracks();\n      const videoTrack = videoTracks.length ? videoTracks[0] : null;\n      setVideoTrack(videoTrack);\n    }\n\n  };\n  const changeMic = async (deviceId) => {\n    if (micOn) {\n      const currentAudioTrack = audioTrackRef.current;\n      currentAudioTrack && currentAudioTrack.stop();\n      const stream = await getAudioTrack({\n        micId: deviceId\n      })\n      setCustomAudioStream(stream);\n      const audioTracks = stream?.getAudioTracks();\n      const audioTrack = audioTracks.length ? audioTracks[0] : null;\n      clearInterval(audioAnalyserIntervalRef.current);\n      setAudioTrack(audioTrack);\n    }\n  };\n\n  const getDefaultMediaTracks = async ({ mic, webcam }) => {\n    if (mic) {\n      const stream = await getAudioTrack({\n        micId: selectedMic.id\n      })\n      setCustomAudioStream(stream);\n      const audioTracks = stream?.getAudioTracks();\n      const audioTrack = audioTracks.length ? audioTracks[0] : null;\n      setAudioTrack(audioTrack)\n    }\n\n    if (webcam) {\n      const stream = await getVideoTrack({\n        webcamId: selectedWebcam.id\n      })\n      setCustomVideoStream(stream);\n      const videoTracks = stream?.getVideoTracks();\n      const videoTrack = videoTracks.length ? videoTracks[0] : null;\n      setVideoTrack(videoTrack);\n\n    }\n  };\n\n  async function startMuteListener() {\n    const currentAudioTrack = audioTrackRef.current;\n    if (currentAudioTrack) {\n      if (currentAudioTrack.muted) {\n        setDlgMuted(true);\n      }\n      currentAudioTrack.addEventListener(\"mute\", (ev) => {\n        setDlgMuted(true);\n      });\n    }\n  }\n\n  async function requestAudioVideoPermission(mediaType) {\n    try {\n      const permission = await requestPermission(mediaType);\n\n      if (mediaType == Constants.permission.AUDIO) {\n        setIsMicrophonePermissionAllowed(\n          permission.get(Constants.permission.AUDIO)\n        );\n      }\n\n      if (mediaType == Constants.permission.VIDEO) {\n        setIsCameraPermissionAllowed(\n          permission.get(Constants.permission.VIDEO)\n        );\n      }\n\n      if (permission.get(Constants.permission.AUDIO)) {\n        setMicOn(true);\n        getDefaultMediaTracks({ mic: true, webcam: false });\n      }\n\n      if (permission.get(Constants.permission.VIDEO)) {\n        setWebcamOn(true);\n        getDefaultMediaTracks({ mic: false, webcam: true });\n      }\n    } catch (ex) {\n      console.log(\"Error in requestPermission \", ex);\n    }\n  }\n  function onDeviceChanged() {\n    setDidDeviceChange(true)\n    getCameraDevices();\n    getAudioDevices();\n    getDefaultMediaTracks({ mic: micRef.current, webcam: webcamRef.current });\n  }\n\n  const checkMediaPermission = async () => {\n    const checkAudioVideoPermission = await checkPermissions();\n    const cameraPermissionAllowed = checkAudioVideoPermission.get(\n      Constants.permission.VIDEO\n    );\n    const microphonePermissionAllowed = checkAudioVideoPermission.get(\n      Constants.permission.AUDIO\n    );\n\n    setIsCameraPermissionAllowed(cameraPermissionAllowed);\n    setIsMicrophonePermissionAllowed(microphonePermissionAllowed);\n\n    if (microphonePermissionAllowed) {\n      setMicOn(true);\n      getDefaultMediaTracks({ mic: true, webcam: false });\n\n    } else {\n      await requestAudioVideoPermission(Constants.permission.AUDIO);\n    }\n    if (cameraPermissionAllowed) {\n      setWebcamOn(true);\n      getDefaultMediaTracks({ mic: false, webcam: true });\n    } else {\n      await requestAudioVideoPermission(Constants.permission.VIDEO);\n    }\n  };\n\n  const getCameraDevices = async () => {\n    try {\n      if (permissonAvaialble.current?.isCameraPermissionAllowed) {\n        let webcams = await getCameras();\n        setSelectedWebcam({ id: webcams[0]?.deviceId, label: webcams[0]?.label })\n        setDevices((devices) => {\n          return { ...devices, webcams };\n        });\n      }\n    } catch (err) {\n      console.log(\"Error in getting camera devices\", err);\n    }\n  };\n\n  const getAudioDevices = async () => {\n    try {\n      if (permissonAvaialble.current?.isMicrophonePermissionAllowed) {\n\n        let mics = await getMicrophones();\n        let speakers = await getPlaybackDevices();\n        const hasMic = mics.length > 0;\n        if (hasMic) {\n          startMuteListener();\n        }\n        setSelectedSpeaker({ id: speakers[0]?.deviceId, label: speakers[0]?.label })\n        setSelectedMic({ id: mics[0]?.deviceId, label: mics[0]?.label });\n        setDevices((devices) => {\n          return { ...devices, mics, speakers };\n        });\n      }\n    } catch (err) {\n      console.log(\"Error in getting audio devices\", err);\n    }\n  };\n\n  const ButtonWithTooltip = ({ onClick, onState, OnIcon, OffIcon }) => {\n    const btnRef = useRef();\n    return (\n      <>\n        <div>\n          <button\n            ref={btnRef}\n            onClick={onClick}\n            style={{\n              backgroundColor : \"black\",\n              borderRadius : \"50px\",\n              padding : \"10px\"\n            }}\n            // className={`rounded-full min-w-auto w-12 h-12 flex items-center justify-center \n            // ${onState ? \"bg-white\" : \"bg-red-650 text-white\"}`}\n          >\n            {onState ? (\n              <OnIcon fillcolor={onState ? \"#E72B4A\" : \"white\"} />\n            ) : (\n              <OffIcon fillcolor={onState ? \"#E72B4A\" : \"white\"} />\n            )}\n          </button>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"main-outer-container\">\n      <div className=\"inner-container-eight\">\n        <video\n          autoPlay\n          playsInline\n          muted\n          ref={videoPlayerRef}\n          controls={false}\n          style={{\n            backgroundColor: \"#1c1c1c\",\n          }}\n          className={\"video-container\"}\n        />\n\n        {!isMobile ? (\n          <>\n            <div className=\"isMobileContainer-main\">\n              {!webcamOn ? (\n                <p className=\"camera-pff-container\">\n                  The camera is off\n                </p>\n              ) : null}\n            </div>\n          </>\n        ) : null}\n\n        <div className=\"mic-container\">\n          <div className=\"innermic-container\">\n            {isMicrophonePermissionAllowed ? (\n              <ButtonWithTooltip\n                onClick={_toggleMic}\n                onState={micOn}\n                mic={true}\n                OnIcon={MicOnIcon}\n                OffIcon={MicOffIcon}\n              />\n            ) : (\n              <MicPermissionDenied />\n            )}\n\n            {isCameraPermissionAllowed ? (\n              <ButtonWithTooltip\n                onClick={_toggleWebcam}\n                onState={webcamOn}\n                mic={false}\n                OnIcon={WebcamOnIcon}\n                OffIcon={WebcamOffIcon}\n              />\n            ) : (\n              <CameraPermissionDenied />\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"meeting-inner-container\">\n          <MeetingDetailsScreen\n            participantName={participantName}\n            setParticipantName={setParticipantName}\n            videoTrack={videoTrack}\n            setVideoTrack={setVideoTrack}\n            onClickStartMeeting={onClickStartMeeting}\n            onClickJoin={async (id) => {\n              const token = await getToken();\n              const { meetingId, err } = await validateMeeting({\n                roomId: id,\n                token,\n              });\n              if (meetingId === id) {\n                setToken(token);\n                setMeetingId(id);\n                onClickStartMeeting();\n              } else {\n                toast(\n                  `${err}`,\n                  {\n                    position: \"bottom-left\",\n                    autoClose: 4000,\n                    hideProgressBar: true,\n                    closeButton: false,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"light\",\n                  }\n                );\n              }\n            }}\n            _handleOnCreateMeeting={async () => {\n              const token = await getToken();\n              const { meetingId, err } = await createMeeting({ token });\n\n              if (meetingId) {\n                setToken(token);\n                setMeetingId(meetingId);\n              }\n              return { meetingId: meetingId, err: err }\n            }}\n          />\n      </div>\n    <div>\n      <ConfirmBox\n              open={dlgMuted}\n              successText=\"OKAY\"\n              onSuccess={() => {\n                setDlgMuted(false);\n              }}\n              title=\"System mic is muted\"\n              subTitle=\"You're default microphone is muted, please unmute it or increase audio\n                  input volume from system settings.\"\n            />\n            <ConfirmBox\n              open={dlgDevices}\n              successText=\"DISMISS\"\n              onSuccess={() => {\n                setDlgDevices(false);\n              }}\n              title=\"Mic or webcam not available\"\n              subTitle=\"Please connect a mic and webcam to speak and share your video in the meeting. You can also join without them.\"\n            />\n    </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { MeetingProvider } from \"@videosdk.live/react-sdk\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { MeetingAppProvider } from \"./MeetingAppContextDef\";\nimport { MeetingContainer } from \"./meeting/MeetingContainer\";\nimport { LeaveScreen } from \"./components/screens/LeaveScreen\";\nimport { JoiningScreen } from \"./components/screens/JoiningScreen\";\nimport \"./videocallingsdk.scss\";\nimport { useParams } from \"react-router-dom\";\nimport axiosInstance from \"../config/axiosInstance\";\n\nfunction VideoCallingSDK() {\n  const [token, setToken] = useState(\"\");\n  const [meetingId, setMeetingId] = useState(\"\");\n  const [participantName, setParticipantName] = useState(\"\");\n  const [micOn, setMicOn] = useState(false);\n  const [webcamOn, setWebcamOn] = useState(false);\n  const [customAudioStream, setCustomAudioStream] = useState(null);\n  const [customVideoStream, setCustomVideoStream] = useState(null)\n  const [isMeetingStarted, setMeetingStarted] = useState(false);\n  const [isMeetingLeft, setIsMeetingLeft] = useState(false);\n  const params = useParams();\n  console.log('params : ',params?.appID)\n  const isMobile = window.matchMedia(\n    \"only screen and (max-width: 768px)\"\n  ).matches;\n\n\n\n  useEffect(() => {\n    if (isMobile) {\n      window.onbeforeunload = () => {\n        return \"Are you sure you want to exit?\";\n      };\n    }\n  }, [isMobile]);\n\n  // api to pass the meeting id , doctor id\n\n  return (\n    <>\n      <MeetingAppProvider>\n        \n      {/* <h1 className=\"text-7xl\" >thus us react</h1> */}\n        {isMeetingStarted ? (\n\n          <MeetingProvider\n            config={{\n              meetingId,\n              micEnabled: micOn,\n              webcamEnabled: webcamOn,\n              name: participantName ? participantName : \"TestUser\",\n              multiStream: true,\n              customCameraVideoTrack: customVideoStream,\n              customMicrophoneAudioTrack: customAudioStream\n            }}\n            token={token}\n            reinitialiseMeetingOnConfigChange={true}\n            joinWithoutUserInteraction={true}\n          >            \n            <MeetingContainer\n              onMeetingLeave={() => {\n                setToken(\"\");\n                setMeetingId(\"\");\n                setParticipantName(\"\");\n                setWebcamOn(false);\n                setMicOn(false);\n                setMeetingStarted(false);\n              }}\n              setIsMeetingLeft={setIsMeetingLeft}\n            />\n          </MeetingProvider>\n\n        ) : isMeetingLeft ? (\n          <LeaveScreen setIsMeetingLeft={setIsMeetingLeft} />\n        ) : (\n\n          <JoiningScreen\n            participantName={participantName}\n            setParticipantName={setParticipantName}\n            setMeetingId={setMeetingId}\n            setToken={setToken}\n            micOn={micOn}\n            setMicOn={setMicOn}\n            webcamOn={webcamOn}\n            setWebcamOn={setWebcamOn}\n            customAudioStream={customAudioStream}\n            setCustomAudioStream={setCustomAudioStream}\n            customVideoStream={customVideoStream}\n            setCustomVideoStream={setCustomVideoStream}\n            onClickStartMeeting={() => {\n              setMeetingStarted(true);\n            }}\n            startMeeting={isMeetingStarted}\n            setIsMeetingLeft={setIsMeetingLeft}\n          />\n        )}\n      </MeetingAppProvider>\n    </>\n  );\n}\n\nexport default VideoCallingSDK;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport io from \"socket.io-client\";\nimport CustomTextField from \"../components/CustomTextField\";\nimport CustomButton from \"../components/CustomButton\";\nimport \"./chatroom.scss\";\nimport { AppointmentNavbar } from \"../PatientDashboard/PatientAppointment/PatientCards\";\nimport FileUploadOutlinedIcon from '@mui/icons-material/FileUploadOutlined';\nimport SendOutlinedIcon from '@mui/icons-material/SendOutlined';\n\nconst ChatRoom = () => {\n    const [socket, setSocket] = useState(null);\n    const [roomId, setRoomId] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [file, setFile] = useState(null); // State to store the selected file\n    const [messages, setMessages] = useState([]);\n    const [error, setError] = useState(null);\n    const socketRef = useRef(null);\n    const [fileName , setFileName] = useState(\"\")\n    console.log(\"File Name : \",fileName)\n    const handleJoinRoom = useCallback(\n        (e) => {\n            e.preventDefault();\n            if (socketRef.current && roomId.trim() !== \"\" && name.trim() !== \"\") {\n                socketRef.current.emit(\"join\", { roomId, name });\n                window.alert(`You joined room ${roomId}`);\n            }\n        },\n        [roomId, name],\n    );\n\n    // const handleMessageAndFileSend = e => {\n    //     if(fileName ===  \"\" || fileName === undefined){\n    //         (e) => {\n    //             e.preventDefault();\n    //             if (socketRef.current && message.trim() !== \"\") {\n    //                 socketRef.current.emit(\"message\", { roomId, message });\n    //                 setMessage(\"\");\n    //             }\n    //         },\n    //         [roomId, message],\n    //     }else{\n            \n    //     }\n    // }\n\n    const handleSend = useCallback(\n        (e) => {\n            e.preventDefault();\n            \n            if (socketRef.current) {\n                if (file) {\n                    const reader = new FileReader();\n                    reader.onload = (event) => {\n                        socketRef.current.emit(\"file\", {\n                            roomId,\n                            file: { name: file.name, data: event.target.result },\n                        });\n                    };\n                    reader.readAsDataURL(file);\n                    setFile(null);\n                } else if (message.trim() !== \"\") {\n                    socketRef.current.emit(\"message\", { roomId, message });\n                    setMessage(\"\");\n                    document.getElementById(\"text-box\").value = \"\"\n                }\n            }\n        },\n        [roomId, message, file],\n    );\n\n    // const handleMessageSend = useCallback(\n    //     (e) => {\n    //         e.preventDefault();\n    //         if (socketRef.current && message.trim() !== \"\") {\n    //             socketRef.current.emit(\"message\", { roomId, message });\n    //             setMessage(\"\");\n    //         }\n    //     },\n    //     [roomId, message],\n    // );\n\n    // const handleFileSend = useCallback(\n    //     (e) => {\n    //         e.preventDefault();\n    //         if (socketRef.current && file) {\n    //             // If file is selected, emit \"file\" event to server with file data\n    //             const reader = new FileReader();\n    //             reader.onload = (event) => {\n    //                 socketRef.current.emit(\"file\", {\n    //                     roomId,\n    //                     file: { name: file.name, data: event.target.result },\n    //                 });\n    //             };\n    //             reader.readAsDataURL(file);\n    //             setFile(null);\n    //         }\n    //     },\n    //     [roomId, file],\n    // );\n\n    useEffect(() => {\n        socketRef.current = io(\"http://localhost:4001\");\n\n        socketRef.current.on(\"connect\", () => {\n            setError(null);\n        });\n\n        socketRef.current.on(\"connect_error\", (err) => {\n            setError(`Socket connection error: ${err.message}`);\n        });\n\n        // Listen for incoming messages\n        socketRef.current.on(\"message\", (data) => {\n            // Update the messages state if needed\n            setMessages((prevMessages) => [...prevMessages, { ...data, time: getTime() }]);\n        });\n\n        // Listen for userList messages\n        socketRef.current.on(\"userList\", (userListMessage) => {\n            // Show the userListMessage as an alert\n            window.alert(userListMessage);\n        });\n\n        // Listen for file messages\n        socketRef.current.on(\"file\", ({ sender, fileName }) => {\n            // Display the file name as a message\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { sender, message: `File shared by ${sender}: `, fileName, time: getTime() },\n            ]);\n        });\n\n        // Clean up on component unmount\n        return () => {\n            socketRef.current.off(\"connect\");\n            socketRef.current.off(\"connect_error\");\n            socketRef.current.off(\"message\");\n            socketRef.current.off(\"userList\");\n            socketRef.current.off(\"file\");\n            socketRef.current.disconnect();\n        };\n    }, []);\n\n    const handleFileChange = (event) => {\n        setFileName(event.target.files[0]?.name)\n        setFile(event.target.files[0]);\n    };\n\n    const handleDisconnect = () => {\n        if (socketRef.current) {\n            socketRef.current.disconnect();\n            setError(null);\n            window.alert(`You disconnected from the room`);\n        }\n    };\n\n    // Function to get current time in 12-hour format\n    const getTime = () => {\n        const date = new Date();\n        let hours = date.getHours();\n        const minutes = date.getMinutes();\n        const ampm = hours >= 12 ? \"PM\" : \"AM\";\n        hours = hours % 12 || 12;\n        const timeString = `${hours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n        return timeString;\n    };\n\n    return (\n        <Box sx={{ display: \"flex\", width: \"100%\", height: \"95vh\" , msOverflowY : \"hidden\" }}>\n            <AppointmentNavbar />\n            <Box\n                component={\"div\"}\n                sx={{\n                    position: \"relative\",\n                    top: \"4em\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    height: \"100%\",\n                }}\n            >\n                <Box className={\"chat-container-one\"} >\n\n                </Box>\n                <div className={\"chat-container-two\"}>\n                    {error && <p>{error}</p>}\n                    <CustomTextField\n                        placeholder={\"Enter your name \"}\n                        type={\"text\"}\n                        defaultValue={name}\n                        onChange={(e) => setName(e.target.value)}\n                        label=\"Name\"\n                        helperText={\"\"}\n                    />\n\n                    <CustomTextField\n                        placeholder={\"Enter room ID\"}\n                        type={\"text\"}\n                        defaultValue={roomId}\n                        onChange={(e) => setRoomId(e.target.value)}\n                        label=\"Enter Room ID\"\n                        helperText={\"\"}\n                    />\n\n                    <CustomButton label=\"Join Room\" handleClick={handleJoinRoom} />\n\n                    {/* for displaying messages */}\n                    <div style={{border : \"1px solid black\"}} className=\"text-message-container\" >\n                        {/* to display doctor name date and time */}\n                        <div>\n\n                        </div>\n                        {/* to display messages */}\n                        {messages.map((msg, index) => {\n                            console.log(\"MSGGGG : \",msg)\n                            return  (\n                            <div key={index}>\n                                <strong>{msg.name}: </strong>\n                                <span>{msg.message}</span>\n                                <span> [{msg.time}]</span>\n                                {msg.fileName && (\n                                    <a\n                                        href={`http://localhost:8080/uploads/${msg.fileName}`}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        View File\n                                    </a>\n                                )}\n                            </div>\n                        )\n                        }\n                        )\n                        }\n                    </div>\n\n\n                    <Box typeof={\"div\"} className={\"message-btn-container\"} >\n                        {/* for sending messages */}\n                    <span>\n                        <CustomTextField\n                            type=\"text\"\n                            placeholder=\"Enter message\"\n                            id=\"text-box\"\n                            defaultValue={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                            helperText={\"\"}\n                            label={\"\"}\n                        />\n                        {/* <SendOutlinedIcon onClick={handleMessageSend} /> */}\n                        <CustomButton className={\"icon-button\"} label=\"\" leftIcon={<SendOutlinedIcon/>} handleClick={handleSend} />\n                        {/* <CustomButton className={\"icon-button\"} label=\"\" leftIcon={<SendOutlinedIcon/>} handleClick={handleMessageSend} /> */}\n\n                        \n                    </span>\n                    {/*  for sending files */}\n                    <span>\n                            <CustomTextField\n                                id={\"fileInput\"}\n                                type={\"file\"}\n                                onChange={handleFileChange}\n                                helperText={\"\"}\n                            />\n                        <label for={\"fileInput\"} id={\"icon\"} >\n                        {fileName}\n                            <FileUploadOutlinedIcon/>\n                        </label>\n                        \n                        {/* <CustomButton label={\"Send File\"}  className={\"icon-button\"} handleClick={handleSend} /> */}\n                        {/* <CustomButton label={\"Send File\"}  className={\"icon-button\"} handleClick={handleFileSend} /> */}\n\n                    </span>\n                    {/* disconnect call */}\n                    {/* <span>\n                        <CustomButton label=\"Disconnect\" handleClick={handleDisconnect} />\n                    </span> */}\n                    \n                    </Box>\n                </div>\n            </Box>\n        </Box>\n    );\n};\n\nexport default ChatRoom;\n","import {\n    Box,\n    Table,\n    TextField,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Menu,\n    MenuItem,\n    Skeleton,\n    Paper,\n    TablePagination,\n    Typography,\n} from \"@mui/material\"; // Added missing imports\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport \"./adminlab.scss\";\nimport CustomButton from \"../../../../../components/CustomButton\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport axiosInstance from \"../../../../../config/axiosInstance\";\nimport NotFound from \"../../../../../components/NotFound\";\nimport { Testlist } from \"./Testlist\";\nimport pen from \"../../../../../static/images/DrImages/Pen.svg\";\nimport CustomModal from \"../../../../../components/CustomModal\";\nimport CustomTextField from \"../../../../../components/CustomTextField\";\nimport CustomSnackBar from \"../../../../../components/CustomSnackBar\";\nimport NoAppointmentCard from \"../../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst AdminLabDetail = () => {\n    const navigate = useNavigate();\n    const params = useParams();\n    const [data1, setData1] = useState([]);\n    const [test, setTest] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const hcf_id = localStorage.getItem(\"hcfadmin_suid\");\n    const exam_id = params.labId;\n    const [page, setPage] = useState(0); // Current page\n    const [rowsPerPage, setRowsPerPage] = useState(5); // Rows per page\n    const [openDialog, setOpenDialog] = useState(false);\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n    const [isFieldsFilled, setIsFieldsFilled] = useState(false);\n    const [testdata, setTestData] = useState({\n        lab_exam_id: exam_id,\n        hcf_id: localStorage.getItem(\"hcfadmin_suid\"),\n        sub_exam_name: null,\n        test_subexam_price: null,\n        test_description: null,\n    });\n    const [isEditFilled, setIsEditFilled] = useState(false);\n    const [editdata, setEditdata] = useState({\n        sub_exam_id: null,\n        lab_exam_id: exam_id,\n        hcf_id: localStorage.getItem(\"hcfadmin_suid\"),\n        sub_exam_name: null,\n        test_subexam_price: null,\n        test_description: null,\n    });\n    const [snackType, setSnackType] = useState(\"\");\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackOpen, setSnackOpen] = useState(false);\n    const [selectedTest, setSelectedTest] = useState(null);\n\n    console.log(\"this is prammmmsssseeeee\", params);\n    // Fetch lab details\n    const fetchData1 = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.get(\n                `/sec/hcf/getHcfSingleLab/${hcf_id}/${exam_id}`,\n            );\n            console.log(\"response from : \", response?.data?.response);\n            setData1(response?.data?.response);\n        } catch (error) {\n            console.error(\"Error fetching lab data:\", error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData1();\n    }, []);\n\n    // Get test list\n    const getTests = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.get(`/sec/hcf/getHcfTests/${hcf_id}/${exam_id}`);\n            console.log(\"response from : \", response?.data?.response);\n            setTest(response?.data?.response);\n        } catch (error) {\n            console.error(\"Error fetching test data:\", error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        getTests();\n    }, [hcf_id, exam_id]);\n\n    // creating test post api\n\n    useEffect(() => {\n        checkFields(testdata); // Ensure fields are checked on each testdata update\n    }, [testdata]);\n\n    const fetchTestData = async () => {\n        setSnackOpen(false);\n        try {\n            await axiosInstance.post(`/sec/hcf/addTests`, JSON.stringify(testdata), {\n                headers: { Accept: \"Application/json\" },\n            });\n            await setSnackType(\"success\");\n            await setSnackMessage(\"Test Crested Succesfully\");\n            setSnackOpen(true);\n            setTimeout(() => setOpenDialog(false), 3000);\n        } catch (error) {\n            alert(\"Fill the details properly\");\n            console.error(error.response);\n            await setSnackType(\"error\");\n            await setSnackMessage(\"some error occured!!!\");\n            setSnackOpen(true);\n        }\n    };\n    const checkFields = (formData) => {\n        const isFilled =\n            formData.lab_exam_id &&\n            formData.sub_exam_name &&\n            formData.test_subexam_price &&\n            formData.test_description &&\n            formData.hcf_id; // Check if hcf_id is set\n\n        setIsFieldsFilled(isFilled);\n    };\n\n    // Handle pagination\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0); // Reset to first page\n    };\n\n    const handleEdit = (data) => {\n        setSelectedTest(data); // Set the selected test data\n        setEditdata({\n            sub_exam_id: String(data.sub_exam_id), // Convert sub_exam_id to a string\n            lab_exam_id: exam_id,\n            hcf_id: hcf_id,\n            sub_exam_name: data.sub_exam_name,\n            test_subexam_price: String(data.test_subexam_price),\n            test_description: data.test_description,\n        });\n        console.log(\"edit clicked for exam:\", testdata);\n        setOpenEditDialog(true); // Open the modal\n``    };\n    const checkEditFields = (formData) => {\n        const isFilled =\n            formData.sub_exam_id &&\n            formData.lab_exam_id &&\n            formData.sub_exam_name &&\n            formData.test_subexam_price &&\n            formData.test_description &&\n            formData.hcf_id; // Check if hcf_id is set\n\n        setIsEditFilled(isFilled);\n    };\n\n    // creating test post api\n\n    useEffect(() => {\n        checkEditFields(editdata); // Ensure fields are checked on each testdata update\n    }, [editdata]);\n\n    const UpdateLab = async () => {\n        setSnackOpen(false);\n        try {\n            await axiosInstance.post(`/sec/hcf/addTests`, JSON.stringify(editdata), {\n                headers: { Accept: \"Application/json\" },\n            });\n            await setSnackType(\"success\");\n            await setSnackMessage(\"Test Update Succesfully\");\n            setSnackOpen(true);\n            setTimeout(() => setOpenEditDialog(false), 3000);\n        } catch (error) {\n            alert(\"Fill the details properly\");\n            console.error(error.response);\n            await setSnackType(\"error\");\n            await setSnackMessage(\"some error occured!!!\");\n            setSnackOpen(true);\n        }\n    };\n\n    const handleDelete = async (data) => {\n        if (window.confirm(`Are you sure you want to delete \"${data.sub_exam_name}\"?`)) {\n            setSnackOpen(false);\n            try {\n                console.log(\"Deleting test with sub_exam_id:\", data.sub_exam_id);\n                await axiosInstance.delete(`/sec/hcf/deleteTest/${hcf_id}/${exam_id}/${data.sub_exam_id}`);\n                \n                await setSnackType(\"success\");\n                await setSnackMessage(\"Test deleted successfully!\");\n                setSnackOpen(true);\n                \n                // Refresh the test list after successful deletion\n                getTests();\n            } catch (error) {\n                console.error(\"Error deleting test:\", error);\n                await setSnackType(\"error\");\n                await setSnackMessage(\"Error deleting test!\");\n                setSnackOpen(true);\n            }\n        }\n    };\n    return (\n        <Box className={\"adminlabs_main_container\"}>\n            <CustomSnackBar type={snackType} message={snackMessage} isOpen={snackOpen} />\n            {/*---------------- Back Button --------------------- */}\n            <Box className={\"flex-space-between\"}>\n                <CustomButton\n                    label=\"Back\"\n                    isTransaprent={true}\n                    leftIcon={<ChevronLeftIcon />}\n                    buttonCss={{ border: \"none\" }}\n                    handleClick={() => navigate(-1)}\n                />\n            </Box>\n\n            {/* ---------------- First Container --------------------- */}\n            <Box\n            className=\"first-container\"\n            sx={{\n                backgroundColor: \"white\",\n                borderRadius: \"10px\",\n                padding: \"30px\",\n                marginBottom: \"20px\",\n                border: \"1px solid #e0e0e0\",\n            }}\n        >\n            <Box className={\"working-days-container heading-container\"}>\n                <Box component={\"div\"} className={\"text-align-left\"}>\n                    <h4>Department</h4>\n                    {loading ? (\n                        <Skeleton variant=\"text\" width={150} height={30} />\n                    ) : (\n                        <h2>{data1[0]?.lab_department_name}</h2>\n                    )}\n                </Box>\n                <Box\n                    component={\"div\"}\n                    className={\"text-align-left description-container\"}\n                    sx={{\n                        paddingTop: \"30px\",\n                    }}\n                >\n                    <h4>Description</h4>\n                    {loading ? (\n                        <Skeleton variant=\"text\" width=\"100%\" height={60} />\n                    ) : (\n                        <p>{data1[0]?.lab_description}</p>\n                    )}\n                </Box>\n            </Box>\n\n            <Box className={\"working-days-container first-container-inner-two\"}>\n                <Box component={\"div\"} className={\"text-align-right\"}>\n                    <h2>Working Days</h2>\n                    {loading ? (\n                        <Skeleton variant=\"text\" width={120} height={25} />\n                    ) : (\n                        <p>\n                            {data1[0]?.lab_working_days_from} and {data1[0]?.lab_working_days_to}\n                        </p>\n                    )}\n                </Box>\n\n                <Box\n                    component={\"div\"}\n                    className={\"text-align-right\"}\n                    sx={{\n                        paddingTop: \"30px\",\n                    }}\n                >\n                    <h2>Working Time</h2>\n                    {loading ? (\n                        <Skeleton variant=\"text\" width={120} height={25} />\n                    ) : (\n                        <p>\n                            {data1[0]?.lab_working_time_from} to {data1[0]?.lab_working_time_to}\n                        </p>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n\n            {/* ---------------- Table Container ---------------------- */}\n            <Box className={\"table-container\"}>\n                <Box className={\"table-container-inner-one\"}>\n                    <Box>\n                        <h2>Listed Tests</h2>\n                    </Box>\n                    <Box>\n                        <CustomButton\n                            buttonCss={{ borderRadius: \"25px\", fontFamily: \"Poppins\" }}\n                            isTransaprent={true}\n                            label={\"Create Test\"}\n                            handleClick={() => setOpenDialog(true)}\n                        />\n                        {/* model start from here */}\n                        <CustomModal\n                            isOpen={openDialog}\n                            conditionOpen={setOpenDialog}\n                            disableBackdropClick={true}\n                            title={\n                                <div style={{ textAlign: \"center\" }}>\n                                    <h4 style={{ fontWeight: \"bold\", margin: \"0\" }}>Add Test</h4>\n                                    <h6 style={{ color: \"gray\", margin: \"0\" }}>\n                                        Create a Test here\n                                    </h6>\n                                </div>\n                            }\n                        >\n                            <Fragment>\n                                {/* Input fields for Test Name, Department, and Price */}\n                                <Box\n                                    component=\"form\"\n                                    sx={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        gap: \"15px\",\n                                        marginTop: \"20px\",\n                                    }}\n                                >\n                                    <CustomTextField\n                                        placeholder={\"Enter Test Name\"}\n                                        label=\"Test Name\"\n                                        variant=\"standard\"\n                                        fullWidth\n                                        helperText={\"\"}\n                                        defaultValue={testdata?.sub_exam_name}\n                                        onInput={(e) =>\n                                            setTestData({\n                                                ...testdata,\n                                                sub_exam_name: e.target.value,\n                                            })\n                                        }\n                                    />\n                                    <CustomTextField\n                                        helperText={\"\"}\n                                        label=\"Department\"\n                                        variant=\"standard\"\n                                        fullWidth\n                                        value\n                                        defaultValue={data1[0]?.lab_department_name}\n                                        isDisabled={true}\n                                    />\n                                    <CustomTextField\n                                        type=\"number\"\n                                        placeholder={\"Enter Test Price\"}\n                                        label=\"Price\"\n                                        variant=\"standard\"\n                                        fullWidth\n                                        helperText={\"\"}\n                                        defaultValue={testdata?.test_subexam_price}\n                                        onInput={(e) =>\n                                            setTestData({\n                                                ...testdata,\n                                                test_subexam_price: e.target.value,\n                                            })\n                                        }\n                                    />\n                                    {/* Textarea for Description */}\n                                    <CustomTextField\n                                        label=\"Description\"\n                                        placeholder={\"Enter Test Description\"}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        multiline\n                                        helperText={\"\"}\n                                        defaultValue={testdata?.test_description}\n                                        rows={4} // Set the height of the textarea\n                                        onInput={(e) =>\n                                            setTestData({\n                                                ...testdata,\n                                                test_description: e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Box>\n\n                                {/* Create button */}\n                                <CustomButton\n                                    buttonCss={{\n                                        borderRadius: \"25px\",\n                                        fontFamily: \"Poppins\",\n                                        marginTop: \"20px\",\n                                    }}\n                                    isDisabled={!isFieldsFilled}\n                                    label={\"Create\"}\n                                    handleClick={() => {\n                                        fetchTestData();\n                                    }}\n                                />\n                            </Fragment>\n                        </CustomModal>\n                        {/*edit model start from here */}\n                        <CustomModal\n                            isOpen={openEditDialog}\n                            conditionOpen={setOpenEditDialog}\n                            disableBackdropClick={true}\n                            title={\n                                <div style={{ textAlign: \"center\" }}>\n                                    <h4 style={{ fontWeight: \"bold\", margin: \"0\" }}>Edit Test</h4>\n                                    <h6 style={{ color: \"gray\", margin: \"0\" }}>Edit Test here</h6>\n                                </div>\n                            }\n                        >\n                            <Fragment>\n                                {/* Input fields for Test Name, Department, and Price */}\n                                <Box\n                                    component=\"form\"\n                                    sx={{\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                        gap: \"15px\",\n                                        marginTop: \"20px\",\n                                    }}\n                                >\n                                    <CustomTextField\n                                        placeholder={\"Enter Test Name\"}\n                                        label=\"Test Name\"\n                                        variant=\"standard\"\n                                        fullWidth\n                                        helperText={\"\"}\n                                        defaultValue={editdata?.sub_exam_name}\n                                        onInput={(e) =>\n                                            setEditdata({\n                                                ...editdata,\n                                                sub_exam_name: e.target.value,\n                                            })\n                                        }\n                                    />\n                                    <CustomTextField\n                                        helperText={\"\"}\n                                        label=\"Department\"\n                                        variant=\"standard\"\n                                        fullWidth\n                                        value\n                                        defaultValue={data1[0]?.lab_department_name}\n                                        isDisabled={true}\n                                    />\n                                    <CustomTextField\n                                        type=\"number\"\n                                        placeholder={\"Enter Test Price\"}\n                                        label=\"Price\"\n                                        variant=\"standard\"\n                                        fullWidth\n                                        helperText={\"\"}\n                                        defaultValue={editdata?.test_subexam_price}\n                                        onInput={(e) =>\n                                            setEditdata({\n                                                ...editdata,\n                                                test_subexam_price: e.target.value,\n                                            })\n                                        }\n                                    />\n                                    {/* Textarea for Description */}\n                                    <CustomTextField\n                                        label=\"Description\"\n                                        placeholder={\"Enter Test Description\"}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        multiline\n                                        helperText={\"\"}\n                                        defaultValue={editdata?.test_description}\n                                        rows={4} // Set the height of the textarea\n                                        onInput={(e) =>\n                                            setEditdata({\n                                                ...editdata,\n                                                test_description: e.target.value,\n                                            })\n                                        }\n                                    />\n                                </Box>\n\n                                {/* Create button */}\n                                <CustomButton\n                                    buttonCss={{\n                                        borderRadius: \"25px\",\n                                        fontFamily: \"Poppins\",\n                                        marginTop: \"20px\",\n                                    }}\n                                    isDisabled={!isEditFilled}\n                                    label={\"Update\"}\n                                    handleClick={() => {\n                                        UpdateLab();\n                                    }}\n                                />\n                            </Fragment>\n                        </CustomModal>\n                    </Box>\n                </Box>\n\n                <TableContainer component={Paper} style={{ background: \"white\", padding: \"20px\" }}>\n                    <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow style={{ fontWeight: \"bold\" }}>\n                                <TableCell>Name & Details</TableCell>\n                                <TableCell align=\"right\">Department</TableCell>\n                                <TableCell align=\"right\">Pricing</TableCell>\n                                <TableCell align=\"right\">Action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {loading ? (\n                                        Array.from(new Array(rowsPerPage)).map((_, index) => (\n                                            <TableRow key={index}>\n                                                <TableCell colSpan={5} align=\"center\">\n                                                    <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\n                                                </TableCell>\n                                            </TableRow>\n                                        ))\n                            ) : test.length === 0 ? (\n                                <TableRow>\n                                    <TableCell colSpan={4} align=\"center\">\n                                        <NoAppointmentCard text_one={\"No Data Found\"} />\n                                    </TableCell>\n                                </TableRow>\n                            ) : (\n                                test\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                    .map((data, index) => (\n                                        <TableRow\n                                            key={`${data.sub_exam_id}-${index}`}\n                                            sx={{\n                                                \"&:last-child td, &:last-child th\": {\n                                                    border: 0,\n                                                },\n                                            }}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                <Testlist\n                                                    name={`${data.sub_exam_name}`}\n                                                    staff_id={`${data.test_description}`}\n                                                />\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"right\"\n                                                style={{\n                                                    color: \"#939094\",\n                                                    fontFamily: \"Poppins\",\n                                                }}\n                                            >\n                                                {data.exam_name}\n                                            </TableCell>\n                                            <TableCell\n                                                align=\"right\"\n                                                style={{\n                                                    color: \"#939094\",\n                                                    fontFamily: \"Poppins\",\n                                                }}\n                                            >\n                                                ₹{data.test_subexam_price}\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Box sx={{ display: \"flex\", gap: 1, justifyContent: \"flex-end\" }}>\n                                                    <CustomButton\n                                                        buttonCss={{ borderRadius: \"6.25rem\" }}\n                                                        label={<img src={pen} alt=\"Edit\" />}\n                                                        isTransaprent\n                                                        handleClick={() => handleEdit(data)} // Pass the clicked test's data to handleEdit\n                                                    />\n                                                    <CustomButton\n                                                        buttonCss={{ \n                                                            borderRadius: \"6.25rem\",\n                                                            backgroundColor: \"#ff4444\",\n                                                            color: \"white\",\n                                                            minWidth: \"40px\",\n                                                            height: \"40px\",\n                                                            \"&:hover\": {\n                                                                backgroundColor: \"#cc3333\"\n                                                            }\n                                                        }}\n                                                        label=\"×\"\n                                                        handleClick={() => handleDelete(data)}\n                                                    />\n                                                </Box>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))\n                            )}\n                        </TableBody>\n                    </Table>\n                    <TablePagination\n                    rowsPerPageOptions={[1, 5, 10, 25]}\n                    component=\"div\"\n                    count={test.length} // Assuming the pagination is for tests\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                    labelRowsPerPage=\"Rows per page:\"\n                />\n                </TableContainer>\n\n                \n            </Box>\n        </Box>\n    );\n};\n\nexport default AdminLabDetail;\n","import { Box, Skeleton } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\nimport ContainerOne from \"./ContainerOne\";\nimport ContainerTwo from \"./ContainerTwo\";\nimport ContainerThree from \"./ContainerThree\";\nimport ContainerFour from \"./ContainerFour\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport { formatDateDay, formatTime } from \"../../constants/const\";\n\nconst HcfDrDetailsCard = () => {\n    const params = useParams();\n    const ID = params.hcddocid;\n    const [drCardData, setDrCardData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [doctorLicense, setDoctorLicense] = useState([]);\n    const [review, setReview] = useState();\n\n    const [doctorAward, setDoctorAward] = useState([]);\n    const [doctorExperience, setDoctorExperience] = useState([]);\n    const [doctorTotalconsultations, setDoctorTotalconsultations] = useState();\n    const [doctorAverageRating, setDoctorAverageRating] = useState();\n    const [doctorTotalReviews, setDoctorTotalReviews] = useState();\n    const [doctorTotalExperience, setDoctorTotalExperience] = useState(); // loading state for skeletons\n\n    const fetchDataNew = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.post(\n                `/sec/patient/DashboardDoctordetailsbyId`,\n                JSON.stringify({ suid: ID }),\n            );\n            setDrCardData(response.data.response);\n            setDoctorLicense(response?.data?.doctorLicense),\n                setDoctorAward(response?.data?.doctorAwards),\n                setDoctorExperience(response?.data?.doctorExperience);\n            setReview(response?.data?.doctorReviewData);\n            setDoctorTotalconsultations(response?.data?.doctorTotalconsultations);\n            setDoctorAverageRating(response?.data?.doctorAverageRating);\n            setDoctorTotalReviews(response?.data?.doctorTotalReviews);\n            setDoctorTotalExperience(response?.data?.doctorTotalExperience);\n        } catch (error) {\n            console.log(error.response);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchDataNew();\n    }, []);\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    return (\n        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n            {/* 1st Container */}\n            {loading ? (\n                <Skeleton\n                    variant=\"rectangular\"\n                    width=\"100%\"\n                    height={128}\n                    sx={{ borderRadius: 2, mb: 2 }}\n                />\n            ) : (\n                <ContainerOne\n                    Fname={drCardData?.first_name}\n                    Mname={drCardData?.middle_name}\n                    Lname={drCardData?.last_name}\n                    Qualification={drCardData?.department_name}\n                    DrImage={drCardData?.profile_picture}\n                    DrId={drCardData?.suid}\n                    hcfDoc={true}\n                    hospital={drCardData?.hospital_org}\n                    worktime={`${formatDateDay(drCardData?.working_days_start)} - ${formatDateDay(\n                        drCardData?.working_days_end,\n                    )} | ${formatTime(drCardData?.working_time_start)} to ${formatTime(\n                        drCardData?.working_time_end,\n                    )}`}\n                />\n            )}\n\n            {/* 2nd Container */}\n            {loading ? (\n                <Skeleton\n                    variant=\"rectangular\"\n                    width=\"100%\"\n                    height={128}\n                    sx={{ borderRadius: 2, mb: 2 }}\n                />\n            ) : (\n                <ContainerTwo\n                    doctorAverageRating={doctorAverageRating}\n                    doctorTotalconsultations={doctorTotalconsultations}\n                    doctorTotalReviews={doctorTotalReviews}\n                    doctorTotalExperience={doctorTotalExperience}\n                    isLoading={loading} // Pass isLoading prop to Container1\n                />\n            )}\n\n            {/* 3rd Container */}\n            {loading ? (\n                <Skeleton\n                    variant=\"rectangular\"\n                    width=\"100%\"\n                    height={128}\n                    sx={{ borderRadius: 2, mb: 2 }}\n                />\n            ) : (\n                <ContainerThree\n                    review={review}\n                    description={drCardData?.description}\n                    isLoading={loading}\n                />\n            )}\n\n            {/* 4th Container */}\n            {loading ? (\n                <Skeleton\n                    variant=\"rectangular\"\n                    width=\"100%\"\n                    height={200}\n                    sx={{ borderRadius: 2, mb: 2 }}\n                />\n            ) : (\n                <ContainerFour\n                    Qualification={drCardData?.qualification}\n                    YearOfQualification={drCardData?.qualified_year}\n                    RegDate={drCardData?.reg_date}\n                    StateReg={drCardData?.state_reg_number}\n                    CountryReg={drCardData?.country_reg_number}\n                    University={drCardData?.university_name}\n                    doctorLicense={doctorLicense}\n                    doctorAward={doctorAward}\n                    doctorExperience={doctorExperience}\n                />\n            )}\n        </Box>\n    );\n};\n\nconst useStyles = makeStyles({\n    html: {\n        background: \"#ffff\",\n    },\n    drname: {\n        color: \"#313033\",\n        fontFamily: \"Poppins\",\n        fontSize: \"20px\",\n        fontStyle: \"normal\",\n        fontWeight: \"900\",\n        lineHeight: \"30px\",\n    },\n    specialist: {\n        fontFamily: \"Poppins\",\n        fontSize: \"16px\",\n        fontStyle: \"normal\",\n        fontWeight: \"400\",\n        lineHeight: \"24px\",\n    },\n    cardContainer: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n    },\n    BookAppointmentContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    BookAppointmentContainerDetails: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-end\",\n    },\n    fourthContainer: {\n        width: \"100%\",\n        border: \"1px solid #E6E1E5\",\n        display: \"flex\",\n        borderRadius: \"8px\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        marginTop: \"1%\",\n    },\n    textField: {\n        fontFamily: \"Poppins\",\n        fontSize: \"30px\",\n        fontStyle: \"normal\",\n        fontWeight: \"500\",\n        lineHeight: \"30px\",\n        color: \"#313033\",\n        padding: \"2% 0 1% 1%\",\n    },\n    fourthInnerContainer: {\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"flex-start\",\n        padding: \"1%\",\n    },\n    logoDesign: {\n        height: \"70px\",\n        width: \"70px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"50px\",\n        backgroundColor: \"#FDEAED\",\n    },\n});\n\nexport default HcfDrDetailsCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { AppointmentNavbar } from \"../../PatientDashboard/PatientAppointment/PatientCards\";\nimport DoctorAppointmentNavbar from \"../../DoctorModule/CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar\";\nimport CustomButton from \"../../components/CustomButton\";\n\nconst Home = ({ socket }) => {\n    const navigate = useNavigate();\n    const { user: paramUser, roomID: paramRoomID, appointment_id: appId } = useParams();\n    const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || paramUser || \"\");\n    const [roomID, setRoomID] = useState(localStorage.getItem(\"roomID\") || paramRoomID || \"\");\n    const [appointment_id, setAppointment_id] = useState( appId || \"\");\n    const user = localStorage.getItem(\"signUp\") || \"\";\n    let doctorId = 101010\n    useEffect(() => {\n        // socket.emit(\"endCall\", { userName, roomID }); // Notify server to clean up\n    }, [userName, roomID]);\n\n    const handleSubmit = () => {\n        if (userName && roomID) {\n            localStorage.setItem(\"userName\", userName);\n            localStorage.setItem(\"roomID\", roomID);\n            socket.emit(\"joinRoom\", { userID: userName, roomID , doctorId : '', appointment_id });\n            // navigate(`/patientdashboard/appointment/chats/${roomID}`);\n        }\n\n        userName && roomID\n            ? user === \"patient\"\n           // chats/:user/:roomID/:appointment_id\n                ? navigate(`/patientdashboard/appointment/chats/${roomID}/${appointment_id}`)\n                : user === \"doctor\"\n                ? navigate(`/doctordashboard/doctorAppointment/chats/${roomID}/${appointment_id}`)\n                : alert(\"Both Username and Room ID are required.\")\n            : alert(\"Both Username and Room ID are required.\");\n    };\n\n    return (\n        <Box sx={{ display: \"flex\", width: \"95%\", height: \"95vh\" }} className=\"upcoming\">\n            {user === \"doctor\" ? (\n                <DoctorAppointmentNavbar />\n            ) : (\n                user === \"patient\" && <AppointmentNavbar />\n            )}\n            <Box\n                sx={{\n                    flex: 1,\n                    position: \"relative\",\n                    top: \"4em\",\n                    border: \"1px solid #E6E1E5\",\n                    borderRadius: \"8px\",\n                    p: 2,\n                    ml: 2,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                }}\n            >\n                <p>\n                    User Name : {userName} Room Id : {roomID}\n                </p>\n                <CustomButton label=\"Join\" handleClick={handleSubmit} />\n            </Box>\n        </Box>\n    );\n};\n\nexport default Home;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Box } from \"@mui/material\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { AppointmentNavbar } from \"../../Dashboard/PatientAppointment/PatientCards\";\n// import DoctorAppointmentNavbar from \"../../DoctorModule/CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar\";\n// import CustomButton from \"../../components/CustomButton\";\n\n// const Home = ({ socket }) => {\n//     const navigate = useNavigate();\n//     const { user: paramUser, roomID: paramRoomID } = useParams();\n\n//     const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || paramUser || \"\");\n//     const [roomID, setRoomID] = useState(localStorage.getItem(\"roomID\") || paramRoomID || \"\");\n//     const [user, setUser] = useState(localStorage.getItem(\"signUp\") || \"\");\n\n//     useEffect(() => {\n//         if (userName && roomID) joinRoom(roomID, userName);\n//     }, [userName, roomID]);\n\n//     const joinRoom = (roomID, userName) => {\n//         localStorage.setItem(\"userName\", userName);\n//         localStorage.setItem(\"roomID\", roomID);\n//         socket.emit(\"joinRoom\", { userID: userName, roomID });\n//         navigate(`/patientdashboard/appointment/chats/${roomID}`);\n//     };\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         userName && roomID ? joinRoom(roomID, userName) : alert(\"Both Username and Room ID are required.\");\n//     };\n\n//     return (\n//         <Box sx={{ display: \"flex\", width: \"95%\", height: \"95vh\" }} className=\"upcoming\">\n//             {user === \"doctor\" ? <DoctorAppointmentNavbar /> : user === \"patient\" ? <AppointmentNavbar /> : null}\n//             <Box sx={{ position: \"relative\", top: \"4em\", width: \"100%\", display: \"flex\", height: \"100%\" }}>\n//                 <Box sx={{ width: \"100%\", height: \"100%\" }}>\n//                     <Box sx={{ width: \"100%\", height: \"100%\", border: \"1px solid #E6E1E5\", borderRadius: \"8px\", padding: \"2%\", marginLeft: \"2%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n//                             <CustomButton label=\"SIGN IN\" handleClick={handleSubmit} />\n//                     </Box>\n//                 </Box>\n//             </Box>\n//         </Box>\n//     );\n// };\n\n// export default Home;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Box } from \"@mui/material\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { AppointmentNavbar } from \"../../Dashboard/PatientAppointment/PatientCards\";\n// import DoctorAppointmentNavbar from \"../../DoctorModule/CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar\";\n// import CustomButton from \"../../components/CustomButton\";\n\n// const Home = ({ socket }) => {\n//     const navigate = useNavigate();\n//     const { user: paramUser, roomID: paramRoomID } = useParams();\n\n//     const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n//     const [roomID, setRoomID] = useState(localStorage.getItem(\"roomID\") || \"\");\n//     const [user, setUser] = useState(localStorage.getItem(\"signUp\") || \"\");\n\n//     useEffect(() => {\n//         if (!userName || !roomID) {\n//             const resolvedUserName = paramUser || \"\";\n//             const resolvedRoomID = paramRoomID || \"\";\n//             setUserName(resolvedUserName);\n//             setRoomID(resolvedRoomID);\n\n//             if (resolvedUserName && resolvedRoomID) {\n//                 joinRoom(resolvedRoomID, resolvedUserName);\n//             }\n//         } else {\n//             joinRoom(roomID, userName);\n//         }\n//     }, [userName, roomID, paramUser, paramRoomID]);\n\n//     const joinRoom = (roomID, userName) => {\n//         if (roomID && userName) {\n//             localStorage.setItem(\"userName\", userName);\n//             localStorage.setItem(\"roomID\", roomID);\n//             socket.emit(\"joinRoom\", { userID: userName, roomID });\n//             navigate(`/patientdashboard/appointment/chats/${roomID}`);\n//         }\n//     };\n\n//     const handleInputChange = (setter) => (e) => {\n//         setter(e.target.value);\n//     };\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         if (!userName || !roomID) {\n//             alert(\"Both Username and Room ID are required.\");\n//             return;\n//         }\n//         joinRoom(roomID, userName);\n//     };\n\n//     const renderNavbar = () => {\n//         if (user === \"doctor\") return <DoctorAppointmentNavbar />;\n//         if (user === \"patient\") return <AppointmentNavbar />;\n//         return null;\n//     };\n\n//     return (\n//         <Box sx={{ display: \"flex\", width: \"95%\", height: \"95vh\" }} className=\"upcoming\">\n//             {renderNavbar()}\n//             <Box\n//                 sx={{\n//                     position: \"relative\",\n//                     top: \"4em\",\n//                     width: \"100%\",\n//                     display: \"flex\",\n//                     height: \"100%\",\n//                 }}\n//             >\n//                 <Box sx={{ width: \"100%\", height: \"100%\" }}>\n//                     <Box sx={{ width: \"100%\", height: \"100%\" }}>\n//                         <Box\n//                             sx={{\n//                                 width: \"100%\",\n//                                 border: \"1px solid #E6E1E5\",\n//                                 borderRadius: \"8px\",\n//                                 padding: \"2%\",\n//                                 marginLeft: \"2%\",\n//                                 height: \"100%\",\n//                                 display: \"flex\",\n//                                 flexDirection: \"column\",\n//                                 justifyContent: \"space-between\",\n//                             }}\n//                         >\n//                             <form className=\"home__container\" onSubmit={handleSubmit}>\n//                                 <h2 className=\"home__header\">Sign in to Open Chat</h2>\n//                                 <label htmlFor=\"username\">Username</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     minLength={6}\n//                                     id=\"username\"\n//                                     className=\"username__input\"\n//                                     value={userName}\n//                                     onChange={handleInputChange(setUserName)}\n//                                 />\n//                                 <label htmlFor=\"roomID\">Room ID</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"roomID\"\n//                                     className=\"room__input\"\n//                                     value={roomID}\n//                                     onChange={handleInputChange(setRoomID)}\n//                                 />\n//                                 <CustomButton label=\"SIGN IN\" handleClick={handleSubmit} />\n//                             </form>\n//                         </Box>\n//                     </Box>\n//                 </Box>\n//             </Box>\n//         </Box>\n//     );\n// };\n\n// export default Home;\n\n// import { Box } from \"@mui/material\";\n// import React, { useEffect, useState } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { AppointmentNavbar } from \"../../Dashboard/PatientAppointment/PatientCards\";\n// import \"./chat.scss\";\n// import axiosInstance from \"../../config/axiosInstance\";\n// import DoctorAppointmentNavbar from \"../../DoctorModule/CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar\";\n// import CustomButton from \"../../components/CustomButton\";\n\n// const Home = ({ socket }) => {\n//     const navigate = useNavigate();\n//     const [userName, setUserName] = useState(\"\");\n//     const [roomID, setRoomID] = useState(\"\");\n//     const [user, setUser] = useState(\"\");\n//     const params = useParams();\n\n//     useEffect(() => {\n//         // Try to load user data from localStorage\n//         console.log(params.user , params.roomID);\n//         setUser(localStorage.getItem(\"signUp\"));\n//         const savedUserName = localStorage.getItem(\"userName\");\n//         const savedRoomID = localStorage.getItem(\"roomID\");\n//         // chatSocket();\n//         // console.log(\"saved user local storage : \",savedUserName);\n//         // console.log(\"saved user room id : \",savedUserName);\n\n//         if (savedUserName !== null || undefined && savedRoomID !== null || undefined ) {\n//             console.log(\"from local\",savedUserName,savedRoomID)\n//             setUserName(savedUserName);\n//             setRoomID(savedRoomID);\n//             handleSubmit(savedRoomID,savedUserName);\n//         }else{\n//             console.log('from params',params.roomID,params.user)\n\n//             setRoomID(params.roomID)\n//             setUserName(params.user)\n//             handleSubmit(params.roomID,params.user);\n//         }\n//     }, []);\n\n//     const handleSubmit = (roomID,userName) => {\n//         // e.preventDefault();\n//         if (!userName || !roomID) {\n//             alert(\"Both Username and Room ID are required.\");\n//             return;\n//         }\n//         localStorage.setItem(\"userName\", userName);\n//         localStorage.setItem(\"roomID\", roomID);\n//         console.log(\"in handle submit : \",roomID,userName)\n//         socket.emit(\"joinRoom\", { userID: userName, roomID });\n//         navigate(`/patientdashboard/appointment/chats/${roomID}`);\n//     };\n\n//     return (\n//         <Box sx={{ display: \"flex\", width: \"95%\", height: \"95vh\" }} className={\"upcoming\"}>\n//             {user === \"doctor\" ? (\n//                 <DoctorAppointmentNavbar />\n//             ) : user === \"patient\" ? (\n//                 <AppointmentNavbar />\n//             ) : null}\n\n//             {/* <AppointmentNavbar />\n//         <DoctorAppointmentNavbar /> */}\n\n//             <Box\n//                 component={\"div\"}\n//                 sx={{\n//                     position: \"relative\",\n//                     top: \"4em\",\n//                     width: \"100%\",\n//                     display: \"flex\",\n//                     height: \"100%\",\n//                 }}\n//             >\n//                 <Box sx={{ width: \"100%\", height: \"100%\" }}>\n//                     <Box sx={{ width: \"100%\", height: \"100%\" }}>\n//                         <Box\n//                             sx={{\n//                                 width: \"100%\",\n//                                 border: \"1px solid #E6E1E5\",\n//                                 borderRadius: \"8px\",\n//                                 padding: \"2%\",\n//                                 marginLeft: \"2%\",\n//                                 height: \"100%\",\n//                                 display: \"flex\",\n//                                 flexDirection: \"column\",\n//                                 justifyContent: \"space-between\",\n//                             }}\n//                         >\n//                             <form className=\"home__container\" onSubmit={handleSubmit}>\n//                                 <h2 className=\"home__header\">Sign in to Open Chat</h2>\n//                                 <label htmlFor=\"username\">Username</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     minLength={6}\n//                                     name=\"username\"\n//                                     id=\"username\"\n//                                     className=\"username__input\"\n//                                     value={userName}\n//                                     onChange={(e) => setUserName(e.target.value)}\n//                                 />\n//                                 <label htmlFor=\"roomID\">Room ID</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     name=\"roomID\"\n//                                     id=\"roomID\"\n//                                     className=\"room__input\"\n//                                     value={roomID}\n//                                     onChange={(e) => setRoomID(e.target.value)}\n//                                 />\n//                                 <CustomButton label=\"SIGN IN\" handleClick={handleSubmit} />\n//                                 {/* <button className=\"home__cta\">SIGN IN</button> */}\n//                             </form>\n//                         </Box>\n//                     </Box>\n//                 </Box>\n//             </Box>\n//         </Box>\n//     );\n// };\n\n// export default Home;\n\n// import React, {useState} from 'react'\n// import {useNavigate} from \"react-router-dom\"\n\n// const Home = ({socket}) => {\n//     const navigate = useNavigate()\n//     const [userName, setUserName] = useState(\"\")\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault()\n//         localStorage.setItem(\"userName\", userName)\n//         socket.emit(\"newUser\", {userName, socketID: socket.id})\n//         navigate(\"/chat\")\n//     }\n//   return (\n//     <form className='home__container' onSubmit={handleSubmit}>\n//         <h2 className='home__header'>Sign in to Open Chat</h2>\n//         <label htmlFor=\"username\">Username</label>\n//         <input type=\"text\"\n//         minLength={6}\n//         name=\"username\"\n//         id='username'\n//         className='username__input'\n//         value={userName}\n//         onChange={e => setUserName(e.target.value)}\n//         />\n//         <button className='home__cta'>SIGN IN</button>\n//     </form>\n//   )\n// }\n\n// export default Home\n","import React, { useState, useEffect } from 'react';\n\nconst ChatBar = ({ socket, roomID, savedUserName }) => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"newUserResponse\", (data) => {\n      setUsers(data.filter(user => user.roomID === roomID));\n    });\n\n    return () => {\n      socket.off(\"newUserResponse\");\n    };\n  }, [socket, roomID]);\n\n  return (\n    <div className='chat__sidebar'>\n      <p>Active Users</p>\n      <p>{savedUserName}</p>\n      <div>\n        {/* <h4 className='chat__header'>ACTIVE USERS</h4> */}\n        <br/>\n        <div className='chat__users'>\n          {users.map(user => <p key={user.socketID}>{user.userID}</p>)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBar;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {useState, useEffect} from 'react'\n\n// const ChatBar = ({socket}) => {\n//     const [users, setUsers] = useState([])\n\n//     useEffect(()=> {\n//         socket.on(\"newUserResponse\", data => setUsers(data))\n//     }, [socket, users])\n\n//   return (\n//     <div className='chat__sidebar'>\n//         <h2>Open Chat</h2>\n//         <div>\n//             <h4  className='chat__header'>ACTIVE USERS</h4>\n//             <div className='chat__users'>\n//                 {users.map(user => <p key={user.socketID}>{user.userName}</p>)}\n//             </div>\n//         </div>\n//   </div>\n//   )\n// }\n\n// export default ChatBar","import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport axiosInstance from \"../../config/axiosInstance\";\n\nconst ChatBody = ({ messages, typingStatus, lastMessageRef, roomID, socket }) => {\n    const navigate = useNavigate();\n    const { appointment_id } = useParams();\n    const [countDown, setCountDown] = useState(null);\n    const [countDownWarning , setCountDownWarning] = useState(false);\n    const [isCallEnded, setIsCallEnded] = useState(false);\n    const [call_message , setCall_message] = useState(\"You cannot join the chat at this time.\");\n    const [localCountdown, setLocalCountdown] = useState(null);\n    const [appointmentEndTime, setAppointmentEndTime] = useState(null);\n    const [appointmentData, setAppointmentData] = useState(null);\n    const [isLoadingAppointment, setIsLoadingAppointment] = useState(true);\n    \n    const DoctorCard = ({ name }) => {\n        return (\n          <div style={{\n            padding: \"1rem\",\n            backgroundColor: \"#ffffff\",\n            border: \"1px solid #ddd\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 2px 5px rgba(0,0,0,0.1)\",\n            maxWidth: \"250px\"\n          }}>\n            <p style={{\n              margin: 0,\n              fontSize: \"1rem\",\n              fontWeight: \"bold\",\n              color: \"#333\"\n            }}>\n              👨‍⚕️ Dr. {name}\n            </p>\n          </div>\n        );\n      };\n\n    // Function to fetch appointment details from API\n    const fetchAppointmentDetails = async () => {\n        if (!appointment_id) {\n            console.log(\"No appointment_id found in URL params\");\n            setIsLoadingAppointment(false);\n            return;\n        }\n\n        try {\n            console.log(\"Fetching appointment details for ID:\", appointment_id);\n            \n            // Determine if user is doctor or patient based on current route\n            const isDoctor = window.location.pathname.includes('/doctordashboard/');\n            const patientEndpoint = `/sec/patient/getAppointmentDateTime/${appointment_id}`;\n            // const patientEndpoint = `/sec/patient/appointmentsById/${appointment_id}`;\n            const doctorEndpoint = `/sec/doctor/AppointmentdetailsId/${appointment_id}`;\n            const apiEndpoint = isDoctor ? doctorEndpoint : patientEndpoint;\n            \n            console.log(\"Using API endpoint:\", apiEndpoint);\n            let response = await axiosInstance.get(apiEndpoint);\n            \n            const extractAppointment = (resp) => {\n                if (!resp || !resp.data) return null;\n                const payload = resp.data.response;\n                if (!payload) return null;\n                // If backend returns string like \"Appointment does not exist\"\n                if (typeof payload === 'string') return null;\n                if (Array.isArray(payload) && payload.length > 0) return payload[0];\n                if (Array.isArray(payload) && payload.length === 0) return null;\n                // Object case\n                return payload;\n            };\n\n            let extracted = extractAppointment(response);\n\n            // Fallback: if patient endpoint returned empty or invalid, try doctor endpoint\n            if (!isDoctor && !extracted) {\n                console.log(\"Primary endpoint returned no data. Trying doctor endpoint as fallback...\");\n                try {\n                    response = await axiosInstance.get(doctorEndpoint);\n                    extracted = extractAppointment(response);\n                } catch (e) {\n                    console.warn(\"Fallback doctor endpoint also failed\", e);\n                }\n            }\n\n            if (extracted) {\n                const appointment = extracted;\n                console.log(\"Fetched appointment data:\", appointment);\n                \n                setAppointmentData(appointment);\n                \n                // Calculate appointment end time\n                if (appointment.appointment_date && appointment.appointment_time && appointment.plan_duration) {\n                    const appointmentDateTime = new Date(`${appointment.appointment_date}T${appointment.appointment_time}`);\n                    const durationMinutes = parseInt(String(appointment.plan_duration).split(' ')[0]);\n                    const endTime = new Date(appointmentDateTime.getTime() + (durationMinutes * 60000));\n                    setAppointmentEndTime(endTime);\n                    \n                    // Start local countdown\n                    const now = new Date();\n                    const timeLeft = Math.max(0, Math.floor((endTime - now) / 1000));\n                    setLocalCountdown(timeLeft);\n                    \n                    console.log(\"Appointment end time calculated:\", endTime);\n                    console.log(\"Time left in seconds:\", timeLeft);\n                } else {\n                    console.log(\"Missing appointment data fields:\", {\n                        appointment_date: appointment?.appointment_date,\n                        appointment_time: appointment?.appointment_time,\n                        plan_duration: appointment?.plan_duration\n                    });\n                }\n            } else {\n                console.log(\"No appointment data found in response\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching appointment details:\", error);\n            // Fallback to localStorage if API fails\n            const appointmentData = localStorage.getItem(`appointment_${appointment_id}`);\n            if (appointmentData) {\n                try {\n                    const data = JSON.parse(appointmentData);\n                    setAppointmentData(data);\n                    console.log(\"Using localStorage appointment data as fallback\");\n                } catch (parseError) {\n                    console.error(\"Error parsing localStorage appointment data:\", parseError);\n                }\n            }\n        } finally {\n            setIsLoadingAppointment(false);\n        }\n    };\n      \n    useEffect(() => {\n        // Listen for the countdown event from the server\n        socket.on(\"countdown\", (timeLeft) => {\n            console.log(\"Received countdown:\", timeLeft);\n            setCountDown(timeLeft);\n            if(timeLeft < 250) {\n                setCountDownWarning(true);\n            }\n        });\n\n        // Listen for the end of the call\n        socket.on(\"endCall\", (data) => {\n            console.log(\"Call ended:\", data);\n            alert(data.message); // Show the message when the call ends\n            setIsCallEnded(true); // Mark the call as ended\n            setCountDown(null); // Clear the countdown\n        });\n\n        socket.on(\"error\", (data) => {\n            console.log(\"Socket error:\", data);\n            setCall_message(data?.message || \"An error occurred\");\n        });\n\n        // Request countdown from server when joining\n        socket.emit(\"requestCountdown\", { roomID });\n\n        // Clean up the socket listener when the component unmounts\n        return () => {\n            socket.off(\"countdown\");\n            socket.off(\"endCall\");\n            socket.off(\"error\");\n        };\n    }, [roomID, socket]);\n\n    const handleDisconnect = () => {\n        // Optionally, you can handle manual disconnection here if needed.\n        socket.disconnect();\n        localStorage.removeItem(\"userName\");\n        localStorage.removeItem(\"roomID\");\n        // navigate(-1);\n        window.location.reload();\n    };\n\n    // Local countdown timer as fallback\n    useEffect(() => {\n        if (localCountdown !== null && localCountdown > 0) {\n            const timer = setTimeout(() => {\n                setLocalCountdown(prev => {\n                    if (prev <= 1) {\n                        setIsCallEnded(true);\n                        return 0;\n                    }\n                    return prev - 1;\n                });\n            }, 1000);\n            \n            return () => clearTimeout(timer);\n        }\n    }, [localCountdown]);\n\n    // Warning state when under threshold (5 minutes)\n    useEffect(() => {\n        const remaining = (countDown !== null ? countDown : localCountdown);\n        if (remaining !== null && remaining <= 300 && remaining > 0) {\n            setCountDownWarning(true);\n        } else {\n            setCountDownWarning(false);\n        }\n    }, [countDown, localCountdown]);\n\n    // Automatically disconnect and end call when the countdown reaches 0\n    useEffect(() => {\n        if (countDown === 0 || localCountdown === 0) {\n            handleDisconnect(); // Disconnect the user\n            setIsCallEnded(true); // Mark the call as ended\n        }\n    }, [countDown, localCountdown]);\n\n    // Fetch appointment details when component mounts\n    useEffect(() => {\n        fetchAppointmentDetails();\n    }, [appointment_id]);\n\n    // Refresh appointment data every 30 seconds to get updated status\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (appointment_id && !isCallEnded) {\n                console.log(\"Refreshing appointment data...\");\n                fetchAppointmentDetails();\n            }\n        }, 30000); // Refresh every 30 seconds\n\n        return () => clearInterval(interval);\n    }, [appointment_id, isCallEnded]);\n\n    const formatTime = (timeInSeconds) => {\n        const minutes = Math.floor(timeInSeconds / 60);\n        const seconds = timeInSeconds % 60;\n        return `${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`;\n    };\n\n    const handleLeaveChat = () => {\n        socket.disconnect();\n\n        localStorage.removeItem(\"userName\");\n        localStorage.removeItem(\"roomID\");\n        navigate(-1);\n        window.location.reload();\n    };\n\n    return (\n        <>\n            <header className=\"chat__mainHeader\">\n                {/* Patient/Doctor Card */}\n                {appointmentData && (\n                    <DoctorCard \n                        name={window.location.pathname.includes('/doctordashboard/') \n                            ? appointmentData.patient_name || `${appointmentData.first_name} ${appointmentData.last_name}`\n                            : appointmentData.doctor_name\n                        } \n                    />\n                )}\n                \n                {/* Appointment Info */}\n                {isLoadingAppointment ? (\n                    <div style={{ textAlign: 'center', padding: '1rem' }}>\n                        <p>Loading appointment details...</p>\n                    </div>\n                ) : appointmentData ? (\n                    <div style={{ marginBottom: '1rem' }}>\n                        <h4>Appointment Details</h4>\n                        <p><strong>Date:</strong> {appointmentData.appointment_date}</p>\n                        <p><strong>Time:</strong> {appointmentData.appointment_time}</p>\n                        <p><strong>Duration:</strong> {appointmentData.plan_duration}</p>\n                        {/* <p><strong>Type:</strong> {appointmentData.plan_name}</p> */}\n                        {window.location.pathname.includes('/doctordashboard/') && (\n                            <p><strong>Patient:</strong> {appointmentData.patient_name || `${appointmentData.first_name} ${appointmentData.last_name}`}</p>\n                        )}\n                        {!window.location.pathname.includes('/doctordashboard/') && (\n                            <p><strong>Doctor:</strong> {appointmentData.doctor_name}</p>\n                        )}\n                    </div>\n                ) : (\n                    <div style={{ textAlign: 'center', padding: '1rem' }}>\n                        <p style={{ color: 'orange' }}>No appointment data available</p>\n                    </div>\n                )}\n\n                {/* Timer Section */}\n                <div>\n                    {(countDown !== null || localCountdown !== null) && !isCallEnded ? (\n                        <div>\n                            <h5>Time Remaining:</h5>\n                            <p style={{\n                                color : countDownWarning ? 'red' : 'black',\n                                fontWeight : 'bold',\n                                fontSize: '1.2rem'\n                            }} >\n                                {formatTime(countDown !== null ? countDown : localCountdown).split('.')[0]}\n                            </p>\n                            {countDown !== null && (\n                                <small style={{ color: 'green' }}>Server Timer</small>\n                            )}\n                            {countDown === null && localCountdown !== null && (\n                                <small style={{ color: 'orange' }}>Local Timer</small>\n                            )}\n                        </div>\n                    ) : isCallEnded ? (\n                        <div>\n                            <h3 style={{ color: 'red' }}>The call has ended.</h3>\n                        </div>\n                    ) : (\n                        <p style={{ color: 'gray' }}>{call_message}</p>\n                    )}\n                </div>\n\n                {/* Action Buttons */}\n                {!isCallEnded && (\n                    <div style={{ display: 'flex', gap: '10px', marginTop: '10px' }}>\n                        <CustomButton isTransaprent={true} handleClick={handleLeaveChat} label=\"End Chat\" />\n                        {/* <CustomButton \n                            isTransaprent={false} \n                            handleClick={() => {\n                                setLocalCountdown(300); // 5 minutes for testing\n                                setCountDownWarning(false);\n                            }} \n                            label=\"Start Test Timer (5min)\" \n                        /> */}\n                    </div>\n                )}\n            </header>\n\n            <div className=\"message__container\">\n                {messages\n                    .filter(message => message && message.name && message.text) // Filter out null/undefined messages\n                    .map((message) =>\n                        message.name === localStorage.getItem(\"userName\") ? (\n                            <div className=\"message__chats\" key={message.id || Math.random()}>\n                                {/* <p className='sender__name'>You</p> */}\n                                <div className=\"message__sender\">\n                                    <p>{message.text}</p>\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"message__chats\" key={message.id || Math.random()}>\n                                {/* <p>{message.name}</p> */}\n                                <div className=\"message__recipient\">\n                                    <p>{message.text}</p>\n                                </div>\n                            </div>\n                        ),\n                    )}\n\n                <div className=\"message__status\">\n                    <p>{typingStatus}</p>\n                </div>\n                <div ref={lastMessageRef} />\n            </div>\n        </>\n    );\n};\n\nexport default ChatBody;\n\n// import React from 'react'\n// import {useNavigate} from \"react-router-dom\"\n\n// const ChatBody = ({messages, typingStatus, lastMessageRef}) => {\n//   const navigate = useNavigate()\n\n//   const handleLeaveChat = () => {\n//     localStorage.removeItem(\"userName\")\n//     navigate(\"/\")\n//     window.location.reload()\n//   }\n\n//   return (\n//     <>\n//       <header className='chat__mainHeader'>\n//           <p>Hangout with Colleagues</p>\n//           <button className='leaveChat__btn' onClick={handleLeaveChat}>LEAVE CHAT</button>\n//         </header>\n\n//         <div className='message__container'>\n//           {messages.map(message => (\n//             message.name === localStorage.getItem(\"userName\") ? (\n//               <div className=\"message__chats\" key={message.id}>\n//             <p className='sender__name'>You</p>\n//             <div className='message__sender'>\n//                 <p>{message.text}</p>\n//             </div>\n//           </div>\n//             ): (\n//               <div className=\"message__chats\" key={message.id}>\n//             <p>{message.name}</p>\n//             <div className='message__recipient'>\n//                 <p>{message.text}</p>\n//             </div>\n//           </div>\n//             )\n//             ))}\n\n//           <div className='message__status'>\n//             <p>{typingStatus}</p>\n//           </div>\n//           <div ref={lastMessageRef} />\n//         </div>\n//     </>\n//   )\n// }\n\n// export default ChatBody\n","import React, { useState } from 'react';\nimport CustomButton from '../../components/CustomButton/custom-button';\nimport SendIcon from '@mui/icons-material/Send';\n\nconst ChatFooter = ({ socket, roomID }) => {\n  const [message, setMessage] = useState(\"\");\n  const userName = localStorage.getItem(\"userName\") || `Patient_${Date.now()}`;\n  \n  const handleTyping = () => socket.emit(\"typing\", { roomID, data: `${userName} is typing` });\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (message.trim() && userName) {\n      console.log(\"Sending message:\", { roomID, data: { text: message, name: userName, id: `${socket.id}${Math.random()}`, socketID: socket.id } });\n      socket.emit(\"message\", { roomID, data: { text: message, name: userName, id: `${socket.id}${Math.random()}`, socketID: socket.id } });\n    }\n    setMessage(\"\");\n  };\n\n  return (\n    <div className='chat__footer'>\n      <form className='form' onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          placeholder='Write message'\n          className='message'\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n          onKeyDown={handleTyping}\n        />\n        <CustomButton\n          handleClick={handleSendMessage}\n          // className=\"sendBtn\" \n          label='' \n          leftIcon={<SendIcon/>}\n          />\n        {/* <button className=\"sendBtn\">SEND</button> */}\n      </form>\n    </div>\n  );\n};\n\nexport default ChatFooter;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {useState} from 'react'\n\n// const ChatFooter = ({socket}) => {\n//     const [message, setMessage] = useState(\"\")\n//     const handleTyping = () => socket.emit(\"typing\",`${localStorage.getItem(\"userName\")} is typing`)\n\n//     const handleSendMessage = (e) => {\n//         e.preventDefault()\n//         if(message.trim() && localStorage.getItem(\"userName\")) {\n//         socket.emit(\"message\",\n//             {\n//             text: message,\n//             name: localStorage.getItem(\"userName\"),\n//             id: `${socket.id}${Math.random()}`,\n//             socketID: socket.id\n//             }\n//         )\n//         }\n//         setMessage(\"\")\n//     }\n//   return (\n//     <div className='chat__footer'>\n//         <form className='form' onSubmit={handleSendMessage}>\n//           <input\n//             type=\"text\"\n//             placeholder='Write message'\n//             className='message'\n//             value={message}\n//             onChange={e => setMessage(e.target.value)}\n//             onKeyDown={handleTyping}\n//             />\n//             <button className=\"sendBtn\">SEND</button>\n//         </form>\n//      </div>\n//   )\n// }\n\n// export default ChatFooter","import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ChatBar from './ChatBar';\nimport ChatBody from './ChatBody';\nimport ChatFooter from './ChatFooter';\nimport \"./chat.scss\";\n\nconst ChatPage = ({ socket }) => {\n  const { roomID, appointment_id, user, savedUserName } = useParams();\n  // const { roomID, userName } = state;\n  const [messages, setMessages] = useState([]);\n  const [typingStatus, setTypingStatus] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const lastMessageRef = useRef(null);\n\n  useEffect(() => {\n    // Get userName from localStorage or use a default\n    const derivedName = localStorage.getItem(\"userName\") || `Patient_${Date.now()}`;\n    setUserName(derivedName);\n    // Persist to localStorage so other components (comparisons, disconnect) see it\n    localStorage.setItem(\"userName\", derivedName);\n    \n    // Listen for message and typing events\n    socket.on(\"messageResponse\", data => setMessages(prevMessages => [...prevMessages, data]));\n    socket.on(\"typingResponse\", data => setTypingStatus(data));\n\n    // Listen for previous messages when the user rejoins the room\n    socket.on(\"previousMessages\", data => {\n      setMessages(data);\n    });\n\n    // Join room with userName and roomID\n    if (derivedName && roomID && socket) {\n      console.log(\"Joining room:\", { userID: derivedName, roomID, appointment_id });\n      socket.emit(\"joinRoom\", { userID: derivedName, roomID, appointment_id });\n    }\n\n    return () => {\n      // Clean up listeners on component unmount\n      socket.off(\"messageResponse\");\n      socket.off(\"typingResponse\");\n      socket.off(\"previousMessages\");\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    // Scroll to the bottom when new messages are added\n    lastMessageRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <div className=\"chat\">\n      <ChatBar socket={socket} roomID={roomID} savedUserName={userName} />\n      <div className='chat__main'>\n        <ChatBody messages={messages} typingStatus={typingStatus} lastMessageRef={lastMessageRef} roomID={roomID} socket={socket} />\n        <ChatFooter socket={socket} roomID={roomID} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState, useRef} from 'react'\n// import ChatBar from './ChatBar'\n// import ChatBody from './ChatBody'\n// import ChatFooter from './ChatFooter'\n\n// const ChatPage = ({socket}) => {\n//   const [messages, setMessages] = useState([])\n//   const [typingStatus, setTypingStatus] = useState(\"\")\n//   const lastMessageRef = useRef(null);\n\n//   useEffect(()=> {\n//     socket.on(\"messageResponse\", data => setMessages([...messages, data]))\n//   }, [socket, messages])\n\n//   useEffect(()=> {\n//     socket.on(\"typingResponse\", data => setTypingStatus(data))\n//   }, [socket])\n\n//   useEffect(() => {\n//     // 👇️ scroll to bottom every time messages change\n//     lastMessageRef.current?.scrollIntoView({behavior: 'smooth'});\n//   }, [messages]);\n\n//   return (\n//     <div className=\"chat\">\n//       <ChatBar socket={socket}/>\n//       <div className='chat__main'>\n//         <ChatBody messages={messages} typingStatus={typingStatus} lastMessageRef={lastMessageRef}/>\n//         <ChatFooter socket={socket}/>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default ChatPage\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport \"./hcfclinicsignup.scss\";\nimport Typography from \"@mui/material/Typography\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport { TextField } from \"@mui/material\";\nimport { MultiInputTimeRangeField } from \"@mui/x-date-pickers-pro/MultiInputTimeRangeField\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport CustomTextField from \"../../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport ClassicFrame from \"../../../static/images/DrImages/Undraw.png\";\nimport ImageFrame from \"../../../static/images/logos/clinic_logo.png\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst steps = [\"\", \"\", \"\", \"\", \"\", \"\"];\n\nconst DoctorSignup = () => {\n    const [dropdownItems] = useState([\"Male\", \"Female\", \"Others\"]);\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const [selectedCountryFromDropDown, setSelectedCountryFromDropDown] = useState([]);\n    const [countryValues, setCountryValue] = useState([]);\n    const [countryNames, setCountryNames] = useState([\"Please Wait\"]);\n    const [stateNames, setStateNames] = useState([\"Please Wait\"]);\n    const [stateName, setStateName] = useState(\"\");\n    const [stateValue, setStateValue] = useState([]);\n    const [selectCityFromDropDown, setSelectCityFromDropDown] = useState([]);\n    const [cityNames, setCityNames] = useState([]);\n    const [citySelected, setCitySelected] = useState(\"\");\n    const [cityValues, setCityValues] = useState([]);\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [departmentName, setDepartmentName] = useState([]);\n    const [departmentValue, setDepartmentValue] = useState([]);\n    const [departmentDropDown, setDepartmentDropdown] = useState(\"Specialization\");\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [flagToSendDoctorData, setFlagToSendDoctorData] = useState(false);\n    const [updateUserData, setUpdateUserData] = useState({\n        // suid: localStorage.getItem(\"doctor_suid\"),\n        email: localStorage.getItem(\"clinic_Email\"),\n        first_name: null,\n        last_name: null,\n        middle_name: null,\n        gender: null,\n        DOB: null,\n        country_id: null,\n        state_id: null,\n        city_id: null,\n        street_address1: null,\n        street_address2: null,\n        zip_code: null,\n        role_id: 6,\n        qualification: null,\n        university_name: null,\n        qualified_year: null,\n        speciality_id: null,\n        degree: null,\n        state_reg_number: null,\n        country_reg_number: null,\n        state_reg_date: null,\n        country_reg_date: null,\n        lic_title: null,\n        lic_certificate_no: null,\n        lic_issuedby: null,\n        lic_date: null,\n        lic_description: null,\n        council_name: null,\n        business_name: null,\n    });\n    const [updatedUserSuccesfully, setUpdatedUserSuccesfully] = useState(\"\");\n    const [showSnackBar, setShowSnackBar] = useState(false);\n    const navigate = useNavigate();\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    useEffect(() => {\n        FetchCountryNames();\n        fetchDepartmentName();\n    }, []);\n\n    // run the api call when there is change in country drop down\n    useEffect(() => {\n        FetchStateNames(selectedCountryFromDropDown[0]?.country_id);\n    }, [selectedCountryFromDropDown]);\n\n    // run the api to fetch the city details\n    useEffect(() => {\n        FetchCityNames(selectCityFromDropDown[0]?.state_id);\n    }, [selectCityFromDropDown]);\n\n    //API call to fetch the country names\n    const FetchCountryNames = async () => {\n        let CountryValues = [];\n        let CountryName = [];\n        try {\n            const response = await axiosInstance(\"/sec/countries\");\n            for (let key in response?.data?.response) {\n                CountryValues.push(response?.data?.response[key]);\n                CountryName.push(response?.data?.response[key].country_name);\n            }\n            setCountryNames(CountryName);\n            setCountryValue(CountryValues);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    // to fetch the state names\n    const FetchStateNames = async (country_id) => {\n        let StateValues = [];\n        let StateName = [];\n        try {\n            const response = await axiosInstance(`/sec/states?country_id=${country_id}`);\n            for (let key in response?.data?.response) {\n                StateValues.push(response?.data?.response[key]);\n                StateName.push(response?.data?.response[key].state_name);\n            }\n            setStateValue(StateValues);\n            setStateNames(StateName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const FetchCityNames = async (state_id) => {\n        let CityValues = [];\n        let cityName = [];\n        try {\n            const response = await axiosInstance(`/sec/cities?state_id=${state_id}`);\n            console.log(\"response city id : \", response);\n            for (let key in response?.data?.response) {\n                CityValues.push(response?.data?.response[key]);\n                cityName.push(response?.data?.response[key].city_name);\n            }\n            setCityValues(CityValues);\n            setCityNames(cityName);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const fetchDepartmentName = async () => {\n        let DepartmentValues = [];\n        let DepartmentName = [];\n        try {\n            const response = await axiosInstance(\"/sec/departments\");\n            console.log(\"fetch Department Name : \", response?.data?.response);\n\n            for (let key in response?.data?.response) {\n                DepartmentValues.push(response?.data?.response[key]);\n                DepartmentName.push(response?.data?.response[key].department_name);\n            }\n            setDepartmentName(DepartmentName);\n            setDepartmentValue(DepartmentValues);\n        } catch (err) {\n            console.log(\"Department Name error : \", err);\n        }\n    };\n\n    console.log(\"user data : \", updateUserData);\n\n    useEffect(() => {\n        if (flagToSendDoctorData) {\n            PostUserData();\n        }\n    }, [flagToSendDoctorData]);\n\n    const PostUserData = async () => {\n        setFlagToSendDoctorData(false);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/auth/updateProfile\",\n                JSON.stringify(updateUserData),\n            );\n            setUpdatedUserSuccesfully(\"Profile Completed 🙂\");\n            console.log(\"send data succesfully : \", response);\n            setShowSnackBar(true);\n            setFlagToSendDoctorData(false);\n            handleNext();\n        } catch (err) {\n            console.log(\"Error sending data\", err);\n            setShowSnackBar(false);\n            setFlagToSendDoctorData(false);\n        }\n    };\n\n    // console.log(\"update use data : \" , departmentName)\n    // console.log(\"update use data : \" , departmentValue)\n\n    console.log(\n        \"True or false \",\n        updateUserData.first_name != null &&\n            updateUserData.middle_name != null &&\n            updateUserData.last_name != null &&\n            updateUserData.DOB != null &&\n            updateUserData.gender != null,\n    );\n    console.log(\"True or false \", updateUserData.first_name != null);\n    console.log(\"True or false \", updateUserData.first_name === null);\n\n    return (\n        <>\n            <CustomSnackBar\n                isOpen={showSnackBar}\n                actionLabel={\"\"}\n                // handleAction={() => setShowSnack(false)}\n                message={updatedUserSuccesfully}\n                type=\"success\"\n            />\n            <Box sx={{ width: \"100%\" }}>\n                <div className=\"FrameBox1\">\n                    <Box\n                        // sx={{ borderRadius: \"8px\", width: \"100%\", height: \"100%\" }}\n                        component={\"img\"}\n                        src={ImageFrame}\n                    ></Box>\n                </div>\n\n                <div className=\"step-back\">\n                    <div className=\"back-btn\">\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1, color: \"red\" }}\n                        >\n                            Back\n                        </Button>\n                    </div>\n                    <div className=\"Stepper\">\n                        <Stepper\n                            activeStep={activeStep}\n                            style={{\n                                width: \"700px\",\n                            }}\n                        >\n                            {steps.map((label, index) => {\n                                const stepProps = {};\n                                const labelProps = {};\n                                if (isStepOptional(index)) {\n                                }\n                                if (isStepSkipped(index)) {\n                                    stepProps.completed = false;\n                                }\n                                return (\n                                    <Step key={label} {...stepProps}>\n                                        <StepLabel {...labelProps}>{label}</StepLabel>\n                                    </Step>\n                                );\n                            })}\n                        </Stepper>\n                    </div>\n                </div>\n                {activeStep === steps.length ? (\n                    <React.Fragment>\n                        <Box sx={{ width: \"100%\" }}>\n                            <div className=\"imge-cont\">\n                                <div className=\"card-cont1\">\n                                    <div className=\"card1\">\n                                        <div className=\"last-image\">\n                                            <Box\n                                                sx={{ width: \"222px\", height: \"252px\" }}\n                                                component={\"img\"}\n                                                src={ClassicFrame}\n                                            ></Box>\n                                        </div>\n                                        <div className=\"greetings1\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#313033\",\n                                                    fontFamily: \"poppins\",\n                                                    fontSize: \"16px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"600\",\n                                                    lineHeight: \"24px\",\n                                                }}\n                                            >\n                                                Your choice to register with us fills us with\n                                                immense gratitude\n                                            </Typography>\n                                        </div>\n                                        <div className=\"note1\">\n                                            <Typography\n                                                style={{\n                                                    color: \"#939094\",\n                                                    fontFamily: \"poppins\",\n                                                    fontSize: \"14px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"400\",\n                                                    lineHeight: \"21px\",\n                                                    letterSpacing: \"0.07px\",\n                                                }}\n                                            >\n                                                Proceed to the login page to embark upon thy journey\n                                                henceforth\n                                            </Typography>\n                                        </div>\n                                        <div className=\"done-btn1\">\n                                            <CustomButton\n                                                label=\"Proceed to Login, where your adventure awaits\"\n                                                handleClick={() => navigate(\"/diagnostcliniclogin\")}\n                                                buttonCss={{\n                                                    width: \"270px\",\n                                                    borderRadius: \"20px\",\n                                                }}\n                                            >\n                                                Done\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Box>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography sx={{ mt: 2, mb: 1 }}>\n                            {/* Step {activeStep + 1} */}\n                            {activeStep === 0 ? (\n                                <>\n                                    <Box>\n                                        <div className=\"mainBox1\">\n                                            <Box sx={{ width: \"40%\" }}>\n                                                <div className=\"heading1\">\n                                                    <Typography\n                                                        style={{\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"25px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"500\",\n                                                            lineHeight: \"30px\",\n                                                        }}\n                                                    >\n                                                        Personal Information\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"Text-fields1\">\n                                                    <TextField\n                                                        label=\"First Name\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"50%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                first_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.first_name}\n                                                        required={true}\n                                                    ></TextField>\n                                                    <TextField\n                                                        label=\"Middle Name\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"50%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                middle_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.middle_name}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"Last Name\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                last_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.last_name}\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"Date-of-birth1\">\n                                                    <LocalizationProvider\n                                                        dateAdapter={AdapterDayjs}\n                                                    >\n                                                        <DemoContainer components={[\"DatePicker\"]}>\n                                                            <DatePicker\n                                                                label=\"Date of Birth\"\n                                                                sx={{\n                                                                    width: \"100%\",\n                                                                    color: \"#787579\",\n                                                                    height: \"100%\",\n                                                                }}\n                                                                onChange={(newValue) => {\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        DOB: `${newValue?.$y}-${\n                                                                            Number(newValue?.$M) + 1\n                                                                        }-${newValue?.$D}`,\n                                                                    });\n                                                                }}\n                                                                // DOB : `${newValue?.$y}-${Number(newValue?.$M) + 1}-${newValue?.$D}`,\n                                                            />\n                                                        </DemoContainer>\n                                                    </LocalizationProvider>\n                                                </div>\n                                                <div className=\"gender1\">\n                                                    <CustomDropdown\n                                                        label={\"Gender\"}\n                                                        items={dropdownItems}\n                                                        activeItem={updateUserData?.gender}\n                                                        handleChange={(item) =>\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                gender: item,\n                                                            })\n                                                        }\n                                                        dropdowncss={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                    />\n                                                </div>\n                                            </Box>\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"30%\",\n                                                    }}\n                                                    isDisabled={\n                                                        updateUserData.first_name != null &&\n                                                        updateUserData.last_name != null &&\n                                                        updateUserData.DOB != null &&\n                                                        updateUserData.gender != null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 1 ? (\n                                <>\n                                    <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                                        <div className=\"mainBox1\">\n                                            <Box sx={{ width: \"40%\" }}>\n                                                <div className=\"heading1\">\n                                                    <Typography\n                                                        style={{\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"25px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"500\",\n                                                            lineHeight: \"30px\",\n                                                        }}\n                                                    >\n                                                        Qualification Information\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"Text-fields1\">\n                                                    <TextField\n                                                        label=\"Qualification\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                qualification: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={\n                                                            updateUserData?.qualification === null\n                                                                ? \"\"\n                                                                : updateUserData?.qualification\n                                                        }\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"other-fields1\">\n                                                    <TextField\n                                                        label=\"University\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                university_name: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={\n                                                            updateUserData?.university_name === null\n                                                                ? \"\"\n                                                                : updateUserData?.university_name\n                                                        }\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"Date-of-birth1\">\n                                                    <LocalizationProvider\n                                                        dateAdapter={AdapterDayjs}\n                                                    >\n                                                        <DemoContainer components={[\"DatePicker\"]}>\n                                                            <DatePicker\n                                                                label=\"Year of Passing\"\n                                                                onChange={(newValue) =>\n                                                                    setUpdateUserData({\n                                                                        ...updateUserData,\n                                                                        qualified_year: `${newValue?.$y}`,\n                                                                    })\n                                                                }\n                                                                // qualified_year : `${newValue?.$y}-${Number(newValue?.$M) + 1}-${newValue?.$D}`,\n                                                            />\n                                                        </DemoContainer>\n                                                    </LocalizationProvider>\n                                                </div>\n                                                <div className=\"Degree\">\n                                                    <TextField\n                                                        label=\"Degree\"\n                                                        variant=\"standard\"\n                                                        style={{\n                                                            width: \"100%\",\n                                                            color: \"#787579\",\n                                                        }}\n                                                        onInput={(event) => {\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                degree: event.target.value,\n                                                            });\n                                                        }}\n                                                        value={updateUserData?.degree}\n                                                        required={true}\n                                                    ></TextField>\n                                                </div>\n                                                <div className=\"gender1\">\n                                                    <Box sx={{ width: \"100%\" }}>\n                                                        <CustomDropdown\n                                                            label={\"Specialist\"}\n                                                            dropdowncss={{ width: \"100%\" }}\n                                                            items={departmentName}\n                                                            minwidthDropDown=\"300px\"\n                                                            activeItem={activeDropdown}\n                                                            handleChange={(listItems) => {\n                                                                setActiveDropdown(listItems);\n                                                                let response =\n                                                                    departmentValue.filter(\n                                                                        (country) =>\n                                                                            country?.department_name?.includes(\n                                                                                listItems,\n                                                                            ),\n                                                                    );\n                                                                console.log(\n                                                                    \"speacilist ID : \",\n                                                                    response[0]?.department_id,\n                                                                );\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    speciality_id:\n                                                                        response[0]?.department_id,\n                                                                });\n                                                            }}\n                                                        />\n                                                    </Box>\n                                                </div>\n                                            </Box>\n\n                                            <div className=\"sve-btn\">\n                                                <CustomButton\n                                                    handleClick={handleNext}\n                                                    label=\"Next\"\n                                                    buttonCss={{\n                                                        width: \"30%\",\n                                                    }}\n                                                    isDisabled={\n                                                        updateUserData?.qualification != null &&\n                                                        updateUserData?.university_name != null &&\n                                                        updateUserData?.qualified_year != null &&\n                                                        updateUserData?.degree != null &&\n                                                        updateUserData?.speciality_id != null\n                                                            ? false\n                                                            : true\n                                                    }\n                                                >\n                                                    {activeStep === steps.length - 1\n                                                        ? \"Finish\"\n                                                        : \"Next\"}\n                                                </CustomButton>\n                                            </div>\n                                        </div>\n                                    </Box>\n                                </>\n                            ) : activeStep === 2 ? (\n                                <>\n                                    <div className=\"mainBox1\">\n                                        {/* <div className=\"back-btn\">\n                                            <Button\n                                                color=\"inherit\"\n                                                disabled={activeStep === 0}\n                                                onClick={handleBack}\n                                                sx={{ mr: 1 }}\n                                            >\n                                                Back\n                                            </Button>\n                                        </div> */}\n                                        <Box sx={{ width: \" 40%\" }}>\n                                            <div className=\"Doc-heading\">\n                                                <Typography\n                                                    style={{\n                                                        fontFamily: \"poppins\",\n                                                        fontSize: \"25px\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                    }}\n                                                >\n                                                    Doctor's Professional Information\n                                                </Typography>\n                                            </div>\n                                            <div className=\"Text-fields1\">\n                                                <TextField\n                                                    label=\"State Registration No\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            state_reg_number: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.state_reg_number}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                            <div className=\"reg-date1\">\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                    <DemoContainer components={[\"DatePicker\"]}>\n                                                        <DatePicker\n                                                            label=\"State Registration Date\"\n                                                            onChange={(newValue) =>\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    state_reg_date: `${\n                                                                        newValue?.$y\n                                                                    }-${Number(newValue?.$M) + 1}-${\n                                                                        newValue?.$D\n                                                                    }`,\n                                                                })\n                                                            }\n                                                        />\n                                                    </DemoContainer>\n                                                </LocalizationProvider>\n                                            </div>\n\n                                            <div className=\"indian-reg-no\">\n                                                <TextField\n                                                    label=\"Country Registration No\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            country_reg_number: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.country_reg_number}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"Registration-date\">\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                    <DemoContainer components={[\"DatePicker\"]}>\n                                                        <DatePicker\n                                                            label=\"Country Registration Date\"\n                                                            onChange={(newValue) =>\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    country_reg_date: `${\n                                                                        newValue?.$y\n                                                                    }-${Number(newValue?.$M) + 1}-${\n                                                                        newValue?.$D\n                                                                    }`,\n                                                                })\n                                                            }\n                                                        />\n                                                    </DemoContainer>\n                                                </LocalizationProvider>\n                                            </div>\n                                        </Box>\n                                        <div className=\"sve-btn\">\n                                            <CustomButton\n                                                handleClick={handleNext}\n                                                label=\"Next\"\n                                                buttonCss={{\n                                                    width: \"30%\",\n                                                }}\n                                                isDisabled={\n                                                    updateUserData?.state_reg_number != null &&\n                                                    updateUserData?.state_reg_date != null &&\n                                                    updateUserData?.country_reg_number != null &&\n                                                    updateUserData?.country_reg_date != null\n                                                        ? false\n                                                        : true\n                                                }\n                                            >\n                                                {activeStep === steps.length - 1\n                                                    ? \"Finish\"\n                                                    : \"Next\"}\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 3 ? (\n                                <>\n                                    <div className=\"mainBox1\">\n                                        <Box sx={{ width: \" 40%\" }}>\n                                            <div className=\"heading\">\n                                                <Typography\n                                                    style={{\n                                                        fontFamily: \"poppins\",\n                                                        fontSize: \"25px\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                    }}\n                                                >\n                                                    Clinic Information\n                                                </Typography>\n                                            </div>\n\n                                            <div className=\"Text-fieldscss\">\n                                                <TextField\n                                                    label=\"Council Name\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            council_name: event.council_name,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.council_name}\n                                                    required={true}\n                                                ></TextField>\n                                            </div><div className=\"Text-fieldscss\">\n                                                <TextField\n                                                    label=\"Business Name\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            business_name: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.business_name}\n                                                ></TextField>\n                                            </div><div className=\"Text-fieldscss\">\n                                                <TextField\n                                                    label=\"Street Line1\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            street_address1: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.street_address1}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                            <div className=\"reg-date\">\n                                                <TextField\n                                                    label=\"Street Line2\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            street_address2: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.street_address2}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"gender2\">\n                                                <Box sx={{ width: \"100%\" }}>\n                                                    <CustomDropdown\n                                                        label={\"Country\"}\n                                                        dropdowncss={{ width: \"100%\" }}\n                                                        items={countryNames}\n                                                        minwidthDropDown=\"300px\"\n                                                        activeItem={activeDropdown}\n                                                        handleChange={(listItems) => {\n                                                            setActiveDropdown(listItems);\n                                                            let response = countryValues.filter(\n                                                                (country) =>\n                                                                    country?.country_name?.includes(\n                                                                        listItems,\n                                                                    ),\n                                                            );\n                                                            console.log(\n                                                                \"Country response : \",\n                                                                response[0]?.country_id,\n                                                            );\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                country_id: response[0]?.country_id,\n                                                            });\n                                                            setSelectedCountryFromDropDown(\n                                                                response,\n                                                            );\n                                                        }}\n                                                        // dropdowncss={{ width:\"300px\" }}\n                                                    />\n                                                </Box>\n                                            </div>\n\n                                            <div className=\"indian-reg-no\">\n                                                <Box sx={{ width: \"100%\" }}>\n                                                    <CustomDropdown\n                                                        label={\"State\"}\n                                                        dropdowncss={{ width: \"100%\" }}\n                                                        items={stateNames}\n                                                        minwidthDropDown=\"300px\"\n                                                        activeItem={stateName}\n                                                        handleChange={(listItems) => {\n                                                            let response = stateValue.filter(\n                                                                (state) =>\n                                                                    state?.state_name?.includes(\n                                                                        listItems,\n                                                                    ),\n                                                            );\n                                                            // console.log(\"State ID : \" , response[0].state_id)\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                state_id: response[0]?.state_id,\n                                                            });\n                                                            setSelectCityFromDropDown(response);\n                                                            setStateName(listItems);\n                                                        }}\n                                                        // dropdowncss={{ width:\"300px\" }}\n                                                    />\n                                                </Box>\n                                            </div>\n\n                                            <div className=\"Registration-date\">\n                                                <Box sx={{ width: \"100%\" }}>\n                                                    <CustomDropdown\n                                                        label={\"City\"}\n                                                        dropdowncss={{ width: \"100%\" }}\n                                                        items={cityNames}\n                                                        minwidthDropDown=\"300px\"\n                                                        activeItem={citySelected}\n                                                        handleChange={(listItems) => {\n                                                            setCitySelected(listItems);\n                                                            let response = cityValues.filter(\n                                                                (city) =>\n                                                                    city?.city_name?.includes(\n                                                                        listItems,\n                                                                    ),\n                                                            );\n                                                            setUpdateUserData({\n                                                                ...updateUserData,\n                                                                city_id: response[0]?.city_id,\n                                                            });\n                                                        }}\n                                                        // dropdowncss={{ width:\"300px\" }}\n                                                    />\n                                                </Box>\n                                            </div>\n\n                                            <div className=\"Registration-date\">\n                                                <TextField\n                                                    label=\"Zip Code\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            zip_code: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.zip_code}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                        </Box>\n                                    </div>\n\n                                    <div className=\"sve-btn\">\n                                        <CustomButton\n                                            handleClick={handleNext}\n                                            label=\"Next\"\n                                            buttonCss={{\n                                                width: \"30%\",\n                                            }}\n                                            isDisabled={\n                                                updateUserData?.street_address1 != null &&\n                                                updateUserData?.country_id != null &&\n                                                updateUserData?.state_id != null &&\n                                                updateUserData?.city_id != null &&\n                                                updateUserData?.zip_code != null\n                                                    ? false\n                                                    : true\n                                            }\n                                        >\n                                            {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                                        </CustomButton>\n                                    </div>\n                                    {/* <div className=\"skip-btn\">\n                                        <CustomButton\n                                            label=\"Skip\"\n                                            isTransaprent={\"True\"}\n                                            isStepOptional\n                                            handleClick={handleSkip}\n                                            buttonCss={{\n                                                width: \"30%\",\n                                            }}\n                                        ></CustomButton>\n                                    </div> */}\n                                </>\n                            ) : activeStep === 4 ? (\n                                <>\n                                    <div className=\"mainBox1\">\n                                        {/* <div className=\"back-btn\">\n                                            <Button\n                                                color=\"inherit\"\n                                                disabled={activeStep === 0}\n                                                onClick={handleBack}\n                                                sx={{ mr: 1 }}\n                                            >\n                                                Back\n                                            </Button>\n                                        </div> */}\n                                        <Box sx={{ width: \"40%\" }}>\n                                            <div className=\"Doc-heading\">\n                                                <Typography\n                                                    style={{\n                                                        fontFamily: \"poppins\",\n                                                        fontSize: \"25px\",\n                                                        fontStyle: \"normal\",\n                                                        fontWeight: \"500\",\n                                                        lineHeight: \"30px\",\n                                                    }}\n                                                >\n                                                    Doctor's License Information\n                                                </Typography>\n                                            </div>\n                                            <div className=\"Text-fields1\">\n                                                <TextField\n                                                    label=\"License Title\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_title: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_title}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                            <div className=\"reg-date1\">\n                                                <TextField\n                                                    label=\"License Certificate Number\"\n                                                    variant=\"standard\"\n                                                    type=\"number\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_certificate_no: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_certificate_no}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"indian-reg-no\">\n                                                <TextField\n                                                    label=\"License Issued By\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_issuedby: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_issuedby}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n\n                                            <div className=\"Registration-date\">\n                                                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                                    <DemoContainer components={[\"DatePicker\"]}>\n                                                        <DatePicker\n                                                            label=\"License Issue Date\"\n                                                            onChange={(newValue) => {\n                                                                console.log(\n                                                                    `${newValue?.$y}-${\n                                                                        Number(newValue?.$M) + 1\n                                                                    }-${newValue?.$D}`,\n                                                                );\n\n                                                                setUpdateUserData({\n                                                                    ...updateUserData,\n                                                                    lic_date: `${newValue?.$y}-${\n                                                                        Number(newValue?.$M) + 1\n                                                                    }-${newValue?.$D}`,\n                                                                });\n                                                            }}\n                                                        />\n                                                    </DemoContainer>\n                                                </LocalizationProvider>\n                                            </div>\n                                            <div className=\"Registration-date\">\n                                                <TextField\n                                                    label=\"License Description\"\n                                                    variant=\"standard\"\n                                                    style={{\n                                                        width: \"100%\",\n                                                        color: \"#787579\",\n                                                    }}\n                                                    onInput={(event) => {\n                                                        setUpdateUserData({\n                                                            ...updateUserData,\n                                                            lic_description: event.target.value,\n                                                        });\n                                                    }}\n                                                    value={updateUserData?.lic_description}\n                                                    required={true}\n                                                ></TextField>\n                                            </div>\n                                        </Box>\n                                        <div className=\"sve-btn\">\n                                            <CustomButton\n                                                handleClick={() => {\n                                                    setFlagToSendDoctorData(true);\n                                                }}\n                                                label=\"Submit\"\n                                                buttonCss={{\n                                                    width: \"30%\",\n                                                }}\n                                                isDisabled={\n                                                    updateUserData?.lic_title != null &&\n                                                    updateUserData?.lic_certificate_no != null &&\n                                                    updateUserData?.lic_issuedby != null &&\n                                                    updateUserData?.lic_date != null &&\n                                                    updateUserData?.lic_description != null\n                                                        ? false\n                                                        : true\n                                                }\n                                            >\n                                                {activeStep === steps.length - 1\n                                                    ? \"Finish\"\n                                                    : \"Next\"}\n                                            </CustomButton>\n                                        </div>\n                                    </div>\n                                </>\n                            ) : activeStep === 5 ? (\n                                <Box sx={{ width: \"100%\" }}>\n                                    <div className=\"imge-cont\">\n                                        <div className=\"card-cont1\">\n                                            <div className=\"card1\">\n                                                <div className=\"last-image\">\n                                                    <Box\n                                                        sx={{ width: \"222px\", height: \"252px\" }}\n                                                        component={\"img\"}\n                                                        src={ClassicFrame}\n                                                    ></Box>\n                                                </div>\n                                                <div className=\"greetings1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#313033\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"16px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"600\",\n                                                            lineHeight: \"24px\",\n                                                        }}\n                                                    >\n                                                        Your choice to register with us fills us\n                                                        with immense gratitude\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"note1\">\n                                                    <Typography\n                                                        style={{\n                                                            color: \"#939094\",\n                                                            fontFamily: \"poppins\",\n                                                            fontSize: \"14px\",\n                                                            fontStyle: \"normal\",\n                                                            fontWeight: \"400\",\n                                                            lineHeight: \"21px\",\n                                                            letterSpacing: \"0.07px\",\n                                                        }}\n                                                    >\n                                                        Proceed to the login page to embark upon thy\n                                                        journey henceforth\n                                                    </Typography>\n                                                </div>\n                                                <div className=\"done-btn1\">\n                                                    <CustomButton\n                                                        label=\"Proceed to Login, where your adventure awaits\"\n                                                        handleClick={() => navigate(\"/diagnostcliniclogin\")}\n                                                        buttonCss={{\n                                                            width: \"270px\",\n                                                            borderRadius: \"20px\",\n                                                        }}\n                                                    >\n                                                        Done\n                                                    </CustomButton>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Box>\n                            ) : (\n                                <h1>Completed</h1>\n                            )}\n                            ;\n                        </Typography>\n                        {/* <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                            <Box sx={{ flex: \"1 1 auto\" }} />\n                            {isStepOptional(activeStep) && (\n                                <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                    Skip\n                                </Button>\n                            )}\n                        </Box> */}\n                    </React.Fragment>\n                )}\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorSignup;\n","import React, { lazy, Suspense } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport PageLoader from \"./components/PageLoader\";\nimport Skeleton from \"@mui/material/Skeleton\";\nimport Usage from \"./pages/Usage\";\n// import SelectRoleLogin from \"./auth/RoleSelection/SelectRoleLogin\";\nimport PatientLogin from \"./Role/Login/PatientModule/PatientLogin/PatientLogin\";\nimport ForgotPassword from \"./Role/ForgotPassword/ForgotPassword\";\nimport ForgotPasswordOTP from \"./Role/ForgotPasswordOTP/ForgotPasswordOTP\";\nimport ForgotPasswordChange from \"./Role/ForgotPasswordChange/ForgotPasswordChange\";\nimport LoginWithOtp from \"./Role/LoginwithOTP/LoginWithOTP\";\nimport LoginWithOtpVerify from \"./Role/LoginWithOTPVerify/LoginWithOTPVerify\";\nimport SignupPage from \"./Role/Signup/SignupPage/SignupPage\";\nimport PatientCompleteProfile from \"./Role/Signup/PatientCompleteProfile/PatientCompleteProfile\";\nimport EmailVerification from \"./Role/EmailVerification/EmailVerification\";\nimport PatientPersonalInformation from \"./Role/Login/PatientModule/PatientPersonalInformation/patientpersonalinformation\";\nimport PatientContactInformation from \"./Role/Login/PatientModule/PatientContactInformation/patientcontactinformation\";\nimport PatientPaymentInformation from \"./Role/Login/PatientModule/PatientPaymentInformation/patientpaymentinformation\";\nimport HcfLogin from \"./pages/HCFModule/HCFLogin/hcflogin\";\nimport HcfDashboard from \"./pages/HCFModule/HCFDashboard/hcfdashboard\";\nimport Homes from \"./pages/landingPage/Home/Homes\";\nimport HowItWorks from \"./pages/landingPage/How it Works/Howitworks\";\nimport AboutLanding from \"./pages/landingPage/About/AboutLanding\";\nimport { UserProvider } from \"./loginComponent/UserProvider\";\nimport {\n    DoctorAuthentication,\n    HealthCareAuthentication,\n    PatientAuthentication,\n    ClinicAuthentication,\n    DiagnostAuthentication,\n} from \"./loginComponent/RequireAuthentication\";\nimport BodyDashboard from \"./PatientDashboard/BodyDashboard/BodyDashboard\";\nimport Explore from \"./PatientDashboard/Explore/Explore\";\nimport Profile from \"./PatientDashboard/Profile/Profile\";\nimport DrDetailsCard from \"./PatientDashboard/DrDetailsCard/DrDetailsCard\";\nimport Received from \"./PatientDashboard/MyActivity/Received/Received\";\nimport Shared from \"./PatientDashboard/MyActivity/Shared/Shared\";\nimport Upcoming from \"./PatientDashboard/PatientAppointment/UpComing/Upcoming\";\nimport Completed from \"./PatientDashboard/PatientAppointment/Completed/Completed\";\nimport Cancelled from \"./PatientDashboard/PatientAppointment/Cancelled/Cancelled\";\n// import Chats from \"./Dashboard/PatientAppointment/Chats/Chats\";\nimport AppointmentDashboard from \"./PatientDashboard/PatientAppointment/AppointmentDashboard\";\nimport MainDashboard from \"./PatientDashboard/MainDashboard/MainDashboard\";\nimport Payment from \"./PatientDashboard/Profile/Payment\";\nimport Contact from \"./PatientDashboard/Profile/ContactDetails\";\n// import { AllFiles } from \"./Dashboard/PatientManage/Reports/AllFiles/AllFiles\";\nimport DoctorDashboard from \"./DoctorModule/DoctorDashboard/doctordashboard\";\nimport DoctorLogin from \"./DoctorModule/DoctorLogin/doctorlogin\";\nimport DoctorAppointmentDashboard from \"./DoctorModule/DoctorAppointmentDashboard/DoctorAppointmentDashboard\";\n\nimport DoctorManage from \"./DoctorModule/DoctorManage/DoctorManage\";\nimport DoctorListing from \"./DoctorModule/DoctorListing/DoctorListing\";\n\nimport DoctorSavedDraft from \"./DoctorModule/DoctorListing/DoctorSavedDraft/DoctorSavedDraft\";\n\nimport DoctorStatistics from \"./DoctorModule/DoctorStatistics/DoctorStatistics\";\nimport DoctorPayout from \"./DoctorModule/DoctorStatistics/DoctorPayout/DoctorPayout\";\n// import HCFRoleType from \"./pages/HCFRoleType/HCFRoleType\";\nimport HCFRoleType from \"./Role/RoleSelection/SelectHCFRoleLogin/SelectHCFRoleLogin\";\nimport DiagnosticLogin from \"./HCFModule/HCFLogin/DisgnostLogin/DiagnostLogin\";\nimport ClinicLogin from \"./HCFModule/HCFLogin/ClinicLogin/ClinicLogin\";\nimport DiagnosticCenterDashboard from \"./HCFModule/HCFDashboard/DiagnosticCenterDashboard/DiagnosticCenterDashboard\";\nimport ClinicMainDashboard from \"./HCFModule/HCFDashboard/ClinicDashboard/ClinicMainDashboard\";\nimport DiagnosticCenterProfile from \"./HCFModule/DiagnosticCenter/DiagnosticProfile/DiagnstCenterProfileDashboard\";\n\nimport DiagnosticCenterManage from \"./HCFModule/DiagnosticCenter/DiagnosticManage/DiagnosticCenterManage\";\nimport ClinicDashboard from \"./HCFModule/Clinic/ClinicDashboard/ClinicDashboard\";\nimport ClinicMyAppointments from \"./HCFModule/Clinic/ClinicMyAppointments/ClinicMyAppointments\";\nimport ClinicProfile from \"./HCFModule/Clinic/ClinicProfile/ClinicProfile\";\nimport ClinicManage from \"./HCFModule/Clinic/ClinicManage/ClinicManage\";\nimport ClinicSalesActivities from \"./HCFModule/Clinic/ClinicManage/ClinicStaff/ClinicSalesActivities\";\nimport SelectRoleSignup from \"./Role/RoleSelection/SelectRoleSignup/SelectRoleSignup\";\nimport DoctorCompleteProfile from \"./Role/Signup/DoctorCompleteProfile/DoctorCompleteProfile\";\nimport SelectHCFSignup from \"./Role/Signup/HCFCompleteProfile/SelectHCFSignup\";\nimport AdminMainDashboard from \"./HCFModule/HCFDashboard/AdminDashboard/AdminDashboard\";\nimport AdminDoctor from \"./HCFModule/HCFAdmin/AdminDoctor/AdminDoctor\";\nimport AdminProfile from \"./HCFModule/HCFAdmin/AdminProfile/AdminProfile\"\nimport HCFBlocked from \"./HCFModule/HCFAdmin/AdminDoctor/Blocked/Blocked\";\nimport HCFAddDoctors from \"./HCFModule/HCFAdmin/AdminDoctor/AddDoctor/AddDoctor\";\nimport HCFAddPackage from \"./HCFModule/HCFAdmin/AdminDoctor/AddPackage/AddPackage\";\nimport AdminDiagnosticCenter from \"./HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminDiagnosticCenter\";\nimport AdminManage from \"./HCFModule/HCFAdmin/AdminManage/AdminManage\";\n// import AdminManageStaff from \"./HCFModule/HCFAdmin/AdminManage/AdminManageStaff/AdminManageStaff\";\nimport AdminManageAuditLog from \"./HCFModule/HCFAdmin/AdminManage/AdminManageAuditLog/AdminManageAuditLog\";\nimport DiagnostSignUp from \"./Role/Signup/HCFCompleteProfile/DiagnosticCompleteProfile/DiagnosticCompleteProfile\";\nimport ClinicSignUp from \"./Role/Signup/HCFCompleteProfile/ClinicCompleteProfile/ClinicCompleteProfile\";\nimport HcfAdminSignUp from \"./Role/Signup/HCFCompleteProfile/HCFAdminCompleteProfile/HCFAdminCompleteProfile\";\nimport TermsAndCondition from \"./DoctorModule/DoctorListing/CreateNewListing/TermsAndCondition/TermsAndCondition\";\nimport DoctorPersonalInfo from \"./DoctorModule/DoctorProfile/DoctorProfileInfo/DoctorPersonalInfo\";\nimport DoctorProssionalInfo from \"./DoctorModule/DoctorProfile/DoctorProfessionalInfo/DoctorProfessionalInfo\";\nimport DiagnosticCenterReports from \"./HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterReports\";\nimport DiagnosticPatientChats from \"./HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterChat/DiagnostCenterChats\";\nimport DiagnosticCenterCharts from \"./HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticCenterCharts/DiagnosticCenterCharts\";\nimport BookingHistory from \"./PatientDashboard/PatientManage/BookingHistory/BookingHistory\";\nimport Transactions from \"./PatientDashboard/PatientManage/Transactions/Transactions\";\nimport Reports from \"./PatientDashboard/PatientManage/Reports/Reports\";\nimport AllFiles from \"./PatientDashboard/PatientManage/Reports/AllFiles/AllFiles\";\nimport Examined from \"./PatientDashboard/PatientManage/Reports/examined/Examined\";\nimport Subscriptions from \"./PatientDashboard/PatientManage/Subscription/Subscription\";\nimport VideoCall from \"./DoctorModule/DoctorAppointmentDashboard/DoctorChat/VideoCall\";\nimport VoiceCall from \"./DoctorModule/DoctorAppointmentDashboard/DoctorChat/VoiceCall\";\nimport HCFDetailedCard from \"./Role/Login/PatientModule/PatientHCF/DrDetailsCard/HCFDetailedCard\";\nimport SuperAdminBody from \"./SuperAdmin/SuperAdminBody/SuperAdminBody\";\nimport DiagnostLabs from \"./HCFModule/HCFAdmin/AdminDiagnosticCenter/Labs/DiagnostLabs\";\nimport SuperAdminDashboard from \"./SuperAdmin/SuperAdminDashboard/SuperAdminDashboard\";\nimport SuperAdminHistory from \"./SuperAdmin/SuperAdminHistory/SuperAdminhistory\";\nimport SuperAdminDoctor from \"./SuperAdmin/SuperAdminAcessibility/SuperAdminDoctor/SuperAdminDoctor\";\n\nimport SuperAdminPatient from \"./SuperAdmin/SuperAdminAcessibility/SuperAdminpatient/SuperAdminPatient\";\nimport SuperAdminLogsBody from \"./SuperAdmin/SuperAdminLogs/SuperAdminLogsBody\";\nimport SuperAdminLogs from \"./SuperAdmin/SuperAdminLogs/SuperAdminAuditLogs/SuperAdminAuditLogs\";\nimport SuperAdminMainDashboard from \"./SuperAdmin/SuperAdminDashboard/SuperAdminMainDashboard/superadminmaindashboard\";\nimport SuperAdminHCF from \"./SuperAdmin/SuperAdminAcessibility/SuperAdminHCF/SuperAdminHCF\";\nimport SuperAdminHistoryDoctor from \"./SuperAdmin/SuperAdminHistory/SuperAdminHistoryDoctor/SuperAdminHistoryDoctor\";\nimport SuperAdminHistoryPatient from \"./SuperAdmin/SuperAdminHistory/SuperAdminHistoryPatient/SuperAdminHistoryPatient\";\nimport SuperAdminHistoryHCF from \"./SuperAdmin/SuperAdminHistory/SuperAdminHistoryHCF/SuperAdminHistoryHCF\";\nimport SuperAdminPackage from \"./SuperAdmin/SuperAdminPackage/SuperAdminPackage\";\nimport PackagePatient from \"./SuperAdmin/SuperAdminPackage/PackagePatient/PackagePatient\";\nimport PackageDoctor from \"./SuperAdmin/SuperAdminPackage/PackageDoctor/PackageDoctor\";\nimport SuperAdminAccessibilty from \"./SuperAdmin/SuperAdminAcessibility/SuperAdminAccessibility\";\n\nimport SuperAdminTransaction from \"./SuperAdmin/SuperAdminTransaction/SperAdminTransaction\";\nimport SuperAdminTranDoctors from \"./SuperAdmin/SuperAdminTransaction/TransactionDoctors/SuperAdminTranDoctors\";\nimport SuperAdminTranHCF from \"./SuperAdmin/SuperAdminTransaction/TransactionHCF/SuperAdminTranHCF\";\nimport About from \"./Role/Login/PatientModule/PatientHCF/DrDetailsCard/About/About\";\nimport Department from \"./Role/Login/PatientModule/PatientHCF/DrDetailsCard/Department/Department\";\nimport Labs from \"./Role/Login/PatientModule/PatientHCF/DrDetailsCard/Labs/Labs\";\n// import SignUpHcf from \"./pages/SignUpHCF/SignUpHCF\";\nimport SelectRoleLogin from \"./Role/RoleSelection/SelectRoleLogin\";\nimport HcfAdminLogin from \"./Role/Login/PatientModule/HCFAdminLogin/HCFAdminLogin\";\nimport SuperAdminLogin from \"./Role/Login/PatientModule/SuperAdminLogin/SuperAdminLogin\";\nimport VideoCallingSDK from \"./VideoCalling/VideoCallingSDK\";\nimport ChatRoom from \"./ChatsScreen/ChatRoom\";\nimport AdminLabDetail from \"./HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminLabs/AdminLabDetails/AdminLabDetail\";\nimport HcfDrDetailsCard from \"./PatientDashboard/DrDetailsCard/HcfDrDetailsCard\";\n\nconst ManageDashboard = lazy(() => import(\"./PatientDashboard/PatientManage/ManageDashboard\"));\n// import MyActivity from \"./PatientDashboard/MyActivity/MyActivity\";\nconst LazyPatientMyActivity = lazy(() => import(\"./PatientDashboard/MyActivity/MyActivity\"));\n\nconst LazyDoctorrequest = lazy(() => import(\"./DoctorModule/DoctorMainDashboard/Request.js/Request\"),\n);\n\nconst LazyDoctorNotification = lazy(() =>\n    import(\"./DoctorModule/DoctorMainDashboard/Notification.js/Notification\"),\n);\n\nconst LazyDoctorUpcoming = lazy(() =>\n    import(\"./DoctorModule/DoctorAppointmentDashboard/DoctorUpcoming/DoctorUpcoming\"),\n);\n\nconst LazyDoctorRequest = lazy(() =>\n    import(\"./DoctorModule/DoctorAppointmentDashboard/DoctorRequest/DoctorRequest\"),\n);\n\nconst LazyDoctorCompleted = lazy(() =>\n    import(\"./DoctorModule/DoctorAppointmentDashboard/DoctorCompleted/DoctorCompleted\"),\n);\n\nconst LazyDoctorCancelled = lazy(() =>\n    import(\"./DoctorModule/DoctorAppointmentDashboard/DoctorCancelled/DoctorCancelled\"),\n);\n\nconst LazyDoctorActiveListing = lazy(() =>\n    import(\"./DoctorModule/DoctorListing/DoctorActiveListing/DoctorActiveLising\"),\n);\n\nconst LazyDoctorSavedDraft = lazy(() =>\n    import(\"./DoctorModule/DoctorListing/DoctorSavedDraft/DoctorSavedDraft\"),\n);\n\nconst LazyDoctorBookingHistory = lazy(() =>\n    import(\"./DoctorModule/DoctorStatistics/DoctorBookingHistory/DoctorBookingHistory\"),\n);\n\nconst LazyDoctorTransaction = lazy(() =>\n    import(\"./DoctorModule/DoctorStatistics/DoctorTransactions/DoctorTransaction\"),\n);\n\nconst LazyDoctorOverview = lazy(() =>\n    import(\"./DoctorModule/DoctorStatistics/DoctorOverview/DoctorOverview\"),\n);\n\nconst LazyDoctorPayout = lazy(() =>\n    import(\"./DoctorModule/DoctorStatistics/DoctorPayout/DoctorPayout\"),\n);\n\nconst LazyDoctorStaff = lazy(() => import(\"./DoctorModule/DoctorManage/DoctorStaff/DoctorStaff\"));\nconst LazyDoctorAuditLog = lazy(() =>\n    import(\"./DoctorModule/DoctorManage/DoctorAuditLog/doctorAuditLog\"),\n);\n\nconst LazyDiagnosticNotification = lazy(() =>\n    import(\n        \"./HCFModule/DiagnosticCenter/DiagnosticDashboard/DiagnosticNotification/DiagnosticNotification\"\n    ),\n);\n\nconst LazyDiagnosticProfileInformation = lazy(() =>\n    import(\n        \"./HCFModule/DiagnosticCenter/DiagnosticProfile/DiagnostCenterProfileInfo/DiagnostCenterProfileInfo\"\n    ),\n);\n\nconst LazyDiagnosticAuditLogs = lazy(() =>\n    import(\n        \"./HCFModule/DiagnosticCenter/DiagnosticManage/DiagnosticCenterAuditLog/diagnosticCenterAuditLog\"\n    ),\n);\n\nconst LazyClinicNotification = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicDashboard/ClinicNotification/Clinicnotification\"),\n);\nconst LazyClinicRequests = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicDashboard/ClinicRequests/ClinicRequests\"),\n);\n\nconst LazyClinicAppointmentRequest = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicMyAppointments/ClinicRequests/ClinicAppointmentRequest\"),\n);\n\nconst LazyClinicUpcoming = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicMyAppointments/ClinicUpcoming/ClinicUpcoming\"),\n);\n\nconst LazyClinicCompleted = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicMyAppointments/ClinicCompleted/ClinicCompleted\"),\n);\n\nconst LazyClinicCancelled = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicMyAppointments/ClinicCancelled/ClinicCancelled\"),\n);\n\nconst LazyClinicChats = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicMyAppointments/ClinicChats/ClinicChats\"),\n);\n\nconst LazyClinicProfileInformation = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicProfile/ClinicProfileInformation/ClinicProfileInformation\"),\n);\n\nconst LazyClinicProfessionalInformation = lazy(() => \n    import(\"./HCFModule/Clinic/ClinicProfile/ClinicProfessionalInformation/ClinicProfessionalInformation\") )\n\nconst LazyClinicSalesActivities = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicManage/ClinicStaff/ClinicSalesActivities\"),\n);\nconst LazyClinicAuditLog = lazy(() =>\n    import(\"./HCFModule/Clinic/ClinicManage/ClinicAuditLog/ClinicAuditLog\"),\n);\n\nconst LazyAdminNotification = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminDashboard/Notifications/HCFAdminNotification\"),\n);\nconst LazyAdminProfile = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminProfile/AdminProfile\"),\n);\nconst LazyAdminAllDoctors = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminDoctor/AllDoctors/AllDoctor\"),\n);\nconst LazyAdminActive = lazy(() => import(\"./HCFModule/HCFAdmin/AdminDoctor/Active/Active\"));\n\nconst LazyAdminLabs = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminLabs/AdminLabs\"),\n);\nconst LazyAdminStaff = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminStaff/AdminStaff\"),\n);\nconst LazyAdminBlocked = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminDiagnosticCenter/AdminBlocked/AdminBlocked\"),\n);\n\nconst LazyDoctorListingDetails = lazy(() =>\n    import(\"./DoctorModule/DoctorListing/DoctorListingDetails/DoctorListingDetails\"),\n);\n\nconst LazyDoctorAddPlans = lazy(() =>\n    import(\"./DoctorModule/DoctorListing/CreateNewListing/AddPlan/AddPlan\"),\n);\n\nconst LazyDoctorAddQuestioner = lazy(() =>\n    import(\"./DoctorModule/DoctorListing/CreateNewListing/AddQuestioner/AddQuestioner\"),\n);\n\nconst LazyAdminSalesActivities = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminManage/AdminManageSale/AdminManageSale\"),\n);\n\nconst LazyAdminOverview = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminManage/AdminOverview/AdminOverview\"),\n);\n\nconst LazyAdminBooking = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminManage/AdminManageBooking/AdminBooking\"),\n);\n\nconst LazyAdminPayout = lazy(() =>\n    import(\"./HCFModule/HCFAdmin/AdminManage/AdminManagePayout/AdminPayout\"),\n);\n\nconst LazyDiagnosticPatientSearch = lazy(() =>\n    import(\n        \"./HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagnosticPatientSearch/DiagnosticPatientSearch\"\n    ),\n);\n\nconst LazyDiagnosticPatientShared = lazy(() =>\n    import(\n        \"./HCFModule/DiagnosticCenter/DiagnosticCenterReports/DiagonisticCenterShared/DiagostCenterShared\"\n    ),\n);\n\nconst LazyDiagnosticSalesActivities = lazy(() =>\n    import(\n        \"./HCFModule/DiagnosticCenter/DiagnosticManage/DiagnostcCenterStaff/DiagnosticSalesActivities\"\n    ),\n);\n\nconst LazyDoctorChat = lazy(() =>\n    import(\"./DoctorModule/DoctorAppointmentDashboard/DoctorChat/DoctorChat\"),\n);\n\nconst LazySuperAdminDoctor = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminAcessibility/SuperAdminDoctor/SuperAdminDoctor\"),\n);\n\nconst LazySuperAdminPatient = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminAcessibility/SuperAdminpatient/SuperAdminPatient\"),\n);\n\nconst LazySuperAdminHCF = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminAcessibility/SuperAdminHCF/SuperAdminHCF\"),\n);\n\nconst LazySuperAdminHistoryDoctor = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminHistory/SuperAdminHistoryDoctor/SuperAdminHistoryDoctor\"),\n);\n\nconst LazySuperAdminHistoryPatient = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminHistory/SuperAdminHistoryDoctor/SuperAdminHistoryDoctor\"),\n);\n\nconst LazySuperAdminHistoryHCF = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminHistory/SuperAdminHistoryDoctor/SuperAdminHistoryDoctor\"),\n);\n\nconst LazySuperAdminPackagePatient = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminPackage/PackagePatient/PackagePatient\"),\n);\n\nconst LazySuperAdminPackageDoctor = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminPackage/PackageDoctor/PackageDoctor\"),\n);\n\nconst LazySuperAdminTranDoctor = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminTransaction/TransactionDoctors/SuperAdminTranDoctors\"),\n);\n\nconst LazySuperAdminTranHCF = lazy(() =>\n    import(\"./SuperAdmin/SuperAdminTransaction/TransactionHCF/SuperAdminTranHCF\"),\n);\nconst LazyPatientExplore = lazy(() => import(\"./PatientDashboard/Explore/Explore\"));\n\nconst NotFound = lazy(() => import(\"./components/NotFound\"));\n\nconst DevEnv = process.env.NODE_ENV;\n\nimport socketIO from \"socket.io-client\";\nimport Home from \"./ChatsScreen/components/Home\";\nimport ChatPage from \"./ChatsScreen/components/ChatPage\";\nimport HcfClinicSignup from \"./Role/Signup/HcfClinicSignup/HcfClinicSingup\";\n\nconsole.log('this is dev env : ',DevEnv);\n\nconst socket = socketIO.connect(\"http://localhost:4001\", {\n    // put here the url of backend\n    reconnectionAttempts: 5, // Attempt reconnection up to 5 times\n    reconnectionDelay: 1000, // Delay between reconnection attempts (1 second)\n    reconnectionDelayMax: 5000, // Max delay between reconnection attempts (5 seconds)\n});\n\nexport const AppRouter = () => (\n    <UserProvider>\n        <Suspense fallback={<PageLoader text=\"Please wait while we load your application\" />}>\n            <Routes>\n                {DevEnv && (\n                    <>\n                        <Route path=\"/usage\" element={<Usage />} />\n                        <Route path=\"/SelectRoleLogin\" element={<SelectRoleLogin />} />\n                        <Route path=\"/HCFRoleType\" element={<HCFRoleType />} />\n                        {/* <Route path=\"/hcfSignup\" element={<SignUpHcf />}></Route> */}\n                        <Route path=\"/patientLogin\" element={<PatientLogin />} />\n                        <Route path=\"/hcfAdminLogin\" element={<HcfAdminLogin />} />\n                        <Route path=\"/hcfAdminLogin\" element={<HcfAdminLogin />} />\n                        <Route path=\"/superAdminLogin\" element={<SuperAdminLogin />}></Route>\n\n                        <Route path=\"/\" element={<Homes />} />\n                        <Route path=\"/howItWorks\" element={<HowItWorks />} />\n                        <Route path=\"/aboutLanding\" element={<AboutLanding />} />\n\n                        {/* ------ signup routes start------ */}\n                        <Route path=\"/selectRoleSignup\" element={<SelectRoleSignup />}></Route>\n                        <Route path=\"/doctorCompleteProfile\" element={<DoctorCompleteProfile />}></Route>\n                        <Route path=\"/selectHcfSignup\" element={<SelectHCFSignup />}></Route>\n                        <Route path=\"/diagnostCenterSignup\" element={<DiagnostSignUp />}></Route>\n                        <Route path=\"/diagnostClinicSignup\" element={<ClinicSignUp />}></Route>\n                        <Route path=\"/hcfAdminSignup\" element={<HcfAdminSignUp />}></Route>\n                        {/* ------ signup routes ends------ */}\n                        <Route path=\"/ForgotPassword\" element={<ForgotPassword />} />\n                        <Route\n                            path=\"/ForgotPasswordOTP\"\n                            element={<ForgotPasswordOTP />}\n                        />\n                        <Route\n                            path=\"/ForgotPasswordChange\"\n                            element={<ForgotPasswordChange />}\n                        />\n                        <Route path=\"/LoginWithOtp\" element={<LoginWithOtp />} />\n                        <Route path=\"/LoginWithOtpVerify\" element={<LoginWithOtpVerify />} />\n                        <Route path=\"/signupPage\" element={<SignupPage />} />\n                        <Route\n                            path=\"/patientCompleteProfile\"\n                            element={<PatientCompleteProfile />}\n                        ></Route>\n                        <Route path=\"/emailVerification\" element={<EmailVerification />} />\n                        <Route\n                            path=\"/patientPersonalInformation\"\n                            element={<PatientPersonalInformation />}\n                        />\n                        <Route\n                            path=\"/patientContactInformation\"\n                            element={<PatientContactInformation />}\n                        />\n                        <Route\n                            path=\"/patientPaymentInformation\"\n                            element={<PatientPaymentInformation />}\n                        />\n                        {/* --------------------------- Patient Dashboard Routes starts-------------------------------------- */}\n                        <Route\n                            path=\"/patientDashboard\"\n                            element={\n                                <PatientAuthentication>\n                                    <BodyDashboard />\n                                </PatientAuthentication>\n                            }\n                        >\n                            {/* ------------------ Dashboard Route Starts ------------------------- */}\n                          \n                            <Route key={1} path=\"dashboard\" element={<MainDashboard />}>\n                                <Route\n                                    path=\"dashboard\"\n                                    element={\n                                        <PatientAuthentication>\n                                            <React.Suspense\n                                            fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}\n                                        >\n                                            <LazyPatientMyActivity>\n                                                <Route\n                                                    path=\"received\"\n                                                    element={<Received />}\n                                                ></Route>\n                                                <Route path=\"shared\" element={<Shared />}></Route>\n                                            </LazyPatientMyActivity>\n                                        </React.Suspense>\n                                        </PatientAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                {/* <Route key={2} path=\"explore\" element={<Explore />} /> */}\n\n                                {/* Explore Route */}\n                                <Route\n                                    path=\"explore\"\n                                    element={\n                                        <PatientAuthentication>\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazyPatientExplore></LazyPatientExplore>\n                                        </React.Suspense>\n                                        </PatientAuthentication>\n\n                                    }\n                                ></Route>\n\n                                <Route\n                                    path=\"myactivity\"\n                                    element={\n                                        <PatientAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                        <LazyPatientMyActivity></LazyPatientMyActivity>\n                                    </React.Suspense>\n                                    </PatientAuthentication>\n                                        \n                                    }\n                                >\n                                    <Route path=\"received\" element={<PatientAuthentication><Received /></PatientAuthentication>}></Route>\n                                    <Route path=\"shared\" element={<PatientAuthentication><Shared /></PatientAuthentication>}></Route>\n                                </Route>\n                                {/* \n                                <Route key={2} path=\"myactivity\" element={<MyActivity />}>\n                                    <Route path=\"received\" element={<Received />}></Route>\n                                    <Route path=\"shared\" element={<Shared />}></Route>\n                                </Route> */}\n                                <Route path={\"profile\"} element={<PatientAuthentication><Profile /></PatientAuthentication>}></Route>\n                                <Route path={\"payment\"} element={<PatientAuthentication><Payment /></PatientAuthentication>}></Route>\n                                <Route path={\"contact\"} element={<PatientAuthentication><Contact /></PatientAuthentication>}></Route>\n                                <Route path={\"patienthcf\"} element={<PatientAuthentication><HCFDetailedCard /></PatientAuthentication>}></Route>\n                            </Route>\n\n                            <Route path=\"appointment\" element={<PatientAuthentication><AppointmentDashboard /></PatientAuthentication>}>\n                                <Route path={\"upcoming\"} element={<PatientAuthentication><Upcoming /></PatientAuthentication>}></Route>\n                                <Route path={\"completed\"} element={<PatientAuthentication><Completed /></PatientAuthentication>}></Route>\n                                <Route path={\"cancelled\"} element={<PatientAuthentication><Cancelled /></PatientAuthentication>}></Route>\n                                <Route path={\"chats/:user/:roomID/:appointment_id\"} element={<PatientAuthentication><Home socket={socket} /></PatientAuthentication>}></Route>\n                                <Route\n                                    path={\"chats/:roomID/:appointment_id\"}\n                                    element={<PatientAuthentication><ChatPage socket={socket} /></PatientAuthentication>}\n                                />\n                                <Route path={\"profile\"} element={<PatientAuthentication><Profile /></PatientAuthentication>}></Route>\n                                <Route path={\"payment\"} element={<PatientAuthentication><Payment /></PatientAuthentication>}></Route>\n                                <Route path={\"contact\"} element={<PatientAuthentication><Contact /></PatientAuthentication>}></Route>\n                            </Route>\n\n                            <Route path=\"manage\" element={<PatientAuthentication><ManageDashboard /></PatientAuthentication>}>\n                                {/* <Route path=\"bookinghistory\" element={<HCFDetailedCard/>}></Route> */}\n                                <Route path=\"bookinghistory\" element={<PatientAuthentication><BookingHistory /></PatientAuthentication>}></Route>\n                                <Route path=\"transactions\" element={<PatientAuthentication><Transactions /></PatientAuthentication>}></Route>\n                                <Route path=\"reports\" element={<PatientAuthentication><Reports /></PatientAuthentication>}>\n                                    <Route path=\"request\" element={<PatientAuthentication><AllFiles /></PatientAuthentication>}></Route>\n                                    <Route path=\"examined\" element={<PatientAuthentication><Examined /></PatientAuthentication>}></Route>\n                                    <Route path=\"received\" element={<PatientAuthentication><Received /></PatientAuthentication>}></Route>\n                                    <Route path=\"shared\" element={<PatientAuthentication><Shared /></PatientAuthentication>}></Route>\n                                </Route>\n                                <Route path=\"subscriptions\" element={<PatientAuthentication><Subscriptions /></PatientAuthentication>}></Route>\n                                <Route path={\"profile\"} element={<PatientAuthentication><Profile /></PatientAuthentication>}></Route>\n                                <Route path={\"payment\"} element={<PatientAuthentication><Payment /></PatientAuthentication>}></Route>\n                                <Route path={\"contact\"} element={<PatientAuthentication><Contact /></PatientAuthentication>}></Route>\n                            </Route>\n\n                            {/* ------------------ Dashboard Route Ends ------------------------- */}\n\n                            <Route\n                                path=\"/patientDashboard/drDetailsCard/:resID\"\n                                element={<PatientAuthentication><DrDetailsCard /></PatientAuthentication>}\n                            ></Route>\n                            {/* patient hcf doctor details by id route */}\n                            <Route\n                                path=\"/patientDashboard/hcfDetailCard/hcfDoctor/:hcddocid/:reshcfID\"\n                                element={<PatientAuthentication><HcfDrDetailsCard /></PatientAuthentication>}\n                            ></Route>\n\n                            <Route\n                                path=\"/patientDashboard/hcfDetailCard/:hcfID\"\n                                element={<PatientAuthentication><HCFDetailedCard /></PatientAuthentication>}\n                            >\n                                <Route path=\"about\" element={<PatientAuthentication><About /></PatientAuthentication>} />\n                                <Route path=\"department\" element={<PatientAuthentication><Department /></PatientAuthentication>} />\n                                <Route path=\"labs\" element={<PatientAuthentication><Labs /></PatientAuthentication>} />\n                            </Route>\n                        </Route>\n\n                        {/* ---------------------------------- Patient Appointment Routes Ends---------------------------------------- */}\n\n                        {/* --------------------Doctor routes Starts------------------------------ */}\n                        <Route path=\"/doctorLogin\" element={<DoctorLogin />} />\n                        <Route path=\"doctorDashboard/doctorAppointment/chats/videoCall\"\n                            element={<VideoCall />}\n                        ></Route>\n\n                        <Route\n                            path=\"/doctorDashboard\"\n                            element={\n                               <DoctorAuthentication> \n                                <DoctorDashboard />\n                                </DoctorAuthentication>\n                            }\n                        >\n                            {/* /doctor/request */}\n                            {/* /request */}\n                            <Route\n                                path=\"doctorPersonalInfo\"\n                                element={<DoctorAuthentication><DoctorPersonalInfo /></DoctorAuthentication>}\n                            ></Route>\n                            <Route\n                                path=\"doctorProfessionalInfo\"\n                                element={<DoctorAuthentication><DoctorProssionalInfo /></DoctorAuthentication>}\n                            ></Route>\n\n                            <Route\n                                path=\"request\"\n                                element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                <LazyDoctorrequest />\n                            </React.Suspense></DoctorAuthentication>\n                                    \n                                }\n                            ></Route>\n                            <Route\n                                path=\"notification\"\n                                element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                <LazyDoctorNotification />\n                            </React.Suspense></DoctorAuthentication>\n                                    \n                                }\n                            ></Route>\n                            <Route\n                                path=\"doctorAppointment\"\n                                element={<DoctorAuthentication><DoctorAppointmentDashboard /></DoctorAuthentication>}\n                            >\n                                <Route\n                                    path=\"request\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorRequest />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n\n                                <Route\n                                    path=\"upcoming\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorUpcoming />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n\n                                <Route\n                                    path=\"completed\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorCompleted />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"cancelled\"\n                                    element={<DoctorAuthentication> <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorCancelled />\n                                </React.Suspense></DoctorAuthentication>\n                                       \n                                    }\n                                ></Route>\n                                <Route path={\"chats/:user/:roomID\"} element={<DoctorAuthentication><Home socket={socket} /></DoctorAuthentication>}></Route>\n                                <Route\n                                    path={\"chats/:user/:roomID/:appointment_id\"}\n                                    element={<DoctorAuthentication><ChatPage socket={socket} /></DoctorAuthentication>}\n                                />\n                                <Route\n                                    path={\"chats/:roomID\"}\n                                    element={<DoctorAuthentication><ChatPage socket={socket} /></DoctorAuthentication>}\n                                />\n                                {/* <Route\n                                    path=\"chats\"\n                                    element={\n                                        <React.Suspense fallback={<h1>wait for a while</h1>}>\n                                            <LazyDoctorChat />\n                                        </React.Suspense>\n                                    }\n                                ></Route> */}\n\n                                <Route\n                                    path=\"doctorPersonalInfo\"\n                                    element={<DoctorAuthentication><DoctorPersonalInfo /></DoctorAuthentication>}\n                                ></Route>\n\n                                <Route path=\"chats/voicecall\" element={<DoctorAuthentication><VoiceCall /></DoctorAuthentication>}></Route>\n                            </Route>\n                            {/* /doctor/listing */}\n                            <Route path=\"doctorListing\" element={<DoctorAuthentication><DoctorListing /></DoctorAuthentication>}>\n                                <Route\n                                    path=\"doctorPersonalInfo\"\n                                    element={<DoctorAuthentication><DoctorPersonalInfo /></DoctorAuthentication>}\n                                ></Route>\n                                <Route\n                                    path=\"doctoractiveListing\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorActiveListing />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                {/* Create listing start------- */}\n                                <Route\n                                    path=\"listingdetails\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorListingDetails />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"addplans\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorAddPlans />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"addquestioner\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorAddQuestioner />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"termandcondition\"\n                                    element={<DoctorAuthentication><TermsAndCondition /></DoctorAuthentication>}\n                                ></Route>\n                                {/* Create listing ends------- */}\n                                {/* Edit listing starts-------- */}\n                                <Route\n                                    path=\"editlistingdetails\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorListingDetails />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"editaddplans\"\n                                    element={<DoctorAuthentication> <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorAddPlans />\n                                </React.Suspense></DoctorAuthentication>\n                                       \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"editaddquestioner\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorAddQuestioner />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"edittermandcondition\"\n                                    element={<DoctorAuthentication><TermsAndCondition /></DoctorAuthentication>}\n                                ></Route>\n                                {/* Edit listing ends-------- */}\n                                <Route\n                                    path=\"doctorsavedInDraft\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorSavedDraft />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n\n                            <Route path=\"doctorStatistics\" element={<DoctorAuthentication><DoctorStatistics /></DoctorAuthentication>}>\n                                <Route\n                                    path=\"doctorPersonalInfo\"\n                                    element={<DoctorAuthentication><DoctorPersonalInfo /></DoctorAuthentication>}\n                                ></Route>\n                                <Route\n                                    path=\"doctorBookingHistory\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorBookingHistory />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"doctorTransaction\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorTransaction />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"doctorOverview\"\n                                    element={<DoctorAuthentication> <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorOverview />\n                                </React.Suspense></DoctorAuthentication>\n                                       \n                                    }\n                                ></Route>\n\n                                <Route\n                                    path=\"doctorPayout\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorPayout />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n\n                            <Route path=\"doctorManage\" element={<DoctorAuthentication><DoctorManage /></DoctorAuthentication>}>\n                                <Route\n                                    path=\"doctorPersonalInfo\"\n                                    element={<DoctorAuthentication><DoctorPersonalInfo /></DoctorAuthentication>}\n                                ></Route>\n                                <Route\n                                    path=\"doctorStaff\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorStaff />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"doctorAuditLog\"\n                                    element={<DoctorAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDoctorAuditLog />\n                                </React.Suspense></DoctorAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n                        </Route>\n\n                        {/* ------------------------------Doctor Routes Ends------------------------------- */}\n\n                        {/* ------------------------------HCF Route Starts------------------------------------ */}\n\n                        <Route path=\"/hcfLogin\" element={<HcfLogin />} />\n                        {/* -------------------Clinic Route Starts--------------------- */}\n                        <Route path=\"/diagnostClinicLogin\" element={<ClinicLogin />} />\n                        <Route\n                            path=\"/clinicDoctorCompleteProfile\"\n                            element={<ClinicAuthentication><HcfClinicSignup /></ClinicAuthentication>}\n                        ></Route>\n                        <Route path=\"/clinicDashboard\" element={<ClinicAuthentication><ClinicMainDashboard /></ClinicAuthentication>}>\n                            <Route path=\"clinicBodyDashboard\" element={<ClinicAuthentication><ClinicDashboard /></ClinicAuthentication>}>\n                                <Route\n                                    path=\"cliniRequests\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicRequests />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"clinicNotification\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicNotification />\n                                </React.Suspense>\n</ClinicAuthentication>\n }\n                                ></Route>\n                            </Route>\n                            <Route path=\"clinicMyAppointment\" element={<ClinicAuthentication><ClinicMyAppointments /></ClinicAuthentication>}>\n                                <Route\n                                    path=\"clinicRequest\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicAppointmentRequest />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"clinicUpcoming\"\n                                    element={<ClinicAuthentication> <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicUpcoming />\n                                </React.Suspense></ClinicAuthentication>\n                                       \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"clinicCompleted\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicCompleted />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"clinicCancelled\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicCancelled />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"clinicChats\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicChats />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n                            <Route path=\"clinicProfile\" element={<ClinicAuthentication><ClinicProfile /></ClinicAuthentication>}>\n                                <Route\n                                    path=\"profileInformation\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicProfileInformation />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"clinicProfessionalInformation\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicProfessionalInformation/>\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                                \n                                    }\n                                ></Route>\n                            </Route>\n                            <Route path=\"clinicManage\" element={<ClinicAuthentication><ClinicManage /></ClinicAuthentication>}>\n                                <Route\n                                    path=\"clinicSalesActivities\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicSalesActivities />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"clinicAuditLog\"\n                                    element={<ClinicAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyClinicAuditLog />\n                                </React.Suspense></ClinicAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n                        </Route>\n\n                        {/* -------------------Clinic Route Ends--------------------- */}\n\n                        {/* -------------Diagnost Center  Starts------------------ */}\n\n                        <Route path=\"/diagnostCenterLogin\" element={<DiagnosticLogin />} />\n                        <Route\n                            path=\"/diagnostCenterDashboard\"\n                            element={<DiagnostAuthentication><DiagnosticCenterDashboard /></DiagnostAuthentication>}\n                        >\n                            <Route\n                                path=\"notification\"\n                                element={<DiagnostAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                <LazyDiagnosticNotification />\n                            </React.Suspense></DiagnostAuthentication>\n                                    \n                                }\n                            ></Route>\n                            <Route\n                                path=\"diagnosticCenterReports\"\n                                element={<DiagnostAuthentication><DiagnosticCenterReports /></DiagnostAuthentication>}\n                            >\n                                <Route\n                                    path=\"request\"\n                                    element={<DiagnostAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDiagnosticPatientSearch />\n                                </React.Suspense></DiagnostAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"examination\"\n                                    element={<DiagnostAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDiagnosticPatientShared />\n                                </React.Suspense></DiagnostAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route path=\"report\" element={<DiagnostAuthentication><DiagnosticPatientChats /></DiagnostAuthentication>}></Route>\n                                <Route path=\"Chart\" element={<DiagnostAuthentication><DiagnosticCenterCharts /></DiagnostAuthentication>}></Route>\n                            </Route>\n                            <Route\n                                path=\"diagnostCenterProfile\"\n                                element={<DiagnostAuthentication><DiagnosticCenterProfile /></DiagnostAuthentication>}\n                            >\n                                <Route\n                                    path=\"diagnostCenterProfileInfo\"\n                                    element={<DiagnostAuthentication> <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDiagnosticProfileInformation />\n                                </React.Suspense></DiagnostAuthentication>\n                                       \n                                    }\n                                ></Route>\n                            </Route>\n                            <Route\n                                path=\"diagnosticCenterManage\"\n                                element={<DiagnostAuthentication><DiagnosticCenterManage /></DiagnostAuthentication>}\n                            >\n                                <Route\n                                    path=\"diagnostSalesActivities\"\n                                    element={<DiagnostAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDiagnosticSalesActivities />\n                                </React.Suspense></DiagnostAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"diagnostCenterAuditLog\"\n                                    element={<DiagnostAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyDiagnosticAuditLogs />\n                                </React.Suspense></DiagnostAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n                        </Route>\n                        {/* -----------Diagnost Center  Ends---------------------- */}\n\n                        {/* -------------HCF Routes Starts------------------ */}\n\n                        <Route path=\"/hcfAdmin\" element={<AdminMainDashboard />}>\n                            <Route\n                                path=\"notification\"\n                                element={<HealthCareAuthentication>\n                                    <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                        <LazyAdminNotification />\n                                    </React.Suspense></HealthCareAuthentication>\n                                }\n                            ></Route>\n                                <Route\n                                    path=\"adminProfile\"\n                                    element={<HealthCareAuthentication> <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminProfile />\n                                </React.Suspense></HealthCareAuthentication>\n                                       \n                                    }\n                                ></Route>\n                            <Route path=\"doctor\" element={<AdminDoctor />}>\n                                <Route\n                                    path=\"allDoctors\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminAllDoctors />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"active\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminActive />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route path=\"blocked\" element={<HealthCareAuthentication><HCFBlocked /></HealthCareAuthentication>}></Route>\n\n                                <Route path=\"addDoctor\" element={<HealthCareAuthentication><HCFAddDoctors /></HealthCareAuthentication>}></Route>\n                                <Route path=\"addPackage\" element={<HealthCareAuthentication><HCFAddPackage /></HealthCareAuthentication>}></Route>\n                            </Route>\n                            {/* hcfadmin/diagnosticcenter/blocked */}\n                            <Route path=\"diagnosticCenter\" element={<HealthCareAuthentication><AdminDiagnosticCenter /></HealthCareAuthentication>}>\n                                <Route\n                                    path=\"labs\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminLabs />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route path=\"labs/:labId\" element={<HealthCareAuthentication><AdminLabDetail /></HealthCareAuthentication>}></Route>\n\n                                <Route\n                                    path=\"staff\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminStaff />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n\n                                <Route\n                                    path=\"blocked\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminBlocked />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n                            <Route path=\"hcfAdminManage\" element={<HealthCareAuthentication><AdminManage /></HealthCareAuthentication>}>\n                                <Route\n                                    path=\"hcfAdminSale\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminSalesActivities />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"hcfAdminOverview\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminOverview />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"hcfAdminBooking\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminBooking />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"hcfAdminPayout\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <LazyAdminPayout />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"hcfAdminAuditLog\"\n                                    element={<HealthCareAuthentication><React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                    <AdminManageAuditLog />\n                                </React.Suspense></HealthCareAuthentication>\n                                        \n                                    }\n                                ></Route>\n                            </Route>\n\n                            <Route\n                                path=\"/hcfAdmin/diagnosticCenter/labs/:labId\"\n                                element={<HealthCareAuthentication><DiagnostLabs /></HealthCareAuthentication>}\n                            ></Route>\n                        </Route>\n\n                        {/* -------------HCF Routes Ends------------------ */}\n\n                        {/* ------------- Super Admin Starts----------- */}\n                        <Route path=\"superAdmin\" element={<SuperAdminBody />}>\n                            <Route path=\"dashboard\" element={<SuperAdminDashboard />}>\n                                <Route\n                                    path=\"mainDashboard\"\n                                    element={<SuperAdminMainDashboard />}\n                                ></Route>\n                            </Route>\n                            <Route path=\"history\" element={<SuperAdminHistory />}>\n                                <Route\n                                    path=\"doctor\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminHistoryDoctor />\n                                        </React.Suspense>\n                                    }\n                                />\n                                <Route\n                                    path=\"patient\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminHistoryPatient />\n                                        </React.Suspense>\n                                    }\n                                />\n                                <Route\n                                    path=\"hcf\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminHistoryHCF />\n                                        </React.Suspense>\n                                    }\n                                />\n                            </Route>\n                            <Route path=\"accessibility\" element={<SuperAdminAccessibilty />}>\n                                <Route\n                                    path=\"doctors\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminDoctor />\n                                        </React.Suspense>\n                                    }\n                                ></Route>\n\n                                <Route\n                                    path=\"patient\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminPatient />\n                                        </React.Suspense>\n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"hcf\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminHCF />\n                                        </React.Suspense>\n                                    }\n                                ></Route>\n                            </Route>\n                            <Route path=\"logs\" element={<SuperAdminLogsBody />}>\n                                <Route path=\"auditLogs\" element={<SuperAdminLogs />}></Route>\n                            </Route>\n\n                            <Route path=\"package\" element={<SuperAdminPackage />}>\n                                <Route\n                                    path=\"packagePatient\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminPackagePatient />\n                                        </React.Suspense>\n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"packageDoctor\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminPackageDoctor />\n                                        </React.Suspense>\n                                    }\n                                ></Route>\n                            </Route>\n\n                            <Route path=\"transaction\" element={<SuperAdminTransaction />}>\n                                <Route\n                                    path=\"doctor\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminTranDoctor />\n                                        </React.Suspense>\n                                    }\n                                ></Route>\n                                <Route\n                                    path=\"hcf\"\n                                    element={\n                                        <React.Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={900} />}>\n                                            <LazySuperAdminTranHCF />\n                                        </React.Suspense>\n                                    }\n                                ></Route>\n                            </Route>\n                        </Route>\n                        {/* --------S----uper Admin Ends ------------- */}\n\n                        {/* Video calling SDK and chats----------------- starts */}\n                        <Route path=\"/videoCallingSdk/:appId\" element={<VideoCallingSDK />}></Route>\n                        <Route path=\"/chatRoom\" element={<ChatRoom />}></Route>\n                        {/* Video Calling SDK Ends--------------- */}\n\n                        {/* -------------------------------HCF Route Ends---------------------------------------- */}\n                    </>\n                )}\n                <Route element={NotFound} />\n            </Routes>\n        </Suspense>\n    </UserProvider>\n);\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport packageJson from \"../package.json\";\nimport data from \"./meta.json\";\n\nconst buildDateGreaterThan = (latestDate, currentDate) => {\n    const momLatestDateTime = moment(latestDate);\n    const momCurrentDateTime = moment(currentDate);\n\n    if (momLatestDateTime.isAfter(momCurrentDateTime)) {\n        return true;\n    }\n    return false;\n};\n\nfunction withClearCache(Component) {\n    function ClearCacheComponent(props) {\n        const [isLatestBuildDate, setIsLatestBuildDate] = useState(false);\n\n        useEffect(() => {\n            const latestVersionDate = data.buildDate;\n            const currentVersionDate = packageJson.buildDate;\n\n            const shouldForceRefresh = buildDateGreaterThan(latestVersionDate, currentVersionDate);\n            if (shouldForceRefresh) {\n                setIsLatestBuildDate(false);\n                refreshCacheAndReload();\n            } else {\n                setIsLatestBuildDate(true);\n            }\n        }, []);\n\n        const refreshCacheAndReload = () => {\n            if (caches) {\n                // Service worker cache should be cleared with caches.delete()\n                caches.keys().then((names) => {\n                    for (const name of names) {\n                        caches.delete(name);\n                    }\n                });\n            }\n            // delete browser cache and hard reload\n            window.location.reload(true);\n        };\n\n        return (\n            <React.Fragment>{isLatestBuildDate ? <Component {...props} /> : null}</React.Fragment>\n        );\n    }\n\n    return ClearCacheComponent;\n}\n\nexport default withClearCache;\n","import { createTheme } from \"@mui/material/styles\";\nimport \"../static/scss/base/_variables.scss\";\n\nexport const theme = createTheme({\n    typography: {\n        fontFamily: \"Poppins, sans-serif\",\n    },\n\n    palette: {\n        common: {\n            black: \"#1c1b1f\",\n            white: \"#ffffff\",\n        },\n        primary: {\n            main: \"#E72B4A\",\n        },\n        secondary: {\n            main: \"#e95f40\",\n        },\n        success: {\n            main: \"#2ad159\",\n        },\n        error: {\n            main: \"#dc362e\",\n        },\n        warning: {\n            main: \"#E7DF33\",\n        },\n        text: {\n            primary: \"#1c1b1f\",\n            secondary: \"#49454f\",\n            disabled: \"#E6E1E5\",\n        },\n        background: {\n            paper: \"#f2f2f7\",\n        },\n        action: {\n            hover: \"#e95f40\",\n        },\n    },\n});\n","import React from \"react\";\nimport \"./App.scss\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { AppRouter } from \"./AppRouter\";\nimport withClearCache from \"./ClearCache\";\nimport { theme } from \"./config/theme\";\n// import './font.scss';\n\nconst MainApp = () => {\n    return <AppRouter />;\n};\n\nconst ClearCacheComponent = withClearCache(MainApp);\n\nconst App = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <ClearCacheComponent />\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { createAsyncAction } from \"typesafe-actions\";\n\nconst REQUEST = \"REQUEST\";\nconst SUCCESS = \"SUCCESS\";\nconst FAILURE = \"FAILURE\";\nconst CANCEL = \"CANCEL\";\n\nfunction createRequestTypes(base) {\n    return [REQUEST, SUCCESS, FAILURE, CANCEL].reduce((acc, type) => {\n        acc[type] = `${base}_${type}`;\n        return acc;\n    }, {});\n}\n\nconst USER = createRequestTypes(\"USER\");\n\nexport const fetchUserAction = createAsyncAction(USER[REQUEST], USER[SUCCESS], USER[FAILURE])();\n","import { getType } from \"typesafe-actions\";\nimport { fetchUserAction } from \"../actions\";\n\nconst initialState = {\n    loading: false,\n    user: {},\n    errorMessage: null,\n};\n\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case getType(fetchUserAction.request):\n            return {\n                ...state,\n                loading: true,\n            };\n        case getType(fetchUserAction.success):\n            return {\n                ...state,\n                loading: false,\n                user: action.payload,\n            };\n        case getType(fetchUserAction.failure):\n            return {\n                ...state,\n                loading: false,\n                errorMessage: action.error,\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\n\nconst rootReducer = combineReducers({\n    reducer,\n});\n\nexport default rootReducer;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.scss\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport configStore from \"./store/configureStore\";\n// import * as serviceWorker from \"./serviceWorker\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst store = configStore();\n\nconst container = document.getElementById(\"app\");\nconst root = createRoot(container);\nroot.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    reportWebVitals,\n);\n\n// serviceWorker.register();\n","import { legacy_createStore as createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nexport default function configStore() {\n    return {\n        ...createStore(rootReducer),\n    };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button } from \"@mui/material\";\n\nconst CustomButton = ({\n    label,\n    leftIcon,\n    rightIcon,\n    isTransaprent,\n    isDisabled,\n    isElevated,\n    handleClick,\n    isText,\n    buttonCss,\n    className,\n    size = \"medium\",\n    fullWidth = false\n}) => {\n    const defaultStyles = {\n        borderRadius: \"12px\",\n        textTransform: \"none\",\n        fontWeight: 600,\n        fontSize: \"14px\",\n        padding: size === \"small\" ? \"8px 16px\" : size === \"large\" ? \"16px 32px\" : \"12px 24px\",\n        minHeight: size === \"small\" ? \"36px\" : size === \"large\" ? \"56px\" : \"44px\",\n        transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n        fontFamily: \"Poppins, sans-serif\",\n        boxShadow: isElevated ? \"0 4px 12px rgba(0, 0, 0, 0.15)\" : \"none\",\n        \"&:hover\": {\n            transform: \"translateY(-2px)\",\n            boxShadow: isElevated ? \"0 8px 20px rgba(0, 0, 0, 0.2)\" : \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n        },\n        \"&:active\": {\n            transform: \"translateY(0px)\",\n        },\n        \"&:disabled\": {\n            opacity: 0.6,\n            transform: \"none\",\n            boxShadow: \"none\",\n        }\n    };\n\n    return (\n        <Button\n            className={`custom-button ${className || \"\"}`}\n            variant={isText ? \"text\" : isTransaprent ? \"outlined\" : \"contained\"}\n            disableElevation={!isElevated}\n            disabled={isDisabled}\n            startIcon={leftIcon}\n            endIcon={rightIcon}\n            onClick={handleClick}\n            size={size}\n            fullWidth={fullWidth}\n            sx={{\n                ...defaultStyles,\n                ...buttonCss\n            }}\n        >\n            {label}\n        </Button>\n    );\n};\n\nCustomButton.defaultProps = {\n    label: \"Button\",\n    leftIcon: null,\n    rightIcon: null,\n    isTransaprent: false,\n    isDisabled: false,\n    isElevated: false,\n    handleClick: () => {},\n    isText: false,\n    size: \"medium\",\n    fullWidth: false,\n};\n\nCustomButton.propTypes = {\n    label: PropTypes.string.isRequired,\n    leftIcon: PropTypes.node,\n    rightIcon: PropTypes.node,\n    isTransaprent: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isElevated: PropTypes.bool,\n    handleClick: PropTypes.func,\n    isText: PropTypes.bool,\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n    fullWidth: PropTypes.bool,\n};\n\nexport default CustomButton;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Snackbar, IconButton, Box, Alert, Slide } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nfunction SlideTransition(props) {\n    return <Slide {...props} direction=\"left\" />;\n}\n\nconst CustomSnackBar = ({ \n    isOpen, \n    actionLabel, \n    handleAction, \n    message, \n    hideDuration = 5000, \n    type = \"success\",\n    position = { vertical: \"top\", horizontal: \"right\" }\n}) => {\n    const [state, setState] = useState({\n        open: isOpen,\n        vertical: position.vertical,\n        horizontal: position.horizontal,\n    });\n    const { vertical, horizontal, open } = state;\n\n    const handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        setState({ ...state, open: false });\n    };\n\n    useEffect(() => {\n        setState({ ...state, open: isOpen });\n    }, [isOpen]);\n\n    const getIcon = () => {\n        switch (type) {\n            case \"success\":\n                return <CheckCircleIcon sx={{ fontSize: 20 }} />;\n            case \"error\":\n                return <ErrorIcon sx={{ fontSize: 20 }} />;\n            case \"warning\":\n                return <WarningIcon sx={{ fontSize: 20 }} />;\n            case \"info\":\n                return <InfoIcon sx={{ fontSize: 20 }} />;\n            default:\n                return <CheckCircleIcon sx={{ fontSize: 20 }} />;\n        }\n    };\n\n    const getSeverity = () => {\n        switch (type) {\n            case \"success\":\n                return \"success\";\n            case \"error\":\n                return \"error\";\n            case \"warning\":\n                return \"warning\";\n            case \"info\":\n                return \"info\";\n            default:\n                return \"success\";\n        }\n    };\n\n    const action = (\n        <Fragment>\n            {actionLabel && (\n                <Button \n                    color=\"inherit\" \n                    size=\"small\" \n                    onClick={handleAction}\n                    sx={{ \n                        fontWeight: 600,\n                        textTransform: \"none\",\n                        fontSize: \"12px\"\n                    }}\n                >\n                    {actionLabel}\n                </Button>\n            )}\n            <IconButton \n                size=\"small\" \n                aria-label=\"close\" \n                color=\"inherit\" \n                onClick={handleClose}\n                sx={{ ml: 1 }}\n            >\n                <CloseIcon fontSize=\"small\" />\n            </IconButton>\n        </Fragment>\n    );\n\n    return (\n        <Snackbar\n            anchorOrigin={{ vertical, horizontal }}\n            open={open}\n            onClose={handleClose}\n            autoHideDuration={hideDuration}\n            TransitionComponent={SlideTransition}\n            sx={{\n                \"& .MuiSnackbarContent-root\": {\n                    borderRadius: \"12px\",\n                    boxShadow: \"0 8px 24px rgba(0, 0, 0, 0.15)\",\n                    fontFamily: \"Poppins, sans-serif\",\n                    fontSize: \"14px\",\n                    fontWeight: 500,\n                }\n            }}\n        >\n            <Alert \n                severity={getSeverity()} \n                action={action}\n                icon={getIcon()}\n                sx={{\n                    borderRadius: \"12px\",\n                    fontFamily: \"Poppins, sans-serif\",\n                    fontSize: \"14px\",\n                    fontWeight: 500,\n                    width: \"100%\",\n                    \"& .MuiAlert-message\": {\n                        flex: 1,\n                    },\n                    \"& .MuiAlert-action\": {\n                        alignItems: \"center\",\n                    }\n                }}\n            >\n                {message}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nCustomSnackBar.defaultProps = {\n    isOpen: false,\n    actionLabel: \"\",\n    handleAction: () => {},\n    message: \"\",\n    hideDuration: 5000,\n    type: \"success\",\n    position: { vertical: \"top\", horizontal: \"right\" },\n};\n\nCustomSnackBar.propTypes = {\n    isOpen: PropTypes.bool,\n    actionLabel: PropTypes.string,\n    handleAction: PropTypes.func,\n    message: PropTypes.string,\n    hideDuration: PropTypes.number,\n    type: PropTypes.oneOf([\"success\", \"error\", \"warning\", \"info\"]),\n    position: PropTypes.shape({\n        vertical: PropTypes.oneOf([\"top\", \"bottom\"]),\n        horizontal: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n    }),\n};\n\nexport default CustomSnackBar;\n","import React, { useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nimport BusinessCenterIcon from \"@mui/icons-material/BusinessCenter\";\n\nconst WorkExperience = ({ head, subhead, dates, doctorExperienceId, handleEdit }) => {\n    return (\n        <div>\n            <div className=\"medical-card-container\">\n                <div className=\"medical-card\">\n                    <Box\n                        sx={{\n                            width: \"150px\",\n                            height: \"150px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#F0F0F0\",\n                        }}\n                    >\n                        <BusinessCenterIcon\n                            style={{\n                                fontSize: \"30px\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                color: \"#E72B4A\",\n                            }}\n                        />\n                    </Box>\n                    <div className=\"medical-details\">\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"space-between\",\n                            }}\n                        >\n                            <Typography\n                                style={{\n                                    fontWeight: \"bold\",\n                                    fontSize: \"16px\",\n                                    marginTop: \"25px\",\n                                    marginLeft: \"25px\",\n                                }}\n                            >\n                                {head ? head.toUpperCase() : \"\"}\n                            </Typography>\n                            <div className=\"edit-icon\">\n                                <EditIcon\n                                    onClick={handleEdit}\n                                    style={{ cursor: \"pointer\", color: \"#E72B4A\" }}\n                                />\n                                <Typography\n                                    onClick={handleEdit}\n                                    style={{\n                                        color: \"#E72B4A\",\n                                        fontSize: \"14px\",\n                                        cursor: \"pointer\",\n                                        marginLeft: \"5px\",\n                                    }}\n                                >\n                                    Edit\n                                </Typography>\n                            </div>\n                        </Box>\n                        <Typography className=\"Hospital-name\" style={{ marginLeft: \"25px\" }}>\n                            {subhead}\n                        </Typography>\n                        <Typography className=\"date\" style={{ marginLeft: \"25px\" }}>\n                            {dates}\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WorkExperience;\n","import React, { useState } from \"react\";\nimport \"./DateModal.scss\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport CustomModalMUI from \"../CustomModalMUI/CustomModalMUI\";\n\nconst DateModal = () => {\n    const [value, setValue] = useState([null, null]);\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n    return (\n        <>\n            <CustomModalMUI\n                label=\"Date\"\n                rightIcon={<KeyboardArrowDownIcon />}\n                modalCss={{\n                    position: \"relative\",\n                    top: \"35%\",\n                    left: \"83%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: 450,\n                    bgcolor: \"background.paper\",\n                    borderRadius: \"10px\",\n                    boxShadow: 24,\n                    pt: 2,\n                    px: 2,\n                    pb: 1,\n                }}\n                modalcontent={\n                    <>\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DateRangePicker\n                                disablePast\n                                value={value}\n                                maxDate={getWeeksAfter(value[0], 4)}\n                                onChange={(newValue) => {\n                                    setValue(newValue);\n                                }}\n                                renderInput={(startProps, endProps) => (\n                                    <React.Fragment>\n                                        <TextField {...startProps} variant=\"standard\" />\n                                        <Box sx={{ mx: 2 }}> to </Box>\n                                        <TextField {...endProps} variant=\"standard\" />\n                                    </React.Fragment>\n                                )}\n                            />\n                        </LocalizationProvider>\n                    </>\n                }\n            ></CustomModalMUI>\n        </>\n    );\n};\n\nexport default DateModal;\n","import React from \"react\";\nimport axiosInstance from \"../../config/axiosInstance\";\n\n// export const fetch_Time_Slots = async (timeslotData) => {\n//     try {\n//         const response = await axiosInstance.post(\"/sec/patient/getAppointmentSlots\", timeslotData);\n//         return response?.data?.response?.availableSlots;\n//         // setTime_slot(response?.data?.response?.availableSlots);\n//     } catch (err) {\n//         return err;\n//         console.log(\"Erorr : \", err);\n//     }\n// };\n\nexport const FetchDoctorAvailableDates = async (drID) => {\n    try {\n        const resp = await axiosInstance.post(\n            \"/sec/patient/getAvailableAppointmentDates\",\n            JSON.stringify({\n                doctor_id: Number(drID),\n            }),\n        );\n        console.log(\"Getting avaliable slots\")\n        let date = resp?.data?.availableDates;\n        let availableDates = date.map((dateString) => {\n            const [year, month, day] = dateString.split(\"-\").map(Number);\n            return new Date(year, month - 1, day); // month -1 to get the correct month\n        });\n        return availableDates;\n    } catch (err) {\n        return err;\n        console.log(\"Available dates slots : \", err);\n    }\n};\n\nexport const fetchQuestions = async (drID , listID) => {\n    try {\n        const response = await axiosInstance.post(\n            \"/sec/patient/createAppointmentPackageQuestion/\",\n            JSON.stringify({\n                doctor_id: drID,\n                is_active: 1,\n                doctor_list_id : listID\n            }),\n        );\n        return response?.data?.response?.questions;\n    } catch (err) {\n        console.log(\"Questions Error : \", err);\n    }\n};\n\n//  api function to fetch the doctor duration slots\nexport const fetchDocDuration = async (drID, date) => {\n    try {\n        const response = await axiosInstance(`/sec/patient/getAppointmentPlanDuration/${drID}?date=${date}`);\n        // console.log(\"Suration : \", response.data?.response?.durations);\n        let duration = [];\n        for (let key in response.data?.response?.durations) {\n            console.log(\"durations :   ==   \",response.data?.response?.durations[key]?.plan_duration);\n            duration.push(response.data?.response?.durations[key]?.plan_duration);\n        }\n        console.log(duration);\n        return duration;\n    } catch (err) {\n        return err;\n        console.log(\"Duration Error : \", err);\n    }\n};\n\n\nexport function formatDate(inputDateStr) {\n    // Create a Date object from the input string\n    const date = new Date(inputDateStr);\n\n    // Extract year, month, and day\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based, so add 1\n    const day = String(date.getDate()).padStart(2, '0');\n\n    // Format as \"YYYY-MM-DD\"\n    return `${year}-${month}-${day}`;\n}\n\n\n    // api function to fetch the select package\n    export const fetchSelectPackage = async (data) => {\n        console.log(\"fetch select package\", data);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/createAppointmentPackageSelect/\",\n                JSON.stringify(data),\n            );\n            console.log(\"Package plan : \", response.data?.response.plan);\n            return  response?.data?.response.plan\n            // setSelectPackage(response?.data?.response.plan);\n            // for (let key in response?.data?.response) {\n            //     duration.push(key);\n            //     // setDuration([...duration , key])\n            // }\n        } catch (err) {\n            return err;\n            // console.log(\"select Error : \", err);\n        }\n    };","import React, { useState, useEffect, useCallback } from \"react\";\nimport { CircularProgress, Typography } from \"@mui/material\";\nimport CustomButton from \"../../../../components/CustomButton\";\nimport CustomModal from \"../../../../components/CustomModal\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport CustomDropdown from \"../../../../components/CustomDropdown\";\nimport CustomCheckBox from \"../../../../components/CustomCheckBox\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\nimport \"./addplan.scss\";\n\nconst ListingModal = ({\n    RenderDataAfterAddingPlan,\n    enableAdditionalButton,\n    additionalButtonName,\n    onAdditionalButtonClick,\n    disableBackdropClick,\n    saveButtonEnable = true,\n}) => {\n    const [openDialog, setOpenDialog] = useState(false);\n    const [listingPayload, setListingPayload] = useState({ plan: [] });\n    const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({ message: false, video: false });\n    const [planMessage, setPlanMessage] = useState(\"\");\n    const [isOpen, setIsOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [validation, setValidation] = useState({}); // { plan_name: { fee: msg|null, duration: msg|null } }\n\n    const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n    const plansTemplate = (planType) => ({\n        doctor_id: localStorage.getItem(\"doctor_suid\"),\n        doctor_list_id: localStorage.getItem(\"listing_id\"),\n        plan_name: planType,\n        plan_description: `${planType.charAt(0).toUpperCase() + planType.slice(1)} plan for ${planType}ing`,\n    });\n\n    const plansTemplateForClinic = (planType, fee = null, duration = null) => ({\n        plan_name: planType,\n        plan_fee: fee,\n        plan_duration: duration,\n        plan_description: `${planType.charAt(0).toUpperCase() + planType.slice(1)} plan for ${planType}ing`,\n    });\n\n\n    const togglePlanCheckBox = (planType) => {\n        setCheckBoxIsDisable((prev) => {\n            const newState = { ...prev, [planType]: !prev[planType] };\n            const updatedPlans = newState[planType]\n                ? [...listingPayload.plan, { ...plansTemplate(planType), plan_duration: null, plan_fee: null, is_trial: 1 }]\n                : listingPayload.plan.filter(plan => plan.plan_name !== planType);\n            setListingPayload({ plan: updatedPlans });\n            return newState;\n        });\n    };\n\n    const updatePlanState = (planType, field, value) => {\n        const updatedPlans = listingPayload.plan.map(plan =>\n            plan.plan_name === planType ? { ...plan, [field]: value } : plan\n        );\n        setListingPayload({ plan: updatedPlans });\n    };\n\n    // Compute validation for selected plans\n    useEffect(() => {\n        const v = {};\n        (listingPayload.plan || []).forEach(p => {\n            const feeMissing = p.plan_fee === null || p.plan_fee === undefined || p.plan_fee === '' || Number(p.plan_fee) <= 0;\n            const durationMissing = !p.plan_duration || String(p.plan_duration).trim() === '';\n            v[p.plan_name] = {\n                fee: feeMissing ? 'Price is required' : null,\n                duration: durationMissing ? 'Duration is required' : null,\n            };\n        });\n        setValidation(v);\n    }, [listingPayload]);\n\n    const isSaveDisabled = () => {\n        // Save disabled if any selected plan has missing fee or duration\n        return (listingPayload.plan || []).some(p => {\n            const planV = validation[p.plan_name] || {};\n            return !!planV.fee || !!planV.duration;\n        });\n    };\n\n    const addListing = async () => {\n        setLoading(true)\n        try {\n            const numericPayload = {\n                plan: (listingPayload.plan || []).map(p => ({\n                    ...p,\n                    doctor_id: Number(p.doctor_id),\n                    doctor_list_id: Number(p.doctor_list_id),\n                    // ensure numeric fee if provided\n                    plan_fee: p.plan_fee !== null && p.plan_fee !== undefined && p.plan_fee !== '' ? Number(p.plan_fee) : null,\n                }))\n            };\n            const response = await axiosInstance.post(\"/sec/createUpdatedoctorlisting/planCreate\", JSON.stringify(numericPayload));\n            setPlanMessage(response?.data?.response?.message || \"plan created successfully\");\n            setIsOpen(true);\n            RenderDataAfterAddingPlan(true);\n        } catch (error) {\n            console.error(\"Listing not Added:\", error);\n            setIsOpen(false);\n            RenderDataAfterAddingPlan(false);\n        } finally {\n            setLoading(false)\n            setIsOpen(false);\n        }\n    };\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"listing\");\n        localStorage.setItem(\"path\", \"addplans\");\n    }, []);\n\n    return (\n        <>\n            <CustomSnackBar isOpen={isOpen} message={planMessage} type=\"success\" />\n            <CustomButton\n                label=\"Add\"\n                isTransaprent=\"True\"\n                isElevated\n                handleClick={() => setOpenDialog(!openDialog)}\n                buttonCss={{ display: \"flex\", border: \"1px solid #E72B4A\", fontFamily: \"poppins\", fontSize: \"16px\", fontWeight: \"500\", color: \"#E72B4A\" }}\n            />\n            <CustomModal\n                isOpen={openDialog}\n                disableBackdropClick={disableBackdropClick}\n                conditionOpen={() => setOpenDialog(false)}\n                title={<Typography variant=\"h6\" fontFamily=\"poppins\" fontWeight=\"500\">Add Plans</Typography>}\n                footer={enableAdditionalButton && (\n                    <CustomButton\n                        label={additionalButtonName}\n                        handleClick={() => onAdditionalButtonClick({\n                            plan: Object.keys(checkBoxIsDisable)\n                                .filter(plan => checkBoxIsDisable[plan])\n                                .map(plan => {\n                                    const planDetails = listingPayload.plan.find(p => p.plan_name === plan) || {};\n                                    return plansTemplateForClinic(\n                                        plan,\n                                        planDetails.plan_fee || null,\n                                        planDetails.plan_duration || null\n                                    );\n                                }),\n                        })}\n                    />\n                )}\n            >\n                {[\"message\", \"video\"].map((planType) => (\n                    <div key={planType}>\n                        <div className={`${planType}-plan`}>\n                            <CustomCheckBox checked={checkBoxIsDisable[planType]} onChange={() => togglePlanCheckBox(planType)} />\n                            <Typography style={{ fontFamily: \"poppins\", fontSize: \"14px\", fontWeight: \"500\" }}>\n                                {plansTemplate(planType).plan_description.split(\" \")[0]} Plan\n                            </Typography>\n                        </div>\n                        <div className=\"first-plan-content\">\n                            <CustomTextField\n                                label=\"Price\"\n                                helperText={validation[planType]?.fee || \"Enter the price\"}\n                                error={!!validation[planType]?.fee}\n                                value={listingPayload.plan.find(plan => plan.plan_name === planType)?.plan_fee || \"\"}\n                                defaultValue={listingPayload.plan.find(plan => plan.plan_name === planType)?.plan_fee || \"\"}\n                                onChange={(e) => updatePlanState(planType, \"plan_fee\", e.target.value)}\n                                type=\"number\"\n                                isDisabled={!checkBoxIsDisable[planType]}\n                                textcss={{ width: \"250px\", height: \"56px\", fontFamily: \"poppins\", fontSize: \"16px\" }}\n                            />\n                            <CustomDropdown\n                                label=\"Duration\"\n                                items={dropdownItems}\n                                activeItem={listingPayload.plan.find(plan => plan.plan_name === planType)?.plan_duration || \"\"}\n                                isDisabled={!checkBoxIsDisable[planType]}\n                                handleChange={(item) => updatePlanState(planType, \"plan_duration\", item)}\n                            />\n                            {validation[planType]?.duration && (\n                                <div style={{ color: '#d32f2f', fontSize: 12, marginTop: -12, marginBottom: 8 }}>\n                                    {validation[planType]?.duration}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                ))}\n                {saveButtonEnable && (\n\n                    <div className=\"save-button\">\n                        <CustomButton\n                            label={loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Save\"}\n                            isDisabled={loading || isSaveDisabled()}\n                            handleClick={addListing} />\n                    </div>\n                )}\n\n            </CustomModal>\n        </>\n    );\n};\n\nexport default ListingModal;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// this is also finilized\n\n\n// import React, { useState, useEffect, useCallback } from \"react\";\n// import { Typography } from \"@mui/material\";\n// import CustomButton from \"../../../../components/CustomButton\";\n// import CustomModal from \"../../../../components/CustomModal\";\n// import CustomTextField from \"../../../../components/CustomTextField\";\n// import CustomDropdown from \"../../../../components/CustomDropdown\";\n// import CustomCheckBox from \"../../../../components/CustomCheckBox\";\n// import axiosInstance from \"../../../../config/axiosInstance\";\n// import CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\n// import \"./addplan.scss\";\n\n// const ListingModal = ({\n//     RenderDataAfterAddingPlan,\n//     enableAdditionalButton,\n//     additionalButtonName,\n//     onAdditionalButtonClick,\n//     disableBackdropClick,\n//     saveButtonEnable = true,\n// }) => {\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [listingPayload, setListingPayload] = useState({ plan: [] });\n//     const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({ message: false, audio: false, video: false });\n//     const [planMessage, setPlanMessage] = useState(\"\");\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n\n//     const plans = useCallback((planType) => ({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_name: planType,\n//         plan_description: `${planType.charAt(0).toUpperCase() + planType.slice(1)} plan for ${planType}ing`,\n//     }), []);\n\n//     const updatePlanState = useCallback((planType, field, value) => {\n//         setListingPayload(prevPayload => {\n//             const updatedPlans = prevPayload.plan.map(plan =>\n//                 plan.plan_name === planType ? { ...plan, [field]: value } : plan\n//             );\n//             return { ...prevPayload, plan: updatedPlans };\n//         });\n//     }, []);\n\n//     const togglePlanCheckBox = (planType) => {\n//         setCheckBoxIsDisable(prev => {\n//             const newState = { ...prev, [planType]: !prev[planType] };\n//             setListingPayload(prevPayload => {\n//                 const updatedPlans = newState[planType]\n//                     ? [...prevPayload.plan, { ...plans(planType), plan_duration: null, plan_fee: null, is_trial: 1 }]\n//                     : prevPayload.plan.filter(plan => plan.plan_name !== planType);\n//                 return { ...prevPayload, plan: updatedPlans };\n//             });\n//             return newState;\n//         });\n//     };\n\n//     const addListing = async () => {\n//         try {\n//             const response = await axiosInstance.post(\"/sec/createUpdatedoctorlisting/planCreate\", JSON.stringify(listingPayload));\n//             setPlanMessage(response?.data?.response?.message);\n//             setIsOpen(true);\n//             RenderDataAfterAddingPlan(true);\n//         } catch (error) {\n//             console.error(\"Listing not Added:\", error);\n//             setIsOpen(false);\n//             RenderDataAfterAddingPlan(false);\n//         }\n//     };\n\n//     const handleModalClose = () => setOpenDialog(false);\n//     const handleSave = () => addListing();\n\n//     useEffect(() => {\n//         localStorage.setItem(\"activeComponent\", \"listing\");\n//         localStorage.setItem(\"path\", \"addplans\");\n//     }, []);\n\n//     return (\n//         <>\n//             <CustomSnackBar isOpen={isOpen} message={planMessage} type=\"success\" />\n//             <CustomButton\n//                 label=\"Add\"\n//                 isTransaprent=\"True\"\n//                 isElevated\n//                 handleClick={() => setOpenDialog(!openDialog)}\n//                 buttonCss={{ display: \"flex\", border: \"1px solid #E72B4A\", fontFamily: \"poppins\", fontSize: \"16px\", fontWeight: \"500\", color: \"#E72B4A\" }}\n//             />\n//             <CustomModal\n//                 isOpen={openDialog}\n//                 disableBackdropClick={disableBackdropClick}\n//                 conditionOpen={handleModalClose}\n//                 title={<Typography variant=\"h6\" fontFamily=\"poppins\" fontWeight=\"500\">Add Plans</Typography>}\n//                 footer={enableAdditionalButton && (\n//                     <CustomButton\n//                         label={additionalButtonName}\n//                         handleClick={() => onAdditionalButtonClick({\n//                             plan: Object.keys(checkBoxIsDisable)\n//                                 .filter(plan => checkBoxIsDisable[plan])\n//                                 .map(plan => plans(plan)),\n//                         })}\n//                     />\n//                 )}\n//             >\n//                 {[\"message\", \"video\"].map((planType) => (\n//                     <div key={planType}>\n//                         <div className={`${planType}-plan`}>\n//                             <CustomCheckBox checked={checkBoxIsDisable[planType]} onChange={() => togglePlanCheckBox(planType)} />\n//                             <Typography style={{ fontFamily: \"poppins\", fontSize: \"14px\", fontWeight: \"500\" }}>\n//                                 {plans(planType).plan_description.split(\" \")[0]} Plan\n//                             </Typography>\n//                         </div>\n//                         <div className=\"first-plan-content\">\n//                             <CustomTextField\n//                                 label=\"Price\"\n//                                 value={listingPayload.plan.find(plan => plan.plan_name === planType)?.plan_fee || \"\"}\n//                                 onChange={(e) => updatePlanState(planType, \"plan_fee\", e.target.value)}\n//                                 type=\"number\"\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                                 textcss={{ width: \"250px\", height: \"56px\", fontFamily: \"poppins\", fontSize: \"16px\" }}\n//                             />\n//                             <CustomDropdown\n//                                 label=\"Duration\"\n//                                 items={dropdownItems}\n//                                 activeItem={listingPayload.plan.find(plan => plan.plan_name === planType)?.plan_duration || \"\"}\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                                 handleChange={(item) => updatePlanState(planType, \"plan_duration\", item)}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 {saveButtonEnable && (\n//                     <div className=\"save-button\">\n//                         <CustomButton label=\"Save\" handleClick={handleSave} />\n//                     </div>\n//                 )}\n//             </CustomModal>\n//         </>\n//     );\n// };\n\n// export default ListingModal;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// this code is finilized \n\n\n// import React, { useEffect, useState, useCallback } from \"react\";\n// import { Box, Typography } from \"@mui/material\";\n// import CustomButton from \"../../../../components/CustomButton\";\n// import CustomModal from \"../../../../components/CustomModal\";\n// import CustomTextField from \"../../../../components/CustomTextField\";\n// import CustomDropdown from \"../../../../components/CustomDropdown\";\n// import CustomCheckBox from \"../../../../components/CustomCheckBox\";\n// import axiosInstance from \"../../../../config/axiosInstance\";\n// import CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\n// import \"./addplan.scss\";\n\n// const ListingModal = ({\n//     RenderDataAfterAddingPlan,\n//     enableAdditionalButton,\n//     additionalButtonName,\n//     onAdditionalButtonClick,\n//     disableBackdropClick,\n//     saveButtonEnable = true,\n//     conditionOpen,\n// }) => {\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [addListingFlag, setAddListingFlag] = useState(false);\n//     const [planMessage, setPlanMessage] = useState(\"\");\n//     const [isOpen, setIsOpen] = useState(false);\n//     const [listingPayload, setListingPayload] = useState({ plan: [] });\n//     const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({\n//         messaging: false,\n//         audio: false,\n//         video: false,\n//     });\n\n//     const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n\n//     const plans = {\n//         message: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"message\",\n//             plan_description: \"Message plan for chatting\",\n//         },\n//         audio: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"call\",\n//             plan_description: \"Audio plan for calling\",\n//         },\n//         video: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"video\",\n//             plan_description: \"Video plan for video calls\",\n//         },\n//     };\n\n//     useEffect(() => {\n//         localStorage.setItem(\"activeComponent\", \"listing\");\n//         localStorage.setItem(\"path\", \"addplans\");\n//     }, []);\n\n//     const updatePlanState = useCallback((planType, field, value) => {\n//         setListingPayload((prevPayload) => {\n//             const updatedPlans = prevPayload.plan.map((plan) =>\n//                 plan.plan_name === planType ? { ...plan, [field]: value } : plan,\n//             );\n//             return { ...prevPayload, plan: updatedPlans };\n//         });\n//     }, []);\n\n//     const togglePlanCheckBox = (planType) => {\n//         setCheckBoxIsDisable((prev) => {\n//             const newState = { ...prev, [planType]: !prev[planType] };\n//             setListingPayload((prevPayload) => {\n//                 const updatedPlans = newState[planType]\n//                     ? [\n//                           ...prevPayload.plan,\n//                           { ...plans[planType], plan_duration: null, plan_fee: null, is_trial: 1 },\n//                       ]\n//                     : prevPayload.plan.filter(\n//                           (plan) => plan.plan_name !== plans[planType].plan_name,\n//                       );\n\n//                 return { ...prevPayload, plan: updatedPlans };\n//             });\n//             return newState;\n//         });\n//     };\n\n//     const addListing = async () => {\n//         RenderDataAfterAddingPlan(false);\n//         setAddListingFlag(false);\n//         try {\n//             const response = await axiosInstance.post(\n//                 \"/sec/createUpdatedoctorlisting/planCreate\",\n//                 JSON.stringify(listingPayload),\n//             );\n//             setPlanMessage(response?.data?.response?.message);\n//             setIsOpen(true);\n//             RenderDataAfterAddingPlan(true);\n//         } catch (error) {\n//             console.error(\"Listing not Added:\", error);\n//             setIsOpen(false);\n//             RenderDataAfterAddingPlan(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (addListingFlag) addListing();\n//     }, [addListingFlag]);\n\n//     return (\n//         <>\n//             <CustomSnackBar isOpen={isOpen} message={planMessage} type={\"success\"} />\n//             <CustomButton\n//                 label=\"Add\"\n//                 isTransaprent=\"True\"\n//                 isElevated\n//                 handleClick={() => setOpenDialog(!openDialog)}\n//                 buttonCss={{\n//                     display: \"flex\",\n//                     border: \"1px solid #E72B4A\",\n//                     fontFamily: \"poppins\",\n//                     fontSize: \"16px\",\n//                     fontWeight: \"500\",\n//                     color: \"#E72B4A\",\n//                 }}\n//             />\n//             <CustomModal\n//                 isOpen={openDialog}\n//                 disableBackdropClick={disableBackdropClick}\n//                 conditionOpen={() => setOpenDialog(false)}\n//                 title={\n//                     <h2\n//                         style={{\n//                             textAlign: \"left\",\n//                             fontFamily: \"poppins\",\n//                             fontSize: \"20px\",\n//                             fontWeight: \"500\",\n//                         }}\n//                     >\n//                         Add Plans\n//                     </h2>\n//                 }\n//                 footer={\n//                     enableAdditionalButton && (\n//                         <CustomButton\n//                             label={additionalButtonName}\n//                             handleClick={() =>\n//                                 onAdditionalButtonClick({\n//                                     plan: Object.keys(checkBoxIsDisable)\n//                                         .filter((plan) => checkBoxIsDisable[plan])\n//                                         .map((plan) => plans[plan]),\n//                                 })\n//                             }\n//                         />\n//                     )\n//                 }\n//             >\n//                 {[\"message\", \"video\"].map((planType) => (\n//                     <div key={planType}>\n//                         <div className={`${planType}-plan`}>\n//                             <CustomCheckBox\n//                                 checked={checkBoxIsDisable[planType]}\n//                                 onChange={() => togglePlanCheckBox(planType)}\n//                             />\n//                             <Typography\n//                                 style={{\n//                                     fontFamily: \"poppins\",\n//                                     fontSize: \"14px\",\n//                                     fontWeight: \"500\",\n//                                 }}\n//                             >\n//                                 {plans[planType].plan_description.split(\" \")[0]} Plan\n//                             </Typography>\n//                         </div>\n//                         <div className=\"first-plan-content\">\n//                             <CustomTextField\n//                                 label=\"Price\"\n//                                 value={\n//                                     listingPayload.plan.find((plan) => plan.plan_name === planType)\n//                                         ?.plan_fee || \"\"\n//                                 }\n//                                 defaultValue={\n//                                     listingPayload.plan.find((plan) => plan.plan_name === planType)\n//                                         ?.plan_fee || \"\"\n//                                 }\n//                                 onChange={(e) =>\n//                                     updatePlanState(planType, \"plan_fee\", e.target.value)\n//                                 }\n//                                 type=\"number\"\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                                 textcss={{\n//                                     width: \"250px\",\n//                                     height: \"56px\",\n//                                     fontFamily: \"poppins\",\n//                                     fontSize: \"16px\",\n//                                 }}\n//                             />\n//                             <CustomDropdown\n//                                 label=\"Duration\"\n//                                 items={dropdownItems}\n//                                 activeItem={\n//                                     listingPayload.plan.find((plan) => plan.plan_name === planType)\n//                                         ?.plan_duration || \"\"\n//                                 }\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                                 handleChange={(item) =>\n//                                     updatePlanState(planType, \"plan_duration\", item)\n//                                 }\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 {saveButtonEnable && (\n//                     <div className=\"save-button\">\n//                         <CustomButton label=\"Save\" handleClick={() => setAddListingFlag(true)} />\n//                     </div>\n//                 )}\n//             </CustomModal>\n//         </>\n//     );\n// };\n\n// export default ListingModal;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import { Box, Typography } from \"@mui/material\";\n// import CustomButton from \"../../../../components/CustomButton\";\n// import CustomModal from \"../../../../components/CustomModal\";\n// import CustomTextField from \"../../../../components/CustomTextField\";\n// import CustomDropdown from \"../../../../components/CustomDropdown\";\n// import CustomCheckBox from \"../../../../components/CustomCheckBox\";\n// import axiosInstance from \"../../../../config/axiosInstance\";\n// import CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\n// import \"./addplan.scss\";\n\n// const ListingModal = ({\n//     RenderDataAfterAddingPlan,\n//     enableAdditionalButton,\n//     additionalButtonName,\n//     onAdditionalButtonClick,\n//     disableBackdropClick,\n//     saveButtonEnable = true,\n//     conditionOpen,\n// }) => {\n//     useEffect(() => {\n//         localStorage.setItem(\"activeComponent\", \"listing\");\n//         localStorage.setItem(\"path\", \"addplans\");\n//     }, []);\n\n//     const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [addListingFlag, setAddListingFlag] = useState(false);\n//     const [planMessage, setPlanMessage] = useState(\"\");\n//     const [isOpen, setIsOpen] = useState(false);\n//     const [listingPayload, setListingPayload] = useState({ plan: [] });\n//     const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({\n//         messaging: false,\n//         audio: false,\n//         video: false,\n//     });\n//     const [plans, setPlans] = useState({\n//         message: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"message\",\n//             plan_description: \"Message plan for chatting\",\n//             plan_duration: null,\n//             plan_fee: null,\n//             is_trial: 1,\n//         },\n//         audio: {\n// doctor_id: localStorage.getItem(\"doctor_suid\"),\n// doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"call\",\n//             plan_description: \"Audio plan for calling\",\n//             plan_duration: null,\n//             plan_fee: null,\n//             is_trial: 1,\n//         },\n//         video: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"video\",\n//             plan_description: \"Video plan for video calls\",\n//             plan_duration: null,\n//             plan_fee: null,\n//             is_trial: 1,\n//         },\n//     });\n\n//     const handleModalClose = () => {\n//         setOpenDialog(false);\n//     };\n\n//     const updatePlanState = (planType, field, value) => {\n//         // Update specific plan (messaging, audio, video) field (plan_fee or plan_duration)\n//         setPlans((prev) => ({\n//             ...prev,\n//             [planType]: {\n//                 ...prev[planType],\n//                 [field]: value,\n//             },\n//         }));\n\n//         // Dynamically update the listingPayload to reflect changes\n//         setListingPayload((prevPayload) => {\n//             const updatedPlans = prevPayload.plan.map((plan) => {\n//                 if (plan.plan_name === planType) {\n//                     return {\n//                         ...plan,\n//                         [field]: value, // Update only the modified field\n//                     };\n//                 }\n//                 return plan;\n//             });\n\n//             return {\n//                 ...prevPayload,\n//                 plan: updatedPlans,\n//             };\n//         });\n//     };\n\n//     const togglePlanCheckBox = (planType) => {\n//         setCheckBoxIsDisable((prev) => {\n//             const newState = { ...prev, [planType]: !prev[planType] };\n\n//             // When a checkbox is checked, add the corresponding plan to the listingPayload\n//             if (newState[planType]) {\n//                 setListingPayload((prevPayload) => ({\n//                     ...prevPayload,\n//                     plan: [...prevPayload.plan, plans[planType]],  // Add the plan to the list\n//                 }));\n//             } else {\n//                 // If unchecked, remove the plan from the list\n//                 setListingPayload((prevPayload) => ({\n//                     ...prevPayload,\n//                     plan: prevPayload.plan.filter(\n//                         (plan) => plan.plan_name !== plans[planType].plan_name,\n//                     ),\n//                 }));\n//             }\n\n//             return newState;\n//         });\n//     };\n\n//     const addListing = async () => {\n//         RenderDataAfterAddingPlan(false);\n//         setAddListingFlag(false);\n//         try {\n//             const response = await axiosInstance.post(\n//                 \"/sec/createUpdatedoctorlisting/planCreate\",\n//                 JSON.stringify(listingPayload), // Send only the checked plans with valid fee and duration\n//             );\n//             setPlanMessage(response?.data?.response?.message);\n//             setIsOpen(true);\n//             RenderDataAfterAddingPlan(true);\n//         } catch (error) {\n//             console.error(\"Listing not Added:\", error);\n//             setIsOpen(false);\n//             RenderDataAfterAddingPlan(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (addListingFlag) {\n//             addListing();\n//         }\n//     }, [addListingFlag]);\n\n//     console.log(\"plan : \", listingPayload); // For debugging purposes\n\n//     return (\n//         <>\n//             <CustomSnackBar isOpen={isOpen} message={planMessage} type={\"success\"} />\n//             <CustomButton\n//                 label=\"Add\"\n//                 isTransaprent=\"True\"\n//                 isElevated\n//                 handleClick={() => setOpenDialog(!openDialog)}\n//                 buttonCss={{\n//                     display: \"flex\",\n//                     border: \"1px solid #E72B4A\",\n//                     fontFamily: \"poppins\",\n//                     fontSize: \"16px\",\n//                     fontWeight: \"500\",\n//                     color: \"#E72B4A\",\n//                 }}\n//             />\n//             <CustomModal\n//                 isOpen={openDialog}\n//                 disableBackdropClick={disableBackdropClick}\n//                 conditionOpen={handleModalClose}\n//                 title={\n//                     <h2\n//                         style={{\n//                             textAlign: \"left\",\n//                             fontFamily: \"poppins\",\n//                             fontSize: \"20px\",\n//                             fontWeight: \"500\",\n//                         }}\n//                     >\n//                         Add Plans\n//                     </h2>\n//                 }\n//                 footer={\n//                     <Fragment>\n//                         {enableAdditionalButton && (\n//                             <CustomButton\n//                                 label={additionalButtonName}\n//                                 handleClick={() => {\n//                                     const selectedPlans = Object.keys(checkBoxIsDisable)\n//                                         .filter((plan) => checkBoxIsDisable[plan])\n//                                         .map((plan) => plans[plan]);\n//                                     onAdditionalButtonClick({ plan: selectedPlans });\n//                                 }}\n//                             />\n//                         )}\n//                     </Fragment>\n//                 }\n//             >\n//                 {[\"message\", \"video\"].map((planType) => (\n//                     <div key={planType}>\n//                         <div className={`${planType}-plan`}>\n//                             <CustomCheckBox\n//                                 checked={checkBoxIsDisable[planType]}\n//                                 onChange={() => togglePlanCheckBox(planType)}\n//                             />\n//                             <Typography\n//                                 style={{\n//                                     fontFamily: \"poppins\",\n//                                     fontSize: \"14px\",\n//                                     fontWeight: \"500\",\n//                                 }}\n//                             >\n//                                 {plans[planType].plan_description.split(\" \")[0]} Plan\n//                             </Typography>\n//                         </div>\n//                         <div className=\"first-plan-content\">\n//                             <CustomTextField\n//                                 label=\"Price\"\n//                                 value={plans[planType].plan_fee || \"\"}\n//                                 defaultValue={plans[planType].plan_fee || \"\"}\n//                                 textcss={{\n//                                     width: \"250px\",\n//                                     height: \"56px\",\n//                                     fontFamily: \"poppins\",\n//                                     fontSize: \"16px\",\n//                                 }}\n//                                 onChange={(e) =>\n//                                     updatePlanState(planType, \"plan_fee\", e.target.value) // Update fee when changed\n//                                 }\n//                                 type=\"number\"\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                             />\n//                             <CustomDropdown\n//                                 label=\"Duration\"\n//                                 items={dropdownItems}\n//                                 activeItem={plans[planType].plan_duration}\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                                 handleChange={(item) => {\n//                                     updatePlanState(planType, \"plan_duration\", item); // Update duration when selected\n//                                     console.log(\"Duration selected : \", item);\n//                                 }}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 {saveButtonEnable && (\n//                     <div className=\"save-button\">\n//                         <CustomButton label=\"Save\" handleClick={() => setAddListingFlag(true)} />\n//                     </div>\n//                 )}\n//             </CustomModal>\n//         </>\n//     );\n// };\n\n// export default ListingModal;\n\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import { Box, Typography } from \"@mui/material\";\n// import CustomButton from \"../../../../components/CustomButton\";\n// import CustomModal from \"../../../../components/CustomModal\";\n// import CustomTextField from \"../../../../components/CustomTextField\";\n// import CustomDropdown from \"../../../../components/CustomDropdown\";\n// import CustomCheckBox from \"../../../../components/CustomCheckBox\";\n// import axiosInstance from \"../../../../config/axiosInstance\";\n// import CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\n// import \"./addplan.scss\";\n\n// const ListingModal = ({\n//     RenderDataAfterAddingPlan,\n//     enableAdditionalButton,\n//     additionalButtonName,\n//     onAdditionalButtonClick,\n//     disableBackdropClick,\n//     saveButtonEnable = true,\n//     conditionOpen,\n// }) => {\n//     useEffect(() => {\n//         localStorage.setItem(\"activeComponent\", \"listing\");\n//         localStorage.setItem(\"path\", \"addplans\");\n//     }, []);\n\n//     const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [addListingFlag, setAddListingFlag] = useState(false);\n//     const [planMessage, setPlanMessage] = useState(\"\");\n//     const [isOpen, setIsOpen] = useState(false);\n//     const [listingPayload, setListingPayload] = useState({ plan: [] });\n//     const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({\n//         messaging: false,\n//         audio: false,\n//         video: false,\n//     });\n//     const [plans, setPlans] = useState({\n//         messaging: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"message\",\n//             plan_description: \"Message plan for chatting\",\n//             plan_duration: null,\n//             plan_fee: null,\n//             is_trial: 1,\n//         },\n//         audio: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"call\",\n//             plan_description: \"Audio plan for calling\",\n//             plan_duration: null,\n//             plan_fee: null,\n//             is_trial: 1,\n//         },\n//         video: {\n//             doctor_id: localStorage.getItem(\"doctor_suid\"),\n//             doctor_list_id: localStorage.getItem(\"listing_id\"),\n//             plan_name: \"video\",\n//             plan_description: \"Video plan for video calls\",\n//             plan_duration: null,\n//             plan_fee: null,\n//             is_trial: 1,\n//         },\n//     });\n\n//     const handleModalClose = () => {\n//         setOpenDialog(false);\n//     };\n\n//     const updatePlanState = (planType, field, value) => {\n//         console.log(\"this is plan anme  : \", planType, field, value);\n\n//         setPlans((prev) => ({\n//             ...prev,\n//             [planType]: {\n//                 ...prev[planType],\n//                 [field]: value,\n//             },\n//         }));\n//     };\n\n//     console.log(\"this is the plan\",plans)\n\n//     const togglePlanCheckBox = (planType) => {\n//         setCheckBoxIsDisable((prev) => {\n//             const newState = { ...prev, [planType]: !prev[planType] };\n//             if (newState[planType]) {\n//                 setListingPayload((prevPayload) => ({\n//                     ...prevPayload,\n//                     plan: [...prevPayload.plan, plans[planType]],\n//                 }));\n//             } else {\n//                 setListingPayload((prevPayload) => ({\n//                     ...prevPayload,\n//                     plan: prevPayload.plan.filter(\n//                         (plan) => plan.plan_name !== plans[planType].plan_name,\n//                     ),\n//                 }));\n//             }\n//             return newState;\n//         });\n//     };\n\n//     const addListing = async () => {\n//         RenderDataAfterAddingPlan(false);\n//         setAddListingFlag(false);\n//         try {\n//             const response = await axiosInstance.post(\n//                 \"/sec/createUpdatedoctorlisting/planCreate\",\n//                 JSON.stringify(listingPayload),\n//             );\n//             setPlanMessage(response?.data?.response?.message);\n//             setIsOpen(true);\n//             RenderDataAfterAddingPlan(true);\n//         } catch (error) {\n//             console.error(\"Listing not Added:\", error);\n//             setIsOpen(false);\n//             RenderDataAfterAddingPlan(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (addListingFlag) {\n//             addListing();\n//         }\n//     }, [addListingFlag]);\n\n//     console.log(\"plan : \", listingPayload);\n\n//     return (\n//         <>\n//             <CustomSnackBar isOpen={isOpen} message={planMessage} type={\"success\"} />\n//             <CustomButton\n//                 label=\"Add\"\n//                 isTransaprent=\"True\"\n//                 isElevated\n//                 handleClick={() => setOpenDialog(!openDialog)}\n//                 buttonCss={{\n//                     display: \"flex\",\n//                     border: \"1px solid #E72B4A\",\n//                     fontFamily: \"poppins\",\n//                     fontSize: \"16px\",\n//                     fontWeight: \"500\",\n//                     color: \"#E72B4A\",\n//                 }}\n//             />\n//             <CustomModal\n//                 isOpen={openDialog}\n//                 disableBackdropClick={disableBackdropClick}\n//                 conditionOpen={handleModalClose}\n//                 title={\n//                     <h2\n//                         style={{\n//                             textAlign: \"left\",\n//                             fontFamily: \"poppins\",\n//                             fontSize: \"20px\",\n//                             fontWeight: \"500\",\n//                         }}\n//                     >\n//                         Add Plans\n//                     </h2>\n//                 }\n//                 footer={\n//                     <Fragment>\n//                         {enableAdditionalButton && (\n//                             <CustomButton\n//                                 label={additionalButtonName}\n//                                 handleClick={() => {\n//                                     const selectedPlans = Object.keys(checkBoxIsDisable)\n//                                         .filter((plan) => checkBoxIsDisable[plan])\n//                                         .map((plan) => plans[plan]);\n//                                     onAdditionalButtonClick({ plan: selectedPlans });\n//                                 }}\n//                             />\n//                         )}\n//                     </Fragment>\n//                 }\n//             >\n//                 {[\"messaging\", \"video\"].map((planType) => (\n//                     <div key={planType}>\n//                         <div className={`${planType}-plan`}>\n//                             <CustomCheckBox\n//                                 checked={checkBoxIsDisable[planType]}\n//                                 onChange={() => togglePlanCheckBox(planType)}\n//                             />\n//                             <Typography\n//                                 style={{\n//                                     fontFamily: \"poppins\",\n//                                     fontSize: \"14px\",\n//                                     fontWeight: \"500\",\n//                                 }}\n//                             >\n//                                 {plans[planType].plan_description.split(\" \")[0]} Plan\n//                             </Typography>\n//                         </div>\n//                         <div className=\"first-plan-content\">\n//                             <CustomTextField\n//                                 label=\"Price\"\n//                                 defaultValue={plans[planType].plan_fee}\n//                                 textcss={{\n//                                     width: \"250px\",\n//                                     height: \"56px\",\n//                                     fontFamily: \"poppins\",\n//                                     fontSize: \"16px\",\n//                                 }}\n//                                 onChange={(e) =>\n//                                     updatePlanState(planType, \"plan_fee\", e.target.value)\n//                                 }\n//                                 type=\"number\"\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                             />\n//                             <CustomDropdown\n//                                 label=\"Duration\"\n//                                 items={dropdownItems}\n//                                 activeItem={plans[planType].plan_duration}\n//                                 isDisabled={!checkBoxIsDisable[planType]}\n//                                 handleChange={(item) => {\n//                                     updatePlanState(planType, \"plan_duration\", item);\n//                                     console.log(\"Duration selected : \", item);\n//                                 }}\n//                             />\n//                         </div>\n//                     </div>\n//                 ))}\n//                 {saveButtonEnable && (\n//                     <div className=\"save-button\">\n//                         <CustomButton label=\"Save\" handleClick={() => setAddListingFlag(true)} />\n//                     </div>\n//                 )}\n//             </CustomModal>\n//         </>\n//     );\n// };\n\n// export default ListingModal;\n\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import { Box, Typography } from \"@mui/material\";\n// import CustomButton from \"../../../../components/CustomButton\";\n// import CustomModal from \"../../../../components/CustomModal\";\n// import CustomTextField from \"../../../../components/CustomTextField\";\n// import CustomDropdown from \"../../../../components/CustomDropdown\";\n// import \"./addplan.scss\";\n// import CustomCheckBox from \"../../../../components/CustomCheckBox\";\n// import axiosInstance from \"../../../../config/axiosInstance\";\n// import CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\n\n// const ListingModal = ({\n//     RenderDataAfterAddingPlan,\n//     enableAdditionalButton,\n//     additionalButtonName,\n//     onAdditionalButtonClick,\n//     disableBackdropClick,\n//     saveButtonEnable = true,\n//     conditionOpen, // Callback to trigger modal close\n// }) => {\n//     useEffect(() => {\n//         localStorage.setItem(\"activeComponent\", \"listing\");\n//         localStorage.setItem(\"path\", \"addplans\");\n//     }, []);\n\n//     const [plandata, setPlandata] = useState([]);\n//     const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [addListingFlag, setAddListingFlag] = useState(false);\n//     const [planMessage, setPlanMessage] = useState(\"\");\n//     const [isOpen, setIsOpen] = useState(false);\n//     const [listingPayload, setListingPayload] = useState({\n//         plan: [],\n//     });\n\n//     const handleModalClose = () => {\n//         setOpenDialog(false); // Close the modal\n//     };\n\n//     const AddListing = async () => {\n//         RenderDataAfterAddingPlan(false);\n//         try {\n//             let response = await axiosInstance.post(\n//                 \"/sec/createUpdatedoctorlisting/planCreate\",\n//                 JSON.stringify(listingPayload)\n//             );\n//             console.log(\"Listing added successfully\", response?.data?.response?.message);\n//             RenderDataAfterAddingPlan(true);\n//             setPlanMessage(response?.data?.response?.message);\n//             setAddListingFlag(false);\n//             setIsOpen(true);\n//         } catch (error) {\n//             console.log(\"Listing not Added: \", error);\n//             setAddListingFlag(false);\n//             RenderDataAfterAddingPlan(false);\n//             setIsOpen(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (addListingFlag) {\n//             AddListing();\n//         }\n//     }, [addListingFlag]);\n\n//     const [messagingPlan, setMessagingPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"message\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"Message plan for chatting\",\n//     });\n\n//     const [audioPlan, setAudioPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"call\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"Audio plan for calling\",\n//     });\n\n//     const [videoPlan, setVideoPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"video\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"Video plan for video calls\",\n//     });\n\n//     const [duration, setDuration] = useState({\n//         messaging: null,\n//         audio: null,\n//         video: null,\n//     });\n\n//     const [pricing, setPricing] = useState({\n//         messaging: null,\n//         audio: null,\n//         video: null,\n//     });\n\n//     const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({\n//         messaging: false,\n//         audio: false,\n//         video: false,\n//     });\n\n//     console.log(\"set video plan : \",videoPlan);\n//     console.log(\"set messeging plan : \",messagingPlan);\n//     console.log(\"Listing payload : \",listingPayload)\n\n//     return (\n//         <>\n//             <CustomSnackBar isOpen={isOpen} message={planMessage} type={\"success\"} />\n//             <CustomButton\n//                 label=\"Add\"\n//                 isTransaprent={\"True\"}\n//                 isElevated\n//                 handleClick={() => setOpenDialog(!openDialog)}\n//                 buttonCss={{\n//                     display: \"flex\",\n//                     borderBottom: \"1px\",\n//                     borderLeft: \"1px\",\n//                     borderRight: \"1px\",\n//                     borderTop: \"1px\",\n//                     fontFamily: \"poppins\",\n//                     fontSize: \"16px\",\n//                     fontWeight: \"500\",\n//                     color: \"#E72B4A\",\n//                 }}\n//             />\n//             <CustomModal\n//                 isOpen={openDialog}\n//                 disableBackdropClick={disableBackdropClick}\n//                 conditionOpen={handleModalClose} // Modal close function\n//                 title={\n\n//                         <h2\n//                             style={{\n//                                 textAlign: \"left\",\n//                                 fontFamily: \"poppins\",\n//                                 fontSize: \"20px\",\n//                                 fontWeight: \"500\",\n//                                 lineHeight: \"30px\",\n//                                 width: \"101px\",\n//                                 height: \"30px\",\n//                             }}\n//                         >\n//                             Add Plans\n//                         </h2>\n//                 }\n//                 footer={\n//                     <Fragment>\n//                         {enableAdditionalButton && (\n//                             <CustomButton\n//                                 label={additionalButtonName}\n//                                 handleClick={() =>{\n//                                     if(checkBoxIsDisable.video && checkBoxIsDisable.messaging){\n//                                         onAdditionalButtonClick({plan:[messagingPlan,videoPlan]})\n//                                     }else if(checkBoxIsDisable.video){\n//                                         onAdditionalButtonClick({plan:[videoPlan]})\n//                                     }else if(checkBoxIsDisable.messaging ){\n//                                         onAdditionalButtonClick({plan:[messagingPlan]})\n//                                     }else{\n//                                         onAdditionalButtonClick({plan : []})\n//                                     }\n\n//                                 }}\n//                             />\n//                         )}\n//                     </Fragment>\n//                 }\n//             >\n//                 {/* Plan Selection Section */}\n//                 <div className=\"first-plan\">\n//                     <CustomCheckBox\n//                         checked={checkBoxIsDisable?.messaging}\n//                         onChange={() => {\n//                             setCheckBoxIsDisable({\n//                                 ...checkBoxIsDisable,\n//                                 messaging: !checkBoxIsDisable.messaging,\n//                             });\n//                             if (!checkBoxIsDisable?.messaging) {\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, messagingPlan],\n//                                 });\n//                             } else {\n//                                 const updatedPlan = listingPayload.plan.filter(\n//                                     (planItem) => planItem?.plan_name !== \"message\"\n//                                 );\n//                                 setListingPayload({ ...listingPayload, plan: updatedPlan });\n//                             }\n//                         }}\n//                     />\n//                     <Typography\n//                         style={{\n//                             fontFamily: \"poppins\",\n//                             fontSize: \"14px\",\n//                             fontWeight: \"500\",\n//                             lineHeight: \"22px\",\n//                             letterSpacing: \"0.07px\",\n//                         }}\n//                     >\n//                         Messaging Plan\n//                     </Typography>\n//                 </div>\n//                 {/* Messaging Plan Details */}\n//                 <div className=\"first-plan-content\">\n//                     <CustomTextField\n//                         label=\"Price\"\n//                         defaultValue={pricing?.messaging}\n//                         textcss={{\n//                             width: \"250px\",\n//                             height: \"56px\",\n//                             color: \"#787579\",\n//                             fontFamily: \"poppins\",\n//                             fontSize: \"16px\",\n//                         }}\n//                         onChange={(event) => {\n//                             setPricing({ ...pricing, messaging: event.target.value });\n//                             setMessagingPlan({ ...messagingPlan, plan_fee: event.target.value });\n\n//                         }}\n//                         type={\"number\"}\n//                         isDisabled={!checkBoxIsDisable?.messaging}\n//                     />\n//                     <CustomDropdown\n//                         label={\"Duration\"}\n//                         items={dropdownItems}\n//                         activeItem={duration?.messaging}\n//                         isDisabled={!checkBoxIsDisable?.messaging}\n//                         handleChange={(item) => {\n//                             setDuration({ ...duration, messaging: item });\n//                             console.log(\"this is the duration : \",item)\n//                             setMessagingPlan({ ...messagingPlan, plan_duration: item });\n//                         }}\n//                     />\n//                 </div>\n//                 {/* Video Plan Selection */}\n//                 <div className=\"third-plan\">\n//                     <CustomCheckBox\n//                         checked={checkBoxIsDisable?.video}\n//                         onChange={() => {\n//                             setCheckBoxIsDisable({\n//                                 ...checkBoxIsDisable,\n//                                 video: !checkBoxIsDisable.video,\n//                             });\n//                             if (!checkBoxIsDisable?.video) {\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, videoPlan],\n//                                 });\n//                             } else {\n//                                 const updatedPlan = listingPayload.plan.filter(\n//                                     (planItem) => planItem?.plan_name !== \"video\"\n//                                 );\n//                                 setListingPayload({ ...listingPayload, plan: updatedPlan });\n//                             }\n//                         }}\n//                     />\n//                     <Typography\n//                         style={{\n//                             fontFamily: \"poppins\",\n//                             fontSize: \"14px\",\n//                             fontWeight: \"500\",\n//                             lineHeight: \"22px\",\n//                             letterSpacing: \"0.07px\",\n//                         }}\n//                     >\n//                         Video Plan\n//                     </Typography>\n//                 </div>\n//                 {/* Video Plan Details */}\n//                 <div className=\"first-plan-content\">\n//                     <CustomTextField\n//                         label=\"Price\"\n//                         defaultValue={pricing?.video}\n//                         textcss={{\n//                             width: \"250px\",\n//                             height: \"56px\",\n//                             color: \"#787579\",\n//                             fontFamily: \"poppins\",\n//                             fontSize: \"16px\",\n//                         }}\n//                         onChange={(event) => {\n//                             setPricing({ ...pricing, video: event.target.value });\n//                             setVideoPlan({ ...videoPlan, plan_fee: event.target.value });\n//                         }}\n//                         type={\"number\"}\n//                         isDisabled={!checkBoxIsDisable?.video}\n//                     />\n//                     <CustomDropdown\n//                         label={\"Duration\"}\n//                         items={dropdownItems}\n//                         activeItem={duration?.video}\n//                         isDisabled={!checkBoxIsDisable?.video}\n//                         handleChange={(item) => {\n//                             setDuration({ ...duration, video: item });\n//                             setVideoPlan({ ...videoPlan, plan_duration: item });\n//                         }}\n//                     />\n//                 </div>\n\n//                 <div className=\"save-button\" style={{display : saveButtonEnable ? 'block' : 'none' }} >\n\n//                      <CustomButton\n\n//                         label=\"Save\"\n//                         handleClick={() => {\n//                             setAddListingFlag(true);\n//                         }}\n\n//                         />\n\n//                 </div>\n\n//             </CustomModal>\n//         </>\n//     );\n// };\n\n// export default ListingModal;\n\n// const ListingModal = ({ RenderDataAfterAddingPlan, enableAdditionalButton, additionalButtonName, onAdditionalButtonClick, disableBackdropClick, saveButtonEnable = true, conditionOpen }) => {\n//     // showSaveButton = true, // Prop to control visibility of Save button\n//     // enableCustomButton = false, // Prop to control enabling custom button\n//     // customButtonName = \"Submit\", // Prop to set name of the custom button\n//     // onCustomButtonClick, // Callback prop for custom button click event\n//     useEffect(() => {\n//         localStorage.setItem(\"activeComponent\", \"listing\");\n//         localStorage.setItem(\"path\", \"addplans\");\n//     }, []);\n\n//     const [plandata, setplandata] = useState([]);\n//     const dropdownItems = [\"15 minutes\", \"30 minutes\", \"45 minutes\", \"60 minutes\", \"90 minutes\"];\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [addListingFlag, setAddListingFlag] = useState(false);\n//     const [planMessage, setPlanMessage] = useState(\"\");\n//     const [isOpen, setIsOpen] = useState(false);\n//     const [listingPayload, setListingPayload] = useState({\n//         plan: [],\n//     });\n\n//         console.log(\"conditionOpen in listing modal : \",conditionOpen)\n\n//         const handleModalClose = () => {\n//             setOpenDialog(false); // Function to close the modal\n//         };\n\n//     const AddListing = async () => {\n//         RenderDataAfterAddingPlan(false);\n//         try {\n//             let response = await axiosInstance.post(\n//                 \"/sec/createUpdatedoctorlisting/planCreate\",\n//                 JSON.stringify(listingPayload),\n//             );\n//             console.log(\"listing added successfully\", response?.data?.response?.message);\n//             RenderDataAfterAddingPlan(true);\n//             setPlanMessage(response?.data?.response?.message);\n//             setAddListingFlag(false);\n//             setIsOpen(true);\n//         } catch (error) {\n//             console.log(\"Listing not Added : \", error);\n//             setAddListingFlag(false);\n//             RenderDataAfterAddingPlan(false);\n//             setIsOpen(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (addListingFlag) {\n//             AddListing();\n//         }\n//     }, [addListingFlag]);\n\n//     const [messagingPlan, setMessagingPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"message\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"message plan for chatting\",\n//     });\n\n//     const [audioPlan, setAudioPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"call\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"audio plan for audio\",\n//     });\n\n//     const [videoPlan, setVideoPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"video\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"video plan for video\",\n//     });\n\n//     console.log(\"listingPayload : \", listingPayload);\n\n//     const [duration, setDuration] = useState({\n//         messaging: null,\n//         audio: null,\n//         video: null,\n//     });\n\n//     const [pricing, setPricing] = useState({\n//         messaging: null,\n//         audio: null,\n//         video: null,\n//     });\n//     const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({\n//         messaging: false,\n//         audio: false,\n//         video: false,\n//     });\n\n//     return (\n//         <>\n//             <CustomSnackBar isOpen={isOpen} message={planMessage} type={\"success\"} />\n//             <CustomButton\n//                 label=\"Add\"\n//                 isTransaprent={\"True\"}\n//                 isElevated\n//                 handleClick={() => setOpenDialog(!openDialog)}\n//                 buttonCss={{\n//                     display: \"flex\",\n//                     borderBottom: \"1px\",\n//                     borderLeft: \"1px\",\n//                     borderRight: \"1px\",\n//                     borderTop: \"1px\",\n//                     fontfamily: \"poppins\",\n//                     fontsize: \"16px\",\n//                     fontstyle: \"normal\",\n//                     fontweight: \"500\",\n//                     lineheight: \"30px\",\n//                     color: \"#E72B4A\",\n//                 }}\n//             />\n//             <CustomModal\n//                 style={{\n//                     display: \"flex\",\n//                 }}\n//                 isOpen={openDialog}\n//                 disableBackdropClick={disableBackdropClick}\n//                 conditionOpen={conditionOpen}\n//                 title={\n//                     <Box\n//                         sx={{\n//                             border: \"1px solid #E6E1E5\",\n//                             borderTop: \"1px\",\n//                             borderRight: \"1px\",\n//                             borderLeft: \"1px\",\n//                             width: \"570px\",\n//                             height: \"82px\",\n//                             display: \"flex\",\n//                             justifycontent: \"flexstart\",\n//                         }}\n//                     >\n//                         <h2\n//                             style={{\n//                                 textAlign: \"left\",\n//                                 fontfamily: \"poppins\",\n//                                 fontSize: \"20px\",\n//                                 fontstyle: \"normal\",\n//                                 fontweight: \"500\",\n//                                 lineheight: \"30px\",\n//                                 width: \"101px\",\n//                                 height: \"30px\",\n//                             }}\n//                         >\n//                             Add Plans\n//                         </h2>\n//                     </Box>\n//                 }\n//                 footer={\n//                     <Fragment>\n//                         {enableAdditionalButton && (\n//                             <CustomButton\n//                                 label={additionalButtonName}\n//                                 handleClick={() => onAdditionalButtonClick(listingPayload)}\n//                             />\n//                         )}\n//                     </Fragment>\n//                 }\n//             >\n//                 <div className=\"first-plan\">\n//                     <CustomCheckBox\n//                         checked={checkBoxIsDisable?.messaging}\n//                         onChange={() => {\n//                             setCheckBoxIsDisable({\n//                                 ...checkBoxIsDisable,\n//                                 messaging: !checkBoxIsDisable.messaging,\n//                             });\n\n//                             if (!checkBoxIsDisable?.messaging) {\n//                                 // Adding the plan to the payload\n//                                 console.log(\"Messaging Plan : \", checkBoxIsDisable?.messaging);\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, messagingPlan],\n//                                 });\n//                             } else {\n//                                 // Remove messaging from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.filter((planItem) => {\n//                                     return planItem?.plan_name !== \"message\";\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                     />\n//                     <Typography\n//                         style={{\n//                             fontFamily: \"poppins\",\n//                             fontsize: \"14px\",\n//                             fontstyle: \"normal\",\n//                             fontWeight: \"500\",\n//                             lineHeight: \"22px\",\n//                             letterSpacing: \"0.07px\",\n//                         }}\n//                     >\n//                         Messaging Plan\n//                     </Typography>\n//                 </div>\n//                 <div className=\"first-plan-content\">\n//                     <CustomTextField\n//                         label=\"Price\"\n//                         helperText={\"\"}\n//                         defaultValue={pricing?.messaging}\n//                         textcss={{\n//                             width: \"250px\",\n//                             height: \"56px\",\n//                             flexShrink: \"0\",\n//                             color: \"#787579\",\n//                             fontfamily: \"poppins\",\n//                             fontsize: \"16px\",\n//                             fontstyle: \"normal\",\n//                             fontweight: \"400\",\n//                             lineHeight: \"24px\",\n//                         }}\n//                         onChange={(event) => {\n//                             setPricing({\n//                                 ...pricing,\n//                                 messaging: event?.target?.value,\n//                             });\n//                             setMessagingPlan({\n//                                 ...messagingPlan,\n//                                 plan_fee: event?.target?.value,\n//                             });\n\n//                             if (!checkBoxIsDisable?.messaging) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, messagingPlan],\n//                                 });\n//                             } else {\n//                                 // Update plan fee in listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"message\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_fee: event?.target?.value,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                         type={\"number\"}\n//                         isDisabled={!checkBoxIsDisable?.messaging}\n//                     />\n//                     <CustomDropdown\n//                         label={\"Duration\"}\n//                         items={dropdownItems}\n//                         activeItem={duration?.messaging}\n//                         isDisabled={!checkBoxIsDisable?.messaging}\n//                         handleChange={(item) => {\n//                             setDuration({ ...duration, messaging: item });\n//                             setMessagingPlan({\n//                                 ...messagingPlan,\n//                                 plan_duration: item,\n//                             });\n\n//                             if (!checkBoxIsDisable?.messaging) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, messagingPlan],\n//                                 });\n//                             } else {\n//                                 // Update plan duration in listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"message\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_duration: item,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                     />\n//                 </div>\n//                 <div className=\"third-plan\">\n//                     <CustomCheckBox\n//                         checked={checkBoxIsDisable?.video}\n//                         onChange={() => {\n//                             setCheckBoxIsDisable({\n//                                 ...checkBoxIsDisable,\n//                                 video: !checkBoxIsDisable.video,\n//                             });\n\n//                             if (!checkBoxIsDisable?.video) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, videoPlan],\n//                                 });\n//                             } else {\n//                                 // Remove video from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.filter((planItem) => {\n//                                     return planItem?.plan_name !== \"video\";\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                     />\n//                     <Typography\n//                         style={{\n//                             fontFamily: \"poppins\",\n//                             fontsize: \"14px\",\n//                             fontstyle: \"normal\",\n//                             fontWeight: \"500\",\n//                             lineHeight: \"22px\",\n//                             letterSpacing: \"0.07px\",\n//                         }}\n//                     >\n//                         Video Plan\n//                     </Typography>\n//                 </div>\n//                 <div className=\"first-plan-content\">\n//                     <CustomTextField\n//                         label=\"Price\"\n//                         helperText={\"\"}\n//                         defaultValue={pricing?.video}\n//                         textcss={{\n//                             width: \"250px\",\n//                             height: \"56px\",\n//                             flexShrink: \"0\",\n//                             color: \"#787579\",\n//                             fontfamily: \"poppins\",\n//                             fontsize: \"16px\",\n//                             fontstyle: \"normal\",\n//                             fontweight: \"400\",\n//                             lineHeight: \"24px\",\n//                         }}\n//                         onChange={(event) => {\n//                             setPricing({\n//                                 ...pricing,\n//                                 video: event?.target?.value,\n//                             });\n//                             setVideoPlan({\n//                                 ...videoPlan,\n//                                 plan_fee: event?.target?.value,\n//                             });\n\n//                             if (!checkBoxIsDisable?.video) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, videoPlan],\n//                                 });\n//                             } else {\n//                                 // Update plan fee in listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"video\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_fee: event?.target?.value,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                         type={\"number\"}\n//                         isDisabled={!checkBoxIsDisable?.video}\n//                     />\n//                     <CustomDropdown\n//                         label={\"Duration\"}\n//                         items={dropdownItems}\n//                         activeItem={duration?.video}\n//                         isDisabled={!checkBoxIsDisable?.video}\n//                         handleChange={(item) => {\n//                             setDuration({ ...duration, video: item });\n//                             setVideoPlan({\n//                                 ...videoPlan,\n//                                 plan_duration: item,\n//                             });\n\n//                             if (!checkBoxIsDisable?.video) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, videoPlan],\n//                                 });\n//                             } else {\n//                                 // Update plan duration in listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"video\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_duration: item,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                     />\n//                 </div>\n//                 <div className=\"save-button\" style={{display : saveButtonEnable ? 'block' : 'none' }} >\n//                     <CustomButton\n//                         label=\"Save\"\n//                         handleClick={() => {\n//                             setAddListingFlag(true);\n//                         }}\n//                     />\n//                 </div>\n//             </CustomModal>\n//         </>\n//     );\n// };\n\n// export default ListingModal;\n\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import { Box, Typography } from \"@mui/material\";\n// import CustomButton from \"../../../../components/CustomButton\";\n// import CustomModal from \"../../../../components/CustomModal\";\n// import CustomTextField from \"../../../../components/CustomTextField\";\n// import CustomDropdown from \"../../../../components/CustomDropdown\";\n// import \"./addplan.scss\";\n// import CustomCheckBox from \"../../../../components/CustomCheckBox\";\n// import axiosInstance from \"../../../../config/axiosInstance\";\n// import CustomSnackBar from \"../../../../components/CustomSnackBar/custom-sack-bar\";\n\n// const ListingModal = ({RenderDataAfterAddingPlan}) => {\n//     useEffect(() => {\n//         localStorage.setItem(\"activeComponent\", \"listing\");\n//         localStorage.setItem(\"path\", \"addplans\");\n//     }, []);\n\n//     const [plandata, setplandata] = useState([]);\n//     const dropdownItems = [\"15 minutes\" ,\"30 minutes\", \"45 minutes\" ,\"60 minutes\", \"90minutes\"];\n//     const [openDialog, setOpenDialog] = useState(false);\n//     const [addListingflag, setAddListingFlag] = useState(false);\n//     const [planmessage , setPlanmessage] = useState(\"\");\n//     const [isopen , setIsopen] = useState(false);\n//     const [listingPayload, setListingPayload] = useState({\n//         plan: [],\n//     });\n\n//     const AddListing = async () => {\n//         RenderDataAfterAddingPlan(false)\n//         try {\n//             let response = await axiosInstance.post(\n//                 \"/sec/createUpdatedoctorlisting/planCreate\",\n//                 JSON.stringify(listingPayload),\n//             );\n//             // Add Snack Bar here\n//             console.log(\"listing added succesfully\", response?.data?.response?.message);\n//             RenderDataAfterAddingPlan(true)\n//             setPlanmessage(response?.data?.response?.message);\n//             setAddListingFlag(false);\n//             setIsopen(true);\n//         } catch (error) {\n//             console.log(\"Listing not Added : \", error);\n//             setAddListingFlag(false);\n//             RenderDataAfterAddingPlan(false);\n//             setIsopen(false);\n//         }\n//     };\n\n//     useEffect(() => {\n//         if (addListingflag) {\n//             AddListing();\n//         }\n//     }, [addListingflag]);\n\n//     const [messagingPlan, setMessagingPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"message\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"message plan for chatting\",\n//     });\n\n//     const [audioPlan, setAudioPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"call\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"audio plan for audio\",\n//     });\n\n//     const [videoPlan, setVideoPlan] = useState({\n//         doctor_id: localStorage.getItem(\"doctor_suid\"),\n//         doctor_list_id: localStorage.getItem(\"listing_id\"),\n//         plan_fee: null,\n//         plan_name: \"video\",\n//         plan_duration: null,\n//         is_trial: 1,\n//         plan_description: \"video plan for video\",\n//     });\n\n//     console.log(\"listingPayload : \", listingPayload);\n\n//     const [duration, setDuration] = useState({\n//         messaging: null,\n//         audio: null,\n//         video: null,\n//     });\n\n//     const [pricing, setPricing] = useState({\n//         messaging: null,\n//         audio: null,\n//         video: null,\n//     });\n//     const [checkBoxIsDisable, setCheckBoxIsDisable] = useState({\n//         messaging: false,\n//         audio: false,\n//         video: false,\n//     });\n\n//     return (\n//         <>\n//             <CustomSnackBar isOpen={isopen} message={planmessage} type={\"success\"} />\n//             <CustomButton\n//                 label=\"Add\"\n//                 isTransaprent={\"True\"}\n//                 isElevated\n//                 handleClick={() => setOpenDialog(!openDialog)}\n//                 buttonCss={{\n//                     display: \"flex\",\n//                     borderBottom: \"1px\",\n//                     borderLeft: \"1px\",\n//                     borderRight: \"1px\",\n//                     borderTop: \"1px\",\n//                     fontfamily: \"poppins\",\n//                     fontsize: \"16px\",\n//                     fontstyle: \"normal\",\n//                     fontweight: \"500\",\n//                     lineheight: \"30px\",\n//                     color: \"#E72B4A\",\n//                 }}\n//             ></CustomButton>\n//             <CustomModal\n//                 style={{\n//                     display: \"flex\",\n//                 }}\n//                 isOpen={openDialog}\n//                 title={\n//                     <Box\n//                         sx={{\n//                             border: \"1px solid #E6E1E5\",\n//                             borderTop: \"1px\",\n//                             borderRight: \"1px\",\n//                             borderLeft: \"1px\",\n//                             width: \"570px\",\n//                             height: \"82px\",\n//                             display: \"flex\",\n//                             justifycontent: \"flexstart\",\n//                         }}\n//                     >\n//                         <h2\n//                             style={{\n//                                 textAlign: \"left\",\n//                                 fontfamily: \"poppins\",\n//                                 fontSize: \"20px\",\n//                                 fontstyle: \"normal\",\n//                                 fontweight: \"500\",\n//                                 lineheight: \"30px\",\n//                                 width: \"101px\",\n//                                 height: \"30px\",\n//                             }}\n//                         >\n//                             Add Plans\n//                         </h2>\n//                     </Box>\n//                 }\n//                 footer={\n//                     <Fragment>\n\n//                     </Fragment>\n//                 }\n//             >\n//                 <div className=\"first-plan\">\n//                     <CustomCheckBox\n//                         checked={checkBoxIsDisable?.messaging}\n//                         onChange={() => {\n//                             setCheckBoxIsDisable({\n//                                 ...checkBoxIsDisable,\n//                                 messaging: !checkBoxIsDisable.messaging,\n//                             });\n\n//                             if (!checkBoxIsDisable?.messaging) {\n//                                 // Adding the plan to the payload\n//                                 console.log(\"Audio Plan : \", checkBoxIsDisable?.messaging);\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, messagingPlan],\n//                                 });\n//                             } else {\n//                                 // Remove audio from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.filter((planItem) => {\n//                                     if (\n//                                         planItem?.plan_name === \"video\" ||\n//                                         planItem?.plan_name === \"call\"\n//                                     ) {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                     ></CustomCheckBox>\n//                     <Typography\n//                         style={{\n//                             fontFamily: \"poppins\",\n//                             fontsize: \"14px\",\n//                             fontstyle: \"normal\",\n//                             fontWeight: \"500\",\n//                             lineHeight: \"22px\",\n//                             letterSpacing: \"0.07px\",\n//                         }}\n//                     >\n//                         Messaging Plan\n//                     </Typography>\n//                 </div>\n//                 <div className=\"first-plan-content\">\n//                     <CustomTextField\n//                         label=\"Price\"\n//                         helperText={\"\"}\n//                         defaultValue={pricing?.messaging}\n//                         textcss={{\n//                             width: \"250px\",\n//                             height: \"56px\",\n//                             flexShrink: \"0\",\n//                             color: \"#787579\",\n//                             fontfamily: \"poppins\",\n//                             fontsize: \"16px\",\n//                             fontstyle: \"normal\",\n//                             fontweight: \"400\",\n//                             lineHeight: \"24px\",\n//                         }}\n//                         onChange={(event) => {\n//                             setPricing({\n//                                 ...pricing,\n//                                 messaging: event?.target?.value,\n//                             });\n//                             setMessagingPlan({\n//                                 ...messagingPlan,\n//                                 plan_fee: event?.target?.value,\n//                             });\n\n//                             if (!checkBoxIsDisable?.messaging) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, messagingPlan],\n//                                 });\n//                             } else {\n//                                 // Remove videoPlan from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"message\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_fee: event?.target?.value,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                         type={\"number\"}\n//                         isDisabled={!checkBoxIsDisable?.messaging}\n//                     ></CustomTextField>\n//                     <CustomDropdown\n//                         label={\"Duration\"}\n//                         items={dropdownItems}\n//                         activeItem={duration?.messaging}\n//                         isDisabled={!checkBoxIsDisable?.messaging}\n//                         handleChange={(item) => {\n//                             setDuration({ ...duration, messaging: item });\n//                             setMessagingPlan({\n//                                 ...messagingPlan,\n//                                 plan_duration: item,\n//                             });\n\n//                             if (!checkBoxIsDisable?.messaging) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, messagingPlan],\n//                                 });\n//                             } else {\n//                                 // Remove videoPlan from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"message\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_duration: item,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                         dropdowncss={{\n//                             width: \"230px\",\n//                             height: \"56px\",\n//                             color: \"#E6E1E5\",\n//                         }}\n//                         // isDisabled={!allChecked}\n//                     />\n//                 </div>\n\n//                 <div className=\"third-plan\">\n//                     <CustomCheckBox\n//                         checked={checkBoxIsDisable?.video}\n//                         onChange={() => {\n//                             setCheckBoxIsDisable({\n//                                 ...checkBoxIsDisable,\n//                                 video: !checkBoxIsDisable.video,\n//                             });\n\n//                             if (!checkBoxIsDisable?.video) {\n//                                 // Adding the plan to the payload\n//                                 console.log(\"Audio Plan : \", checkBoxIsDisable?.video);\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, videoPlan],\n//                                 });\n//                             } else {\n//                                 // Remove videoPlan from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.filter((planItem) => {\n//                                     if (\n//                                         planItem?.plan_name === \"message\" ||\n//                                         planItem?.plan_name === \"call\"\n//                                     ) {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                         // checked={}\n//                         // onChange={() => handleCheckBoxChange(\"cancelled\")}\n//                     />\n//                     <Typography\n//                         style={{\n//                             fontFamily: \"poppins\",\n//                             fontsize: \"14px\", plan: [{\n//     plan_fee: null,\n//     plan_name: null,\n//     plan_duration: null,\n//     plan_description: null,\n// }]\n//                             fontstyle: \"normal\",\n//                             fontWeight: \"500\",\n//                             lineHeight: \"22px\",\n//                             letterSpacing: \"0.07px\",\n//                         }}\n//                     >\n//                         Video Plan\n//                     </Typography>\n//                 </div>\n//                 <div className=\"third-plan-content\">\n//                     <CustomTextField\n//                         label=\"Price\"\n//                         helperText={\"\"}\n//                         textcss={{\n//                             width: \"250px\",\n//                             height: \"56px\",\n//                             flexShrink: \"0\",\n//                             color: \"#787579\",\n//                             fontfamily: \"poppins\",\n//                             fontsize: \"16px\",\n//                             fontstyle: \"normal\",\n//                             fontweight: \"400\",\n//                             lineHeight: \"24px\",\n//                             overflowY: \"hidden\",\n//                             overflowX: \"hidden\",\n//                         }}\n//                         defaultValue={pricing?.video}\n//                         onChange={(event) => {\n//                             setPricing({\n//                                 ...pricing,\n//                                 video: event?.target?.value,\n//                             });\n//                             setVideoPlan({\n//                                 ...videoPlan,\n//                                 plan_fee: event?.target?.value,\n//                             });\n\n//                             if (!checkBoxIsDisable?.video) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, videoPlan],\n//                                 });\n//                             } else {\n//                                 // Remove videoPlan from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"video\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_fee: event?.target?.value,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                         type={\"number\"}\n//                         isDisabled={!checkBoxIsDisable?.video}\n//                     ></CustomTextField>\n//                     <CustomDropdown\n//                         label={\"Duration\"}\n//                         items={dropdownItems}\n//                         activeItem={duration?.video}\n//                         isDisabled={!checkBoxIsDisable.video}\n//                         handleChange={(item) => {\n//                             setDuration({ ...duration, video: item });\n//                             setVideoPlan({ ...videoPlan, plan_duration: item });\n\n//                             if (!checkBoxIsDisable?.video) {\n//                                 // Adding the plan to the payload\n//                                 setListingPayload({\n//                                     ...listingPayload,\n//                                     plan: [...listingPayload.plan, videoPlan],\n//                                 });\n//                             } else {\n//                                 // Remove videoPlan from listingPayload.plan\n//                                 const updatedPlan = listingPayload.plan.map((planItem) => {\n//                                     if (planItem?.plan_name === \"video\") {\n//                                         return {\n//                                             ...planItem,\n//                                             plan_duration: item,\n//                                         };\n//                                     } else {\n//                                         return planItem;\n//                                     }\n//                                 });\n//                                 setListingPayload((prevState) => ({\n//                                     ...prevState,\n//                                     plan: updatedPlan,\n//                                 }));\n//                             }\n//                         }}\n//                         dropdowncss={{\n//                             width: \"230px\",\n//                             height: \"56px\",\n//                             color: \"#E6E1E5\",\n//                         }}\n//                         // isDisabled={!cancelledChecked}\n//                     />\n//                 </div>\n//                 <div className=\"save-button\">\n//                     <CustomButton\n//                         label=\"Save\"\n//                         handleClick={() => {\n//                             setAddListingFlag(true);\n//                         }}\n//                     />\n//                 </div>\n//             </CustomModal>\n//         </>\n//     );\n// };\n// export default ListingModal;\n","var map = {\n\t\"./en-au\": 53872,\n\t\"./en-au.js\": 53872,\n\t\"./en-ca\": 28298,\n\t\"./en-ca.js\": 28298,\n\t\"./en-gb\": 56195,\n\t\"./en-gb.js\": 56195,\n\t\"./en-ie\": 66584,\n\t\"./en-ie.js\": 66584,\n\t\"./en-il\": 65543,\n\t\"./en-il.js\": 65543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 79402,\n\t\"./en-nz.js\": 79402,\n\t\"./en-sg\": 43004,\n\t\"./en-sg.js\": 43004,\n\t\"./it\": 88383,\n\t\"./it-ch\": 21827,\n\t\"./it-ch.js\": 21827,\n\t\"./it.js\": 88383\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40120;","// Small helper to unify create/edit context for listing steps\n// - mode: 'edit' if editing_listing_id is set, otherwise 'create'\n// - listingId: numeric listing id (prefers editing_listing_id)\n// - doctorId: numeric doctor id from localStorage\n// - setUnifiedListingId(): copies editing_listing_id into listing_id for unified steps\n\nexport const useListingMode = () => {\n  const editingId = (typeof window !== 'undefined') ? window.localStorage.getItem('editing_listing_id') : null;\n  const rawListingId = (typeof window !== 'undefined') ? window.localStorage.getItem('listing_id') : null;\n  const doctorIdStr = (typeof window !== 'undefined') ? window.localStorage.getItem('doctor_suid') : null;\n\n  const listingId = Number(editingId || rawListingId || 0);\n  const doctorId = Number(doctorIdStr || 0);\n  const mode = editingId ? 'edit' : 'create';\n\n  const setUnifiedListingId = () => {\n    if (editingId) {\n      window.localStorage.setItem('listing_id', editingId);\n    }\n  };\n\n  return { mode, listingId, doctorId, setUnifiedListingId };\n};\n\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport sentLogo from \"../../../static/images/DrImages/SendLogo.png\";\nimport receiveLogo from \"../../../static/images/DrImages/RecieveLogo.png\";\nimport SendIcon from \"@mui/icons-material/Send\"; // Icon for sending money\nimport CallReceivedIcon from \"@mui/icons-material/CallReceived\"; // Icon for receiving money\nimport DangerousIcon from '@mui/icons-material/Dangerous';\n\nexport const SendCard = ({ Payment, TRXID }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img\n                        src={sentLogo}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    />\n                    \n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {Payment}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        TRX ID : {TRXID}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport const ReceiveCard = ({ Payment, TRXID }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img\n                        src={receiveLogo}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {Payment}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        TRX ID : {TRXID}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport const FaildCard = ({ Payment, TRXID }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    {/* <img\n                        src={CallReceivedIcon}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    /> */}\n                    <DangerousIcon sx={{ color: \"#F58A9B\", fontSize: \"3.5rem\" }} />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {Payment}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        TRX ID : {TRXID}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DoctorAppointmentNavbar = () => {\n    return (\n        <nav className=\"NavBar-Container-Appoinement\">\n            <NavLink to={\"/doctordashboard/doctorAppointment/request\"}>Request</NavLink>\n            <NavLink to={\"/doctordashboard/doctorAppointment/upcoming\"}>Upcoming</NavLink>\n            <NavLink to={\"/doctordashboard/doctorAppointment/completed\"}>Completed</NavLink>\n            <NavLink to={\"/doctordashboard/doctorAppointment/cancelled\"}>Cancelled</NavLink>\n            <NavLink to={\"/doctordashboard/doctorAppointment/chats\"}>Chats</NavLink>\n        </nav>\n    );\n};\nexport default DoctorAppointmentNavbar;\n","import { Box, Divider, Card, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Imagestar from \"../../static/images/DrImages/ShiningStar.png\";\nimport DrImage from \"../../static/images/DrImages/doctor_alter.jpeg\";\nimport { getProfileImageSrc } from \"../../utils/imageUtils\";\n\nconst DoctorCard = ({ DrData }) => {\n    const {\n        first_name: name = \"\",\n        middle_name = \"\",\n        last_name = \"\",\n        suid: id,\n        qualification = \"\",\n        department_name: specialist = \"\",\n        average_review: rating = \"\",\n        hospital_org: hospital = \"\",\n    } = DrData || {};\n\n    return (\n        <Box key={id} sx={{ width: \"100%\", height: \"100%\" }}>\n            <Card\n                sx={{\n                    display: \"flex\",\n                    height: \"130px\",\n                    padding: 0,\n                    backgroundColor: \"#fff\",\n                    borderRadius: 3,\n                    boxShadow: \"0 2px 12px rgba(0, 0, 0, 0.08)\",\n                    transition: \"all 0.3s ease-in-out\",\n                    cursor: \"pointer\",\n                    \"&:hover\": {\n                        boxShadow: \"0 8px 25px rgba(231, 43, 74, 0.15)\",\n                        transform: \"translateY(-4px)\",\n                    },\n                }}\n            >\n                <Box sx={{ \n                    width: \"140px\", \n                    height: \"100%\", \n                    flexShrink: 0,\n                    position: \"relative\",\n                    overflow: \"hidden\"\n                }}>\n                    <CardMedia\n                        component=\"img\"\n                        src={getProfileImageSrc(DrData?.profile_picture, DrImage)}\n                        alt=\"Doctor Profile\"\n                        sx={{\n                            width: \"100%\",\n                            height: \"100%\",\n                            objectFit: \"cover\",\n                        }}\n                    />\n                    <Box sx={{\n                        position: \"absolute\",\n                        top: 0,\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        background: \"linear-gradient(135deg, rgba(231, 43, 74, 0.1) 0%, rgba(255, 107, 107, 0.05) 100%)\",\n                        opacity: 0,\n                        transition: \"opacity 0.3s ease\",\n                        \"&:hover\": {\n                            opacity: 1,\n                        }\n                    }} />\n                </Box>\n\n                <CardContent\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"space-between\",\n                        flexGrow: 1,\n                        padding: \"16px 20px\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box>\n                        <Typography\n                            variant=\"h6\"\n                            sx={{\n                                fontWeight: 600,\n                                fontSize: \"16px\",\n                                mb: 1,\n                                color: \"#2c3e50\",\n                                lineHeight: 1.2,\n                            }}\n                        >\n                            {`${name || \"\"} ${middle_name || \"\"} ${last_name || \"\"}`.trim()}\n                        </Typography>\n\n                        <Typography\n                            variant=\"body2\"\n                            sx={{\n                                color: \"#7f8c8d\",\n                                fontSize: \"13px\",\n                                lineHeight: 1.4,\n                                mb: 0.5,\n                                fontWeight: 500,\n                            }}\n                        >\n                            {qualification}\n                        </Typography>\n                        \n                        {hospital && (\n                            <Typography\n                                variant=\"body2\"\n                                sx={{\n                                    color: \"#95a5a6\",\n                                    fontSize: \"12px\",\n                                    lineHeight: 1.3,\n                                    mb: 1,\n                                }}\n                            >\n                                {hospital}\n                            </Typography>\n                        )}\n\n                        <Typography\n                            variant=\"body2\"\n                            sx={{\n                                color: \"#e72b4a\",\n                                fontSize: \"12px\",\n                                fontWeight: 600,\n                                mb: 1.5,\n                                textTransform: \"uppercase\",\n                                letterSpacing: \"0.5px\",\n                            }}\n                        >\n                            {specialist}\n                        </Typography>\n                    </Box>\n\n                    <Box sx={{ \n                        display: \"flex\", \n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        mt: \"auto\"\n                    }}>\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Box\n                                component=\"span\"\n                                sx={{ display: \"flex\", alignItems: \"center\", mr: 0.5 }}\n                            >\n                                <img src={Imagestar} alt=\"Star\" style={{ height: \"14px\" }} />\n                            </Box>\n                            <Typography variant=\"body2\" sx={{ \n                                fontSize: \"12px\", \n                                color: \"#7f8c8d\",\n                                fontWeight: 500\n                            }}>\n                                {rating || \"N/A\"}\n                            </Typography>\n                        </Box>\n                        \n                        <Box sx={{\n                            width: \"8px\",\n                            height: \"8px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#e72b4a\",\n                            opacity: 0.7,\n                        }} />\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    );\n};\n\nDoctorCard.propTypes = {\n    DrData: PropTypes.shape({\n        first_name: PropTypes.string,\n        middle_name: PropTypes.string,\n        last_name: PropTypes.string,\n        suid: PropTypes.string,\n        qualification: PropTypes.string,\n        department_name: PropTypes.string,\n        review_type: PropTypes.string,\n        hospital_org: PropTypes.string,\n    }),\n};\n\nexport default DoctorCard;\n","import React, { useRef, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MenuItem, FormControl, Select, InputLabel } from \"@mui/material\";\n\nconst CustomDropdown = ({\n    label,\n    dropdowncss = { m: 1, minWidth: 150 },\n    items,\n    activeItem,\n    handleChange,\n    isFabIcon,\n    isDisabled,\n    fabIcon,\n    menuItemValue = \"All\",\n    CustomSx,\n    variant = \"outlined\",\n    size = \"medium\"\n}) => {\n    const labelId = `dropdown-list-label-${label}`;\n    const inputRef = useRef(null);\n\n    const defaultStyles = {\n        fontFamily: \"Poppins, sans-serif\",\n        borderRadius: \"8px\",\n        transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n        \"& .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#e0e0e0\",\n            transition: \"border-color 0.3s ease\",\n        },\n        \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#1976d2\",\n            borderWidth: \"2px\",\n        },\n        \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#1976d2\",\n            borderWidth: \"2px\",\n        },\n        \"& .MuiSelect-select\": {\n            padding: size === \"small\" ? \"8px 12px\" : size === \"large\" ? \"16px 20px\" : \"12px 16px\",\n            fontSize: \"14px\",\n            color: \"#333\",\n        },\n        \"& .MuiInputLabel-root\": {\n            fontSize: \"14px\",\n            fontWeight: 500,\n            color: \"#666\",\n            \"&.Mui-focused\": {\n                color: \"#1976d2\",\n            }\n        },\n        \"& .MuiMenuItem-root\": {\n            fontSize: \"14px\",\n            padding: \"12px 16px\",\n            transition: \"background-color 0.2s ease\",\n            \"&:hover\": {\n                backgroundColor: \"#f5f5f5\",\n            },\n            \"&.Mui-selected\": {\n                backgroundColor: \"#e3f2fd\",\n                \"&:hover\": {\n                    backgroundColor: \"#bbdefb\",\n                }\n            }\n        }\n    };\n\n    return (\n        <FormControl \n            variant={variant} \n            sx={{\n                ...defaultStyles,\n                ...dropdowncss\n            }}\n            size={size}\n        >\n            {isFabIcon ? (\n                <Select\n                    className=\"fab-icon-class\"\n                    labelId={labelId}\n                    id={labelId}\n                    value={activeItem}\n                    onChange={({ target }) => handleChange(target.value)}\n                    inputRef={inputRef}\n                    disabled={isDisabled}\n                    renderValue={() => (\n                        <div\n                            onClick={() => {\n                                inputRef.current.parentNode.click();\n                            }}\n                            style={{ display: \"flex\", alignItems: \"center\" }}\n                        >\n                            {fabIcon}\n                        </div>\n                    )}\n                >\n                    {items.map((item, idx) => (\n                        <MenuItem key={idx} value={item}>\n                            {item}\n                        </MenuItem>\n                    ))}\n                </Select>\n            ) : (\n                <Fragment>\n                    <InputLabel id={labelId}>{label}</InputLabel>\n                    <Select\n                        labelId={label}\n                        id={labelId}\n                        sx={CustomSx}\n                        disabled={isDisabled}\n                        value={activeItem}\n                        onChange={({ target }) => handleChange(target.value)}\n                        label={label}\n                    >\n                        <MenuItem value=\"\">{menuItemValue}</MenuItem>\n                        {items.map((item, idx) => (\n                            <MenuItem key={idx} value={item}>\n                                {item}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </Fragment>\n            )}\n        </FormControl>\n    );\n};\n\nCustomDropdown.defaultProps = {\n    label: \"Select Option\",\n    items: [\"Option 1\", \"Option 2\", \"Option 3\"],\n    activeItem: \"\",\n    isFabIcon: false,\n    fabIcon: <Fragment></Fragment>,\n    handleChange: () => {},\n    isDisabled: false,\n    variant: \"outlined\",\n    size: \"medium\",\n};\n\nCustomDropdown.propTypes = {\n    dropdowncss: PropTypes.object,\n    label: PropTypes.string,\n    items: PropTypes.array,\n    activeItem: PropTypes.string,\n    isFabIcon: PropTypes.bool,\n    fabIcon: PropTypes.node,\n    handleChange: PropTypes.func,\n    menuItemValue: PropTypes.string,\n    isDisabled: PropTypes.bool,\n    variant: PropTypes.oneOf([\"standard\", \"outlined\", \"filled\"]),\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n};\n\nexport default CustomDropdown;\n","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport './StepContent.scss';\n\nconst StepContent = ({ \n    title, \n    subtitle, \n    children, \n    className = \"\",\n    variant = \"default\" \n}) => {\n    return (\n        <Paper className={`step-content step-content--${variant} ${className}`} elevation={2}>\n            <Box className=\"step-content-header\">\n                <Typography variant=\"h5\" className=\"step-title\">\n                    {title}\n                </Typography>\n                {subtitle && (\n                    <Typography variant=\"body1\" className=\"step-subtitle\">\n                        {subtitle}\n                    </Typography>\n                )}\n            </Box>\n            <Box className=\"step-content-body\">\n                {children}\n            </Box>\n        </Paper>\n    );\n};\n\nexport default StepContent;\n","import React from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport { SearchOff, Refresh } from '@mui/icons-material';\nimport './EmptyState.scss';\n\nconst EmptyState = ({ \n    icon: Icon = SearchOff,\n    title = \"No data found\",\n    description = \"There's nothing to show here yet.\",\n    action,\n    actionText = \"Refresh\",\n    onAction,\n    className = \"\",\n    size = \"medium\"\n}) => {\n    const isEmoji = typeof Icon === 'string';\n    const isJSXElement = React.isValidElement(Icon);\n    \n    const iconSize = size === \"small\" ? 48 : size === \"large\" ? 96 : 64;\n    const titleVariant = size === \"small\" ? \"subtitle1\" : size === \"large\" ? \"h4\" : \"h6\";\n    const descriptionVariant = size === \"small\" ? \"caption\" : size === \"large\" ? \"body1\" : \"body2\";\n\n    return (\n        <Box className={`empty-state ${className}`}>\n            <Box className=\"empty-state-content\">\n                <Box className=\"empty-state-icon\">\n                    {isEmoji ? (\n                        <Typography \n                            sx={{ \n                                fontSize: iconSize, \n                                color: '#ccc',\n                                lineHeight: 1,\n                                userSelect: 'none'\n                            }}\n                        >\n                            {Icon}\n                        </Typography>\n                    ) : isJSXElement ? (\n                        React.cloneElement(Icon, { \n                            sx: { fontSize: iconSize, color: '#ccc' } \n                        })\n                    ) : (\n                        <Icon sx={{ fontSize: iconSize, color: '#ccc' }} />\n                    )}\n                </Box>\n                <Typography \n                    variant={titleVariant} \n                    className=\"empty-state-title\"\n                    sx={{\n                        fontFamily: \"Poppins, sans-serif\",\n                        fontWeight: 600,\n                        color: \"#333\",\n                        marginBottom: \"8px\"\n                    }}\n                >\n                    {title}\n                </Typography>\n                <Typography \n                    variant={descriptionVariant} \n                    className=\"empty-state-description\"\n                    sx={{\n                        fontFamily: \"Poppins, sans-serif\",\n                        color: \"#666\",\n                        textAlign: \"center\",\n                        maxWidth: \"400px\",\n                        lineHeight: 1.5\n                    }}\n                >\n                    {description}\n                </Typography>\n                {(action || onAction) && (\n                    <Box className=\"empty-state-action\">\n                        {action || (\n                            <Button\n                                variant=\"outlined\"\n                                startIcon={<Refresh />}\n                                onClick={onAction}\n                                className=\"empty-state-button\"\n                                sx={{\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontWeight: 500,\n                                    borderRadius: \"12px\",\n                                    textTransform: \"none\",\n                                    padding: \"8px 24px\",\n                                    transition: \"all 0.3s ease\",\n                                    \"&:hover\": {\n                                        transform: \"translateY(-2px)\",\n                                        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\"\n                                    }\n                                }}\n                            >\n                                {actionText}\n                            </Button>\n                        )}\n                    </Box>\n                )}\n            </Box>\n        </Box>\n    );\n};\n\nexport default EmptyState;","import { useState, useCallback } from 'react';\nimport { validateStep } from '../utils/validationUtils';\n\nexport const useFormValidation = () => {\n    const [errors, setErrors] = useState({});\n    const [touched, setTouched] = useState({});\n\n    const validateField = useCallback((field, value, step) => {\n        const validation = validateStep(step, { [field]: value });\n        return validation.errors.length > 0 ? validation.errors[0] : null;\n    }, []);\n\n    const validateStepData = useCallback((step, data, questions = null) => {\n        const validation = validateStep(step, data, questions);\n        setErrors(prev => ({\n            ...prev,\n            [step]: validation.errors\n        }));\n        return validation;\n    }, []);\n\n    const setFieldError = useCallback((step, field, error) => {\n        setErrors(prev => ({\n            ...prev,\n            [step]: {\n                ...prev[step],\n                [field]: error\n            }\n        }));\n    }, []);\n\n    const clearFieldError = useCallback((step, field) => {\n        setErrors(prev => ({\n            ...prev,\n            [step]: {\n                ...prev[step],\n                [field]: null\n            }\n        }));\n    }, []);\n\n    const clearStepErrors = useCallback((step) => {\n        setErrors(prev => ({\n            ...prev,\n            [step]: []\n        }));\n    }, []);\n\n    const setFieldTouched = useCallback((field) => {\n        setTouched(prev => ({\n            ...prev,\n            [field]: true\n        }));\n    }, []);\n\n    const isFieldTouched = useCallback((field) => {\n        return touched[field] || false;\n    }, [touched]);\n\n    const getFieldError = useCallback((step, field) => {\n        return errors[step]?.[field] || null;\n    }, [errors]);\n\n    const getStepErrors = useCallback((step) => {\n        return errors[step] || [];\n    }, [errors]);\n\n    const hasStepErrors = useCallback((step) => {\n        const stepErrors = errors[step];\n        return stepErrors && stepErrors.length > 0;\n    }, [errors]);\n\n    const resetValidation = useCallback(() => {\n        setErrors({});\n        setTouched({});\n    }, []);\n\n    return {\n        errors,\n        touched,\n        validateField,\n        validateStepData,\n        setFieldError,\n        clearFieldError,\n        clearStepErrors,\n        setFieldTouched,\n        isFieldTouched,\n        getFieldError,\n        getStepErrors,\n        hasStepErrors,\n        resetValidation\n    };\n};\n","import * as React from \"react\";\nimport { useState, useRef } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { PickersDay } from \"@mui/x-date-pickers/PickersDay\";\nimport { DemoContainer, DemoItem } from \"@mui/x-date-pickers/internals/demo\";\nimport { TimePicker } from \"@mui/x-date-pickers\";\nimport { TextField, Alert, CircularProgress, Chip } from \"@mui/material\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport CustomRadioButton from \"../../components/CustomRadioButton/custom-radio-button\";\nimport CustomTextField from \"../../components/CustomTextField/custom-text-field\";\nimport CustomDropdown from \"../../components/CustomDropdown/custom-dropdown\";\nimport StepContent from \"../../components/StepContent\";\nimport LoadingSkeleton from \"../../components/LoadingSkeleton\";\nimport EmptyState from \"../../components/EmptyState\";\nimport { useFormValidation } from \"../../hooks/useFormValidation\";\nimport { validateStep, getStepTitle, getStepSubtitle } from \"../../utils/validationUtils\";\nimport messageLogo from \"../../static/images/patientAppointmentLogo/messageLogo.png\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { baseURL } from \"../../constants/const\";\nimport CustomSnackBar from \"../../components/CustomSnackBar\";\nimport { get_client_token, get_nonce } from \"../../const_payment/Const_Payment\";\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { \n    generateClientToken, \n    getPaymentMethodNonce, \n    isDevelopmentMode\n} from \"../../services/paymentService\";\nimport \"./patientBookappointment.scss\";\nimport \"./BookingAppointmentModal.scss\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport NoAppointmentCard from \"../PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport \"./bookappointment.scss\";\nimport { styled } from \"@mui/material/styles\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport isSameDay from \"date-fns/isSameDay\";\nimport isWithinInterval from \"date-fns/isWithinInterval\";\nimport isAfter from \"date-fns/isAfter\";\nimport startOfToday from \"date-fns/startOfToday\";\nimport { fetchDocDuration, fetchQuestions, formatDate } from \"./bookappointmentapihelperfunction\";\nimport { useParams } from \"react-router-dom\";\n\nconst today = startOfToday();\n\nconst StyledPickersDay = styled(PickersDay, {\n    shouldForwardProp: (prop) => prop !== \"isAvailable\",\n})(({ theme, isAvailable }) => ({\n    ...(isAvailable && {\n        backgroundColor: \"green\",\n        color: \"white\",\n        \"&:hover\": {\n            backgroundColor: \"darkgreen\",\n        },\n    }),\n}));\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst steps = [\"Details\", \"Date & Time\", \"Duration\", \"Questions\", \"Payment\"];\n\nexport default function HorizontalLinearStepper({ drID, hcfDoc }) {\n    const params = useParams();\n    const { validateStepData, getStepErrors, clearStepErrors, hasStepErrors } = useFormValidation();\n    \n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const [isLoading, setIsLoading] = React.useState(false);\n    const [stepLoading, setStepLoading] = React.useState({});\n    const [isUploadingFile, setIsUploadingFile] = React.useState(false);\n    \n    // Snackbar states\n    const [showSnack, setShowSnack] = React.useState(false);\n    const [showSnackError, setShowSnackError] = React.useState(false);\n    const [availableDatesSnackError, setAvailableDatesSnackError] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n    const [availableDatesSnackMessage, setAvailableDatesSnackMessage] = useState(\"\");\n    const [showSnackMessage, setShowSnackMessage] = useState(\"\");\n    const [showSnackErrorMessage, setShowSnackErrorMessage] = useState(\"\");\n    \n    // Data states\n    const [time_slot, setTime_slot] = React.useState([]);\n    const [question, setQuestion] = React.useState(null);\n    const [customAvailableDates, setCustomAvailableDates] = useState([]);\n    const [planfee, setPlanFee] = useState(\"\");\n    const [selectPackage, setSelectPackage] = React.useState([]);\n    const [packageflag, setPackageFlag] = React.useState(false);\n    const [selectedDate, setSelectedDate] = useState(null);\n    const [duration, setDuration] = React.useState([]);\n    const [doctorListId, setDoctorListId] = useState(null);\n    \n    // Payment states\n    const [values, setValues] = React.useState({\n        clientToken: null,\n        success: \"\",\n        error: \"\",\n        instance: null,\n    });\n    const dropinInstanceRef = useRef(null);\n    const [nonce, setNonce] = React.useState(null);\n    const [braintreeKey, setBraintreeKey] = React.useState(0); // Key to force re-render\n    const [isRefreshing, setIsRefreshing] = React.useState(false); // Loading state for refresh\n    const [usedNonces, setUsedNonces] = React.useState(new Set()); // Track used nonces\n    const [isProcessingPayment, setIsProcessingPayment] = React.useState(false); // Prevent duplicate payments\n    const [isAppointmentBooked, setIsAppointmentBooked] = React.useState(false); // Track if appointment is already booked\n    const [timeslotData, setTimeslotData] = React.useState({\n        appointment_date: null,\n        doctor_id: Number(drID),\n        duration: null,\n    });\n\n    const [appointmentData, setAppointmentData] = React.useState({\n        appointment_date: null,\n        appointment_time: null,\n        patient_id: Number(localStorage.getItem(\"patient_suid\")),\n        doctor_id: Number(drID),\n        fileName: null,\n        file: null,\n        action_done_by: 5,\n        patient_type: null,\n        name: null,\n        gender: null,\n        age: null,\n        patient_report: null,\n        answer_1: null,\n        answer_2: null,\n        answer_3: null,\n        answer_4: null,\n        answer_5: null,\n        duration: null,\n        doctor_fee_plan_id: null, //important plan and listing should be active\n        payment_method_nonce: null,\n        problem: null,\n    });\n    console.log(hcfDoc);\n\n    console.log(\n        \"this is the flag inside of the book appointment modal : \",\n        hcfDoc +\n        `this is the hcf id : ${params?.reshcfID} and this is the doc id : ${params?.hcddocid}`,\n    );\n    const [messagingPlan, setMessaginplanActive] = React.useState(false);\n    const [voiceMessagingPlan, setVoiceMessaginplanActive] = React.useState(false);\n    const [videoMessagingPlan, setVideoMessaginplanActive] = React.useState(false);\n\n    // List of available dates range\n    const rangeStartDate = new Date(0, 0, 0);\n    const rangeEndDate = new Date(0, 0, 0);\n\n    // Define custom available dates\n    // const customAvailableDates = [new Date(2024, 6, 21), new Date(2024, 7, 2)];\n\n    const isInRange = (date) =>\n        isWithinInterval(date, { start: rangeStartDate, end: rangeEndDate });\n\n    const isAvailable = (date) =>\n        isInRange(date) ||\n        customAvailableDates.some((availableDate) => isSameDay(availableDate, date));\n\n    const shouldDisableDate = (date) => {\n        // Disable all past dates\n        if (date < today) {\n            return true;\n        }\n\n        // Enable today's date if it's in range or custom available dates\n        if (isSameDay(date, today)) {\n            return !(\n                isInRange(date) ||\n                customAvailableDates.some((availableDate) => isSameDay(availableDate, date))\n            );\n        }\n\n        // Disable future dates that are not in range or custom available dates\n        return !(\n            isInRange(date) ||\n            customAvailableDates.some((availableDate) => isSameDay(availableDate, date))\n        );\n    };\n\n    const fetch_Time_Slots = async () => {\n        try {\n            console.log(\"Fetching time slots with data:\", timeslotData);\n            const response = await axiosInstance.post(\n                \"/sec/patient/getAppointmentSlots\",\n                timeslotData,\n            );\n            console.log(\"Time slots response:\", response.data);\n            setTime_slot(response?.data?.response?.availableSlots || []);\n        } catch (err) {\n            console.error(\"Error fetching time slots:\", err);\n            setTime_slot([]);\n        }\n    };\n\n    const bookappointment = async (nonce_value) => {\n        // Prevent duplicate appointment booking\n        if (isAppointmentBooked) {\n            console.log(\"Appointment already booked, skipping duplicate booking\");\n            return;\n        }\n        \n        setShowSnack(false);\n        setShowSnackError(false);\n        try {\n            const BookAppoinetmentApiPath = hcfDoc\n                ? \"/sec/patient/createAppointmentHcfDoctor\"\n                : \"/sec/patient/createAppointment/\";\n            \n            // Use the current appointment data which should already have the nonce\n            const appointmentPayload = {\n                ...appointmentData,\n                payment_method_nonce: nonce_value,\n                hcf_id: hcfDoc ? params?.hcddocid : undefined\n            };\n            \n            console.log(\"Creating appointment with data:\", appointmentPayload);\n            \n            const response = await axiosInstance.post(\n                BookAppoinetmentApiPath,\n                JSON.stringify(appointmentPayload)\n            );\n            \n            console.log(\"Appointment created successfully:\", response.data);\n            setShowSnack(true);\n            setShowSnackError(false);\n            setShowSnackMessage(\"Appointment booked successfully!\");\n            setIsAppointmentBooked(true); // Mark appointment as booked\n            \n        } catch (error) {\n            console.error(\"Error creating appointment:\", error);\n            setShowSnack(false);\n            setShowSnackError(true);\n            setShowSnackErrorMessage(\n                error?.response?.data?.error || \n                \"Failed to create appointment. Please try again.\"\n            );\n        }\n    };\n    console.log(\"appointmentData : \", appointmentData);\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        // Validate current step before proceeding\n        // For questions step, pass the questions array\n        const validation = activeStep === 3 \n            ? validateStepData(activeStep, appointmentData, question)\n            : validateStepData(activeStep, appointmentData);\n        \n        // Debug logging for questions step\n        if (activeStep === 3) {\n            console.log(\"Questions validation debug:\", {\n                questions: question,\n                questionsLength: question?.length || 0,\n                appointmentData: appointmentData,\n                answerKeys: Object.keys(appointmentData).filter(key => key.startsWith('answer_')),\n                validation: validation\n            });\n        }\n        \n        if (!validation.isValid) {\n            console.log(\"Validation errors:\", validation.errors);\n            return; // Don't proceed if validation fails\n        }\n        \n        // Clear any previous errors for this step\n        clearStepErrors(activeStep);\n        \n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    // Clear payment form and reset nonce\n    const clearPaymentForm = () => {\n        setNonce(null);\n        setAppointmentData({ ...appointmentData, payment_method_nonce: null });\n        setUsedNonces(new Set()); // Clear used nonces\n        setIsAppointmentBooked(false); // Reset appointment booked state\n        // Clear the Braintree form\n        if (values?.instance) {\n            values.instance.clearSelectedPaymentMethod();\n        }\n    };\n\n    // Force refresh of Braintree Drop-In instance\n    const refreshBraintreeInstance = async () => {\n        try {\n            setIsRefreshing(true);\n            console.log(\"Refreshing Braintree Drop-In instance...\");\n            \n            // Get fresh client token\n            const freshToken = await generateClientToken();\n            console.log(\"Generated fresh client token:\", freshToken);\n            \n            // Update values with fresh token; clear stale instance reference\n            setValues(prev => ({ ...prev, clientToken: freshToken, instance: null }));\n            dropinInstanceRef.current = null;\n            \n            // Clear any existing nonce and used nonces\n            setNonce(null);\n            setAppointmentData({ ...appointmentData, payment_method_nonce: null });\n            setUsedNonces(new Set()); // Clear used nonces\n            setIsAppointmentBooked(false); // Reset appointment booked state\n            \n            // Force re-render of Braintree component by incrementing key\n            setBraintreeKey(prev => prev + 1);\n            \n            console.log(\"Braintree instance refreshed successfully\");\n        } catch (error) {\n            console.error(\"Error refreshing Braintree instance:\", error);\n        } finally {\n            setIsRefreshing(false);\n        }\n    };\n\n    // api function to fetch purchase plan\n    const Purchase_plan = async () => {\n        // Prevent duplicate payment processing\n        if (isProcessingPayment) {\n            console.log(\"Payment already in progress, ignoring duplicate request\");\n            return;\n        }\n        \n        try {\n            setIsLoading(true);\n            setIsProcessingPayment(true);\n            \n            // Both development and production use real Braintree nonce\n            // Development uses sandbox, production uses live environment\n            const environment = isDevelopmentMode() ? \"sandbox\" : \"production\";\n            console.log(`Getting fresh Braintree ${environment} nonce`);\n            \n            // Check if Braintree instance is available and not torn down\n            if (!dropinInstanceRef.current && !values?.instance) {\n                console.log(\"No Braintree instance available, refreshing...\");\n                await refreshBraintreeInstance();\n                // Wait a bit for the instance to initialize\n                await new Promise(resolve => setTimeout(resolve, 1000));\n                \n                // Check again after refresh\n                if (!dropinInstanceRef.current && !values?.instance) {\n                    throw new Error(\"Braintree payment form not ready. Please wait and try again.\");\n                }\n            }\n            \n            // Use the most current instance (prefer dropinInstanceRef, fallback to values.instance)\n            const currentInstance = dropinInstanceRef.current || values?.instance;\n            \n            // Check if instance is still valid (not torn down)\n            try {\n                // Test if instance is still valid by checking if it has the requestPaymentMethod function\n                if (!currentInstance || typeof currentInstance.requestPaymentMethod !== 'function') {\n                    console.log(\"Braintree instance is invalid, refreshing...\");\n                    await refreshBraintreeInstance();\n                    // Wait a bit for the instance to initialize\n                    await new Promise(resolve => setTimeout(resolve, 1000));\n                    \n                    // Get the refreshed instance\n                    const refreshedInstance = dropinInstanceRef.current || values?.instance;\n                    if (!refreshedInstance || typeof refreshedInstance.requestPaymentMethod !== 'function') {\n                        throw new Error(\"Braintree payment form is no longer valid. Please refresh the payment form.\");\n                    }\n                }\n            } catch (error) {\n                console.error(\"Braintree instance validation failed:\", error);\n                if (error.message.includes(\"refresh\")) {\n                    throw error; // Re-throw refresh errors\n                }\n                throw new Error(\"Braintree payment form is no longer valid. Please refresh the payment form.\");\n            }\n            \n            // Generate fresh nonce for each payment attempt with retry logic\n            console.log(\"Requesting payment method from Braintree...\");\n            let nonce_value;\n            let retryCount = 0;\n            const maxRetries = 2;\n            \n            while (retryCount < maxRetries) {\n                try {\n                    const instanceToUse = dropinInstanceRef.current || values?.instance;\n                    nonce_value = await get_nonce({ instance: instanceToUse });\n                    console.log(`Generated fresh Braintree ${environment} nonce:`, nonce_value);\n                    \n                    if (nonce_value && typeof nonce_value === 'string') {\n                        break; // Success, exit retry loop\n                    }\n                } catch (error) {\n                    console.error(`Nonce generation attempt ${retryCount + 1} failed:`, error);\n                    \n                    if (error.message && error.message.includes('teardown')) {\n                        console.log(\"Teardown error detected, refreshing Braintree instance...\");\n                await refreshBraintreeInstance();\n                await new Promise(resolve => setTimeout(resolve, 2000)); // Wait for new instance\n                retryCount++;\n                continue;\n            } else {\n                throw error; // Re-throw non-teardown errors\n            }\n                }\n                \n                retryCount++;\n            }\n            \n            if (!nonce_value || typeof nonce_value !== 'string') {\n                throw new Error(\"Failed to generate payment nonce after retries. Please refresh the payment form and try again.\");\n            }\n            \n            // Check if this nonce has already been used\n            if (usedNonces.has(nonce_value)) {\n                console.log(\"Nonce already used, refreshing Braintree instance...\");\n                await refreshBraintreeInstance();\n                throw new Error(\"Payment form has been refreshed. Please try again.\");\n            }\n            \n            // Add nonce to used set\n            setUsedNonces(prev => new Set([...prev, nonce_value]));\n            \n            // Update nonce and appointment data with fresh nonce\n            setNonce(nonce_value);\n        setAppointmentData({ ...appointmentData, payment_method_nonce: nonce_value });\n\n            // Do not call sandbox payment endpoint here. Just book appointment with nonce.\n            await bookappointment(nonce_value);\n            setIsAppointmentBooked(true);\n            clearPaymentForm();\n\n        } catch (error) {\n            console.error(\"Error in payment processing:\", error);\n            setShowSnackError(true);\n            \n            // Handle specific teardown error\n            if (error.message && error.message.includes('teardown')) {\n                setShowSnackErrorMessage(\"Payment form has been reset. Please refresh the payment form and try again.\");\n            } else if (error.message && error.message.includes('no longer valid')) {\n                // Automatically refresh the Braintree instance for this specific error\n                console.log(\"Automatically refreshing Braintree instance due to invalid instance error...\");\n                try {\n                    await refreshBraintreeInstance();\n                    setShowSnackErrorMessage(\"Payment form has been automatically refreshed. Please try again.\");\n                } catch (refreshError) {\n                    console.error(\"Failed to auto-refresh Braintree instance:\", refreshError);\n                    setShowSnackErrorMessage(\"Payment form is no longer valid. Please refresh the page and try again.\");\n                }\n            } else {\n                setShowSnackErrorMessage(error.message || \"Payment processing failed. Please try again.\");\n            }\n        } finally {\n            setIsLoading(false);\n            setIsProcessingPayment(false);\n        }\n    };\n\n    // Note: Payment is processed server-side during appointment creation.\n\n    // api function to fetch questions\n    // const fetchQuestions = async () => {\n    //     try {\n    //         const response = await axiosInstance.post(\n    //             \"/sec/patient/createAppointmentPackageQuestion/\",\n    //             JSON.stringify({\n    //                 doctor_id: drID,\n    //                 is_active: 1,\n    //             }),\n    //         );\n    //         setQuestion(response?.data?.response?.questions);\n    //     } catch (err) {\n    //         console.log(\"Questions Error : \", err);\n    //     }\n    // };\n\n    //  api function to fetch the doctor duration slots\n    // const fetchDocDuration = async () => {\n    //     try {\n    //         const response = await axiosInstance(`/sec/patient/getAppointmentPlanDuration/${drID}`);\n    //         // console.log(\"Suration : \", response.data?.response?.durations);\n    //         let duration = [];\n    //         for (let key in response.data?.response?.durations) {\n    //             // console.log(\"durations :   ==   \",response.data?.response?.durations[key]?.plan_duration);\n    //             duration.push(response.data?.response?.durations[key]?.plan_duration);\n    //         }\n    //         console.log(duration);\n    //         setDuration(duration);\n    //     } catch (err) {\n    //         console.log(\"Duration Error : \", err);\n    //     }\n    // };\n\n    // api function to fetch the select package\n\n\n    const fetchSelectPackage = async () => {\n        // console.log(\"Appointnment data : \", drID, appointmentData?.duration);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/createAppointmentPackageSelect/\",\n                JSON.stringify({\n                    doctor_id: drID,\n                    is_active: 1,\n                    duration: appointmentData?.duration,\n                }),\n            );\n            console.log(\"Package plan : \", response.data?.response.plan);\n            console.log(\"Doctor list id : \", response.data?.response.plan[0]?.doctor_list_id);\n            setDoctorListId(response.data?.response.plan[0]?.doctor_list_id);\n            setSelectPackage(response?.data?.response.plan);\n            // for (let key in response?.data?.response) {\n            //     duration.push(key);\n            //     // setDuration([...duration , key])\n            // }\n        } catch (err) {\n            console.log(\"select Error : \", err);\n        }\n    };\n\n    const fetchQuestions = async () => {\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/patient/createAppointmentPackageQuestion/\",\n                JSON.stringify({\n                    doctor_id: drID,\n                    is_active: 1,\n                    doctor_list_id: doctorListId,\n                }),\n            );\n            setQuestion(response?.data?.response?.questions);\n        } catch (err) {\n            console.log(\"Questions Error : \", err);\n        }\n    };\n\n    // function to take date as an input\n    const selectDate = (date) => {\n        console.log(\"Date selected:\", date);\n        setSelectedDate(date);\n        \n        const formatDateResp = formatDate(date);\n        console.log(\"Formatted date:\", formatDateResp);\n        \n        // Clear previous selections when date changes\n        setAppointmentData({ \n            ...appointmentData, \n            appointment_date: formatDateResp,\n            duration: null, // Clear previous duration selection\n            appointment_time: null, // Clear previous time selection\n        });\n        \n        // Clear previous selections\n        setDuration([]);\n        setTime_slot([]);\n        \n        // Fetch available durations for the selected date\n        fetchDocDuration(drID, formatDateResp)\n            .then((duration) => {\n                console.log(\"Duration promise resolved : \", duration);\n                setDuration(duration || []);\n            })\n            .catch((err) => {\n                console.error(\"Error fetching durations:\", err);\n                setDuration([]);\n            });\n    };\n\n    // to select the package\n    React.useEffect(() => {\n        fetchSelectPackage();\n    }, [packageflag]);\n\n    // for fetching time slots\n    React.useEffect(() => {\n        if (timeslotData.appointment_date && timeslotData.duration) {\n            console.log(\"Fetching time slots for:\", timeslotData);\n        fetch_Time_Slots();\n        }\n    }, [timeslotData]);\n\n    // calling payment api --------\n\n    const FetchDoctorAvailableDates = async () => {\n        setAvailableDatesSnackError(false);\n        try {\n            const resp = await axiosInstance.post(\n                \"/sec/patient/getAvailableAppointmentDates\",\n                JSON.stringify({\n                    doctor_id: Number(drID),\n                }),\n            );\n            let date = resp?.data?.availableDates;\n            let availableDates = date.map((dateString) => {\n                const [year, month, day] = dateString.split(\"-\").map(Number);\n                return new Date(year, month - 1, day); // month -1 to get the correct month\n            });\n            setCustomAvailableDates(availableDates);\n        } catch (err) {\n            setAvailableDatesSnackError(true);\n            setCustomAvailableDates([]);\n            setAvailableDatesSnackMessage(err?.response?.data?.error);\n        }\n    };\n\n    React.useEffect(() => {\n        // Initialize payment token based on environment\n        initializePaymentToken();\n\n        setAvailableDatesSnackError(false);\n        FetchDoctorAvailableDates();\n    }, []);\n\n    // Initialize payment token with environment-based handling\n    const initializePaymentToken = async () => {\n        try {\n            // Both development and production use real Braintree tokens\n            // Development uses sandbox, production uses live environment\n            const environment = isDevelopmentMode() ? \"sandbox\" : \"production\";\n            console.log(`Generating Braintree ${environment} token`);\n            \n            const token = await generateClientToken();\n            console.log(`Generated Braintree ${environment} token:`, token);\n            setValues(prev => ({ ...prev, clientToken: token }));\n        } catch (error) {\n            console.error(\"Error initializing payment token:\", error);\n            // Fallback to mock token in case of error\n            const fallbackToken = `fallback_token_${Date.now()}`;\n            setValues(prev => ({ ...prev, clientToken: fallbackToken }));\n        }\n    };\n\n    // Refresh payment token for new payment attempts\n    const refreshPaymentToken = async () => {\n        try {\n            console.log(\"Refreshing payment token for new payment attempt...\");\n            await initializePaymentToken();\n        } catch (error) {\n            console.error(\"Error refreshing payment token:\", error);\n        }\n    };\n\n    React.useEffect(() => {\n        fetchQuestions();\n    }, [doctorListId]);\n\n    console.log(\"Appointment Data : \", appointmentData);\n    console.log(\"plan fee : \", planfee);\n\n    const handleFileInput = async (event) => {\n        const file = event.target.files[0]; // Get the file object\n        if (file) {\n            const fileName = file.name;\n            const reader = new FileReader();\n            reader.onloadend = async () => {\n                const base64Data = reader.result.split(\",\")[1]; // Extract base64 without metadata\n                \n                setIsUploadingFile(true);\n                \n                try {\n                    // Upload file using the new service\n                    const uploadResponse = await axiosInstance.post(\n                        \"/sec/reports/uploadAppointmentFileToS3\",\n                        JSON.stringify({\n                            fileName: fileName,\n                            file: base64Data\n                        })\n                    );\n                    \n                    console.log(\"File upload response:\", uploadResponse.data);\n                    \n                    // Update appointment data with file information\n                setAppointmentData({\n                    ...appointmentData,\n                        fileName: uploadResponse.data.fileName,\n                        file: uploadResponse.data.file, // This will be base64 in dev, S3 URL in prod\n                        filePath: uploadResponse.data.filePath, // Store the file path\n                    });\n                    \n                    // Show success message\n                    setShowSnack(true);\n                    setShowSnackMessage(\"File uploaded successfully!\");\n                    \n                } catch (error) {\n                    console.error(\"File upload error:\", error);\n                    setShowSnackError(true);\n                    setShowSnackErrorMessage(\"Failed to upload file. Please try again.\");\n                } finally {\n                    setIsUploadingFile(false);\n                }\n            };\n\n            reader.readAsDataURL(file); // Read the file as Data URL\n        }\n    };\n\n    return (\n        <Box className=\"booking-modal-container\">\n            {/* Snackbars */}\n            <CustomSnackBar\n                isOpen={availableDatesSnackError}\n                message={availableDatesSnackMessage}\n                type=\"error\"\n            />\n            <CustomSnackBar\n                isOpen={showSnack}\n                message={showSnackMessage || \"Appointment Booked Successfully\"}\n                type=\"success\"\n            />\n            <CustomSnackBar\n                isOpen={showSnackError}\n                message={showSnackErrorMessage || \"Can not book appointment try some other time \"}\n                type=\"error\"\n            />\n\n            {/* Progress Stepper */}\n            <Box className=\"stepper-container\">\n                <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                        \n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                        \n                    return (\n                        <Step key={label} {...stepProps}>\n                                <StepLabel \n                                    {...labelProps}\n                                    StepIconComponent={({ active, completed, icon }) => (\n                                        <Box className={`step-icon ${active ? 'active' : ''} ${completed ? 'completed' : ''}`}>\n                                            {completed ? '✓' : icon}\n                                        </Box>\n                                    )}\n                                >\n                                    {label}\n                                </StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            </Box>\n            {activeStep === steps.length ? (\n                <StepContent \n                    title=\"Appointment Booked Successfully!\" \n                    subtitle=\"Your appointment has been confirmed. You will receive a confirmation email shortly.\"\n                >\n                    <Box className=\"success-content\">\n                        <Typography variant=\"h6\" color=\"success.main\" gutterBottom>\n                            🎉 Congratulations!\n                    </Typography>\n                        <Typography variant=\"body1\" paragraph>\n                            Your appointment has been successfully booked. Here are the details:\n                        </Typography>\n                        <Box className=\"appointment-details\">\n                            <Typography variant=\"body2\">\n                                <strong>Date:</strong> {appointmentData.appointment_date}\n                            </Typography>\n                            <Typography variant=\"body2\">\n                                <strong>Time:</strong> {appointmentData.appointment_time}\n                            </Typography>\n                            <Typography variant=\"body2\">\n                                <strong>Duration:</strong> {appointmentData.duration}\n                            </Typography>\n                            <Typography variant=\"body2\">\n                                <strong>Amount Paid:</strong> ₹{planfee}\n                            </Typography>\n                        </Box>\n                    <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                        <Box sx={{ flex: \"1 1 auto\" }} />\n                            <Button onClick={handleReset} variant=\"outlined\">\n                                Book Another Appointment\n                            </Button>\n                    </Box>\n                    </Box>\n                </StepContent>\n            ) : (\n                <React.Fragment>\n                    {/* Step Error Display */}\n                    {hasStepErrors(activeStep) && (\n                        <Alert severity=\"error\" sx={{ mb: 2 }}>\n                            <Typography variant=\"subtitle2\" gutterBottom>\n                                Please fix the following errors:\n                            </Typography>\n                            <ul style={{ margin: 0, paddingLeft: '1.5rem' }}>\n                                {getStepErrors(activeStep).map((error, index) => (\n                                    <li key={index}>{error}</li>\n                                ))}\n                            </ul>\n                        </Alert>\n                    )}\n\n                    {/* Step Content */}\n                        {activeStep === 0 ? (\n                        <StepContent \n                            title={getStepTitle(0)} \n                            subtitle={getStepSubtitle(0)}\n                        >\n                            <Box className=\"form-grid\">\n                                <Box className=\"form-section\">\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        Patient Information\n                                    </Typography>\n                                    <CustomRadioButton\n                                        label={\"Patient Type\"}\n                                        handleChange={({ target }) =>\n                                            setAppointmentData({\n                                                ...appointmentData,\n                                                patient_type:\n                                                    target?.value === \"My Self\"\n                                                        ? \"patient\"\n                                                        : target?.value === \"Minor\"\n                                                            ? \"minor\"\n                                                            : null,\n                                            })\n                                        }\n                                        value={\n                                            appointmentData.patient_type === \"patient\"\n                                                ? \"My Self\"\n                                                : appointmentData.patient_type === \"minor\"\n                                                    ? \"Minor\"\n                                                    : null\n                                        }\n                                        radioGroupCss={{ flexDirection: \"row\", gap: 2 }}\n                                        radiocss={{ display: \"flex\" }}\n                                        items={[\"My Self\", \"Minor\"]}\n                                    />\n                                </Box>\n\n                                <Box className=\"form-section\">\n                                    <CustomTextField\n                                        onInput={(event) =>\n                                            setAppointmentData({\n                                                ...appointmentData,\n                                                name: event?.target?.value,\n                                            })\n                                        }\n                                        defaultValue={appointmentData?.name}\n                                        CustomValue={appointmentData?.name}\n                                        label={\"Full Name\"}\n                                        helperText=\"Enter your full name as it appears on your ID\"\n                                        required\n                                    />\n                                </Box>\n\n                                <Box className=\"form-row\">\n                                    <CustomDropdown\n                                        label={\"Gender\"}\n                                        items={[\"Male\", \"Female\", \"I prefer not to say\"]}\n                                        dropdowncss={{ m: 0, minWidth: \"100%\" }}\n                                        activeItem={appointmentData?.gender}\n                                        handleChange={(item) =>\n                                            setAppointmentData({\n                                                ...appointmentData,\n                                                gender: item,\n                                            })\n                                        }\n                                        menuItemValue=\"\"\n                                        required\n                                    />\n                                    <CustomDropdown\n                                        label={\"Age\"}\n                                        items={[...Array(101).keys()]}\n                                        dropdowncss={{ m: 0, minWidth: \"100%\" }}\n                                        activeItem={appointmentData?.age}\n                                        handleChange={(item) =>\n                                            setAppointmentData({\n                                                ...appointmentData,\n                                                age: Number(item),\n                                            })\n                                        }\n                                        menuItemValue=\"\"\n                                        required\n                                    />\n                                </Box>\n\n                                <Box className=\"form-section\">\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        Medical Information\n                                    </Typography>\n                                    \n                                    <Box className=\"file-upload-container\">\n                                        <Typography variant=\"body2\" gutterBottom>\n                                            Upload Medical Reports (Optional)\n                                        </Typography>\n                                        <input\n                                            type=\"file\"\n                                            id=\"fileInput\"\n                                            onChange={handleFileInput}\n                                            className=\"file-input\"\n                                            accept=\".pdf,.docx,.jpg,.jpeg,.png\"\n                                            disabled={isUploadingFile}\n                                        />\n                                        <label htmlFor=\"fileInput\" className=\"file-upload-label\">\n                                            <Button\n                                                variant=\"outlined\"\n                                                component=\"span\"\n                                                startIcon={isUploadingFile ? <CircularProgress size={16} /> : <span>📁</span>}\n                                                className=\"file-upload-button\"\n                                                disabled={isUploadingFile}\n                                            >\n                                                {isUploadingFile ? \"Uploading...\" : \"Choose File\"}\n                                            </Button>\n                                            <Typography variant=\"body2\" className=\"file-name\">\n                                                {appointmentData.fileName || \"No file selected\"}\n                                            </Typography>\n                                        </label>\n                                    </Box>\n\n                                    <TextField\n                                        label=\"Describe your problem\"\n                                        placeholder=\"Please describe your symptoms, concerns, or the reason for this appointment...\"\n                                        value={appointmentData.problem || \"\"}\n                                        onChange={(event) =>\n                                            setAppointmentData({\n                                                ...appointmentData,\n                                                problem: event?.target?.value,\n                                            })\n                                        }\n                                        multiline\n                                        rows={4}\n                                        maxRows={6}\n                                        fullWidth\n                                        required\n                                        helperText=\"Please provide as much detail as possible to help the doctor understand your condition\"\n                                    />\n                                </Box>\n                            </Box>\n                        </StepContent>\n                        ) : activeStep === 1 ? (\n                        <StepContent \n                            title={getStepTitle(1)} \n                            subtitle={getStepSubtitle(1)}\n                        >\n                                {customAvailableDates.length === 0 ? (\n                                <EmptyState \n                                    title=\"No Available Dates\"\n                                    description={availableDatesSnackMessage || \"No appointment slots are available for this doctor.\"}\n                                    onAction={() => window.location.reload()}\n                                />\n                            ) : (\n                                <Box className=\"date-time-section\">\n                                    <Box className=\"calendar-container\">\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            Select Appointment Date\n                                        </Typography>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <DateCalendar\n                                                value={selectedDate}\n                                                onChange={selectDate}\n                                                shouldDisableDate={shouldDisableDate}\n                                                slots={{\n                                                    day: (props) => (\n                                                        <StyledPickersDay\n                                                            {...props}\n                                                            isAvailable={isAvailable(props.day)}\n                                                        />\n                                                    ),\n                                                }}\n                                            />\n                                        </LocalizationProvider>\n                                    </Box>\n                                    \n                                    <Box className=\"duration-container\">\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            Select Duration\n                                        </Typography>\n                                        {!appointmentData?.appointment_date ? (\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                                Please select a date first to see available durations.\n                                            </Typography>\n                                        ) : duration?.length === 0 ? (\n                                            <Box className=\"loading-container\">\n                                                <CircularProgress size={24} />\n                                                <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                                    Loading available durations...\n                                                </Typography>\n                                            </Box>\n                                        ) : (\n                                    <CustomDropdown\n                                                label={\"Appointment Duration\"}\n                                                items={duration}\n                                        activeItem={appointmentData?.duration}\n                                                handleChange={(item) => {\n                                                    console.log(\"Duration selected:\", item);\n                                            setAppointmentData({\n                                                ...appointmentData,\n                                                duration: item,\n                                                        appointment_time: null, // Clear previous time selection\n                                            });\n                                                    \n                                                    const newTimeslotData = {\n                                                ...timeslotData,\n                                                        appointment_date: appointmentData?.appointment_date,\n                                                duration: item,\n                                                    };\n                                                    \n                                                    console.log(\"Updated timeslot data:\", newTimeslotData);\n                                                    setTimeslotData(newTimeslotData);\n                                                    \n                                                    // Clear previous time slots\n                                                    setTime_slot([]);\n                                                }}\n                                                CustomSx={{ width: \"100%\" }}\n                                        menuItemValue=\"\"\n                                                required\n                                    />\n                                        )}\n                                </Box>\n                                </Box>\n                            )}\n                        </StepContent>\n                        ) : activeStep === 2 ? (\n                        <StepContent \n                            title={getStepTitle(2)} \n                            subtitle={getStepSubtitle(2)}\n                        >\n                            <Box className=\"package-selection\">\n                                {/* Time Slot Selection - Only show if date and duration are selected */}\n                                {appointmentData?.appointment_date && appointmentData?.duration ? (\n                                    <Box className=\"time-slot-section\">\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            Select Time Slot\n                                        </Typography>\n                                        {time_slot?.length === 0 ? (\n                                            <Box className=\"loading-container\">\n                                                <CircularProgress size={24} />\n                                                <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                                    Loading available time slots...\n                                                </Typography>\n                                            </Box>\n                                        ) : (\n                                            <CustomDropdown\n                                                label={\"Available Time Slots\"}\n                                                items={time_slot}\n                                                dropdowncss={{ width: \"100%\" }}\n                                                activeItem={appointmentData?.appointment_time}\n                                                handleChange={(item) => {\n                                                    console.log(\"Time slot selected:\", item);\n                                                    \n                                                    // Format time to ensure it's in the correct format (09:00 - 10:00)\n                                                    const formatTimeSlot = (timeSlot) => {\n                                                        if (!timeSlot) return timeSlot;\n                                                        \n                                                        // If already in correct format, return as is\n                                                        if (timeSlot.includes(' - ')) {\n                                                            return timeSlot;\n                                                        }\n                                                        \n                                                        // If it's a single time, assume it's start time and add 30 minutes\n                                                        if (timeSlot.match(/^\\d{1,2}:\\d{2}$/)) {\n                                                            const [hours, minutes] = timeSlot.split(':');\n                                                            const startTime = new Date();\n                                                            startTime.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n                                                            \n                                                            const endTime = new Date(startTime);\n                                                            endTime.setMinutes(endTime.getMinutes() + 30);\n                                                            \n                                                            const formatTime = (date) => {\n                                                                const h = date.getHours().toString().padStart(2, '0');\n                                                                const m = date.getMinutes().toString().padStart(2, '0');\n                                                                return `${h}:${m}`;\n                                                            };\n                                                            \n                                                            return `${formatTime(startTime)} - ${formatTime(endTime)}`;\n                                                        }\n                                                        \n                                                        return timeSlot;\n                                                    };\n                                                    \n                                                    const formattedTime = formatTimeSlot(item);\n                                                    console.log(\"Formatted time slot:\", formattedTime);\n                                                    \n                                                    setAppointmentData({\n                                                        ...appointmentData,\n                                                        appointment_time: formattedTime,\n                                                    });\n                                                    setPackageFlag(!packageflag);\n                                                }}\n                                                CustomSx={{ width: \"100%\" }}\n                                                menuItemValue=\"\"\n                                                required\n                                            />\n                                        )}\n                                        </Box>\n                                ) : (\n                                    <Box className=\"time-slot-section\">\n                                        <Typography variant=\"h6\" gutterBottom>\n                                            Select Time Slot\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                            Please select a date and duration first to see available time slots.\n                                        </Typography>\n                                    </Box>\n                                )}\n\n                                <Box className=\"package-section\">\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        Choose Your Package\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                                        Select the consultation package that best fits your needs\n                                    </Typography>\n\n                                    <Box className=\"package-grid\">\n                                        {!appointmentData?.appointment_time ? (\n                                            <Typography variant=\"body2\" color=\"text.secondary\">\n                                                Please select a time slot first to see available packages.\n                                            </Typography>\n                                        ) : selectPackage?.length === 0 ? (\n                                            <EmptyState \n                                                title=\"No Packages Available\"\n                                                description=\"No consultation packages are available for the selected time slot.\"\n                                                onAction={() => window.location.reload()}\n                                                />\n                                            ) : (\n                                            selectPackage?.map((data, index) => {\n                                                    const plan =\n                                                        data?.plan_name === \"message\"\n                                                            ? messagingPlan\n                                                            : data?.plan_name === \"video\"\n                                                                ? videoMessagingPlan\n                                                                : data?.plan_name === \"call\"\n                                                                    ? voiceMessagingPlan\n                                                                : false;\n                                                \n                                                const isSelected = appointmentData.doctor_fee_plan_id === data?.doctor_fee_plan_id;\n                                                \n                                                    return (\n                                                        <Box\n                                                        key={index}\n                                                        className={`package-card ${isSelected ? 'selected' : ''}`}\n                                                            onClick={() => {\n                                                                setAppointmentData({\n                                                                    ...appointmentData,\n                                                                doctor_fee_plan_id: data?.doctor_fee_plan_id,\n                                                                });\n\n                                                                setPlanFee(data?.plan_fee);\n\n                                                            // Reset all plan states\n                                                            setMessaginplanActive(false);\n                                                            setVoiceMessaginplanActive(false);\n                                                            setVideoMessaginplanActive(false);\n\n                                                            // Set the selected plan\n                                                                if (data?.plan_name === \"message\") {\n                                                                    setMessaginplanActive(true);\n                                                            } else if (data?.plan_name === \"video\") {\n                                                                setVideoMessaginplanActive(true);\n                                                            } else if (data?.plan_name === \"call\") {\n                                                                setVoiceMessaginplanActive(true);\n                                                            }\n                                                        }}\n                                                    >\n                                                        <Box className=\"package-card-content\">\n                                                            <Box className=\"package-info\">\n                                                                <Box className=\"package-icon\">\n                                                                    <Box\n                                                                        component=\"img\"\n                                                                        src={messageLogo}\n                                                                        alt=\"plan icon\"\n                                                                        className=\"plan-icon\"\n                                                                    />\n                                                                </Box>\n                                                                <Box className=\"package-details\">\n                                                                    <Typography className=\"package-name\">\n                                                                            {data?.plan_name === \"call\"\n                                                                                ? \"Call Plan\"\n                                                                                : data?.plan_name === \"message\"\n                                                                                    ? \"Messaging Plan\"\n                                                                                    : data?.plan_name === \"video\"\n                                                                                        ? \"Video Plan\"\n                                                                                    : \"Consultation Plan\"}\n                                                                        </Typography>\n                                                                    <Typography className=\"package-description\">\n                                                                            {data?.plan_name === \"call\"\n                                                                            ? \"Voice call with doctor\"\n                                                                                : data?.plan_name === \"message\"\n                                                                                    ? \"Chat and message with doctor\"\n                                                                                    : data?.plan_name === \"video\"\n                                                                                    ? \"Video call & messaging\"\n                                                                                    : \"General consultation\"}\n                                                                        </Typography>\n                                                                    </Box>\n                                                                </Box>\n\n                                                            <Box className=\"package-pricing\">\n                                                                <Typography className=\"package-price\">\n                                                                    ₹{data?.plan_fee}\n                                                                    </Typography>\n                                                                <Typography className=\"package-duration\">\n                                                                        {data?.plan_duration}\n                                                                    </Typography>\n                                                                </Box>\n                                                            </Box>\n                                                        </Box>\n                                                    );\n                                                })\n                                            )}\n\n                                        </Box>\n                                    </Box>\n                                </Box>\n                        </StepContent>\n                        ) : activeStep === 3 ? (\n                        <StepContent \n                            title={getStepTitle(3)} \n                            subtitle={getStepSubtitle(3)}\n                        >\n                            <Box className=\"questions-section\">\n                                <Typography variant=\"h6\" gutterBottom>\n                                    Health Assessment Questions\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                                    Please answer these questions to help the doctor better understand your condition\n                                </Typography>\n                                \n                                {/* Progress indicator */}\n                                {question && question.length > 0 && (\n                                    <Box className=\"questions-progress\">\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                            Progress: {Object.keys(appointmentData).filter(key => key.startsWith('answer_') && appointmentData[key]).length} of {question.length} questions answered\n                                        </Typography>\n                                        <Box className=\"progress-bar\">\n                                            <Box \n                                                className=\"progress-fill\"\n                                                style={{\n                                                    width: `${(Object.keys(appointmentData).filter(key => key.startsWith('answer_') && appointmentData[key]).length / question.length) * 100}%`\n                                                }}\n                                            />\n                                        </Box>\n                                    </Box>\n                                )}\n                                \n                                        {question == null ? (\n                                    <Box className=\"loading-container\">\n                                        <CircularProgress size={24} />\n                                        <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                            Loading questions...\n                                        </Typography>\n                                    </Box>\n                                ) : question.length === 0 ? (\n                                    <EmptyState \n                                        title=\"No Questions Available\"\n                                        description=\"There are no assessment questions for this appointment.\"\n                                    />\n                                ) : (\n                                    <Box className=\"questions-list\">\n                                        {question.map((data, index) => {\n                                            const answers = [];\n                                                for (const key in data) {\n                                                    if (\n                                                        key !== \"doctor_questions_id\" &&\n                                                    key !== \"question\" &&\n                                                    data[key] // Only include non-empty answers\n                                                    ) {\n                                                    answers.push(data[key]);\n                                                    }\n                                                }\n\n                                                return (\n                                                <Box key={index} className=\"question-item\">\n                                                    <CustomDropdown\n                                                        label={data?.question}\n                                                        items={answers}\n                                                        activeItem={appointmentData?.[`answer_${index + 1}`]}\n                                                        handleChange={(item) =>\n                                                            setAppointmentData({\n                                                                ...appointmentData,\n                                                                [`answer_${index + 1}`]: item,\n                                                            })\n                                                        }\n                                                        menuItemValue=\"\"\n                                                        required\n                                                    />\n                                                </Box>\n                                                );\n                                        })}\n                                    </Box>\n                                        )}\n                                    </Box>\n                        </StepContent>\n                        ) : activeStep === 4 ? (\n                        <StepContent \n                            title={getStepTitle(4)} \n                            subtitle={getStepSubtitle(4)}\n                        >\n                            <Box className=\"payment-section\">\n                                <Box className=\"payment-summary\">\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        Payment Summary\n                                    </Typography>\n                                    <Box className=\"amount-display\">\n                                        <Typography variant=\"h4\" color=\"primary\">\n                                            ₹{planfee}\n                                        </Typography>\n                                        <Typography variant=\"body2\" color=\"text.secondary\">\n                                            Total amount to be paid\n                                        </Typography>\n                                    </Box>\n                                </Box>\n\n                                <Box className=\"payment-method\">\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        Payment Method\n                                    </Typography>\n                                    \n                                    {values?.clientToken ? (\n                                        <Box className=\"payment-container\">\n                                            {isDevelopmentMode() && (\n                                                <Box className=\"development-payment-notice\">\n                                                    <Typography variant=\"body2\" color=\"warning.main\" sx={{ \n                                                        p: 2, \n                                                        backgroundColor: 'warning.light', \n                                                        borderRadius: 1,\n                                                        mb: 2,\n                                                        textAlign: 'center'\n                                                    }}>\n                                                        🧪 Development Mode: Braintree Sandbox Payment\n                                                    </Typography>\n                                                </Box>\n                                            )}\n                                            \n                                                    <DropIn\n                                                        key={braintreeKey}\n                                                        options={{\n                                                            authorization: values?.clientToken,\n                                                        }}\n                                                        onInstance={(instance) => {\n                                                            console.log(\"Braintree Drop-In instance:\", instance);\n                                                            setValues(prev => ({\n                                                                ...prev,\n                                                                instance: instance,\n                                                            }));\n                                                            dropinInstanceRef.current = instance;\n                                                        }}\n                                                    />\n                                            \n                                            <Box className=\"payment-button-container\">\n                                                        <CustomButton\n                                                    label={\n                                                        isAppointmentBooked \n                                                            ? \"Appointment Booked!\" \n                                                            : (isDevelopmentMode() ? \"Complete Sandbox Payment\" : \"Complete Payment\")\n                                                    }\n                                                            handleClick={() => Purchase_plan()}\n                                                    disabled={!values?.instance || isRefreshing || isProcessingPayment || isAppointmentBooked}\n                                                    buttonCss={{\n                                                        width: \"100%\",\n                                                        padding: \"12px 24px\",\n                                                        fontSize: \"16px\",\n                                                        fontWeight: \"600\",\n                                                        backgroundColor: isAppointmentBooked \n                                                            ? \"#4caf50\" \n                                                            : (!values?.instance || isRefreshing || isProcessingPayment) \n                                                                ? \"#adb5bd\" \n                                                                : (isDevelopmentMode() ? \"#ff9800\" : \"#1976d2\"),\n                                                        marginBottom: \"8px\",\n                                                        opacity: (!values?.instance || isRefreshing || isProcessingPayment || isAppointmentBooked) ? 0.7 : 1\n                                                    }}\n                                                />\n                                                <CustomButton\n                                                    label={isRefreshing ? \"Refreshing...\" : \"Refresh Payment Form\"}\n                                                    handleClick={async () => {\n                                                        await refreshBraintreeInstance();\n                                                    }}\n                                                    disabled={isRefreshing}\n                                                    buttonCss={{\n                                                        width: \"100%\",\n                                                        padding: \"8px 16px\",\n                                                        fontSize: \"14px\",\n                                                        fontWeight: \"500\",\n                                                        backgroundColor: isRefreshing ? \"#adb5bd\" : \"#6c757d\",\n                                                        color: \"white\",\n                                                        opacity: isRefreshing ? 0.7 : 1\n                                                    }}\n                                                />\n                                                {!values?.instance && (\n                                                    <Typography variant=\"body2\" sx={{ \n                                                        color: \"#d32f2f\", \n                                                        textAlign: \"center\", \n                                                        mt: 1,\n                                                        fontSize: \"12px\"\n                                                    }}>\n                                                        Payment form is not ready. Please wait or refresh.\n                                                    </Typography>\n                                                )}\n                                    </Box>\n                                            </Box>\n                                    ) : (\n                                        <Box className=\"loading-container\">\n                                            <CircularProgress size={24} />\n                                            <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                                                Loading payment gateway...\n                                            </Typography>\n                                            </Box>\n                                    )}\n                                        </Box>\n\n                                <Box className=\"appointment-terms\">\n                                    <Typography variant=\"h6\" gutterBottom>\n                                        Important Terms\n                                    </Typography>\n                                    <Box component=\"ul\" className=\"terms-list\">\n                                        <Box component=\"li\">\n                                            <Typography variant=\"body2\">\n                                                You have 48 hours of chat access after the appointment\n                                            </Typography>\n                                    </Box>\n                                        <Box component=\"li\">\n                                            <Typography variant=\"body2\">\n                                                You can cancel the appointment up to 2 hours before the scheduled time\n                                            </Typography>\n                                </Box>\n                                        <Box component=\"li\">\n                                            <Typography variant=\"body2\">\n                                                You can reschedule your appointment up to 2 times\n                                            </Typography>\n                            </Box>\n                                        <Box component=\"li\">\n                                            <Typography variant=\"body2\">\n                                                All payments are processed securely through our payment gateway\n                    </Typography>\n                                    </Box>\n                                </Box>\n                            </Box>\n                            </Box>\n                        </StepContent>\n                    ) : null}\n                    \n                    {/* Navigation Buttons */}\n                    <Box className=\"navigation-buttons\">\n                        <Button\n                            variant=\"outlined\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            className=\"back-button\"\n                        >\n                            Back\n                        </Button>\n                        <Box sx={{ flex: \"1 1 auto\" }} />\n                        <Button \n                            variant=\"contained\"\n                            onClick={handleNext}\n                            className=\"next-button\"\n                            disabled={isLoading}\n                        >\n                            {isLoading ? (\n                                <>\n                                    <CircularProgress size={16} sx={{ mr: 1 }} />\n                                    Processing...\n                                </>\n                            ) : activeStep === steps.length - 1 ? (\n                                \"Complete Payment\"\n                            ) : (\n                                \"Next\"\n                            )}\n                        </Button>\n                    </Box>\n                </React.Fragment>\n            )}\n        </Box>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { DemoContainer, DemoItem } from \"@mui/x-date-pickers/internals/demo\";\nimport { TimePicker } from \"@mui/x-date-pickers\";\nimport dayjs from \"dayjs\";\nimport CustomRadioButton from \"../../../../components/CustomRadioButton/custom-radio-button\";\nimport CustomDropdown from \"../../../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport finish from \"../../../../static/images/DrImages/Finish.png\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\n// import messageLogo from \"../../constants/patientAppointmentLogo/messageLogo.png\"\nconst steps = [\"Reason\", \"Date & Time\"];\n\nconst RescheduleAppointmentSlider = ({ data, path, changeFlagState }) => {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const radioValues = [\n        \"I have a schedule clash\",\n        \"I am not available at the schedule\",\n        \"Reason3\",\n        \"Reason4\",\n        \"Reason5\",\n    ];\n    const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n    //   const [activeFabDropdown, setActiveFabDropdown] = React.useState(dropdownItems[0]);\n    //   const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const [ageDropDown, setAgeDropDown] = React.useState();\n    const [DateValue, setDataValue] = React.useState(null);\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n    useEffect(() => {\n        setRescheduleData((prev) => ({\n            ...prev,\n            reason: radioVal,\n        }));\n    }, [radioVal]);\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const [rescheduleData, setRescheduleData] = useState({\n        appointment_date: DateValue,\n        appointment_time: null,\n        patient_id: data?.patient_id,\n        doctor_id: data?.doctor_id,\n        appointment_id: data?.appointment_id,\n        status: data?.status,\n        reason: radioVal,\n        option: \"reschedule\",\n    });\n\n    const RescheduleAppointment = async () => {\n        try {\n            const response = await axiosInstance.post(path, rescheduleData);\n            console.log(\"Appointment rescheduling: \", response);\n    \n            // Show success message\n            alert(\"Appointment successfully rescheduled\");\n    \n            // Delay setting the flag to true\n            setTimeout(() => {\n                changeFlagState(true);\n                handleNext();\n            }, 2000); // 2000ms = 2 seconds\n        } catch (error) {\n            console.error(\"Error rescheduling appointment: \", error);\n    \n            // Show error message\n            alert(\n                error.response?.data?.message || \n                \"An error occurred while rescheduling the appointment\"\n            );\n    \n            setTimeout(() => {\n                changeFlagState(false);\n            }, 2000); // 2000ms = 2 seconds\n        }\n    };\n    \n\n    const handleTimeChange = (newValue) => {\n        setRescheduleData((prev) => ({\n            ...prev,\n            appointment_time: newValue ? dayjs(newValue).format(\"HH:mm\") : null, // Format time as needed\n        }));\n    };\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\"></Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === steps.length ? (\n                <React.Fragment>\n                    <Box sx={{ width: \"70%\", marginTop: \"5%\", marginLeft: \"15%\" }}>\n                        <img style={{ width: \"100%\" }} src={finish} alt=\"finished\" loading=\"lazy\" />\n                    </Box>\n                    <Box sx={{ displa: \"flex\", justifyContent: \"center\", textAlign: \"center\" }}>\n                        <Typography\n                            sx={{\n                                color: \"#313033\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"1rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"600\",\n                                lineHeight: \"1.5rem\",\n                            }}\n                        >\n                            Appointment Request Sent\n                        </Typography>\n                        <Typography\n                            sx={{\n                                fontFamily: \"Poppins\",\n                                fontSize: \"0.875rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"1.3125rem\",\n                                letterSpacing: \"0.00438rem\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut tellus\n                            quis sapien interdum commodo. Nunc tincidunt justo non dolor bibendum,\n                        </Typography>\n                    </Box>\n                    <Box sx={{ marginTop: \"5%\", display: \"flex\", justifyContent: \"center\" }}>\n                        <CustomButton\n                            label={\"View Appointment\"}\n                            isElevated\n                            // handleClick={() => setOpenDialog(!openDialog)}\n                        />\n                    </Box>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        {/* Step {activeStep + 1} */}\n                        {activeStep === 0 ? (\n                            <>\n                                <Box sx={{ width: \"77%\", marginLeft: \"26%\", marginTop: \"7%\" }}>\n                                    <Typography\n                                        sx={{\n                                            fontWeight: \"600\",\n                                            fontSize: \"20px\",\n                                            lineHeight: \"30px\",\n                                        }}\n                                    >\n                                        Reschedule Appointment\n                                    </Typography>\n                                </Box>\n                                <Box\n                                    sx={{\n                                        marginTop: \"5%\",\n                                        display: \"flex\",\n                                        flexWrap: \"wrap\",\n                                        flexDirection: \"column\",\n                                    }}\n                                >\n                                    <Typography\n                                        sx={{\n                                            fontWeight: \"600\",\n                                            fontSize: \"16px\",\n                                            lineHeight: \"24px\",\n                                        }}\n                                    >\n                                        Reason For Schedule\n                                    </Typography>\n                                    <CustomRadioButton\n                                        label={\"\"}\n                                        handleChange={({ target }) => setRadioVal(target.value)}\n                                        value={radioVal}\n                                        items={radioValues}\n                                    />\n                                    <Box sx={{ marginTop: \"8%\", width: \"75%\" }}>\n                                        <Typography\n                                            sx={{\n                                                fontWeight: \"400\",\n                                                fontSize: \"14px\",\n                                                lineHeight: \"21px\",\n                                                letterSpacing: \"0.5%\",\n                                                color: \"#939094\",\n                                            }}\n                                        >\n                                            Note: Lorem ipsum dolor sit amet. Qui dolor nostrum sit\n                                            eius necessitatibus id quia expedita et molestiae\n                                            laborum qui nihil excepturi qui tenetur blanditiis.\n                                        </Typography>\n                                    </Box>\n                                    <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n                                        <CustomButton\n                                            buttonCss={{\n                                                display: \"flex\",\n                                                width: \"10.625rem\",\n                                                height: \"3rem\",\n                                                padding: \"0.5rem 1rem\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                gap: \"0.5rem\",\n                                                flexShrink: \"0\",\n                                                borderRadius: \"6.25rem\",\n                                                marginTop: \"2%\",\n                                            }}\n                                            handleClick={handleNext}\n                                            label=\"Continue\"\n                                        >\n                                            {\" \"}\n                                            {activeStep === \"Next\"}\n                                        </CustomButton>\n                                    </Box>\n                                </Box>\n                            </>\n                        ) : activeStep === 1 ? (\n                            <>\n                                <Box sx={{ width: \"100%\" }}>\n                                    <Box sx={{ marginTop: \"4%\" }}>Select Date</Box>\n                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                        <DateCalendar\n                                            onChange={(newValue) => {\n                                                setDataValue(newValue); // If you need to retain this separately\n                                                setRescheduleData((prev) => ({\n                                                    ...prev,\n                                                    appointment_date: newValue\n                                                        ? dayjs(newValue).format(\"YYYY-MM-DD\")\n                                                        : null, // Format as needed\n                                                }));\n                                            }}\n                                        />\n                                    </LocalizationProvider>\n                                </Box>\n                                <Box>Select Time</Box>\n                                <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                        <TimePicker\n                                            label=\"Select Time\"\n                                            value={\n                                                rescheduleData.appointment_time\n                                                    ? dayjs(\n                                                          rescheduleData.appointment_time,\n                                                          \"HH:mm\",\n                                                      )\n                                                    : null\n                                            }\n                                            onChange={handleTimeChange}\n                                        />\n                                    </LocalizationProvider>\n                                </Box>\n                                <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n                                    <CustomButton\n                                        buttonCss={{\n                                            display: \"flex\",\n                                            width: \"10.625rem\",\n                                            height: \"3rem\",\n                                            padding: \"0.5rem 1rem\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                            gap: \"0.5rem\",\n                                            flexShrink: \"0\",\n                                            borderRadius: \"6.25rem\",\n                                            marginTop: \"2%\",\n                                        }}\n                                        handleClick={RescheduleAppointment}\n                                        label=\"Next\"\n                                    >\n                                        {\" \"}\n                                        {activeStep === \"Finish\"}\n                                    </CustomButton>\n                                </Box>\n                            </>\n                        ) : (\n                            <>\n                                <h1>Completed</h1>\n                            </>\n                        )}\n                    </Typography>\n                    <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1 }}\n                        >\n                            Back\n                        </Button>\n                    </Box>\n                </React.Fragment>\n            )}\n        </Box>\n    );\n};\nexport default RescheduleAppointmentSlider;\n","import React,{useState} from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { DemoContainer, DemoItem } from \"@mui/x-date-pickers/internals/demo\";\nimport { TimePicker } from \"@mui/x-date-pickers\";\nimport { TextareaAutosize, TextField } from \"@mui/material\";\nimport CustomRadioButton from \"../../../../components/CustomRadioButton/custom-radio-button\";\nimport CustomDropdown from \"../../../../components/CustomDropdown/custom-dropdown\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport finish from \"../../../../static/images/DrImages/Finish.png\";\nimport CustomTextField from \"../../../../components/CustomTextField\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\n// import messageLogo from \"../../constants/patientAppointmentLogo/messageLogo.png\"\nconst steps = [\"Cancellation Confirmation\", \"Reason\"];\n\nconst CancelAppointmentSlider = ({data, path, changeFlagState}) => {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [skipped, setSkipped] = React.useState(new Set());\n    const radioValues = [\n        \"I have a schedule clash\",\n        \"I am not available at the schedule\",\n        \"Reason3\",\n        \"Reason4\",\n        \"Reason5\",\n    ];\n    const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n    //   const [activeFabDropdown, setActiveFabDropdown] = React.useState(dropdownItems[0]);\n    //   const [activeDropdown, setActiveDropdown] = useState(\"\");\n    const [ageDropDown, setAgeDropDown] = React.useState();\n    const [DateValue, setDataValue] = React.useState(null);\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const [cancleData , setCancleData] = useState({\n        appointment_id: data?.appointment_id,\n        patient_id: data?.patient_id,\n        doctor_id: data?.doctor_id  ,\n        status: \"in_progress\",\n        reason: radioVal,\n        option: \"reject\"\n     })\n\n\n    const CancleAppointment = () => {\n        try{\n            const response = axiosInstance.post(path, cancleData  );\n            changeFlagState(true);\n            console.log(\"Appointment cancelled : \",response)\n            alert(\"appointment cancelled\");\n            handleNext();\n        }catch(error){\n            alert(\"error cancelling appointment\")\n        }\n    }\n\n\n    // const handleReset = () => {\n    //     setActiveStep(0);\n    // };\n\n\n\n    return (\n        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\"></Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === steps.length ? (\n                <React.Fragment>\n                    <Box sx={{ width: \"70%\", marginTop: \"20%\", marginLeft: \"15%\" }}>\n                        <img style={{ width: \"100%\" }} src={finish} alt=\"finished\" loading=\"lazy\" />\n                    </Box>\n                    <Box sx={{ displa: \"flex\", justifyContent: \"center\", textAlign: \"center\" }}>\n                        <Typography\n                            sx={{\n                                color: \"#313033\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"1rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"600\",\n                                lineHeight: \"1.5rem\",\n                            }}\n                        >\n                            Appointment Canceled\n                        </Typography>\n                        <Typography\n                            sx={{\n                                fontFamily: \"Poppins\",\n                                fontSize: \"0.875rem\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"1.3125rem\",\n                                letterSpacing: \"0.00438rem\",\n                            }}\n                        >\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut tellus\n                            quis sapien interdum commodo. Nunc tincidunt justo non dolor bibendum,\n                        </Typography>\n                    </Box>\n                    <Box sx={{ marginTop: \"15%\", marginLeft: \"30%\", marginBottom: \"5%\" }}>\n                        <CustomButton\n                            label={\"View Appointment\"}\n                            isElevated\n                            // handleClick={() => setOpenDialog(!openDialog)}\n                        />\n                    </Box>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        {/* Step {activeStep + 1} */}\n                        {activeStep === 0 ? (\n                            <>\n                                <Box sx={{ width: \"100%\" }}>\n                                    <Typography\n                                        sx={{\n                                            fontWeight: \"600\",\n                                            fontSize: \"20px\",\n                                            lineHeight: \"30px\",\n                                            textAlign: \"center\",\n                                            color: \"#313033\",\n                                        }}\n                                    >\n                                        Cancelled Appointment\n                                    </Typography>\n                                    <Typography\n                                        sx={{\n                                            fontFamily: \"Poppins\",\n                                            fontSize: \"0.875rem\",\n                                            fontStyle: \"normal\",\n                                            fontWeight: \"400\",\n                                            lineHeight: \"1.3125rem\",\n                                            letterSpacing: \"0.00438rem\",\n                                            textAlign: \"center\",\n                                            color: \"#484649\",\n                                            marginTop: \"3%\",\n                                        }}\n                                    >\n                                        Are you sure. you want to cancel the appointment\n                                    </Typography>\n                                    {/* <Typography\n                                        sx={{\n                                            fontFamily: \"Poppins\",\n                                            fontSize: \"0.875rem\",\n                                            fontStyle: \"normal\",\n                                            fontWeight: \"400\",\n                                            lineHeight: \"1.3125rem\",\n                                            letterSpacing: \"0.00438rem\",\n                                            color: \"#939094\",\n                                            textAlign: \"center\",\n                                            marginTop: \"3%\",\n                                        }}\n                                    >\n                                        Note : Lorem ipsum dolor sit amet, consectetur adipiscing\n                                        elit. Sed ut tellus quis sapien interdum commodo. Nunc\n                                        tincidunt justo non dolor bibendum,\n                                    </Typography> */}\n                                    <Box\n                                        sx={{\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            marginTop: \"30%\",\n                                        }}\n                                    >\n                                        <CustomButton\n                                            buttonCss={{\n                                                display: \"flex\",\n                                                width: \"10.625rem\",\n                                                height: \"3rem\",\n                                                padding: \"0.5rem 1rem\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                gap: \"0.5rem\",\n                                                flexShrink: \"0\",\n                                                borderRadius: \"6.25rem\",\n                                                marginRight: \"1%\",\n                                            }}\n                                            label=\"No\"\n                                            isTransaprent={\"true\"}\n                                        />\n                                        <CustomButton\n                                            buttonCss={{\n                                                display: \"flex\",\n                                                width: \"10.625rem\",\n                                                height: \"3rem\",\n                                                padding: \"0.5rem 1rem\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                                gap: \"0.5rem\",\n                                                flexShrink: \"0\",\n                                                borderRadius: \"6.25rem\",\n                                                marginLeft: \"1%\",\n                                            }}\n                                            handleClick={handleNext}\n                                            label=\"Yes, Cancel\"\n                                        >\n                                            {activeStep === \"Next\"}\n                                        </CustomButton>\n                                    </Box>\n                                </Box>\n                            </>\n                        ) : activeStep === 1 ? (\n                            <>\n                                <Box sx={{ width: \"77%\", marginLeft: \"26%\", marginTop: \"7%\" }}>\n                                    <Typography\n                                        sx={{\n                                            fontWeight: \"600\",\n                                            fontSize: \"20px\",\n                                            lineHeight: \"30px\",\n                                        }}\n                                    >\n                                        Cancle Appointment\n                                    </Typography>\n                                </Box>\n                                <Box\n                                    sx={{\n                                        marginTop: \"5%\",\n                                        display: \"flex\",\n                                        flexWrap: \"wrap\",\n                                        flexDirection: \"column\",\n                                    }}\n                                >\n                                    <Typography\n                                        sx={{\n                                            fontWeight: \"600\",\n                                            fontSize: \"16px\",\n                                            lineHeight: \"24px\",\n                                        }}\n                                    >\n                                        Reason For Cancellation\n                                    </Typography>\n                                    <CustomRadioButton\n                                        label={\"\"}\n                                        handleChange={({ target }) => setRadioVal(target.value)}\n                                        value={radioVal}\n                                        items={radioValues}\n                                    />\n                                    <Box sx={{ marginTop: \"5%\", width: \"100%\" }}>\n                                        <Typography\n                                            sx={{\n                                                fontWeight: \"400\",\n                                                fontSize: \"14px\",\n                                                lineHeight: \"21px\",\n                                                letterSpacing: \"0.5%\",\n                                                color: \"#939094\",\n                                                textAlign: \"center\",\n                                            }}\n                                        >\n                                        </Typography>\n                                        <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n                                            <CustomButton\n                                                buttonCss={{\n                                                    display: \"flex\",\n                                                    width: \"10.625rem\",\n                                                    height: \"3rem\",\n                                                    padding: \"0.5rem 1rem\",\n                                                    justifyContent: \"center\",\n                                                    alignItems: \"center\",\n                                                    gap: \"0.5rem\",\n                                                    flexShrink: \"0\",\n                                                    borderRadius: \"6.25rem\",\n                                                    marginTop: \"2%\",\n                                                }}\n                                                handleClick={CancleAppointment}\n                                                label=\"Continue\"\n                                            >\n                                                {\" \"}\n                                                {activeStep === \"Finish\"}\n                                            </CustomButton>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </>\n                        ) : (\n                            <h1>Completed</h1>\n                        )}\n                    </Typography>\n                    <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1 }}\n                        >\n                            Back\n                        </Button>\n                    </Box>\n                </React.Fragment>\n            )}\n        </Box>\n    );\n};\nexport default CancelAppointmentSlider;\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport Rating from \"@mui/material/Rating\";\nimport Stack from \"@mui/material/Stack\";\nimport { TextField } from \"@mui/material\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport CustomSnackBar from \"../../../../components/CustomSnackBar\";\nimport CircularProgress from \"@mui/material/CircularProgress\"; // 👈 Import spinner\n\nconst steps = [\"Review\"];\n\nexport const LeaveAReview = (pid, aid, did) => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [giveReview, setGiveReview] = useState({\n        patient_id: pid.pid,\n        doctor_id: pid.did,\n        appointment_id: pid.aid,\n        description: \"\",\n        review_type: 2.5,\n    });\n\n    const [snackbar, setSnackbar] = useState({\n        open: false,\n        type: \"\",\n        message: \"\",\n    });\n\n    const handleSubmit = async () => {\n        if (!giveReview.description) {\n            setSnackbar({\n                open: true,\n                type: \"error\",\n                message: \"Comment is required.\",\n            });\n            return;\n        }\n\n        const payload = {\n            ...giveReview,\n            review_type: giveReview.review_type.toString(),\n        };\n\n        try {\n            setLoading(true); // 👈 start loading\n            const response = await axiosInstance.post(\"/sec/patient/LeaveReview\", payload);\n\n            if (response.status === 200) {\n                setSnackbar({\n                    open: true,\n                    type: \"success\",\n                    message: response.data.body || \"Review submitted successfully.\",\n                });\n                setActiveStep((prev) => prev + 1);\n            } else {\n                setSnackbar({\n                    open: true,\n                    type: \"error\",\n                    message: \"Failed to submit review.\",\n                });\n            }\n        } catch (error) {\n            setSnackbar({\n                open: true,\n                type: \"error\",\n                message: \"Network error. Please try again later.\",\n            });\n        } finally {\n            setLoading(false); // 👈 stop loading\n        }\n    };\n\n\n    return (\n        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n\n            {activeStep === steps.length ? (\n                <Typography sx={{ mt: 2 }}>Thank you for your review!</Typography>\n            ) : (\n                <Box sx={{ mt: 2, width: \"29vw\", display: \"flex\", flexDirection: \"column\" }}>\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            textAlign: \"center\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"1.25rem\",\n                            fontWeight: \"500\",\n                        }}\n                    >\n                        Review The Doctor\n                    </Typography>\n                    <Typography\n                        sx={{\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            color: \"#484649\",\n                            textAlign: \"center\",\n                        }}\n                    >\n                        Please provide review\n                    </Typography>\n\n                    <Box sx={{ mt: 3, display: \"flex\", justifyContent: \"center\" }}>\n                        <Rating\n                            name=\"rating\"\n                            value={Number(giveReview.review_type)}\n                            precision={0.5}\n                            onChange={(e, newValue) =>\n                                setGiveReview({ ...giveReview, review_type: newValue })\n                            }\n                            sx={{ color: \"#E72B4A\" }}\n                        />\n                    </Box>\n\n                    <Box sx={{ mt: 4 }}>\n                        <Typography sx={{ fontFamily: \"Poppins\", fontWeight: \"500\" }}>\n                            Comment\n                        </Typography>\n                        <TextField\n                            fullWidth\n                            placeholder=\"Write your Comment here\"\n                            multiline\n                            rows={3}\n                            value={giveReview.description}\n                            onChange={(e) =>\n                                setGiveReview({ ...giveReview, description: e.target.value })\n                            }\n                            sx={{\n                                mt: 1,\n                                border: \"1px solid #E6E1E5\",\n                                fontFamily: \"Poppins\",\n                            }}\n                        />\n                    </Box>\n\n                    <Box sx={{ display: \"flex\", justifyContent: \"center\", mt: 3 }}>\n                        <CustomButton\n                            label={loading ? <CircularProgress size={24} color=\"inherit\" /> : \"Submit\"}\n                            handleClick={handleSubmit}\n                            disabled={loading}\n                            buttonCss={{\n                                width: \"10.625rem\",\n                                height: \"3rem\",\n                                borderRadius: \"6.25rem\",\n                            }}\n                        />\n                    </Box>\n                </Box>\n            )}\n\n            <CustomSnackBar\n                isOpen={snackbar.open}\n                message={snackbar.message}\n                hideDuration={6000}\n                type={snackbar.type}\n                onClose={() => setSnackbar({ ...snackbar, open: false })}\n            />\n        </Box>\n    );\n};\n","import { Box, Pagination, Typography } from \"@mui/material\";\nimport React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport \"./NavBar-Appointment.scss\";\nimport Button from \"@mui/material/Button\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Rating from \"@mui/material/Rating\";\nimport Stack from \"@mui/material/Stack\";\nimport CustomModal from \"../../components/CustomModal/custom-modal\";\nimport RescheduleAppointmentSlider from \"./AppointmentSlider/RescheduleAppointmentSlider/RescheduleAppointmentSlider\";\nimport CancelAppointmentSlider from \"./AppointmentSlider/CancleAppointment/CancleAppointmentSlider\";\nimport CustomButton from \"../../components/CustomButton/custom-button\";\nimport { LeaveAReview } from \"./UpComing/CompletedModal/LeaveAReviewModal\";\nimport BookAppointmentModal from \"../DrDetailsCard/BookingAppointmentModal\";\nimport axiosInstance from \"../../config/axiosInstance\";\nimport { getProfileImageSrc } from \"../../utils/imageUtils\";\n\nexport const AppointmentNavbar = () => {\n    return (\n        <nav className=\"NavBar-Container-Appoinement\">\n            <NavLink to={\"/patientdashboard/appointment/upcoming\"}>Upcoming</NavLink>\n            <NavLink to={\"/patientdashboard/appointment/completed\"}>Completed</NavLink>\n            <NavLink to={\"/patientdashboard/appointment/cancelled\"}>Cancelled</NavLink>\n            <NavLink to={\"/patientdashboard/appointment/chats\"}>Chats</NavLink>\n        </nav>\n    );\n};\n\nexport const CancelledCard = ({ data, DrImage }) => {\n    return (\n        <Box\n            sx={{\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                borderBottom: \"1px solid #E6E1E5\",\n            }}\n        >\n            {/* Image tag */}\n            <Box\n                sx={{\n                    width: \"143px\",\n                    height: \"143px\",\n                    padding: \"1%\",\n                    borderRadius: \"8px\",\n                }}\n            >\n                <Box\n                    sx={{\n                        borderRadius: \"8px\",\n                        width: \"100%\",\n                        height: \"100%\",\n                    }}\n                    component={\"img\"}\n                    src={getProfileImageSrc(DrImage, DrImage)}\n                ></Box>\n            </Box>\n            {/* card content */}\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"flex-start\",\n                    padding: \"2%\",\n                }}\n            >\n                <Typography>\n                    {`${data?.first_name} ${data?.middle_name} ${data?.last_name}`}{\" \"}\n                </Typography>\n                <Box\n                    sx={{\n                        width: \"100%\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        marginTop: \"5%\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"12px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"18px\",\n                            letterSpacing: \"0.096px\",\n                        }}\n                    >\n                        {data?.plan_name}\n                    </Typography>\n                    <CustomButton\n                        buttonCss={{\n                            marginLeft: \"10%\",\n                            borderRadius: \"50px\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"14px\",\n                            height: \"32px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"600\",\n                            lineHeight: \"22px\",\n                        }}\n                        isTransaprent={true}\n                        label={data?.status}\n                    ></CustomButton>\n                </Box>\n                <Typography\n                    sx={{\n                        color: \"#313033\",\n                        fontFamily: \"Poppins\",\n                        fontSize: \"12px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"400\",\n                        lineHeight: \"18px\",\n                        letterSpacing: \"0.096px\",\n                        marginTop: \"15%\",\n                    }}\n                >\n                    {data?.appointment_date\n                        ? `${data.appointment_date.split(\"T\")[0]}`\n                        : \"No Date Available\"}\n                    | Attached Reports: {data?.report_name || \"None\"}\n                </Typography>\n            </Box>\n        </Box>\n    );\n};\n\nexport const PaginationCard = () => {\n    return (\n        <Box\n            sx={{\n                position: \"relative\",\n                bottom: 0,\n                marginBottom: \"2%\",\n                width: \"95%\",\n            }}\n        >\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Box>\n                    <Typography sx={{ marginTop: \"20%\" }}>Page 1 of 1</Typography>\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"0%\",\n                        // marginTop: \"1%\",\n                    }}\n                >\n                    <Pagination count={10} variant=\"outlined\" shape=\"rounded\" />\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport const CompletedCard = ({ data, DrImage, pid ,did,aid}) => {\n    console.log(data)\n    const [openLeaveReview, setOpenLeaveReview] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    console.log(\"Complted card data :  :  = = \", data);\n    return (\n        <Box sx={{ display: \"flex\" }}>\n            <Box\n                sx={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    borderBottom: \"1px solid #E6E1E5\",\n                }}\n            >\n                {/* Image tag */}\n                <Box\n                    sx={{\n                        width: \"143px\",\n                        height: \"143px\",\n                        padding: \"1%\",\n                        borderRadius: \"8px\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            borderRadius: \"8px\",\n                            width: \"100%\",\n                            height: \"100%\",\n                        }}\n                        component={\"img\"}\n                        src={getProfileImageSrc(DrImage, DrImage)}\n                    ></Box>\n                </Box>\n                {/* card content */}\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"flex-start\",\n                        padding: \"2%\",\n                    }}\n                >\n                    <Typography>{`${data?.first_name} ${data?.middle_name} ${data?.last_name}`}</Typography>\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"5%\",\n                        }}\n                    >\n                        <Typography\n                            sx={{\n                                color: \"#313033\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"12px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"18px\",\n                                letterSpacing: \"0.096px\",\n                            }}\n                        >\n                            {data?.plan_name}\n                        </Typography>\n                        <CustomButton\n                            buttonCss={{\n                                marginLeft: \"10%\",\n                                borderRadius: \"50px\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"14px\",\n                                height: \"32px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"600\",\n                                lineHeight: \"22px\",\n                            }}\n                            isTransaprent={true}\n                            label=\"Completed\"\n                        ></CustomButton>\n                    </Box>\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"12px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"18px\",\n                            letterSpacing: \"0.096px\",\n                            marginTop: \"15%\",\n                        }}\n                    >\n                        {data?.appointment_date} | Attached Reports:{data?.report_name}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    padding: \"2%\",\n                    flexDirection: \"column\",\n                    justifyContent: \"space-between\",\n                }}\n            >\n                <Box>\n                    <CustomButton\n                        buttonCss={{\n                            marginLeft: \"10%\",\n                            // marginTop: \"-6%\",\n                            borderRadius: \"50px\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"14px\",\n                            width: \"149px\",\n                            height: \"48px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"22px\",\n                        }}\n                        handleClick={() => setOpenLeaveReview(!openLeaveReview)}\n                        isTransaprent={true}\n                        label=\"Leave a Review\"\n                    ></CustomButton>\n                    <CustomModal\n                        isOpen={openLeaveReview}\n                        conditionOpen={setOpenLeaveReview}\n                        title={\"Review\"}\n                        footer={\n                            <Fragment>\n                                <Box\n                                    sx={{\n                                        width: \"100%\",\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        alignItems: \"center\",\n                                    }}\n                                ></Box>\n                            </Fragment>\n                        }\n                    >\n                        <Box>\n                            <LeaveAReview\n                                pid={pid}\n                                did={did}\n                                aid={aid}\n                            />\n                        </Box>\n                    </CustomModal>\n                </Box>\n                <CustomButton\n                    buttonCss={{\n                        marginLeft: \"10%\",\n                        // marginTop: \"-6%\",\n                        borderRadius: \"50px\",\n                        fontFamily: \"Poppins\",\n                        fontSize: \"14px\",\n                        width: \"149px\",\n                        height: \"48px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        lineHeight: \"22px\",\n                    }}\n                    isTransaprent={false}\n                    label=\"Book Again\"\n                    handleClick={() => setOpenDialog(!openDialog)}\n                ></CustomButton>\n                <CustomModal\n                    isOpen={openDialog}\n                    title={\"Book Appointment\"}\n                    conditionOpen={setOpenDialog}\n                    footer={\n                        <Fragment>\n                            <Box\n                                sx={{\n                                    width: \"100%\",\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                }}\n                            >\n                                {/* <CustomButton\n                                            label=\"Next\"\n                                            handleClick={() =>\n                                                setPatientDetails(!openPatientDetails)\n                                            }\n                                        /> */}\n                            </Box>\n                        </Fragment>\n                    }\n                >\n                    <Box>\n                        <BookAppointmentModal drID={did}\n                                aid={aid} />\n                    </Box>\n                </CustomModal>\n            </Box>\n        </Box>\n    );\n};\n\nexport const UpcomingCard = ({ data, DrImage, label, isDisabled, path, changeFlagState }) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenDialogCancle(false);\n        setOpenDialogReschedule(false);\n    };\n    const navigate = useNavigate();\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const [openDialogCancle, setOpenDialogCancle] = useState(false);\n    const [openDialogReschedule, setOpenDialogReschedule] = useState(false);\n\n    const JoinAppointment = async () => {\n        navigate(path.join)\n    };\n\n    return (\n        <Box sx={{ width: \"100%\", display: \"flex\" }}>\n            <Box\n                sx={{\n                    width: \"100%\",\n                    // height: \"100%\",\n                    display: \"flex\",\n                    borderBottom: \"1px solid #E6E1E5\",\n                }}\n            >\n                {/* Image tag */}\n                <Box\n                    sx={{\n                        width: \"143px\",\n                        height: \"143px\",\n                        padding: \"1%\",\n                        borderRadius: \"8px\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            borderRadius: \"8px\",\n                            width: \"100%\",\n                            height: \"100%\",\n                        }}\n                        component={\"img\"}\n                        src={getProfileImageSrc(DrImage, DrImage)}\n                    ></Box>\n                </Box>\n                {/* card content */}\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"flex-start\",\n                        padding: \"2%\",\n                    }}\n                >\n                    <Typography>{`${data?.first_name} ${data?.middle_name} ${data?.last_name}`}</Typography>\n                    <Box\n                        sx={{\n                            width: \"100%\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            marginTop: \"5%\",\n                        }}\n                    >\n                        <Typography\n                            sx={{\n                                color: \"#313033\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"12px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"18px\",\n                                letterSpacing: \"0.096px\",\n                            }}\n                        >\n                            {data?.plan_name}\n                        </Typography>\n                        <CustomButton\n                            buttonCss={{\n                                marginLeft: \"10%\",\n                                borderRadius: \"50px\",\n                                fontFamily: \"Poppins\",\n                                fontSize: \"14px\",\n                                height: \"32px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"600\",\n                                lineHeight: \"22px\",\n                            }}\n                            isTransaprent={true}\n                            label={data?.status}\n                            className={\"upcomingButton\"}\n                        ></CustomButton>\n                    </Box>\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"12px\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"18px\",\n                            letterSpacing: \"0.096px\",\n                            marginTop: \"15%\",\n                        }}\n                    >\n                        {data?.appointment_date\n                            ? `${data.appointment_date.split(\"T\")[0]} | Attached Reports: ${\n                                  data?.report_name || \"No Reports\"\n                              }`\n                            : `No Appointment Date | Attached Reports: ${\n                                  data?.report_name || \"No Reports\"\n                              }`}\n                    </Typography>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                }}\n            >\n                <div style={{ width: \"fit-content\" }}>\n                    <MoreHorizIcon\n                        sx={{\n                            cursor: \"pointer\",\n                            color: \"#3d403e\",\n                            border: \"1px solid #3d403e\",\n                            borderRadius: \"50px\",\n                        }}\n                        onClick={handleClick}\n                    />\n                    <Menu\n                        id=\"basic-menu\"\n                        anchorEl={anchorEl}\n                        open={open}\n                        onClose={handleClose}\n                        MenuListProps={{\n                            \"aria-labelledby\": \"basic-button\",\n                        }}\n                    >\n                        {/* ---------------------- Appointments and Re-Schedule--------------------------------------------------- */}\n                        <MenuItem onClick={() => setOpenDialogCancle(!openDialogCancle)}>\n                            Cancle\n                        </MenuItem>\n                        <CustomModal\n                            isOpen={openDialogCancle}\n                            title={\"Book Appointment\"}\n                            conditionOpen={setOpenDialogCancle}\n                            footer={\n                                <Fragment>\n                                    <Box\n                                        sx={{\n                                            width: \"100%\",\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                        }}\n                                    ></Box>\n                                </Fragment>\n                            }\n                        >\n                            <Box>\n                                <CancelAppointmentSlider\n                                    path={path.reject}\n                                    data={data}\n                                    changeFlagState={changeFlagState}\n                                />\n                            </Box>\n                        </CustomModal>\n                        {data?.status === \"booked\" && (\n                            <MenuItem\n                                onClick={() => setOpenDialogReschedule(!openDialogReschedule)}\n                            >\n                                Re-Schedule\n                            </MenuItem>\n                        )}\n\n                        <CustomModal\n                            isOpen={openDialogReschedule}\n                            title={\"Book Appointment\"}\n                            conditionOpen={setOpenDialogReschedule}\n                            footer={\n                                <Fragment>\n                                    <Box\n                                        sx={{\n                                            width: \"100%\",\n                                            display: \"flex\",\n                                            justifyContent: \"center\",\n                                            alignItems: \"center\",\n                                        }}\n                                    ></Box>\n                                </Fragment>\n                            }\n                        >\n                            <Box>\n                                <RescheduleAppointmentSlider\n                                    path={path.rescheduled}\n                                    data={data}\n                                    changeFlagState={changeFlagState}\n                                />\n                            </Box>\n                        </CustomModal>\n                    </Menu>\n                </div>\n\n                <CustomButton\n                    buttonCss={{\n                        borderRadius: \"50px\",\n                        fontFamily: \"Poppins\",\n                        fontSize: \"14px\",\n                        width: \"149px\",\n                        height: \"48px\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        lineHeight: \"22px\",\n                        marginBottom: \"8%\",\n                    }}\n                    isDisabled={isDisabled}\n                    isTransaprent={false}\n                    label=\"Join\"\n                    handleClick={JoinAppointment}\n                ></CustomButton>\n            </Box>\n        </Box>\n    );\n};\n\nUpcomingCard.propTypes = {\n    label: PropTypes.string.isRequired,\n    DrImage: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool.isRequired,\n};\n\nCompletedCard.propTypes = {\n    DrImage: PropTypes.string.isRequired,\n};\n\nCancelledCard.propTypes = {\n    DrImage: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport CustomModalMUI from \"../components/CustomModalMUI/CustomModalMUI\";\n\nconst ToModal = () => {\n    return (\n        <>\n            <CustomModalMUI\n                label=\"To\"\n                rightIcon={<KeyboardArrowDownIcon />}\n                modalCss={{\n                    position: \"relative\",\n                    top: \"35%\",\n                    left: \"83%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: 450,\n                    bgcolor: \"background.paper\",\n                    borderRadius: \"10px\",\n                    boxShadow: 24,\n                    pt: 2,\n                    px: 2,\n                    pb: 1,\n                }}\n                modalcontent={\n                    <>\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={[\"DatePicker\"]}>\n                                <DatePicker label=\"To\" />\n                            </DemoContainer>\n                        </LocalizationProvider>\n                    </>\n                }\n            ></CustomModalMUI>\n        </>\n    );\n};\n\nexport default ToModal;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DoctorListingNavbar = () => {\n    return (\n        <nav className=\"NavBar-Container-Appoinement\">\n            <NavLink to={\"/doctordashboard/doctorListing/doctoractiveListing\"}>\n                Active Listing\n            </NavLink>\n            <NavLink to={\"/doctordashboard/doctorListing/doctorsavedInDraft\"}>\n                Saved in Draft\n            </NavLink>\n        </nav>\n    );\n};\nexport default DoctorListingNavbar;\n","import React, { useEffect, useState } from \"react\";\nimport \"./DoctorAppointment.scss\";\nimport { Typography } from \"@mui/material\";\nimport CustomDropdown from \"../../../components/CustomDropdown/custom-dropdown\";\n\nconst DoctorAppointmentCard = ({ NumberOfAppointments = 0, AppointmentType = \"Parameters\", onClick }) => {\n    const dropdownItems = [\"Today\", \"Tomorrow\", \"Yesterday\"];\n    const [activeDropdown, setActiveDropdown] = useState(\"\");\n    console.log(\"inside doc appointment card : \",NumberOfAppointments);\n\n    // useEffect( () => {\n\n    // },[NumberOfAppointments] )\n\n    return (\n        <>\n          \n\n            <div  className=\"DoctorDashboardCard\" onClick={onClick} style={{ cursor: 'pointer' }}>\n                <div className=\"DropDown-field\">\n                    {/* <CustomDropdown\n                                dropdowncss={{\n                                    alignItem : \"center\",\n                                    Width : \"20%\",\n                                    marginRight : \"8%\",\n                                }}\n                                CustomSx={{width : \"8em\" ,   padding : \"1% 8%\"}}\n                                label={\"Select\"}\n                                items={dropdownItems}\n                                activeItem={activeDropdown}\n                                handleChange={(item) => setActiveDropdown(item)}\n                            /> */}\n                </div>\n                <div className=\"Number-Container\">\n                    <Typography\n                        sx={{\n                            color: \"#E72B4A\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"3rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"600\",\n                            lineHeight: \"4.625rem\",\n                        }}\n                    >\n                        {NumberOfAppointments}\n                    </Typography>\n                </div>\n                <div className=\"Number-Container\">\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"1rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"1.5rem\",\n                        }}\n                    >\n                        {AppointmentType}\n                    </Typography>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default DoctorAppointmentCard;\n","import React from \"react\";\n// import \"./DateModal.scss\"\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport CustomModalMUI from \"../CustomModalMUI/CustomModalMUI\";\n\nconst DatePickerModal = () => {\n    return (\n        <>\n            <CustomModalMUI\n                label=\"Date\"\n                rightIcon={<KeyboardArrowDownIcon />}\n                modalCss={{\n                    position: \"relative\",\n                    top: \"35%\",\n                    left: \"83%\",\n                    transform: \"translate(-50%, -50%)\",\n                    width: 450,\n                    bgcolor: \"background.paper\",\n                    borderRadius: \"10px\",\n                    boxShadow: 24,\n                    pt: 2,\n                    px: 2,\n                    pb: 1,\n                }}\n                modalcontent={\n                    <>\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\n                            <DemoContainer components={[\"DatePicker\"]}>\n                                <DatePicker label=\"Date\" />\n                            </DemoContainer>\n                        </LocalizationProvider>\n                    </>\n                }\n            ></CustomModalMUI>\n        </>\n    );\n};\n\nexport default DatePickerModal;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nexport const Testlist = ({ name, staff_id }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        {staff_id}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { Box, Typography } from \"@mui/material\";\nimport { AccessTime } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\nimport \"./CustomTimePicker.scss\";\n\nconst CustomTimePicker = ({\n    label = \"Time\",\n    value = null,\n    onChange = () => {},\n    required = false,\n    disabled = false,\n    error = false,\n    helperText = \"\",\n    placeholder = \"\",\n    textcss = {},\n    noSpacing = false,\n    size = \"medium\",\n    variant = \"standard\",\n    fullWidth = true,\n    ...props\n}) => {\n    // Convert value to dayjs object if it's a Date, string, or number\n    const dayjsValue = React.useMemo(() => {\n        if (!value) return null;\n        if (dayjs.isDayjs(value)) return value;\n        return dayjs(value);\n    }, [value]);\n\n    // Handle onChange to convert back to Date object for compatibility\n    const handleChange = (newValue) => {\n        if (onChange) {\n            // Convert dayjs object back to Date object for backward compatibility\n            onChange(newValue ? newValue.toDate() : null);\n        }\n    };\n\n    const getSizeStyles = () => {\n        switch (size) {\n            case \"small\":\n                return {\n                    fontSize: \"14px\",\n                    padding: \"8px 12px\",\n                    minHeight: \"40px\"\n                };\n            case \"large\":\n                return {\n                    fontSize: \"18px\",\n                    padding: \"16px 20px\",\n                    minHeight: \"56px\"\n                };\n            default:\n                return {\n                    fontSize: \"16px\",\n                    padding: \"12px 16px\",\n                    minHeight: \"48px\"\n                };\n        }\n    };\n\n    return (\n        <Box className={`custom-time-picker ${error ? 'error' : ''} ${disabled ? 'disabled' : ''}`}>\n            {label && (\n                <Typography \n                    variant=\"body2\" \n                    className=\"time-picker-label\"\n                    sx={{\n                        fontFamily: \"Poppins, sans-serif\",\n                        fontWeight: 600,\n                        fontSize: size === \"small\" ? \"12px\" : size === \"large\" ? \"16px\" : \"14px\",\n                        color: error ? \"#d32f2f\" : \"#495057\",\n                        marginBottom: \"8px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: \"6px\"\n                    }}\n                >\n                    <AccessTime sx={{ fontSize: size === \"small\" ? \"16px\" : size === \"large\" ? \"20px\" : \"18px\" }} />\n                    {label}\n                    {required && <span style={{ color: \"#d32f2f\" }}>*</span>}\n                </Typography>\n            )}\n            \n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <TimePicker\n                    value={dayjsValue}\n                    onChange={handleChange}\n                    disabled={disabled}\n                    slotProps={{\n                        textField: {\n                            variant: variant,\n                            fullWidth: fullWidth,\n                            required: required,\n                            error: error,\n                            helperText: helperText,\n                            placeholder: placeholder,\n                            size: size,\n                            sx: {\n                                fontFamily: \"Poppins, sans-serif\",\n                                ...getSizeStyles(),\n                                marginBottom: noSpacing ? 0 : \"1.5rem\",\n                                \n                                // Standard variant styling to match other form components\n                                \"& .MuiInputLabel-root\": {\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontWeight: 500,\n                                    color: error ? \"#d32f2f\" : \"#787579\",\n                                    \n                                    \"&.Mui-focused\": {\n                                        color: error ? \"#d32f2f\" : \"#1976d2\",\n                                    },\n                                },\n                                \n                                \"& .MuiInput-underline\": {\n                                    \"&:before\": {\n                                        borderBottomColor: error ? \"#d32f2f\" : \"#e0e0e0\",\n                                    },\n                                    \n                                    \"&:hover:not(.Mui-disabled):before\": {\n                                        borderBottomColor: error ? \"#d32f2f\" : \"#1976d2\",\n                                    },\n                                    \n                                    \"&:after\": {\n                                        borderBottomColor: error ? \"#d32f2f\" : \"#1976d2\",\n                                    },\n                                },\n                                \n                                \"& .MuiInputBase-input\": {\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontWeight: 500,\n                                    color: \"#2c3e50\",\n                                    padding: \"8px 0\",\n                                    \n                                    \"&::placeholder\": {\n                                        color: \"#adb5bd\",\n                                        opacity: 1,\n                                    },\n                                },\n                                \n                                \"& .MuiFormHelperText-root\": {\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontSize: \"12px\",\n                                    fontWeight: 500,\n                                    marginTop: \"6px\",\n                                    color: error ? \"#d32f2f\" : \"#6c757d\",\n                                },\n                                \n                                \"& .MuiInputAdornment-root\": {\n                                    color: error ? \"#d32f2f\" : \"#1976d2\",\n                                    \n                                    \"&:hover\": {\n                                        color: error ? \"#d32f2f\" : \"#1565c0\",\n                                    },\n                                },\n                                \n                                \"& .MuiSvgIcon-root\": {\n                                    color: error ? \"#d32f2f\" : \"#1976d2\",\n                                    transition: \"color 0.3s ease\",\n                                    \n                                    \"&:hover\": {\n                                        color: error ? \"#d32f2f\" : \"#1565c0\",\n                                    },\n                                },\n                                \n                                // Outlined variant styling (when variant=\"outlined\" is used)\n                                \"& .MuiOutlinedInput-root\": {\n                                    borderRadius: \"8px\",\n                                    backgroundColor: disabled ? \"#f5f5f5\" : \"#ffffff\",\n                                    transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                                    border: `1px solid ${error ? \"#d32f2f\" : \"#e0e0e0\"}`,\n                                    \n                                    \"&:hover\": {\n                                        borderColor: error ? \"#d32f2f\" : \"#1976d2\",\n                                        boxShadow: `0 0 0 2px ${error ? \"rgba(211, 47, 47, 0.1)\" : \"rgba(25, 118, 210, 0.1)\"}`,\n                                    },\n                                    \n                                    \"&.Mui-focused\": {\n                                        borderColor: error ? \"#d32f2f\" : \"#1976d2\",\n                                        boxShadow: `0 0 0 2px ${error ? \"rgba(211, 47, 47, 0.2)\" : \"rgba(25, 118, 210, 0.2)\"}`,\n                                    },\n                                    \n                                    \"&.Mui-disabled\": {\n                                        backgroundColor: \"#f5f5f5\",\n                                        borderColor: \"#e0e0e0\",\n                                        cursor: \"not-allowed\",\n                                    },\n                                },\n                                \n                                ...textcss,\n                            },\n                        },\n                    }}\n                    {...props}\n                />\n            </LocalizationProvider>\n        </Box>\n    );\n};\n\nCustomTimePicker.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.instanceOf(Date),\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object, // dayjs object\n    ]),\n    onChange: PropTypes.func,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    error: PropTypes.bool,\n    helperText: PropTypes.string,\n    placeholder: PropTypes.string,\n    textcss: PropTypes.object,\n    noSpacing: PropTypes.bool,\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n    variant: PropTypes.oneOf([\"standard\", \"outlined\", \"filled\"]),\n    fullWidth: PropTypes.bool,\n};\n\nCustomTimePicker.defaultProps = {\n    label: \"Time\",\n    value: null,\n    onChange: () => {},\n    required: false,\n    disabled: false,\n    error: false,\n    helperText: \"\",\n    placeholder: \"\",\n    textcss: {},\n    noSpacing: false,\n    size: \"medium\",\n    variant: \"standard\",\n    fullWidth: true,\n};\n\nexport default CustomTimePicker;\n","import React, { useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CardMembershipIcon from \"@mui/icons-material/CardMembership\";\n\n\nconst License = ({\n    head,\n    subhead,\n    dates,\n    description,\n    certific_num,\n    doctorLicensesId,\n    handleEditLic\n}) => {\n   \n\n    return (\n        <div>\n               \n            <div className=\"medical-card-container\">\n                <div className=\"medical-card\">\n                    <Box\n                        sx={{\n                            width: \"150px\",\n                            height: \"150px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#F0F0F0\",\n                        }}\n                    >\n                        <CardMembershipIcon\n                            style={{\n                                fontSize: \"30px\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                color: \"#E72B4A\",\n                            }}\n                        />\n                    </Box>\n                    <div className=\"medical-details\">\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"space-between\",\n                            }}\n                        >\n                            <Typography\n                                style={{\n                                    fontWeight: \"bold\",\n                                    fontSize: \"16px\",\n                                    marginTop: \"25px\",\n                                    marginLeft: \"25px\",\n                                }}\n                            >\n                                {head ? head.toUpperCase() : \"\"}\n\n                                </Typography>\n                            <div className=\"edit-icon\">\n                                <EditIcon\n                                    onClick={handleEditLic}\n                                    style={{ cursor: \"pointer\", color: \"#E72B4A\" }}\n                                />\n                                <Typography\n                                    onClick={handleEditLic}\n                                    style={{\n                                        color: \"#E72B4A\",\n                                        fontSize: \"14px\",\n                                        cursor: \"pointer\",\n                                        marginLeft: \"5px\",\n                                    }}\n                                >\n                                    Edit\n                                </Typography>\n                            </div>\n                        </Box>\n                        <Typography className=\"Hospital-name\" style={{ marginLeft: \"25px\" }}>\n                            {subhead}\n                        </Typography>\n                        <Typography className=\"date\" style={{ marginLeft: \"25px\" }}>\n                            Certificate No:{certific_num}\n                        </Typography>\n                        <Typography className=\"date\" style={{ marginLeft: \"25px\" }}>\n                            {dates}\n                        </Typography>\n                        <Typography className=\"date\" style={{ marginLeft: \"25px\" }}>\n                            Description\n                        </Typography>\n                        <Typography\n                            style={{\n                                marginLeft: \"6px\",\n                                display: \"flex\",\n                                flex: \"start\"\n                            }}\n                        >\n                            {description}\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default License;\n","import React, { useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport EmojiEventsIcon from \"@mui/icons-material/EmojiEvents\";\n\nconst Awards = ({  head, subhead, dates, description,  handleEditAwa, doctorAwardsId,data }) => {\n   \n    return (\n        <div>\n                \n            <div className=\"medical-card-container\">\n                <div className=\"medical-card\">\n                    <Box\n                        sx={{\n                            width: \"150px\",\n                            height: \"150px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#F0F0F0\",\n                        }}\n                    >\n                        <EmojiEventsIcon\n                            style={{\n                                fontSize: \"30px\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                color: \"#E72B4A\",\n                            }}\n                        />\n                    </Box>\n                    <div className=\"medical-details\">\n                        <Box\n                            sx={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"space-between\",\n                            }}\n                        >\n                            <Typography\n                                style={{\n                                    fontWeight: \"bold\",\n                                    fontSize: \"16px\",\n                                    marginTop: \"25px\",\n                                    marginLeft: \"25px\",\n                                }}\n                            >\n                                {head ? head.toUpperCase() : \"\"}\n\n                            </Typography>\n                            <div className=\"edit-icon\">\n                                <EditIcon\n                                    onClick={handleEditAwa}\n                                    style={{ cursor: \"pointer\", color: \"#E72B4A\" }}\n                                />\n                                <Typography\n                                    onClick={handleEditAwa}\n                                    style={{\n                                        color: \"#E72B4A\",\n                                        fontSize: \"14px\",\n                                        cursor: \"pointer\",\n                                        marginLeft: \"5px\",\n                                    }}\n                                >\n                                    Edit\n                                </Typography>\n                            </div>\n                        </Box>\n                        <Typography className=\"Hospital-name\" style={{ marginLeft: \"25px\" }}>\n                            {subhead}\n                        </Typography>\n                        <Typography className=\"date\" style={{ marginLeft: \"25px\" }}>\n                            {dates}\n                        </Typography>\n                        <Typography className=\"date\" style={{ marginLeft: \"25px\" }}>\n                            Description\n                        </Typography>\n                        <Typography\n                            style={{\n                                marginLeft: \"2px\",\n                                overflow: \"hidden\",\n                                display: \"flex\",\n                                flex: \"start\" // Hide overflowed text\n                            }}\n                        >\n                            {description}\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n           \n        </div>\n    );\n};\n\nexport default Awards;\n","import axios from \"axios\";\nimport { needsTokenRefresh, refreshToken, clearAuthData } from \"../utils/jwtUtils\";\n\nconst axiosInstance = axios.create({\n    baseURL: \"http://localhost:3000\", // Replace with your API base URL\n});\n\n// Request interceptor\naxiosInstance.interceptors.request.use(\n    async (config) => {\n        // Check if token needs refresh before making the request\n        if (needsTokenRefresh()) {\n            console.log(\"Token needs refresh, attempting to refresh...\");\n            const refreshSuccess = await refreshToken();\n            if (!refreshSuccess) {\n                console.error(\"Token refresh failed, clearing auth data\");\n                clearAuthData();\n                // Redirect to login if not already there\n                if (window.location.pathname !== \"/login\") {\n                    window.location.href = \"/login\";\n                }\n                return Promise.reject(new Error(\"Token refresh failed\"));\n            }\n        }\n\n        // Get token from localStorage (consistent with jwtUtils.js)\n        const accessToken = localStorage.getItem(\"access_token\");\n        \n        // Add token to Authorization header if present\n        if (accessToken) {\n            config.headers.Authorization = `Bearer ${accessToken}`;\n            console.log(\"JWT token added to request headers\");\n        } else {\n            console.warn(\"No access token found in localStorage\");\n        }\n        \n        return config;\n    },\n    (error) => {\n        console.error(\"Request interceptor error:\", error);\n        return Promise.reject(error);\n    },\n);\n\n// Response interceptor\naxiosInstance.interceptors.response.use(\n    (response) => {\n        // Modify the response data here (e.g., parse, transform)\n        return response;\n    },\n    async (error) => {\n        // Handle response errors here\n        if (error.response?.status === 401) {\n            console.error(\"Unauthorized access - token may be expired\");\n            \n            // Try to refresh token first\n            const refreshSuccess = await refreshToken();\n            if (refreshSuccess) {\n                console.log(\"Token refreshed, retrying original request\");\n                // Retry the original request with new token\n                const originalRequest = error.config;\n                originalRequest.headers.Authorization = `Bearer ${localStorage.getItem(\"access_token\")}`;\n                return axiosInstance(originalRequest);\n            } else {\n                // If refresh fails, clear auth data and redirect\n                clearAuthData();\n                if (window.location.pathname !== \"/login\") {\n                    window.location.href = \"/login\";\n                }\n            }\n        }\n        \n        return Promise.reject(error);\n    },\n);\n\nexport default axiosInstance;\n","import {\n    // Box,\n    Stack,\n    Typography,\n    Box,\n    Paper,\n    // Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Skeleton,\n    // Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerModal from \"../../../components/DatePickerModal/DatePickerModal\";\n// import \"./SuperAdminTranDoctor.scss\";\nimport apolloimg from \"../../../static/images/DrImages/image 27.png\";\nimport { DoctorDetail } from \"../../SuperAdminHistory/SuperAdminHistoryDoctor/DoctorDetail\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\n\n\nconst SuperAdminTranHCF = () => {\n    const [cardData, setCardData] = useState([]);\n    const [loading, setLoading] = useState(true); \n\n    const fetchData = async () => {\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/transction/hcf');\n            console.log(\"Dashboard Response from API: \",resp?.data);\n            setCardData(resp?.data?.response);\n        }catch(err){\n            console.log(\"Error : \", err)\n        }finally {\n            setLoading(false); \n      }\n    };\n      \n      useEffect( () => {\n        fetchData();\n      },[] )\n    \n      React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"transaction\");\n        localStorage.setItem(\"path\", \"doctor\");\n      }, []);\n\n      const renderSkeletonRow = () => (\n        <TableRow>\n            <TableCell><Skeleton variant=\"text\" width=\"100%\" /></TableCell>\n            <TableCell align=\"right\"><Skeleton variant=\"text\" width=\"60%\" /></TableCell>\n            <TableCell align=\"right\"><Skeleton variant=\"text\" width=\"40%\" /></TableCell>\n            <TableCell align=\"right\"><Skeleton variant=\"text\" width=\"40%\" /></TableCell>\n        </TableRow>\n    );\n\n    return (\n        <>\n            <div className=\"search-date-filter\">\n                <Box\n                    display={\"flex\"}\n                    margin={\"10px\"}\n                    flexWrap={\"wrap\"}\n                    border={1}\n                    borderColor=\"#AEAAAE\"\n                    borderRadius={\"25px\"}\n                    width={\"26em\"}\n                    height=\"38px\"\n                    backgroundColor=\"#E6E1E5\"\n                >\n                    <Stack direction=\"row\" alignItems=\"center\" gap={1} padding={\"10px\"}>\n                        <SearchIcon sx={{ margin: \"0 0 0 0%\", color: \"#AEAAAE\" }} />\n                        <Typography variant=\"body1\" sx={{ textAlign: \"left\", color: \"#AEAAAE\" }}>\n                            Search Patient Name / ID\n                        </Typography>\n                    </Stack>\n                </Box>\n                <DatePickerModal />\n            </div>\n            <div className=\"superadmin-trandoctor-navbar\" style={{ marginTop: \"2rem\" }}>\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/superadmin/transaction/doctor\"}>Doctor</NavLink>\n                    <NavLink to={\"/superadmin/transaction/hcf\"}>HCF</NavLink>\n                </nav>\n            </div>\n            <div className=\"tran-doc-table\">\n                <TableContainer component={Paper} style={{ background: \"white\" }}>\n                    <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow style={{ fontWeight: \"bold\" }}>\n                                <TableCell><strong>HCF Details</strong></TableCell>\n                                <TableCell align=\"right\"><strong>Hcf ID</strong></TableCell>\n                                <TableCell align=\"right\"><strong>Hcf%</strong></TableCell>\n                                <TableCell align=\"center\"><strong>SuperAdmin%</strong></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {loading\n                                ? Array.from({ length: 5 }).map((_, index) => renderSkeletonRow())\n                                : cardData?.length === 0 \n                                    ? (\n                                        <TableRow>\n                                            <TableCell colSpan={4} align=\"center\">\n                                                <NoAppointmentCard message=\"No HCF Data Found\" />\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                : cardData?.map((data) => (\n                                <TableRow\n                                    key={data?.user_id}\n                                    // sx={{\n                                    //     \"&:last-child td, &:last-child th\": { border: 0 },\n                                    // }}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                                        {data?.name}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{data?.user_id}</TableCell>\n                                    <TableCell align=\"center\">{data?.user_percentage}</TableCell>\n                                    {/* <TableCell align=\"right\">{data?.fat}</TableCell> */}\n                                    <TableCell align=\"right\">{data?.hcf_percentage}</TableCell>\n                                    {/* <TableCell align=\"center\">{data?.}</TableCell> */}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </>\n    );\n};\n\nexport default SuperAdminTranHCF;\n","import { Box, Button, Modal } from \"@mui/material\";\nimport React, { useState } from \"react\";\n// import Box from '@mui/material/Box';\n// import Modal from '@mui/material/Modal';\n// import Button from '@mui/material/Button';\n\nconst style = {\n    position: \"relative\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 400,\n    bgcolor: \"background.paper\",\n    borderRadius: \"10px\",\n    boxShadow: 24,\n    pt: 2,\n    px: 4,\n    pb: 3,\n};\n\nconst CustomModalMUI = ({\n    label = \"Open Modal\",\n    modalCss = style,\n    leftIcon,\n    rightIcon,\n    modalcontent,\n    modaltitle,\n}) => {\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <Button onClick={handleOpen} startIcon={leftIcon} endIcon={rightIcon}>\n                {label}\n            </Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"parent-modal-title\"\n                aria-describedby=\"parent-modal-description\"\n            >\n                <Box sx={modalCss}>\n                    <h2 id=\"parent-modal-title\">{modaltitle}</h2>\n                    {modalcontent}\n                </Box>\n            </Modal>\n        </>\n    );\n};\n\nexport default CustomModalMUI;\n","import { jwtDecode } from 'jwt-decode';\n\n/**\n * Decodes a JWT token and extracts user information\n * @param {string} token - The JWT token to decode\n * @returns {Object} - Decoded token payload with user information\n */\nexport const decodeJWT = (token) => {\n    try {\n        if (!token) {\n            throw new Error('No token provided');\n        }\n        \n        const decoded = jwtDecode(token);\n        console.log('Decoded JWT payload:', decoded);\n        \n        return {\n            userId: decoded.user_id,\n            roleId: decoded.role_id || null,\n            email: decoded.email || null,\n            iat: decoded.iat, // Issued at\n            exp: decoded.exp, // Expiration time\n            isExpired: decoded.exp ? Date.now() >= decoded.exp * 1000 : false,\n            raw: decoded // Raw payload for debugging\n        };\n    } catch (error) {\n        console.error('Error decoding JWT:', error);\n        throw new Error('Invalid token format');\n    }\n};\n\n/**\n * Gets user information from stored token\n * @returns {Object|null} - User information or null if no valid token\n */\nexport const getCurrentUser = () => {\n    try {\n        const token = localStorage.getItem('access_token');\n        if (!token) {\n            console.log('No access token found in localStorage');\n            return null;\n        }\n        \n        const userInfo = decodeJWT(token);\n        \n        if (userInfo.isExpired) {\n            console.warn('Token has expired');\n            // Clear expired token\n            localStorage.removeItem('access_token');\n            localStorage.removeItem('patient_Email');\n            localStorage.removeItem('patient_suid');\n            localStorage.removeItem('profile');\n            return null;\n        }\n        \n        return userInfo;\n    } catch (error) {\n        console.error('Error getting current user:', error);\n        return null;\n    }\n};\n\n/**\n * Checks if the current token is valid and not expired\n * @returns {boolean} - True if token is valid, false otherwise\n */\nexport const isTokenValid = () => {\n    try {\n        const token = localStorage.getItem('access_token');\n        if (!token) {\n            return false;\n        }\n        \n        const userInfo = decodeJWT(token);\n        return !userInfo.isExpired;\n    } catch (error) {\n        console.error('Error checking token validity:', error);\n        return false;\n    }\n};\n\n/**\n * Checks if token is close to expiration (within 5 minutes)\n * @returns {boolean} - True if token needs refresh, false otherwise\n */\nexport const needsTokenRefresh = () => {\n    try {\n        const token = localStorage.getItem('access_token');\n        if (!token) {\n            return false;\n        }\n        \n        const userInfo = decodeJWT(token);\n        if (userInfo.isExpired) {\n            return true;\n        }\n        \n        // Check if token expires within 5 minutes (300 seconds)\n        const fiveMinutesFromNow = Date.now() + (5 * 60 * 1000);\n        const tokenExpiry = userInfo.exp * 1000;\n        \n        return tokenExpiry <= fiveMinutesFromNow;\n    } catch (error) {\n        console.error('Error checking token refresh need:', error);\n        // Be lenient on decode errors here; let 401 flow handle it\n        return false;\n    }\n};\n\n/**\n * Refreshes the JWT token by calling the refresh endpoint\n * @returns {Promise<boolean>} - True if refresh successful, false otherwise\n */\nimport axiosInstance from '../config/axiosInstance';\n\nexport const refreshToken = async () => {\n    try {\n        // Fallback: if no refresh_token, use access_token for minimal refresh flow\n        const bearer = localStorage.getItem('refresh_token') || localStorage.getItem('access_token');\n        if (!bearer) {\n            console.warn('No token available for refresh');\n            return false;\n        }\n\n        const response = await axiosInstance.post(\n            '/sec/auth/refresh',\n            null,\n            {\n                headers: {\n                    'Authorization': `Bearer ${bearer}`\n                }\n            }\n        );\n\n        const data = response?.data;\n        if (data?.access_token) {\n            localStorage.setItem('access_token', data.access_token);\n            // If backend ever returns a refresh_token, store it\n            if (data.refresh_token) {\n                localStorage.setItem('refresh_token', data.refresh_token);\n            }\n            console.log('Token refreshed successfully');\n            return true;\n        }\n\n        console.error('Token refresh failed: no access_token in response');\n        return false;\n    } catch (error) {\n        console.error('Error refreshing token:', error);\n        return false;\n    }\n};\n\n/**\n * Clears all authentication data from localStorage\n */\nexport const clearAuthData = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('patient_Email');\n    localStorage.removeItem('patient_suid');\n    localStorage.removeItem('profile');\n    localStorage.removeItem('user_id');\n    localStorage.removeItem('role_id');\n    localStorage.removeItem('jwt_email');\n    console.log('Authentication data cleared');\n};\n\n/**\n * Gets user ID from the current token\n * @returns {number|null} - User ID or null if not available\n */\nexport const getCurrentUserId = () => {\n    const userInfo = getCurrentUser();\n    return userInfo ? userInfo.userId : null;\n};\n\n/**\n * Gets role ID from the current token\n * @returns {number|null} - Role ID or null if not available\n */\nexport const getCurrentRoleId = () => {\n    const userInfo = getCurrentUser();\n    return userInfo ? userInfo.roleId : null;\n};\n\n/**\n * Gets email from the current token\n * @returns {string|null} - Email or null if not available\n */\nexport const getCurrentUserEmail = () => {\n    const userInfo = getCurrentUser();\n    return userInfo ? userInfo.email : null;\n};\n","import {\n    Box,\n    Typography,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TablePagination,\n    Skeleton,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport CustomCheckBox from \"../../../../components/CustomCheckBox\";\nimport NoAppointmentCard from \"../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport \"./clinicstaff.scss\";\nimport Docpic from \"../../../../static/images/DrImages/image4.jpg\";\nimport { formatDate, currencysign } from \"../../../../constants/const\";\n\nconst ClinicSalesActivities = () => {\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"manage\");\n        localStorage.setItem(\"path\", \"clinicsalesactivities\");\n        document.getElementById(\"location-search-container\").style.display = \"none\";\n    }, []);\n\n    const [data1, setData1] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const doctor_id = localStorage.getItem(\"clinic_suid\");\n\n    const fetchData1 = async (doctor_id) => {\n        try {\n            const response = await axiosInstance.get(`/sec/hcf/${doctor_id}/clinicSaleActivity`);\n            setData1(response?.data?.response || []);\n        } catch (error) {\n            setError(\"Error fetching sales activities data.\");\n            console.error(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData1(doctor_id);\n    }, [doctor_id]);\n\n    const [allChecked, setAllChecked] = useState(true);\n    const [completedChecked, setCompletedChecked] = useState(false);\n    const [cancelledChecked, setCancelledChecked] = useState(false);\n    const [bookedChecked, setBookedChecked] = useState(false);\n\n    const handleCheckBoxChange = (checkboxType) => {\n        if (checkboxType === \"all\") {\n            setAllChecked(true);\n            setCompletedChecked(false);\n            setCancelledChecked(false);\n            setBookedChecked(false);\n        } else if (checkboxType === \"completed\") {\n            setAllChecked(false);\n            setCompletedChecked(true);\n            setCancelledChecked(false);\n            setBookedChecked(false);\n        } else if (checkboxType === \"booked\") {\n            setAllChecked(false);\n            setCompletedChecked(false);\n            setCancelledChecked(false);\n            setBookedChecked(true);\n        } else if (checkboxType === \"cancelled\") {\n            setAllChecked(false);\n            setCompletedChecked(false);\n            setCancelledChecked(true);\n            setBookedChecked(false);\n        }\n    };\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    // Filter data based on selected checkboxes\n    const filteredData = () => {\n        if (allChecked) {\n            return data1;\n        }\n        if (completedChecked) {\n            return data1.filter((item) => item?.status === \"completed\");\n        }\n        if (bookedChecked) {\n            return data1.filter((item) => item?.status === \"booked\");\n        }\n        if (cancelledChecked) {\n            return data1.filter((item) => item?.status === \"Cancelled\");\n        }\n        return data1;\n    };\n\n    const paginatedData = filteredData().slice(\n        page * rowsPerPage,\n        page * rowsPerPage + rowsPerPage,\n    );\n\n    return (\n        <>\n            <div className=\"sales-container\">\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/clinicDashboard/clinicmanage/clinicsalesactivities\"}>\n                        Sales Activities\n                    </NavLink>\n                    <NavLink to={\"/clinicDashboard/clinicmanage/clinicauditlog\"}>\n                        Audit Logs\n                    </NavLink>\n                </nav>\n            </div>\n\n            <div className=\"checkboxes-from-to\">\n                <div className=\"check-box\">\n                    <div className=\"check-all\">\n                        <CustomCheckBox\n                            checked={allChecked}\n                            onChange={() => handleCheckBoxChange(\"all\")}\n                        />\n                        <Typography className=\"checkbox-label\">All</Typography>\n                    </div>\n                    <div className=\"check-all\">\n                        <CustomCheckBox\n                            checked={completedChecked}\n                            onChange={() => handleCheckBoxChange(\"completed\")}\n                        />\n                        <Typography className=\"checkbox-label\">Completed</Typography>\n                    </div>\n                    <div className=\"check-all\">\n                        <CustomCheckBox\n                            checked={bookedChecked}\n                            onChange={() => handleCheckBoxChange(\"booked\")}\n                        />\n                        <Typography className=\"checkbox-label\">Booked</Typography>\n                    </div>\n                    <div className=\"check-all\">\n                        <CustomCheckBox\n                            checked={cancelledChecked}\n                            onChange={() => handleCheckBoxChange(\"cancelled\")}\n                        />\n                        <Typography className=\"checkbox-label\">Cancelled</Typography>\n                    </div>\n                </div>\n            </div>\n\n            <Box\n                sx={{\n                    width: \"100%\",\n                    border: \"1px solid #E6E1E5\",\n                    marginTop: \"1rem\",\n                }}\n            >\n                <TableContainer style={{ overflowX: \"auto\" }}>\n                    <Table sx={{ minWidth: 650 }} size=\"large\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Doctor Name/ID</TableCell>\n                                <TableCell align=\"right\">Status</TableCell>\n                                <TableCell align=\"right\">Date & Time</TableCell>\n                                <TableCell align=\"right\">Package</TableCell>\n                                <TableCell align=\"right\">Price</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {loading ? (\n                                <>\n                                    {[...Array(rowsPerPage)].map((_, index) => (\n                                        <TableRow key={index}>\n                                            <TableCell>\n                                                <Skeleton\n                                                    variant=\"circular\"\n                                                    width={50}\n                                                    height={50}\n                                                />\n                                                <Skeleton variant=\"text\" width={100} />\n                                                <Skeleton variant=\"text\" width={130} />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" width={80} />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" width={150} />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" width={120} />\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                <Skeleton variant=\"text\" width={100} />\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </>\n                            ) : filteredData().length === 0 ? (\n                                <TableRow>\n                                    <TableCell colSpan={5} align=\"center\">\n                                        <NoAppointmentCard text_one={\"No Data Found\"} />\n                                    </TableCell>\n                                </TableRow>\n                            ) : (\n                                paginatedData.map((data, index) => (\n                                    <TableRow key={index}>\n                                        <TableCell>\n                                            <Box\n                                                component=\"img\"\n                                                src={data?.profile_picture || Docpic}\n                                                alt=\"Doctor Profile\"\n                                                sx={{\n                                                    borderRadius: \"8px\",\n                                                    width: \"50px\",\n                                                    height: \"50px\",\n                                                }}\n                                            />\n                                            <Typography>{data?.first_name}</Typography>\n                                            <Typography className=\"doctor-id\">\n                                                User ID: {data?.suid || \"NA\"}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"right\"\n                                            sx={{\n                                                color: \"#939094\",\n                                                fontFamily: \"Poppins\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            <Typography className=\"status-text\">\n                                                {data?.status || \"NA\"}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"right\"\n                                            sx={{\n                                                color: \"#939094\",\n                                                fontFamily: \"Poppins\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            <Typography className=\"date-text\">\n                                                {formatDate(data?.updated_at) || \"NA\"}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"right\"\n                                            sx={{\n                                                color: \"#939094\",\n                                                fontFamily: \"Poppins\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            <Typography className=\"package-text\">\n                                                {data?.plan_name || \"NA\"}\n                                            </Typography>\n                                        </TableCell>\n                                        <TableCell\n                                            align=\"right\"\n                                            sx={{\n                                                color: \"#939094\",\n                                                fontFamily: \"Poppins\",\n                                                fontSize: \"0.875rem\",\n                                                fontWeight: \"500\",\n                                            }}\n                                        >\n                                            <Typography\n                                                className=\"price-text\"\n                                                sx={{ color: \"#E72B4A\" }}\n                                            >\n                                                {`${currencysign}${data?.amount || \"NA\"}`}\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                ))\n                            )}\n                        </TableBody>\n                    </Table>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={filteredData().length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </TableContainer>\n            </Box>\n        </>\n    );\n};\n\nexport default ClinicSalesActivities;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n    Box,\n    Paper,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Typography,\n    CircularProgress,\n    TextField,\n    Avatar,\n    TablePagination,\n    Skeleton,   \n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers-pro\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { DateRangePicker } from \"@mui/x-date-pickers-pro/DateRangePicker\";\nimport axiosInstance from \"../../../config/axiosInstance\";\n\nconst SuperAdminHistoryDoctor = () => {\n    const [cardData, setCardData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [value, setValue] = useState([null, null]);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    const fetchData = async () => {\n        setLoading(true);\n        try {\n            const resp = await axiosInstance('/sec/superadmin/DashboardDoctors');\n            console.log(\"Dashboard Doctor list API: \", resp?.data?.response);\n            setCardData(resp?.data?.response || []);\n        } catch (err) {\n            console.log(\"Error: \", err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"history\");\n        localStorage.setItem(\"path\", \"doctor\");\n    }, []);\n\n    function getWeeksAfter(date, amount) {\n        return date ? date.add(amount, \"week\") : undefined;\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n\n    const paginatedData = cardData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n    return (\n        <>\n        {loading ? (\n                <Box sx={{ width: \"100%\", padding: \"20px\" }}>\n                    <Skeleton variant=\"rectangular\" width=\"100%\" height={40} />\n                    <Stack direction=\"row\" gap={2} sx={{ mt: 2, mb: 2 }}>\n                        <Skeleton variant=\"rectangular\" width=\"20%\" height={30} />\n                        <Skeleton variant=\"rectangular\" width=\"20%\" height={30} />\n                        <Skeleton variant=\"rectangular\" width=\"20%\" height={30} />\n                    </Stack>\n                    <Skeleton variant=\"rectangular\" width=\"100%\" height={500} />\n                </Box>\n            ) : (\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"98%\",\n                    height: \"100%\",\n                    flexDirection: \"row\",\n                }}\n            >\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/superadmin/history/doctor\"}>Doctor</NavLink>\n                    <NavLink to={\"/superadmin/history/patient\"}>Patient</NavLink>\n                    <NavLink to={\"/superadmin/history/hcf\"}>HCF</NavLink>\n                </nav>\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"block\",\n                        height: \"100%\",\n                    }}\n                >\n                    {/* <div className=\"search-date\">\n                        <Box\n                            display={\"flex\"}\n                            margin={\"10px\"}\n                            flexWrap={\"wrap\"}\n                            border={1}\n                            borderColor=\"#AEAAAE\"\n                            borderRadius={\"25px\"}\n                            width={\"56em\"}\n                            height=\"38px\"\n                            backgroundColor=\"#E6E1E5\"\n                        >\n                            <Stack direction=\"row\" alignItems=\"center\" gap={1} padding={\"10px\"}>\n                                <SearchIcon sx={{ margin: \"0 0 0 0%\", color: \"#AEAAAE\" }} />\n                                <Typography\n                                    variant=\"body1\"\n                                    sx={{ textAlign: \"left\", color: \"#AEAAAE\" }}\n                                >\n                                    Search Patient Name / ID\n                                </Typography>\n                            </Stack>\n                        </Box>\n                        <div style={{ display: \"flex\", marginLeft: \"100px\" }}>\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                <DateRangePicker\n                                    disablePast\n                                    value={value}\n                                    maxDate={getWeeksAfter(value[0], 4)}\n                                    onChange={(newValue) => {\n                                        setValue(newValue);\n                                    }}\n                                    renderInput={(startProps, endProps) => (\n                                        <React.Fragment>\n                                            <TextField {...startProps} />\n                                            <Box sx={{ mx: 2 }}> to </Box>\n                                            <TextField {...endProps} />\n                                        </React.Fragment>\n                                    )}\n                                />\n                            </LocalizationProvider>\n                        </div>\n                    </div> */}\n                    <div className=\"\">\n                        <TableContainer component={Paper} style={{ background: \"white\" }}>\n                            <Table sx={{ minWidth: 1 }} aria-label=\"simple table\">\n                                <TableHead>\n                                    <TableRow style={{ fontWeight: \"bold\" }}>\n                                        <TableCell align=\"Right\"><strong>Name & Details</strong></TableCell>\n                                        <TableCell align=\"center\"><strong>ID No</strong></TableCell>\n                                        <TableCell align=\"center\"><strong>Department</strong></TableCell>\n                                        <TableCell align=\"center\"><strong>Contact Details</strong></TableCell>\n                                        <TableCell align=\"center\"><strong>Time</strong></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    \n                                        {/* // <TableRow>\n                                        //     <TableCell colSpan={5} align=\"center\">\n                                        //         <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" padding=\"20px\">\n                                        //             <CircularProgress />\n                                        //         </Box>\n                                        //     </TableCell>\n                                        // </TableRow> */}\n                                    {paginatedData.length > 0 ? (\n                                        paginatedData.map((data) => (\n                                            <TableRow\n                                                key={data?.suid}\n                                                sx={{\n                                                    \"&:last-child td, &:last-child th\": { border: 0 },\n                                                }}\n                                            >\n                                                <TableCell component=\"th\" scope=\"row\" align=\"center\" sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                                                <Avatar \n                                                alt={data?.first_name} \n                                                src={data?.image_url || \"/default-avatar.png\"} \n                                                sx={{ width: \"52px\", height: \"55px\", borderRadius: \"4px\" }}\n                                                />\n                                                <Typography variant=\"body1\">\n                                                    {data?.first_name || \"null\"}\n                                                    </Typography> \n                                                </TableCell>\n                                                <TableCell align=\"center\">{data?.suid || \"null\"}</TableCell>\n                                                <TableCell align=\"center\">{data?.description || \"null\"}</TableCell>\n                                                <TableCell align=\"center\">{data?.contact_no_primary || \"null\"}</TableCell>\n                                                <TableCell align=\"center\">{data?.start_date ? new Date(data.start_date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) :\"null\"}</TableCell>\n                                            </TableRow>\n                                        ))\n                                    ) : (\n                                        <TableRow>\n                                            <TableCell colSpan={5} align=\"center\">\n                                                No data found\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            </Table>\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 15]}\n                                component=\"div\"\n                                count={cardData.length}\n                                rowsPerPage={rowsPerPage}\n                                page={page}\n                                onPageChange={handleChangePage}\n                                onRowsPerPageChange={handleChangeRowsPerPage}\n                            />\n                        </TableContainer>\n                    </div>\n                </Box>\n            </Box>\n            )}\n        </>\n    );\n};\n\nexport default SuperAdminHistoryDoctor;\n\n\n\n\n\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport './OTPInput.scss';\n\nconst CustomOTPInput = ({ \n    value, \n    onChange, \n    numInputs = 6, \n    placeholder = \"•\",\n    className = \"\",\n    size = \"medium\",\n    variant = \"default\",\n    disabled = false,\n    error = false,\n    success = false,\n    autoFocus = true,\n    ...props \n}) => {\n    const [focusedIndex, setFocusedIndex] = useState(0);\n    const inputRefs = useRef([]);\n\n    const getSizeStyles = () => {\n        switch (size) {\n            case 'small':\n                return {\n                    width: '36px',\n                    height: '36px',\n                    fontSize: '1.2rem',\n                    gap: '6px'\n                };\n            case 'large':\n                return {\n                    width: '56px',\n                    height: '56px',\n                    fontSize: '1.8rem',\n                    gap: '12px'\n                };\n            default:\n                return {\n                    width: '48px',\n                    height: '48px',\n                    fontSize: '1.5rem',\n                    gap: '8px'\n                };\n        }\n    };\n\n    const sizeStyles = getSizeStyles();\n\n    useEffect(() => {\n        if (autoFocus && inputRefs.current[0]) {\n            inputRefs.current[0].focus();\n        }\n    }, [autoFocus]);\n\n    const handleInputChange = (index, inputValue) => {\n        if (inputValue.length > 1) {\n            inputValue = inputValue.slice(-1);\n        }\n\n        // Ensure value is a string\n        const currentValue = value || '';\n        const newValue = currentValue.split('');\n        newValue[index] = inputValue;\n        const updatedValue = newValue.join('').slice(0, numInputs);\n        \n        if (onChange) {\n            onChange(updatedValue);\n        }\n\n        // Auto-focus next input\n        if (inputValue && index < numInputs - 1) {\n            inputRefs.current[index + 1]?.focus();\n        }\n    };\n\n    const handleKeyDown = (index, e) => {\n        if (e.key === 'Backspace' && !(value && value.length > index && value[index]) && index > 0) {\n            inputRefs.current[index - 1]?.focus();\n        }\n    };\n\n    const handlePaste = (e) => {\n        e.preventDefault();\n        const pastedData = e.clipboardData.getData('text').slice(0, numInputs);\n        if (onChange) {\n            onChange(pastedData);\n        }\n        \n        // Focus the last filled input or the last input\n        const lastFilledIndex = Math.min(pastedData.length - 1, numInputs - 1);\n        inputRefs.current[lastFilledIndex]?.focus();\n    };\n\n    const getInputClassName = (index) => {\n        let className = 'otp-input-field';\n        \n        if (focusedIndex === index) className += ' otp-input-field--focused';\n        if (value && value.length > index && value[index]) className += ' otp-input-field--filled';\n        if (error) className += ' otp-input-field--error';\n        if (success) className += ' otp-input-field--success';\n        if (disabled) className += ' otp-input-field--disabled';\n        \n        return className;\n    };\n\n    return (\n        <Box className={`custom-otp-input custom-otp-input--${variant} custom-otp-input--${size} ${className}`}>\n            <Box className=\"otp-input-container\">\n                {Array.from({ length: numInputs }).map((_, index) => (\n                    <input\n                        key={index}\n                        ref={(el) => (inputRefs.current[index] = el)}\n                        type=\"text\"\n                        inputMode=\"numeric\"\n                        pattern=\"[0-9]*\"\n                        maxLength=\"1\"\n                        value={(value && value.length > index && value[index]) || ''}\n                        onChange={(e) => handleInputChange(index, e.target.value)}\n                        onKeyDown={(e) => handleKeyDown(index, e)}\n                        onPaste={handlePaste}\n                        onFocus={() => setFocusedIndex(index)}\n                        onBlur={() => setFocusedIndex(-1)}\n                        placeholder={placeholder}\n                        disabled={disabled}\n                        className={getInputClassName(index)}\n                        style={{\n                            width: sizeStyles.width,\n                            height: sizeStyles.height,\n                            fontSize: sizeStyles.fontSize,\n                            marginRight: index < numInputs - 1 ? sizeStyles.gap : 0\n                        }}\n                        {...props}\n                    />\n                ))}\n            </Box>\n            \n            {(error || success) && (\n                <Typography \n                    variant=\"caption\" \n                    className={`otp-input-message ${error ? 'otp-input-message--error' : 'otp-input-message--success'}`}\n                >\n                    {error ? 'Invalid OTP. Please try again.' : 'OTP verified successfully!'}\n                </Typography>\n            )}\n        </Box>\n    );\n};\n\nexport default CustomOTPInput;\n","import React from \"react\";\n\nconst DiagnostCenterTableCard = ({ name, id, profile }) => {\n    return (\n        <div style={{ display: \"flex\", alignItems: \"center\", padding: \"0.5em\", borderRadius: \"8px\",  width: \"100%\", margin: \"0.5em 0\" }}>\n            <div style={{ width: \"4em\", height: \"4em\", marginRight: \"1em\", borderRadius: \"8px\", overflow: \"hidden\" }}>\n                <img\n                    src={profile || \"https://images.unsplash.com/photo-1529946179074-87642f6204d7?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\"}\n                    alt=\"Center\"\n                    style={{ width: \"100%\", height: \"100%\", objectFit: \"cover\" }}\n                />\n            </div>\n            <div>\n                <div style={{ fontSize: \"1em\", fontWeight: \"500\" }}>{name || \"N/A\"}</div>\n                <div style={{ fontSize: \"0.9em\", color: \"#555\" }}>BookingId:{id || \"NA\"}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default DiagnostCenterTableCard;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DemoContainer } from \"@mui/x-date-pickers/internals/demo\";\nimport { TimePicker } from \"@mui/x-date-pickers\";\nimport { TextField } from \"@mui/material\";\nimport CustomDropdown from \"../../../../../components/CustomDropdown/custom-dropdown\";\nimport img from \"../../../../../static/images/DrImages/image 27.png\";\nimport CustomButton from \"../../../../../components/CustomButton\";\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { get_client_token, get_nonce } from \"../../../../../const_payment/Const_Payment\";\nimport CustomSnackBar from \"../../../../../components/CustomSnackBar\";\nimport NoAppointmentCard from \"../../../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../../../config/axiosInstance\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\"; // Using DateFns adapter for simplicity\nimport { formatDate } from \"../../../../../PatientDashboard/DrDetailsCard/bookappointmentapihelperfunction\";\nimport isSameDay from \"date-fns/isSameDay\";\nimport isWithinInterval from \"date-fns/isWithinInterval\";\nimport isAfter from \"date-fns/isAfter\";\nimport startOfToday from \"date-fns/startOfToday\";\nimport { styled } from \"@mui/material/styles\";\nimport { DateCalendar } from \"@mui/x-date-pickers/DateCalendar\";\nimport { PickersDay } from \"@mui/x-date-pickers/PickersDay\";\nimport dayjs from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport axios from \"axios\";\nimport { \n    generateClientToken, \n    isDevelopmentMode\n} from \"../../../../../services/paymentService\";\nconst today = startOfToday();\n\nconst StyledPickersDay = styled(PickersDay, {\n    shouldForwardProp: (prop) => prop !== \"isAvailable\",\n})(({ theme, isAvailable }) => ({\n    ...(isAvailable && {\n        backgroundColor: \"#E72B4A\",\n        color: \"white\",\n        \"&:hover\": {\n            backgroundColor: \"darkgreen\",\n        },\n    }),\n}));\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\n\nconst steps = [\"Date\", \"Payment Method\"];\n\nexport default function HCFStepper({ data }) {\n    const [activeStep, setActiveStep] = useState(0);\n    const [skipped, setSkipped] = useState(new Set());\n    const [showSnack, setShowSnack] = useState(false);\n    const [showSnackError, setShowSnackError] = useState(false);\n    const radioValues = [\"My self\"];\n    const [radioVal, setRadioVal] = useState(radioValues[0]);\n    const [availableDatesSnackError, setAvailableDatesSnackError] = useState(false);\n    const [availableDatesSnackMessage, setAvailableDatesSnackMessage] = useState(\"\");\n    const [values, setValues] = useState({\n        clientToken: null,\n        success: \"\",\n        error: \"\",\n        instance: \"\",\n    });\n    const dropinInstanceRef = useRef(null);\n    const [braintreeKey, setBraintreeKey] = useState(0);\n    const [isRefreshing, setIsRefreshing] = useState(false);\n    const [customAvailableDates, setCustomAvailableDates] = useState([]);\n    const [appointmentData, setAppointmentData] = React.useState({\n        book_date: null,\n        patient_id: localStorage.getItem(\"patient_suid\"),\n        test_subexam_id: data?.sub_exam_id ? String(data.sub_exam_id) : \"\",\n        status: \"requested\",\n        payment_method_nonce: null,\n    });\n\n    const rangeStartDate = new Date(0, 0, 0);\n    const rangeEndDate = new Date(0, 0, 0);\n\n\n    const FetchDoctorAvailableDates = async () => {\n        setAvailableDatesSnackError(false);\n        try {\n            const resp = await axiosInstance(`/sec/patient/availableLabTestDates/${data?.hcf_id}/${data?.exam_id}`);\n            console.log(\"Lab Card Date : \",resp?.data)\n            let date = resp?.data?.availableDates;\n            let availableDates = date.map((dateString) => {\n                const [year, month, day] = dateString.split(\"-\").map(Number);\n                return new Date(year, month - 1, day); // month -1 to get the correct month\n            });\n            setCustomAvailableDates(availableDates);\n        } catch (err) {\n            setAvailableDatesSnackError(true);\n            setCustomAvailableDates([]);\n            setAvailableDatesSnackMessage(err?.response?.data?.error);\n        }\n    };\n\n    //   const [activeFabDropdown, setActiveFabDropdown] = React.useState(dropdownItems[0]);\n    //   const [activeDropdown, setActiveDropdown] = useState(\"\");\n    // const [ageDropDown, setAgeDropDown] = React.useState();\n    const [DateValue, setDataValue] = React.useState(null);\n\n    const isStepOptional = (step) => {\n        return step === 1;\n    };\n\n    const isStepSkipped = (step) => {\n        return skipped.has(step);\n    };\n\n    const handleNext = () => {\n        let newSkipped = skipped;\n        if (isStepSkipped(activeStep)) {\n            newSkipped = new Set(newSkipped.values());\n            newSkipped.delete(activeStep);\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped(newSkipped);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleSkip = () => {\n        if (!isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        setSkipped((prevSkipped) => {\n            const newSkipped = new Set(prevSkipped.values());\n            newSkipped.add(activeStep);\n            return newSkipped;\n        });\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const bookappointment = async (nonce_value) => {\n        setShowSnack(false);\n        setShowSnackError(false);\n        try {\n            const response = await axiosInstance.post(\n                `/sec/patient/createTest`,\n                JSON.stringify({ ...appointmentData, payment_method_nonce: nonce_value }),\n            );\n            setShowSnack(true);\n            setShowSnackError(false);\n        } catch (error) {\n            console.log(error);\n            setShowSnack(false);\n            setShowSnackError(true);\n        }\n    };\n\n    // Force refresh of Braintree Drop-In instance\n    const refreshBraintreeInstance = async () => {\n        try {\n            setIsRefreshing(true);\n            console.log(\"Refreshing Braintree Drop-In instance...\");\n            \n            // Get fresh client token\n            const freshTokenResponse = await get_client_token(\"/sec/payment/generateToken\");\n            console.log(\"Generated fresh client token response:\", freshTokenResponse);\n            \n            // Handle different response structures\n            let freshToken;\n            if (typeof freshTokenResponse === 'string') {\n                freshToken = freshTokenResponse;\n            } else if (freshTokenResponse?.clientToken) {\n                freshToken = freshTokenResponse.clientToken;\n            } else if (freshTokenResponse?.data?.clientToken) {\n                freshToken = freshTokenResponse.data.clientToken;\n            } else {\n                throw new Error(\"Invalid token response structure\");\n            }\n            \n            if (!freshToken) {\n                throw new Error(\"Failed to get valid client token\");\n            }\n            \n            // Update values with fresh token; clear stale instance reference\n            setValues(prev => ({ ...prev, clientToken: freshToken, instance: null }));\n            dropinInstanceRef.current = null;\n            \n            // Force re-render of Braintree component by incrementing key\n            setBraintreeKey(prev => prev + 1);\n            \n            console.log(\"Braintree instance refreshed successfully with token:\", freshToken);\n        } catch (error) {\n            console.error(\"Error refreshing Braintree instance:\", error);\n        } finally {\n            setIsRefreshing(false);\n        }\n    };\n\n    // api function to fetch purchase plan\n    const Purchase_plan = async () => {\n        try {\n            // Check if Braintree instance is available and not torn down\n            if (!dropinInstanceRef.current && !values?.instance) {\n                console.log(\"No Braintree instance available, refreshing...\");\n                await refreshBraintreeInstance();\n                // Wait a bit for the instance to initialize\n                await new Promise(resolve => setTimeout(resolve, 1000));\n                \n                // Check again after refresh\n                if (!dropinInstanceRef.current && !values?.instance) {\n                    throw new Error(\"Braintree payment form not ready. Please wait and try again.\");\n                }\n            }\n            \n            // Use the most current instance (prefer dropinInstanceRef, fallback to values.instance)\n            const currentInstance = dropinInstanceRef.current || values?.instance;\n            \n            // Check if instance is still valid (not torn down)\n            try {\n                // Test if instance is still valid by checking if it has the requestPaymentMethod function\n                if (!currentInstance || typeof currentInstance.requestPaymentMethod !== 'function') {\n                    console.log(\"Braintree instance is invalid, refreshing...\");\n                    await refreshBraintreeInstance();\n                    // Wait a bit for the instance to initialize\n                    await new Promise(resolve => setTimeout(resolve, 1000));\n                    \n                    // Get the refreshed instance\n                    const refreshedInstance = dropinInstanceRef.current || values?.instance;\n                    if (!refreshedInstance || typeof refreshedInstance.requestPaymentMethod !== 'function') {\n                        throw new Error(\"Braintree payment form is no longer valid. Please refresh the payment form.\");\n                    }\n                }\n            } catch (error) {\n                console.error(\"Braintree instance validation failed:\", error);\n                if (error.message.includes(\"refresh\")) {\n                    throw error; // Re-throw refresh errors\n                }\n                throw new Error(\"Braintree payment form is no longer valid. Please refresh the payment form.\");\n            }\n            \n            // Generate fresh nonce for each payment attempt with retry logic\n            console.log(\"Requesting payment method from Braintree...\");\n            let nonce_value;\n            let retryCount = 0;\n            const maxRetries = 2;\n            \n            while (retryCount < maxRetries) {\n                try {\n                    const instanceToUse = dropinInstanceRef.current || values?.instance;\n                    nonce_value = await get_nonce({ instance: instanceToUse });\n                    console.log(\"Get nonce : \", nonce_value);\n                    \n                    if (nonce_value && typeof nonce_value === 'string') {\n                        break; // Success, exit retry loop\n                    }\n                } catch (error) {\n                    console.error(`Nonce generation attempt ${retryCount + 1} failed:`, error);\n                    \n                    if (error.message && error.message.includes('teardown')) {\n                        console.log(\"Teardown error detected, refreshing Braintree instance...\");\n                        await refreshBraintreeInstance();\n                        await new Promise(resolve => setTimeout(resolve, 1000)); // Wait for new instance\n                        retryCount++;\n                        continue;\n                    } else {\n                        throw error; // Re-throw non-teardown errors\n                    }\n                }\n                \n                retryCount++;\n            }\n            \n            if (!nonce_value || typeof nonce_value !== 'string') {\n                throw new Error(\"Failed to generate payment nonce after retries. Please refresh the payment form and try again.\");\n            }\n\n            setAppointmentData({ ...appointmentData, payment_method_nonce: nonce_value });\n\n            if (nonce_value) {\n                await bookappointment(nonce_value);\n            } else {\n                throw new Error(\"Failed to receive valid nonce from payment form.\");\n            }\n        } catch (error) {\n            console.error(\"Error in payment processing:\", error);\n            setShowSnackError(true);\n            \n            // Handle specific teardown error\n            if (error.message && error.message.includes('teardown')) {\n                // Automatically refresh the Braintree instance for this specific error\n                console.log(\"Automatically refreshing Braintree instance due to teardown error...\");\n                try {\n                    await refreshBraintreeInstance();\n                    setShowSnackError(false);\n                    setShowSnack(true);\n                } catch (refreshError) {\n                    console.error(\"Failed to auto-refresh Braintree instance:\", refreshError);\n                    setShowSnackError(true);\n                }\n            } else if (error.message && error.message.includes('no longer valid')) {\n                // Automatically refresh the Braintree instance for this specific error\n                console.log(\"Automatically refreshing Braintree instance due to invalid instance error...\");\n                try {\n                    await refreshBraintreeInstance();\n                    setShowSnackError(false);\n                    setShowSnack(true);\n                } catch (refreshError) {\n                    console.error(\"Failed to auto-refresh Braintree instance:\", refreshError);\n                    setShowSnackError(true);\n                }\n            } else {\n                setShowSnackError(true);\n            }\n        }\n    };\n\n    const selectDate = (date) => {\n        const formatDateResp = formatDate(date);\n        setAppointmentData({ ...appointmentData, book_date: formatDateResp });\n    };\n\n    const isInRange = (date) =>\n        isWithinInterval(date, { start: rangeStartDate, end: rangeEndDate });\n\n    const isAvailable = (date) =>\n        isInRange(date) ||\n        customAvailableDates.some((availableDate) => isSameDay(availableDate, date));\n\n\n\n    const shouldDisableDate = (date) => {\n        // Disable all past dates\n        if (date < today) {\n            return true;\n        }\n\n        // Enable today's date if it's in range or custom available dates\n        if (isSameDay(date, today)) {\n            return !(\n                isInRange(date) ||\n                customAvailableDates.some((availableDate) => isSameDay(availableDate, date))\n            );\n        }\n\n        // Disable future dates that are not in range or custom available dates\n        return !(\n            isInRange(date) ||\n            customAvailableDates.some((availableDate) => isSameDay(availableDate, date))\n        );\n    };\n\n\n    useEffect(() => {\n        get_client_token(\"/sec/payment/generateToken\").then((tokenResponse) => {\n            console.log(\"Getting client token response\", tokenResponse);\n            \n            // Handle different response structures\n            let clientToken;\n            if (typeof tokenResponse === 'string') {\n                clientToken = tokenResponse;\n            } else if (tokenResponse?.clientToken) {\n                clientToken = tokenResponse.clientToken;\n            } else if (tokenResponse?.data?.clientToken) {\n                clientToken = tokenResponse.data.clientToken;\n            }\n            \n            if (clientToken) {\n                setValues({ ...values, clientToken: clientToken });\n                console.log(\"Client token set successfully:\", clientToken);\n            } else {\n                console.error(\"Failed to get valid client token\");\n            }\n        });\n        FetchDoctorAvailableDates();\n    }, []);\n\n    return (\n        <Box sx={{ width: \"100%\" }}>\n            <CustomSnackBar\n                isOpen={availableDatesSnackError}\n                message={availableDatesSnackMessage}\n                type=\"error\"\n            />\n            <CustomSnackBar\n                isOpen={showSnack}\n                message={\"Appointment Booked Successfully\"}\n                type=\"success\"\n            />\n            <CustomSnackBar\n                isOpen={showSnackError}\n                message={\"Can not book appointment try some other time \"}\n                type=\"error\"\n            />\n            <Stepper activeStep={activeStep}>\n                {steps.map((label, index) => {\n                    const stepProps = {};\n                    const labelProps = {};\n                    if (isStepOptional(index)) {\n                        labelProps.optional = <Typography variant=\"caption\"></Typography>;\n                    }\n                    if (isStepSkipped(index)) {\n                        stepProps.completed = false;\n                    }\n                    return (\n                        <Step key={label} {...stepProps}>\n                            <StepLabel {...labelProps}>{label}</StepLabel>\n                        </Step>\n                    );\n                })}\n            </Stepper>\n            {activeStep === steps.length ? (\n                <React.Fragment>\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        {/* Put component here */}\n                        All steps completed - you&apos;re finished\n                    </Typography>\n                    <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                        <Box sx={{ flex: \"1 1 auto\" }} />\n                        <Button onClick={handleReset}>Done</Button>\n                    </Box>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <Typography sx={{ mt: 2, mb: 1 }}>\n                        {/* Step {activeStep + 1} */}\n                        {activeStep === 0 ? (\n                            <>\n                                {customAvailableDates.length === 0 ? (\n                                    <NoAppointmentCard text_one={availableDatesSnackMessage} />\n                                ) : (\n                                    <Box>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <DateCalendar\n                                                // value={selectedDate}\n                                                onChange={selectDate}\n                                                shouldDisableDate={shouldDisableDate}\n                                                slots={{\n                                                    day: (props) => (\n                                                        <StyledPickersDay\n                                                            {...props}\n                                                            isAvailable={isAvailable(props.day)}\n                                                        />\n                                                    ),\n                                                }}\n                                            />\n                                        </LocalizationProvider>\n                                    </Box>\n                                )}\n                                {/* <Box>\n                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                        <DateCalendar\n                                            onChange={(newValue) => setDataValue(newValue)}\n                                        />\n                                    </LocalizationProvider>\n                                </Box>\n                                <Box>Select Time</Box>\n                                <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n                                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                                        <DemoContainer components={[\"TimePicker\"]}>\n                                            <TimePicker label=\"Select Time\" />\n                                        </DemoContainer>\n                                    </LocalizationProvider>\n                                </Box> */}\n                            </>\n                        ) : activeStep === 1 ? (\n                            <>\n                                <Box>\n                                    {/* Payment container starts */}\n                                    <div className=\"payment\">\n                                        {values?.clientToken && !isRefreshing && (\n                                            <div>\n                                                <DropIn\n                                                    key={braintreeKey}\n                                                    options={{\n                                                        authorization: values?.clientToken,\n                                                    }}\n                                                    onInstance={(instance) => {\n                                                        console.log(\n                                                            \"Braintree Drop-In instance:\",\n                                                            instance,\n                                                        );\n                                                        setValues({\n                                                            ...values,\n                                                            instance: instance,\n                                                        });\n                                                        dropinInstanceRef.current = instance;\n                                                    }}\n                                                />\n                                                <center>\n                                                    <CustomButton\n                                                        label=\"Payment\"\n                                                        handleClick={() => Purchase_plan()}\n                                                    />\n                                                </center>\n                                            </div>\n                                        )}\n                                        {(!values?.clientToken || isRefreshing) && (\n                                            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', padding: 2 }}>\n                                                <Typography>Loading payment form...</Typography>\n                                            </Box>\n                                        )}\n                                    </div>\n                                    {/* Payment container ends */}\n                                </Box>\n                            </>\n                        ) : (\n                            <h1>Completed</h1>\n                        )}\n                    </Typography>\n                    <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n                        <Button\n                            color=\"inherit\"\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            sx={{ mr: 1 }}\n                        >\n                            Back\n                        </Button>\n                        <Box sx={{ flex: \"1 1 auto\" }} />\n                        {isStepOptional(activeStep) && (\n                            <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                                Skip\n                            </Button>\n                        )}\n\n                        <Button onClick={handleNext}>\n                            {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                        </Button>\n                    </Box>\n                </React.Fragment>\n            )}\n        </Box>\n    );\n}\n\n// <CustomModal\n// isOpen={openPatientDetails}\n// title={\"Patient Details\"}\n// footer={\n//     <Fragment>\n//         <Box sx={{ width : \"100%\" , display : \"flex\" ,justifyContent : \"center\" , alignItems : \"center\" }}>\n//             <CustomButton\n//                 label=\"Continue\"\n//                 handleClick={() => setPatientDetails(false)}\n//             />\n//         </Box>\n\n//         <CustomButton\n//             label={\"action 2\"}\n//             isTransaprent\n//             handleClick={() => setOpenDialog(false)}\n//             isText\n//         />\n//     </Fragment>\n// }\n// >\n// {\n//     /* <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n//     <CustomRadioButton\n//         label={\"Patient Details\"}\n//         handleChange={({ target }) => setRadioVal(target.value)}\n//         value={radioVal}\n//         items={[\"My Self\"]}\n//     />\n//     <CustomTextField placeholder={\"Full Name\"} label=\"\" helperText={\"\"} />\n//     <CustomDropdown\n//         label={\"Gender\"}\n//         items={[\"Male\", \"Female\", \"Transgender\"]}\n//         // activeItem={activeDropdown}\n//         // handleChange={(item) => setActiveDropdown(item)}\n//         menuItemValue=\"\"\n//     />\n//     <CustomDropdown\n//         label={\"Age\"}\n//         items={[...Array(101).keys()]}\n//         // activeItem={ageDropDown}\n//         // handleChange={(item) => setAgeDropDown(item)}\n//         menuItemValue=\"\"\n//     />\n//     <CustomTextField placeholder={\"Attach Reports\"} isDisabled={true} label=\"\" helperText={\"\"} />\n//     <p>Write your problem here</p>\n//     <TextField placeholder=\"Write your problem here\" multiline rows={3} maxRows={4} />\n// </Box>; */\n// }\n// </CustomModal>\n","// Basic API and application constants only\nexport const baseURL = \"http://localhost:3000\";\nexport const front_end_url = \"http://localhost:8000\";\nexport const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\nexport const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@.#$!%*?&])[A-Za-z\\d@.#$!%*?&]{8,55}$/;\nexport const numberRegex = /^\\d+$/;\n","import axiosInstance from \"../config/axiosInstance\";\nimport axios from \"axios\";\n// Import baseURL directly to avoid circular deps through constants/const\nimport { baseURL } from \"../constants/apiConstants\";\n\n// Create a separate axios instance for Braintree token generation (no auth headers)\nconst braintreeAxios = axios.create({\n    baseURL: baseURL,\n    timeout: 10000,\n});\n\nexport const get_client_token = async (payment_path) => {\n    try {\n        console.log(\"Fetching Braintree client token from:\", `${baseURL}${payment_path}`);\n        const resp = await braintreeAxios(payment_path); // Use axios without auth headers\n        console.log(\"Braintree client token response:\", resp?.data);\n        return resp?.data?.clientToken || resp?.data;\n    } catch (err) {\n        console.error(\"Braintree token generation error:\", err);\n        console.error(\"Error response:\", err.response?.data);\n        console.error(\"Error status:\", err.response?.status);\n        return err;\n    }\n};\n\nexport const get_nonce = async (values) => {\n    try {\n        // Check if instance is still valid before requesting nonce\n        if (!values?.instance || typeof values.instance.requestPaymentMethod !== 'function') {\n            throw new Error(\"Braintree instance is no longer valid. Please refresh the payment form.\");\n        }\n        \n        // Additional validation: check if instance is not torn down\n        try {\n            // Test if we can access the instance without errors\n            const testAccess = values.instance.requestPaymentMethod;\n            if (typeof testAccess !== 'function') {\n                throw new Error(\"Braintree instance is no longer valid. Please refresh the payment form.\");\n            }\n        } catch (accessError) {\n            console.error(\"Instance access test failed:\", accessError);\n            throw new Error(\"Braintree instance is no longer valid. Please refresh the payment form.\");\n        }\n        \n        // Defensive: ensure any teardown in progress has settled\n        await Promise.resolve();\n\n        let request_payment_response = await values?.instance?.requestPaymentMethod();\n        console.log(\"get nonce : \" , request_payment_response)\n        \n        if (!request_payment_response?.nonce) {\n            throw new Error(\"Failed to generate payment nonce. Please try again.\");\n        }\n        \n        return request_payment_response.nonce;\n    } catch (err) {\n        console.log(\"Nonce error : \", err);\n        \n        // Handle specific teardown error\n        if (err?.message && (err.message.includes('teardown') || err.message.includes('no longer valid'))) {\n            throw new Error(\"Payment form has been reset. Please refresh and try again.\");\n        }\n        \n        // Handle Braintree-specific errors\n        if (err?.message && err.message.includes('Braintree')) {\n            throw new Error(\"Braintree payment form is no longer valid. Please refresh the payment form.\");\n        }\n        \n        // Handle other errors\n        throw new Error(err?.message || \"Failed to generate payment nonce. Please try again.\");\n    }\n};\n","/**\n * Utility functions for handling profile pictures in different environments\n */\n\n/**\n * Gets the appropriate image source for profile pictures\n * Handles development mode, production mode, and fallbacks\n * @param {string} profilePicture - The profile picture from the API\n * @param {string} fallbackImage - Default image to use as fallback\n * @returns {string} - The image source to use\n */\nexport const getProfileImageSrc = (profilePicture, fallbackImage) => {\n    if (!profilePicture) {\n        return fallbackImage;\n    }\n    \n    // Check if it's a development mode file path\n    if (profilePicture.startsWith('dev-uploads/')) {\n        console.log('Development mode profile picture detected:', profilePicture);\n        console.log('Note: Development mode profile pictures need proper file serving implementation');\n        // For now, return fallback until we implement proper dev file serving\n        return fallbackImage;\n    }\n    \n    // Check if it's a base64 data URL\n    if (profilePicture.startsWith('data:image/')) {\n        return profilePicture;\n    }\n    \n    // Check if it's an S3 URL or other HTTP URL\n    if (profilePicture.startsWith('http')) {\n        return profilePicture;\n    }\n    \n    // If it's a base64 string without data URL prefix, add it\n    if (profilePicture.length > 100 && !profilePicture.includes('http')) {\n        return `data:image/jpeg;base64,${profilePicture}`;\n    }\n    \n    // Fallback to default image\n    return fallbackImage;\n};\n\n/**\n * Checks if the profile picture is a development mode file path\n * @param {string} profilePicture - The profile picture from the API\n * @returns {boolean} - True if it's a dev file path\n */\nexport const isDevelopmentFile = (profilePicture) => {\n    return profilePicture && profilePicture.startsWith('dev-uploads/');\n};\n\n/**\n * Checks if the profile picture is a base64 data URL\n * @param {string} profilePicture - The profile picture from the API\n * @returns {boolean} - True if it's a base64 data URL\n */\nexport const isBase64DataUrl = (profilePicture) => {\n    return profilePicture && profilePicture.startsWith('data:image/');\n};\n\n/**\n * Checks if the profile picture is an HTTP URL\n * @param {string} profilePicture - The profile picture from the API\n * @returns {boolean} - True if it's an HTTP URL\n */\nexport const isHttpUrl = (profilePicture) => {\n    return profilePicture && profilePicture.startsWith('http');\n};\n\n/**\n * Converts any image format to base64 data URL for display\n * @param {string} profilePicture - The profile picture from the API\n * @returns {Promise<string>} - Promise that resolves to base64 data URL\n */\nexport const convertToBase64DataUrl = async (profilePicture) => {\n    if (!profilePicture) {\n        return null;\n    }\n    \n    // If it's already a data URL, return as is\n    if (profilePicture.startsWith('data:image/')) {\n        console.log('✅ Already a base64 data URL');\n        return profilePicture;\n    }\n    \n    // If it's an HTTP URL, convert to base64\n    if (profilePicture.startsWith('http')) {\n        try {\n            console.log('🔄 Converting HTTP URL to base64...');\n            const response = await fetch(profilePicture);\n            const blob = await response.blob();\n            \n            return new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.onload = () => {\n                    console.log('✅ Successfully converted HTTP URL to base64');\n                    resolve(reader.result);\n                };\n                reader.onerror = () => {\n                    console.error('❌ Error converting HTTP URL to base64');\n                    reject(new Error('Failed to convert image to base64'));\n                };\n                reader.readAsDataURL(blob);\n            });\n        } catch (error) {\n            console.error('❌ Error fetching image from URL:', error);\n            throw error;\n        }\n    }\n    \n    // If it's a base64 string without prefix, add the prefix\n    if (profilePicture.length > 100 && !profilePicture.includes('http') && !profilePicture.startsWith('dev-uploads/')) {\n        console.log('✅ Adding data URL prefix to base64 string');\n        return `data:image/jpeg;base64,${profilePicture}`;\n    }\n    \n    // Skip development uploads\n    if (profilePicture.startsWith('dev-uploads/')) {\n        console.log('⚠️ Skipping dev-uploads path');\n        return null;\n    }\n    \n    console.log('❌ Unknown image format');\n    return null;\n};\n\n/**\n * Processes profile image and ensures it's in base64 format for display\n * @param {string} profilePicture - The profile picture from the API\n * @param {string} fallbackImage - Default image to use as fallback\n * @returns {Promise<string>} - Promise that resolves to displayable image URL\n */\nexport const processProfileImage = async (profilePicture, fallbackImage = '/images/avatar.png') => {\n    try {\n        const base64Image = await convertToBase64DataUrl(profilePicture);\n        return base64Image || fallbackImage;\n    } catch (error) {\n        console.error('Error processing profile image:', error);\n        return fallbackImage;\n    }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers-pro/AdapterDayjs\";\nimport { Box, Typography } from \"@mui/material\";\nimport { CalendarToday } from \"@mui/icons-material\";\nimport dayjs from \"dayjs\";\nimport \"./CustomDatePicker.scss\";\n\nconst CustomDatePicker = ({\n    label = \"Date\",\n    value = null,\n    onChange = () => {},\n    required = false,\n    disabled = false,\n    error = false,\n    helperText = \"\",\n    placeholder = \"\",\n    textcss = {},\n    noSpacing = false,\n    size = \"medium\",\n    variant = \"outlined\",\n    fullWidth = true,\n    ...props\n}) => {\n    // Convert value to dayjs object if it's a Date or string\n    const dayjsValue = React.useMemo(() => {\n        if (!value) return null;\n        if (dayjs.isDayjs(value)) return value;\n        return dayjs(value);\n    }, [value]);\n\n    // Handle onChange to convert back to Date object for compatibility\n    const handleChange = (newValue) => {\n        if (onChange) {\n            // Convert dayjs object back to Date object for backward compatibility\n            onChange(newValue ? newValue.toDate() : null);\n        }\n    };\n\n    const getSizeStyles = () => {\n        switch (size) {\n            case \"small\":\n                return {\n                    fontSize: \"14px\",\n                    padding: \"8px 12px\",\n                    minHeight: \"40px\"\n                };\n            case \"large\":\n                return {\n                    fontSize: \"18px\",\n                    padding: \"16px 20px\",\n                    minHeight: \"56px\"\n                };\n            default:\n                return {\n                    fontSize: \"16px\",\n                    padding: \"12px 16px\",\n                    minHeight: \"48px\"\n                };\n        }\n    };\n\n    return (\n        <Box className={`custom-date-picker ${error ? 'error' : ''} ${disabled ? 'disabled' : ''}`}>\n            {label && (\n                <Typography \n                    variant=\"body2\" \n                    className=\"date-picker-label\"\n                    sx={{\n                        fontFamily: \"Poppins, sans-serif\",\n                        fontWeight: 600,\n                        fontSize: size === \"small\" ? \"12px\" : size === \"large\" ? \"16px\" : \"14px\",\n                        color: error ? \"#d32f2f\" : \"#495057\",\n                        marginBottom: \"8px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: \"6px\"\n                    }}\n                >\n                    <CalendarToday sx={{ fontSize: size === \"small\" ? \"16px\" : size === \"large\" ? \"20px\" : \"18px\" }} />\n                    {label}\n                    {required && <span style={{ color: \"#d32f2f\" }}>*</span>}\n                </Typography>\n            )}\n            \n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                    value={dayjsValue}\n                    onChange={handleChange}\n                    disabled={disabled}\n                    slotProps={{\n                        textField: {\n                            variant: variant,\n                            fullWidth: fullWidth,\n                            required: required,\n                            error: error,\n                            helperText: helperText,\n                            placeholder: placeholder,\n                            size: size,\n                            sx: {\n                                fontFamily: \"Poppins, sans-serif\",\n                                ...getSizeStyles(),\n                                marginBottom: noSpacing ? 0 : \"1.5rem\",\n                                \n                                // Modern input styling\n                                \"& .MuiOutlinedInput-root\": {\n                                    borderRadius: \"12px\",\n                                    backgroundColor: disabled ? \"#f5f5f5\" : \"#ffffff\",\n                                    transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                                    border: `2px solid ${error ? \"#d32f2f\" : \"#e0e0e0\"}`,\n                                    \n                                    \"&:hover\": {\n                                        borderColor: error ? \"#d32f2f\" : \"#ff6b9d\",\n                                        boxShadow: `0 0 0 3px ${error ? \"rgba(211, 47, 47, 0.1)\" : \"rgba(255, 107, 157, 0.1)\"}`,\n                                    },\n                                    \n                                    \"&.Mui-focused\": {\n                                        borderColor: error ? \"#d32f2f\" : \"#ff6b9d\",\n                                        boxShadow: `0 0 0 3px ${error ? \"rgba(211, 47, 47, 0.2)\" : \"rgba(255, 107, 157, 0.2)\"}`,\n                                    },\n                                    \n                                    \"&.Mui-disabled\": {\n                                        backgroundColor: \"#f5f5f5\",\n                                        borderColor: \"#e0e0e0\",\n                                        cursor: \"not-allowed\",\n                                    },\n                                },\n                                \n                                \"& .MuiInputBase-input\": {\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontWeight: 500,\n                                    color: \"#2c3e50\",\n                                    \n                                    \"&::placeholder\": {\n                                        color: \"#adb5bd\",\n                                        opacity: 1,\n                                    },\n                                },\n                                \n                                \"& .MuiInputLabel-root\": {\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontWeight: 500,\n                                    color: error ? \"#d32f2f\" : \"#6c757d\",\n                                    \n                                    \"&.Mui-focused\": {\n                                        color: error ? \"#d32f2f\" : \"#ff6b9d\",\n                                    },\n                                },\n                                \n                                \"& .MuiFormHelperText-root\": {\n                                    fontFamily: \"Poppins, sans-serif\",\n                                    fontSize: \"12px\",\n                                    fontWeight: 500,\n                                    marginTop: \"6px\",\n                                    color: error ? \"#d32f2f\" : \"#6c757d\",\n                                },\n                                \n                                \"& .MuiInputAdornment-root\": {\n                                    color: error ? \"#d32f2f\" : \"#ff6b9d\",\n                                    \n                                    \"&:hover\": {\n                                        color: error ? \"#d32f2f\" : \"#ff8fab\",\n                                    },\n                                },\n                                \n                                \"& .MuiSvgIcon-root\": {\n                                    color: error ? \"#d32f2f\" : \"#ff6b9d\",\n                                    transition: \"color 0.3s ease\",\n                                    \n                                    \"&:hover\": {\n                                        color: error ? \"#d32f2f\" : \"#ff8fab\",\n                                    },\n                                },\n                                \n                                ...textcss,\n                            },\n                        },\n                    }}\n                    {...props}\n                />\n            </LocalizationProvider>\n        </Box>\n    );\n};\n\nCustomDatePicker.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.instanceOf(Date),\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.object, // dayjs object\n    ]),\n    onChange: PropTypes.func,\n    required: PropTypes.bool,\n    disabled: PropTypes.bool,\n    error: PropTypes.bool,\n    helperText: PropTypes.string,\n    placeholder: PropTypes.string,\n    textcss: PropTypes.object,\n    noSpacing: PropTypes.bool,\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n    variant: PropTypes.oneOf([\"standard\", \"outlined\", \"filled\"]),\n    fullWidth: PropTypes.bool,\n};\n\nCustomDatePicker.defaultProps = {\n    label: \"Date\",\n    value: null,\n    onChange: () => {},\n    required: false,\n    disabled: false,\n    error: false,\n    helperText: \"\",\n    placeholder: \"\",\n    textcss: {},\n    noSpacing: false,\n    size: \"medium\",\n    variant: \"outlined\",\n    fullWidth: true,\n};\n\nexport default CustomDatePicker;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport img from \"../../../static/images/DrImages/patient_alter.png\";\n\nexport const DoctorBookingCard = ({ name, patientId, Id }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img src={img} style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }} />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        Patient ID : {patientId} | Booking ID : {Id}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DoctorStatisticsNavbar = () => {\n    return (\n        <nav className=\"NavBar-Container-Appoinement\">\n            <NavLink to={\"/doctordashboard/doctorStatistics/doctorBookingHistory\"}>\n                Booking History\n            </NavLink>\n            <NavLink to={\"/doctordashboard/doctorStatistics/doctorTransaction\"}>\n                Transactions\n            </NavLink>\n            <NavLink to={\"/doctordashboard/doctorStatistics/doctorOverview\"}>Overview</NavLink>\n            <NavLink to={\"/doctordashboard/doctorStatistics/doctorPayout\"}>Payout</NavLink>\n        </nav>\n    );\n};\nexport default DoctorStatisticsNavbar;\n","import React from 'react';\nimport './noappointment.scss';\nimport no_calender_image from '../../../static/images/DrImages/no_Appointment_calander.png';\nimport CustomButton from '../../../components/CustomButton';\nimport { useNavigate } from 'react-router-dom';\n\nconst NoAppointmentCard = ({ButtonLabel , ButtonPath , text_one , text_two , style={} }) => {\n    const navigate = useNavigate();\n    return(\n        <>\n            <div>\n                <div><img style={style} src={no_calender_image}/></div>\n                {\n                    text_one ?  <div><p>{text_one}</p></div> : null\n                }\n                {   \n                    text_two ?  <div><p>{text_two}</p></div> : null\n                }\n\n                {\n                    ButtonLabel ? <div><CustomButton \n                    handleClick={() => {\n                        console.log(\"Appointment Navigate\");\n                        navigate(`${ButtonPath}`);\n                    }}\n                    buttonCss={{borderRadius : \"100px\"}}\n                    label={ButtonLabel}\n                 /></div> : null\n                }\n            </div>\n        </>\n    )\n}\n\nexport default NoAppointmentCard;","import React, { useEffect, useState } from \"react\";\nimport { Box, Typography, Skeleton } from \"@mui/material\";\nimport DoctorListingNavbar from \"../../CustomDoctorComponent/DoctorListingNavbar/DoctorListingBavbar\";\nimport \"./doctorSavedDraft.scss\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport CustomDrActiveListingCard from \"../../CustomDoctorComponent/Cards/CustomDrActiveListingCard/CustomDrActiveListingCard\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\nimport axiosInstance from \"../../../config/axiosInstance\";\n\nconst DoctorSavedDraft = () => {\n    const [activeListing, setActiveListing] = useState([]);\n    const [deleteDoctorListFlag, setDeleteDoctorListFlag] = useState(false);\n    const [deleteListing, setDeleteListing] = useState(false);\n    const [snackmessage, setSnackmessage] = useState(\"\");\n    const [loading, setLoading] = useState(true); // Add loading state\n\n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"listing\");\n        localStorage.setItem(\"path\", \"doctorsavedInDraft\");\n    }, []);\n\n    const fetchActiveListing = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.get(\n                `/sec/doctor/DocListingPlanDeactive/${localStorage.getItem(\"doctor_suid\")}`,\n            );\n            setActiveListing(response?.data?.DocListingPlanDeactive);\n            setDeleteDoctorListFlag(false);\n        } catch (err) {\n            console.log(\"Active listing error : \", err);\n            setDeleteDoctorListFlag(false);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const DeleteDoctorListing = async (listID) => {\n        setDeleteListing(false);\n        setDeleteDoctorListFlag(false);\n        const ok = window.confirm(\"Are you sure you want to delete this listing? This action cannot be undone.\");\n        if (!ok) return;\n        try {\n            const response = await axiosInstance.post(\"/sec/doctor/deleteDocListingPlan\", {\n                doctor_id: Number(localStorage.getItem(\"doctor_suid\")),\n                doctor_list_id: Number(listID),\n            });\n            if (response.status === 200 || response.status === 202) {\n                setDeleteDoctorListFlag(true);\n                setDeleteListing(true);\n                setSnackmessage(\"Doctor Listing Deleted Successfully\");\n\n            }\n            console.log(\"Delete: \", response);\n        } catch (err) {\n            console.log(\"Error\", err);\n            setDeleteDoctorListFlag(false);\n            setDeleteListing(false);\n        }\n    };\n\n    const ChangeActiveState = async (doctor_id, doctor_list_id) => {\n        setDeleteDoctorListFlag(false);\n        const ok = window.confirm(\"Activate this listing? It will be visible to patients.\");\n        if (!ok) return;\n        try {\n            const response = await axiosInstance.post(`/sec/doctor/docListingActiveDeactive`, {\n                doctor_id: Number(doctor_id),\n                doctor_list_id: Number(doctor_list_id),\n                is_active: 1, // activate\n            });\n            setSnackmessage(response?.data?.response?.message);\n            setDeleteDoctorListFlag(true);\n\n        } catch (err) {\n            console.log(\"DeActivate Error : \", err);\n            setDeleteDoctorListFlag(false);\n        }\n    };\n\n    useEffect(() => {\n        if (deleteDoctorListFlag) {\n            fetchActiveListing();\n        }\n    }, [deleteDoctorListFlag]);\n\n    useEffect(() => {\n        fetchActiveListing();\n    }, []);\n\n    return (\n        <>\n            <CustomSnackBar message={snackmessage} isOpen={deleteDoctorListFlag} type={\"success\"} />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    width: \"95%\",\n                    height: \"100%\",\n                    height: \"90%\",\n                    flexDirection: \"column\",\n                }}\n            >\n                <Box sx={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Box>\n                        <DoctorListingNavbar />\n                    </Box>\n                    \n                </Box>\n                <Box\n                    component=\"div\"\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            width: \"100%\",\n                            height: \"80%\",\n                        }}\n                    >\n                        {loading ? (\n                            // Skeleton loaders for loading state\n                            Array.from(new Array(3)).map((_, index) => (\n                                <Skeleton\n                                    key={index}\n                                    variant=\"rectangular\"\n                                    width=\"100%\"\n                                    height={80}\n                                    sx={{ mb: 2, borderRadius: \"8px\" }}\n                                />\n                            ))\n                        ) : activeListing.length === 0 ? (\n                            <NoAppointmentCard text_one={\"No Listing found\"} />\n                        ) : (\n                            activeListing.map((card) => (\n                                <CustomDrActiveListingCard\n                                    buttonOneLabel={\"Delete\"}\n                                    key={card?.doctor_list_id}\n                                    label={card?.listing_name}\n                                    Idtype={\"Listing ID\"}\n                                    Idnumber={card?.doctor_list_id}\n                                    statusLabel={\"Draft\"}\n                                    statusColor={\"default\"}\n                                    onhandleClickButtonOne={() =>\n                                        DeleteDoctorListing(card?.doctor_list_id)\n                                    }\n                                    buttonTwoLabel={\"Activate\"}\n                                    onhandleClickButtonTwo={() =>\n                                        ChangeActiveState(card?.doctor_id, card?.doctor_list_id)\n                                    }\n                                />\n                            ))\n                        )}\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorSavedDraft;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\n\n// Unified step header + nav used across Listing Details, Plans, Questions, Terms\nconst linkStyle = ({ isActive }) => ({\n  padding: '8px 14px',\n  borderRadius: '20px',\n  textDecoration: 'none',\n  fontFamily: 'poppins',\n  fontSize: 14,\n  border: '1px solid',\n  borderColor: isActive ? '#E72B4A' : '#E6E1E5',\n  color: isActive ? '#fff' : '#313033',\n  backgroundColor: isActive ? '#E72B4A' : 'transparent'\n});\n\nconst StepHeader = () => {\n  return (\n    <Box className=\"NavBar-Box-one\" sx={{ display: 'flex', gap: 1.5, mb: 2, flexWrap: 'wrap' }}>\n      <NavLink to={\"/doctordashboard/doctorListing/listingdetails\"} style={linkStyle}>\n        Listing Details\n      </NavLink>\n      <NavLink to={\"/doctordashboard/doctorListing/addplans\"} style={linkStyle}>Add Plans</NavLink>\n      <NavLink to={\"/doctordashboard/doctorListing/addquestioner\"} style={linkStyle}>\n        Add Questioner\n      </NavLink>\n      <NavLink to={\"/doctordashboard/doctorListing/termandcondition\"} style={linkStyle}>\n        Term & Conditions\n      </NavLink>\n    </Box>\n  );\n};\n\nexport default StepHeader;\n","import React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport SuperPatientImage from \"../../../static/images/DrImages/rectangleP.png\";\nimport CustomButton from \"../../CustomButton\";\nimport \"./PatientadminCard.scss\";\n\nconst PatientadminCard = () => {\n    return (\n        <>\n            <div className=\"superadmindoctor-card\">\n                <Box\n                    component={\"img\"}\n                    src={SuperPatientImage}\n                    sx={{\n                        width: \"128px\",\n                        height: \"128px\",\n                    }}\n                ></Box>\n                <div className=\"buttons-texts\">\n                    <div className=\"name-approve\">\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"20px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"500\",\n                                lineHeight: \"30px\",\n                            }}\n                        >\n                            Dr. James Karl\n                        </Typography>\n                        <CustomButton\n                            label=\"Approve\"\n                            isTransaprent={\"true\"}\n                            buttonCss={{\n                                width: \"149px\",\n                                height: \"48px\",\n                            }}\n                        ></CustomButton>\n                    </div>\n                    <div className=\"name-approve\">\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"12px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"18px\",\n                                letterSpacing: \"0.096px\",\n                            }}\n                        >\n                            Today | 10:00AM\n                        </Typography>\n                        <CustomButton\n                            label=\"Block\"\n                            buttonCss={{\n                                width: \"149px\",\n                                height: \"48px\",\n                            }}\n                        ></CustomButton>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default PatientadminCard;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, Typography, CircularProgress, Pagination, Skeleton } from \"@mui/material\";\nimport DateModal from \"../../../components/DateModal/DateModal\";\nimport FilterModal from \"../../../components/FilterModal/FilterModal\";\nimport PatientadminCard from \"../../../components/Card/PatientCard/PatientadminCard\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport { PaginationCard } from \"../../../PatientDashboard/PatientAppointment/PatientCards\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst SuperAdminPatient = () => {\n    const [cardData, setCardData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 3;\n    \n    const fetchData = async () => {\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/acessibility/patient');\n            console.log(\"Dashboard Response from API: \",resp?.data);\n            setCardData(resp?.data?.response || []);\n            setLoading(false);\n        }catch(err){\n            console.log(\"Error : \", err);\n            setLoading(false);\n        }\n      }\n      \n      useEffect( () => {\n        fetchData();\n      },[] )\n    \n      React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"acessibility\");\n        localStorage.setItem(\"path\", \"patient\");\n    }, []);\n\n    const totalCards = cardData.length; \n    const totalPages = Math.ceil(totalCards / itemsPerPage);\n    const startIndex = (currentPage - 1) * itemsPerPage; \n    const endIndex = startIndex + itemsPerPage; \n    const currentCards = cardData.slice(startIndex, endIndex); \n\n    const handlePageChange = (event, value) => {\n        setCurrentPage(value); \n    };\n\n    const renderSkeletons = () => (\n        Array.from({ length: itemsPerPage }).map((_, index) => (\n            <Skeleton \n                key={index}\n                variant=\"rectangular\"\n                height={200} // adjust height based on PatientadminCard height\n                style={{ marginBottom: '1rem', borderRadius: '10px' }}\n            />\n        ))\n    );\n    \n    return (\n        <>\n            <div className=\"nav-d-f-container\">\n                <nav className=\"NavBar-Container-Appoinement\">\n                {loading ? (\n                        <>\n                            <Skeleton variant=\"text\" width=\"30%\" height={30} style={{ marginRight: '1rem' }} />\n                            <Skeleton variant=\"text\" width=\"30%\" height={30} style={{ marginRight: '1rem' }} />\n                            <Skeleton variant=\"text\" width=\"30%\" height={30} />\n                        </>\n                    ) : (\n                        <>  \n                    <NavLink to={\"/superadmin/accessibility/doctors\"}>Doctor</NavLink>\n                    <NavLink to={\"/superadmin/accessibility/patient\"}>Patient</NavLink>\n                    <NavLink to={\"/superadmin/accessibility/hcf\"}>HCF</NavLink>\n                    </>\n                    )}\n                </nav>\n                <div className=\"date-filter1\">\n                {loading ? (\n                        <>\n                            <Skeleton variant=\"rectangular\" width={80} height={40} style={{ marginRight: '1rem' }} />\n                            <Skeleton variant=\"rectangular\" width={80} height={40} />\n                        </>\n                    ) : (\n                        <>\n\n                    <DateModal />\n                    <FilterModal />\n                    </>\n                    )}\n                </div>\n            </div>\n            <div className=\"doctor-container\">\n            {loading ? (\n                    <div className=\"loader-container\">\n                        {renderSkeletons()}\n                        <div style={{ display: \"flex\", justifyContent: \"right\" }}>\n                            <Skeleton variant=\"rectangular\" width={120} height={40} />\n                        </div>\n                    </div>\n                ) : (\n                    <>\n                        {currentCards.map((data, index) => (\n                            <PatientadminCard key={index} {...data} /> \n                        ))}\n                <PatientadminCard />\n                <PatientadminCard />\n                <PatientadminCard />\n                <div style={{ marginTop: \"2rem\", display: \"flex\", justifyContent: \"Right\"}}>\n                    <Pagination\n                      count={totalPages}\n                      page={currentPage}\n                      onChange={handlePageChange}\n                      color=\"primary\"\n                      size=\"large\"\n                    />\n                </div>\n               </>\n                )} \n            </div>\n        </>\n    \n    );\n};\n\nexport default SuperAdminPatient;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport img from \"../../../../static/images/DrImages/image3.png\";\n\nexport const AllDoctorTable = ({ name, user_id, specialist, profile_picture }) => {\n    return (\n        <>\n            <Box sx={{ display: \"flex\" }}>\n                <Box\n                    component={\"div\"}\n                    sx={{ height: \"3.44331rem\", width: \"3.44331rem\", borderRadius: \"0.5rem\" }}\n                >\n                    <img\n                        src={profile_picture}\n                        style={{ height: \"100%\", width: \"100%\", borderRadius: \"8px\" }}\n                    />\n                </Box>\n                <Box\n                    sx={{\n                        marginLeft: \"2%\",\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography\n                        sx={{\n                            color: \"#313033\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.875rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"500\",\n                            lineHeight: \"1.375rem\",\n                            letterSpacing: \"0.00438rem\",\n                        }}\n                    >\n                        {name}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        {\" \"}\n                        User Id : {user_id}\n                    </Typography>\n                    <Typography\n                        sx={{\n                            color: \"#939094\",\n                            fontFamily: \"Poppins\",\n                            fontSize: \"0.625rem\",\n                            fontStyle: \"normal\",\n                            fontWeight: \"400\",\n                            lineHeight: \"0.9375rem\",\n                            letterSpacing: \"0.005rem\",\n                        }}\n                    >\n                        {\" \"}\n                        {specialist}\n                    </Typography>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import { Box, Typography, Button, Divider, Avatar, IconButton } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { NavLink } from \"react-router-dom\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport BusinessIcon from \"@mui/icons-material/Business\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport CustomTextField from \"../../../components/CustomTextField\";\nimport CustomDropdown from \"../../../components/CustomDropdown\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport dayjs from \"dayjs\";\nimport CustomSnackBar from \"../../../components/CustomSnackBar\";\nimport DocProf from \"../../../static/images/DrImages/doc3.png\";\nimport \"./AdminProfile.scss\";\nfunction getWeeksAfter(date, amount) {\n    return date ? date.add(amount, \"week\") : undefined;\n}\n\nconst AdminProfile = () => {\n    const [snackType, setSnackType] = useState(\"\");\n    const [snackMessage, setSnackMessage] = useState(\"\");\n    const [snackOpen, setSnackOpen] = useState(false);\n    const hcf_id = localStorage.getItem(\"hcfadmin_suid\");\n    \n    // Debug localStorage values\n    React.useEffect(() => {\n        console.log(\"LocalStorage values:\");\n        console.log(\"hcfadmin_suid:\", localStorage.getItem(\"hcfadmin_suid\"));\n        console.log(\"hcfadmin_Email:\", localStorage.getItem(\"hcfadmin_Email\"));\n        console.log(\"access_token:\", localStorage.getItem(\"access_token\"));\n    }, []);\n    const [profiledata, setProfileData] = useState({\n        email: localStorage.getItem(\"hcfadmin_Email\"),\n        suid: hcf_id,\n        role_id: 2,\n        hcf_name: \"\",\n        mobile_no: \"\",\n        password: \"\",\n        profile_picture: \"\",\n        state_reg_no: \"\",\n        indian_reg_no: \"\",\n        state_reg_date: \"\",\n        indian_reg_date: \"\",\n        diag_state_reg_no: \"\",\n        diag_indian_reg_no: \"\",\n        diag_state_reg_date: \"\",\n        diag_indian_reg_date: \"\",\n        // Additional fields for API compatibility\n        first_name: \"\",\n        last_name: \"\",\n        middle_name: \"\",\n        country_id: \"\",\n        state_id: \"\",\n        city_id: \"\",\n        category_id: 1,\n        reg_no: \"\",\n        service_time_from: \"\",\n        service_time_to: \"\",\n        service_day_from: \"\",\n        service_day_to: \"\",\n        service_offer: \"\",\n    });\n    const [isEditing, setIsEditing] = useState(false);\n\n    useEffect(() => {\n        // Define the function to fetch the profile data\n        const fetchProfileData = async () => {\n            try {\n                console.log(\"Fetching profile data for hcf_id:\", hcf_id);\n                const response = await axiosInstance.get(`sec/hcf/getHcfprofile/${hcf_id}`);\n                console.log(\"API Response:\", response.data);\n                \n                // Check if response has the expected structure\n                if (response.data && response.data.response && response.data.response.length > 0) {\n                    const profiledata = response.data.response[0];\n                    console.log(\"Profile data from API:\", profiledata);\n\n                    // Update the state with fetched data\n                    setProfileData((prevState) => ({\n                        ...prevState,\n                        hcf_name: profiledata.hcf_name || profiledata.first_name || \"\",\n                        mobile_no: profiledata.mobile_no || \"\",\n                        password: \"**********\", // Masked password\n                        profile_picture: profiledata.profile_picture || \"\",\n                        state_reg_no: profiledata.state_reg_no || \"\",\n                        indian_reg_no: profiledata.indian_reg_no || \"\",\n                        state_reg_date: profiledata.state_reg_date || \"\",\n                        indian_reg_date: profiledata.indian_reg_date || \"\",\n                        diag_state_reg_no: profiledata.diag_state_reg_no || \"\",\n                        diag_indian_reg_no: profiledata.diag_indian_reg_no || \"\",\n                        diag_state_reg_date: profiledata.diag_state_reg_date || \"\",\n                        diag_indian_reg_date: profiledata.diag_indian_reg_date || \"\",\n                        // Additional fields\n                        first_name: profiledata.first_name || \"\",\n                        last_name: profiledata.last_name || \"\",\n                        middle_name: profiledata.middle_name || \"\",\n                        country_id: profiledata.country_id || \"\",\n                        state_id: profiledata.state_id || \"\",\n                        city_id: profiledata.city_id || \"\",\n                        category_id: profiledata.category_id || 1,\n                        reg_no: profiledata.reg_no || \"\",\n                        service_time_from: profiledata.service_time_from || \"\",\n                        service_time_to: profiledata.service_time_to || \"\",\n                        service_day_from: profiledata.service_day_from || \"\",\n                        service_day_to: profiledata.service_day_to || \"\",\n                        service_offer: profiledata.service_offer || \"\",\n                    }));\n                    \n                    // Dispatch profile update event for navbar if profile picture exists\n                    if (profiledata.profile_picture) {\n                        window.dispatchEvent(new CustomEvent('profileUpdated', { \n                            detail: { profile: profiledata.profile_picture } \n                        }));\n                        localStorage.setItem(\"profile\", profiledata.profile_picture);\n                    }\n                } else {\n                    console.log(\"No profile data found in response\");\n                    // Set default values if no data is found\n                    setProfileData((prevState) => ({\n                        ...prevState,\n                        hcf_name: \"Apollo\",\n                        mobile_no: \"+91 0000 000 000\",\n                        password: \"**********\",\n                        email: localStorage.getItem(\"hcfadmin_Email\") || \"Apollo@hcf.com\",\n                    }));\n                }\n            } catch (error) {\n                console.error(\"Error fetching profile data:\", error);\n                // Set default values on error\n                setProfileData((prevState) => ({\n                    ...prevState,\n                    hcf_name: \"Apollo\",\n                    mobile_no: \"+91 0000 000 000\",\n                    password: \"**********\",\n                    email: localStorage.getItem(\"hcfadmin_Email\") || \"Apollo@hcf.com\",\n                }));\n            }\n        };\n\n        // Call the function\n        if (hcf_id) {\n            fetchProfileData();\n        } else {\n            console.log(\"No hcf_id found, using default values\");\n            // Set default values if no hcf_id\n            setProfileData((prevState) => ({\n                ...prevState,\n                hcf_name: \"Apollo\",\n                mobile_no: \"+91 0000 000 000\",\n                password: \"**********\",\n                email: localStorage.getItem(\"hcfadmin_Email\") || \"Apollo@hcf.com\",\n            }));\n        }\n    }, [hcf_id]);\n\n    const fetchData = async () => {\n        console.log(\"Entered the fetch data\");\n        try {\n            // Prepare the data for API call\n            const updateData = {\n                hcf_id: parseInt(hcf_id),\n                role_id: profiledata.role_id,\n                first_name: profiledata.first_name || profiledata.hcf_name,\n                last_name: profiledata.last_name || \"\",\n                middle_name: profiledata.middle_name || \"\",\n                country_id: profiledata.country_id || \"\",\n                state_id: profiledata.state_id || \"\",\n                city_id: profiledata.city_id || \"\",\n                category_id: profiledata.category_id || 1,\n                hcf_name: profiledata.hcf_name,\n                reg_no: profiledata.reg_no || \"\",\n                service_time_from: profiledata.service_time_from || \"\",\n                service_time_to: profiledata.service_time_to || \"\",\n                service_day_from: profiledata.service_day_from || \"\",\n                service_day_to: profiledata.service_day_to || \"\",\n                service_offer: profiledata.service_offer || \"\",\n                state_reg_no: profiledata.state_reg_no,\n                indian_reg_no: profiledata.indian_reg_no,\n                state_reg_date: profiledata.state_reg_date,\n                indian_reg_date: profiledata.indian_reg_date,\n                diag_state_reg_no: profiledata.diag_state_reg_no,\n                diag_indian_reg_no: profiledata.diag_indian_reg_no,\n                diag_state_reg_date: profiledata.diag_state_reg_date,\n                diag_indian_reg_date: profiledata.diag_indian_reg_date,\n                profile_picture: profiledata.profile_picture\n            };\n\n            console.log(\"Sending data to API:\", updateData);\n\n            const response = await axiosInstance.post(\n                `sec/hcf/updateHcfprofile?hcf_id=${hcf_id}`,\n                JSON.stringify(updateData),\n                { \n                    Accept: \"Application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n            );\n            console.log(\"API Response:\", response);\n            setSnackMessage(\"Profile Updated Successfully\");\n            setSnackType(\"success\");\n            setSnackOpen(true);\n            setIsEditing(false); // Exit edit mode after successful update\n            \n            // Dispatch profile update event for navbar if profile picture was updated\n            if (profiledata.profile_picture) {\n                window.dispatchEvent(new CustomEvent('profileUpdated', { \n                    detail: { profile: profiledata.profile_picture } \n                }));\n                localStorage.setItem(\"profile\", profiledata.profile_picture);\n            }\n        } catch (error) {\n            console.error(\"Error updating profile:\", error);\n            setSnackMessage(\"Error during updating profile\");\n            setSnackType(\"error\");\n            setSnackOpen(true);\n            console.log(error.response);\n        }\n    };\n    console.log(\"Current profiledata state:\", profiledata);\n\n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"profile\");\n        localStorage.setItem(\"path\", \"adminprofile\");\n    }, []);\n    console.log(\"i am here \", profiledata?.first_name);\n    const [profileImage, setProfileImage] = useState(DocProf);\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const base64Data = reader.result.split(\",\")[1]; // Extract base64 without metadata\n                const previewUrl = URL.createObjectURL(file); // For preview\n                setProfileImage(previewUrl);\n                \n                // Store the full data URL (including metadata) for API\n                const fullDataUrl = reader.result;\n                \n                setProfileData((prevData) => ({\n                    ...prevData,\n                    profile_picture: fullDataUrl, // Store full data URL for API\n                }));\n                \n                // Dispatch custom event to notify navbar of profile update\n                window.dispatchEvent(new CustomEvent('profileUpdated', { \n                    detail: { profile: fullDataUrl } \n                }));\n                \n                // Also update localStorage for immediate reflection\n                localStorage.setItem(\"profile\", fullDataUrl);\n            };\n            reader.readAsDataURL(file); // Trigger the file reading process\n        }\n    };\n    const toggleEditMode = () => {\n        setIsEditing(!isEditing);\n    };\n    return (\n        <Box sx={{ \n            minHeight: \"100vh\", \n            backgroundColor: \"#ffffff\", \n            padding: \"24px\",\n            fontFamily: \"Poppins, sans-serif\"\n        }}>\n            <CustomSnackBar type={snackType} message={snackMessage} isOpen={snackOpen} />\n            \n            {/* Header Section */}\n            <Box sx={{ \n                display: \"flex\", \n                justifyContent: \"space-between\", \n                alignItems: \"center\",\n                marginBottom: \"32px\"\n            }}>\n                <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                    <Button\n                        variant=\"contained\"\n                        sx={{\n                            backgroundColor: \"#E72B4A\",\n                            color: \"white\",\n                            borderRadius: \"8px\",\n                            padding: \"8px 16px\",\n                            fontSize: \"14px\",\n                            fontWeight: \"500\",\n                            textTransform: \"none\",\n                            \"&:hover\": {\n                                backgroundColor: \"#d32f2f\"\n                            }\n                        }}\n                    >\n                        Profile Information\n                    </Button>\n                </Box>\n                \n                <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2 }}>\n                    <Typography sx={{\n                        fontSize: \"16px\",\n                        fontWeight: \"500\",\n                        color: \"#313033\"\n                    }}>\n                        Profile ID: SRCH0001\n                    </Typography>\n                    <IconButton sx={{ color: \"#E72B4A\" }}>\n                        <CloseIcon />\n                    </IconButton>\n                </Box>\n            </Box>\n\n            {/* Edit Profile Button */}\n            <Box sx={{ \n                display: \"flex\", \n                alignItems: \"center\", \n                gap: 1,\n                marginBottom: \"32px\"\n            }}>\n                <EditIcon sx={{ color: \"#E72B4A\", fontSize: \"20px\" }} />\n                <Typography sx={{\n                    fontSize: \"14px\",\n                    fontWeight: \"500\",\n                    color: \"#E72B4A\",\n                    cursor: \"pointer\"\n                }} onClick={toggleEditMode}>\n                    Edit Profile\n                </Typography>\n            </Box>\n\n            {/* Profile Picture and Basic Info */}\n            <Box sx={{ \n                display: \"flex\", \n                alignItems: \"flex-start\", \n                gap: \"32px\",\n                marginBottom: \"48px\"\n            }}>\n                {/* Profile Picture */}\n                <Box sx={{ \n                    display: \"flex\", \n                    flexDirection: \"column\", \n                    alignItems: \"center\",\n                    gap: 2\n                }}>\n                    <Avatar\n                        src={profiledata?.profile_picture || profileImage}\n                        sx={{\n                            width: \"120px\",\n                            height: \"120px\",\n                            backgroundColor: \"#f5f5f5\",\n                            border: \"2px solid #e0e0e0\"\n                        }}\n                    >\n                        <BusinessIcon sx={{ fontSize: \"48px\", color: \"#1976d2\" }} />\n                    </Avatar>\n                    <Button\n                        variant=\"outlined\"\n                        disabled={!isEditing}\n                        component=\"label\"\n                        sx={{\n                            fontSize: \"12px\",\n                            padding: \"6px 12px\",\n                            borderColor: \"#E72B4A\",\n                            color: \"#E72B4A\",\n                            \"&:hover\": {\n                                borderColor: \"#d32f2f\",\n                                backgroundColor: \"rgba(231, 43, 74, 0.04)\"\n                            }\n                        }}\n                    >\n                        Choose Image\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            hidden\n                            onChange={handleImageChange}\n                        />\n                    </Button>\n                </Box>\n\n                {/* Basic Information Fields */}\n                <Box sx={{ \n                    display: \"grid\", \n                    gridTemplateColumns: \"1fr 1fr\", \n                    gap: \"24px\",\n                    flex: 1\n                }}>\n                    <CustomTextField\n                        label=\"HCF Name\"\n                        variant=\"standard\"\n                        CustomValue={profiledata?.hcf_name || \"\"}\n                        defaultValue={profiledata?.hcf_name || \"\"}\n                        isDisabled={!isEditing}\n                        onChange={(event) => {\n                            setProfileData(prev => ({\n                                ...prev,\n                                hcf_name: event.target.value\n                            }));\n                        }}\n                        textcss={{\n                            \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                            \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                            \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                        }}\n                    />\n                    \n                    <CustomTextField\n                        label=\"Mobile No\"\n                        variant=\"standard\"\n                        CustomValue={profiledata?.mobile_no || \"\"}\n                        defaultValue={profiledata?.mobile_no || \"\"}\n                        isDisabled={!isEditing}\n                        onChange={(event) => {\n                            setProfileData(prev => ({\n                                ...prev,\n                                mobile_no: event.target.value\n                            }));\n                        }}\n                        textcss={{\n                            \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                            \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                            \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                        }}\n                    />\n                    \n                    <CustomTextField\n                        label=\"Email\"\n                        variant=\"standard\"\n                        CustomValue={profiledata?.email || \"\"}\n                        defaultValue={profiledata?.email || \"\"}\n                        isDisabled={true}\n                        textcss={{\n                            \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                            \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                            \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                        }}\n                    />\n                    \n                    <Box>\n                        <CustomTextField\n                            label=\"Password\"\n                            variant=\"standard\"\n                            CustomValue={profiledata?.password || \"\"}\n                            defaultValue={profiledata?.password || \"\"}\n                            isDisabled={true}\n                            textcss={{\n                                \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                                \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                                \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                                \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                            }}\n                        />\n                        {/* <Typography sx={{\n                            fontSize: \"12px\",\n                            color: \"#E72B4A\",\n                            cursor: \"pointer\",\n                            marginTop: \"4px\",\n                            \"&:hover\": { textDecoration: \"underline\" }\n                        }}>\n                            Forgotten Password\n                        </Typography> */}\n                    </Box>\n                </Box>\n            </Box>\n\n            {/* Registration Details Section */}\n            <Box sx={{ marginBottom: \"48px\" }}>\n                <Typography sx={{\n                    fontSize: \"20px\",\n                    fontWeight: \"500\",\n                    color: \"#313033\",\n                    marginBottom: \"24px\",\n                    fontFamily: \"Poppins, sans-serif\"\n                }}>\n                    Registration Details\n                </Typography>\n                \n                <Box sx={{ \n                    display: \"grid\", \n                    gridTemplateColumns: \"1fr 1fr\", \n                    gap: \"24px\",\n                    marginBottom: \"24px\"\n                }}>\n                    <CustomTextField\n                        label=\"State Registration No\"\n                        variant=\"standard\"\n                        CustomValue={profiledata?.state_reg_no || \"\"}\n                        defaultValue={profiledata?.state_reg_no || \"\"}\n                        isDisabled={!isEditing}\n                        onChange={(event) => {\n                            setProfileData(prev => ({\n                                ...prev,\n                                state_reg_no: event.target.value\n                            }));\n                        }}\n                        textcss={{\n                            \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                            \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                            \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                        }}\n                    />\n                    \n                    <CustomTextField\n                        label=\"Indian Registration No\"\n                        variant=\"standard\"\n                        CustomValue={profiledata?.indian_reg_no || \"\"}\n                        defaultValue={profiledata?.indian_reg_no || \"\"}\n                        isDisabled={!isEditing}\n                        onChange={(event) => {\n                            setProfileData(prev => ({\n                                ...prev,\n                                indian_reg_no: event.target.value\n                            }));\n                        }}\n                        textcss={{\n                            \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                            \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                            \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                        }}\n                    />\n                </Box>\n                \n                <Box sx={{ \n                    display: \"grid\", \n                    gridTemplateColumns: \"1fr 1fr\", \n                    gap: \"24px\"\n                }}>\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            label=\"Registration Date\"\n                            variant=\"standard\"\n                            value={profiledata.state_reg_date ? dayjs(profiledata.state_reg_date) : null}\n                            disabled={!isEditing}\n                            onChange={(newValue) => {\n                                if (newValue) {\n                                    setProfileData(prev => ({\n                                        ...prev,\n                                        state_reg_date: newValue.format(\"YYYY-MM-DD\")\n                                    }));\n                                }\n                            }}\n                            slotProps={{\n                                textField: {\n                                    sx: {\n                                        \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                                        \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                                        \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                                    }\n                                }\n                            }}\n                        />\n                    </LocalizationProvider>\n                    \n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            label=\"Registration Date\"\n                            variant=\"standard\"\n                            value={profiledata.indian_reg_date ? dayjs(profiledata.indian_reg_date) : null}\n                            disabled={!isEditing}\n                            onChange={(newValue) => {\n                                if (newValue) {\n                                    setProfileData(prev => ({\n                                        ...prev,\n                                        indian_reg_date: newValue.format(\"YYYY-MM-DD\")\n                                    }));\n                                }\n                            }}\n                            slotProps={{\n                                textField: {\n                                    sx: {\n                                        \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                                        \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                                        \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                                    }\n                                }\n                            }}\n                        />\n                    </LocalizationProvider>\n                </Box>\n            </Box>\n\n            {/* Diagnostic Center Details Section */}\n            <Box sx={{ marginBottom: \"48px\" }}>\n                <Typography sx={{\n                    fontSize: \"20px\",\n                    fontWeight: \"500\",\n                    color: \"#313033\",\n                    marginBottom: \"24px\",\n                    fontFamily: \"Poppins, sans-serif\"\n                }}>\n                    Diagnostic Center Details\n                </Typography>\n                \n                <Box sx={{ \n                    display: \"grid\", \n                    gridTemplateColumns: \"1fr 1fr\", \n                    gap: \"24px\",\n                    marginBottom: \"24px\"\n                }}>\n                    <CustomTextField\n                        label=\"State Registration No\"\n                        variant=\"standard\"\n                        CustomValue={profiledata?.diag_state_reg_no || \"\"}\n                        defaultValue={profiledata?.diag_state_reg_no || \"\"}\n                        isDisabled={!isEditing}\n                        onChange={(event) => {\n                            setProfileData(prev => ({\n                                ...prev,\n                                diag_state_reg_no: event.target.value\n                            }));\n                        }}\n                        textcss={{\n                            \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                            \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                            \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                        }}\n                    />\n                    \n                    <CustomTextField\n                        label=\"Indian Registration No\"\n                        variant=\"standard\"\n                        CustomValue={profiledata?.diag_indian_reg_no || \"\"}\n                        defaultValue={profiledata?.diag_indian_reg_no || \"\"}\n                        isDisabled={!isEditing}\n                        onChange={(event) => {\n                            setProfileData(prev => ({\n                                ...prev,\n                                diag_indian_reg_no: event.target.value\n                            }));\n                        }}\n                        textcss={{\n                            \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                            \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                            \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                            \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                        }}\n                    />\n                </Box>\n                \n                <Box sx={{ \n                    display: \"grid\", \n                    gridTemplateColumns: \"1fr 1fr\", \n                    gap: \"24px\"\n                }}>\n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            label=\"Registration Date\"\n                            variant=\"standard\"\n                            value={profiledata.diag_state_reg_date ? dayjs(profiledata.diag_state_reg_date) : null}\n                            disabled={!isEditing}\n                            onChange={(newValue) => {\n                                if (newValue) {\n                                    setProfileData(prev => ({\n                                        ...prev,\n                                        diag_state_reg_date: newValue.format(\"YYYY-MM-DD\")\n                                    }));\n                                }\n                            }}\n                            slotProps={{\n                                textField: {\n                                    sx: {\n                                        \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                                        \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                                        \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                                    }\n                                }\n                            }}\n                        />\n                    </LocalizationProvider>\n                    \n                    <LocalizationProvider dateAdapter={AdapterDayjs}>\n                        <DatePicker\n                            label=\"Registration Date\"\n                            variant=\"standard\"\n                            value={profiledata.diag_indian_reg_date ? dayjs(profiledata.diag_indian_reg_date) : null}\n                            disabled={!isEditing}\n                            onChange={(newValue) => {\n                                if (newValue) {\n                                    setProfileData(prev => ({\n                                        ...prev,\n                                        diag_indian_reg_date: newValue.format(\"YYYY-MM-DD\")\n                                    }));\n                                }\n                            }}\n                            slotProps={{\n                                textField: {\n                                    sx: {\n                                        \"& .MuiInputLabel-root\": { color: \"#787579\", fontFamily: \"Poppins, sans-serif\" },\n                                        \"& .MuiInput-underline:before\": { borderBottomColor: \"#e0e0e0\" },\n                                        \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": { borderBottomColor: \"#1976d2\" },\n                                        \"& .MuiInput-underline:after\": { borderBottomColor: \"#1976d2\" }\n                                    }\n                                }\n                            }}\n                        />\n                    </LocalizationProvider>\n                </Box>\n            </Box>\n\n            {/* Save Changes Button */}\n            {isEditing && (\n                <Box sx={{ \n                    display: \"flex\", \n                    justifyContent: \"center\",\n                    marginTop: \"48px\"\n                }}>\n                    <CustomButton\n                        label=\"Save Changes\"\n                        handleClick={() => fetchData()}\n                        buttonCss={{\n                            backgroundColor: \"#E72B4A\",\n                            color: \"white\",\n                            padding: \"12px 48px\",\n                            fontSize: \"16px\",\n                            fontWeight: \"500\",\n                            borderRadius: \"8px\",\n                            textTransform: \"none\",\n                            \"&:hover\": {\n                                backgroundColor: \"#d32f2f\"\n                            }\n                        }}\n                    />\n                </Box>\n            )}\n        </Box>\n    );\n};\n\nexport default AdminProfile;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextField, InputAdornment, IconButton } from \"@mui/material\";\n\nconst CustomTextField = ({\n    id,\n    label,\n    defaultValue,\n    helperText,\n    variant,\n    isValid,\n    isInvalid,\n    isDisabled,\n    leftIcon,\n    rightIcon,\n    onChange,\n    textcss,\n    inputType,\n    CustomValue,\n    placeholder,\n    onInput,\n    type,\n    multiline,\n    rows,\n    maxRows,\n    onLeftIconClick,  // New prop for handling left icon click\n    onRightIconClick, // New prop for handling right icon click\n    error, // New prop for error state\n    noSpacing = false, // New prop to disable default spacing\n}) => {\n    const [isFocused, setIsFocused] = useState(false);\n\n    return (\n        <TextField\n            type={type}\n            className={`${isValid ? \"valid-class\" : \"\"}${isInvalid ? \"invalid-class\" : \"\"}`}\n            typeof={type}\n            id={id}\n            multiline={multiline}\n            rows={rows}\n            maxRows={maxRows}\n            label={label}\n            placeholder={placeholder}\n            value={CustomValue}\n            defaultValue={defaultValue}\n            helperText={helperText}\n            variant={variant}\n            disabled={isDisabled}\n            error={error || isInvalid}\n            sx={{\n                marginBottom: noSpacing ? 0 : \"1.5rem\",\n                fontFamily: \"Poppins, sans-serif\",\n                \"& .MuiFormHelperText-root\": {\n                    color: (error || isInvalid) ? \"#d32f2f !important\" : \"#666\",\n                    fontSize: \"12px\",\n                    marginTop: \"4px\",\n                    fontWeight: 400,\n                },\n                \"& .MuiInput-root\": {\n                    borderRadius: \"8px\",\n                    transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                    \"&:before\": {\n                        borderBottom: (error || isInvalid) ? \"2px solid #d32f2f !important\" : \"1px solid #e0e0e0\",\n                        transition: \"border-color 0.3s ease\",\n                    },\n                    \"&:hover:not(.Mui-disabled):before\": {\n                        borderBottom: (error || isInvalid) ? \"2px solid #d32f2f !important\" : \"2px solid #1976d2\",\n                    },\n                    \"&.Mui-focused:after\": {\n                        borderBottom: (error || isInvalid) ? \"2px solid #d32f2f !important\" : \"2px solid #1976d2\",\n                        transform: \"scaleX(1)\",\n                    },\n                    \"&:after\": {\n                        transform: \"scaleX(0)\",\n                        transition: \"transform 0.3s ease\",\n                    }\n                },\n                \"& .MuiInputLabel-root\": {\n                    color: (error || isInvalid) ? \"#d32f2f !important\" : \"#666\",\n                    fontSize: \"14px\",\n                    fontWeight: 500,\n                    transition: \"all 0.3s ease\",\n                    \"&.Mui-focused\": {\n                        color: (error || isInvalid) ? \"#d32f2f !important\" : \"#1976d2\",\n                    }\n                },\n                \"& .MuiInputBase-input\": {\n                    fontSize: \"14px\",\n                    padding: \"12px 0\",\n                    color: \"#333\",\n                    \"&::placeholder\": {\n                        color: \"#999\",\n                        opacity: 1,\n                    }\n                },\n                \"& .MuiOutlinedInput-root\": {\n                    borderRadius: \"8px\",\n                    transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n                    \"&:hover .MuiOutlinedInput-notchedOutline\": {\n                        borderColor: (error || isInvalid) ? \"#d32f2f\" : \"#1976d2\",\n                        borderWidth: \"2px\",\n                    },\n                    \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n                        borderColor: (error || isInvalid) ? \"#d32f2f\" : \"#1976d2\",\n                        borderWidth: \"2px\",\n                    },\n                    \"& .MuiOutlinedInput-notchedOutline\": {\n                        borderColor: (error || isInvalid) ? \"#d32f2f\" : \"#e0e0e0\",\n                        transition: \"border-color 0.3s ease\",\n                    }\n                },\n                ...textcss,\n            }}\n            onInput={onInput}\n            onChange={onChange}\n            InputLabelProps={{\n                shrink: !!defaultValue || !!isFocused,\n                style: leftIcon ? { paddingLeft: 30 } : {},\n            }}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            {...(leftIcon || rightIcon\n                ? {\n                      // only add InputProps if leftIcon or rightIcon is defined\n                      InputProps: {\n                          startAdornment: leftIcon ? (\n                              <InputAdornment position=\"start\">\n                                  <IconButton onClick={onLeftIconClick}>\n                                      {leftIcon}\n                                  </IconButton>\n                              </InputAdornment>\n                          ) : null,\n                          endAdornment: rightIcon ? (\n                              <InputAdornment position=\"end\">\n                                  <IconButton onClick={onRightIconClick}>\n                                      {rightIcon}\n                                  </IconButton>\n                              </InputAdornment>\n                          ) : null,\n                      },\n                  }\n                : {})}\n        />\n    );\n};\n\nCustomTextField.defaultProps = {\n    id: \"text-field\",\n    label: \"username\",\n    defaultValue: \"\",\n    helperText: \"valid username\",\n    variant: \"standard\",\n    isValid: false,\n    isInvalid: false,\n    isDisabled: false,\n    leftIcon: null,  // Allow custom icon to be passed\n    rightIcon: null,  // Allow custom icon to be passed\n    onChange: () => {},\n    onLeftIconClick: () => {},  // Default no-op for icon click\n    onRightIconClick: () => {}, // Default no-op for icon click\n    error: false, // Default no error state\n    noSpacing: false, // Default spacing enabled\n};\n\nCustomTextField.propTypes = {\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    defaultValue: PropTypes.string,\n    helperText: PropTypes.string,\n    variant: PropTypes.string,\n    isValid: PropTypes.bool,\n    isInvalid: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    leftIcon: PropTypes.node,\n    rightIcon: PropTypes.node,\n    onChange: PropTypes.func,\n    onInput: PropTypes.string.isRequired,\n    onLeftIconClick: PropTypes.func,  // Prop type for left icon click handler\n    onRightIconClick: PropTypes.func, // Prop type for right icon click handler\n    error: PropTypes.bool, // Prop type for error state\n    noSpacing: PropTypes.bool, // Prop type for spacing control\n};\n\nexport default CustomTextField;\n\n// // import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { TextField, InputAdornment } from \"@mui/material\";\n\n// const CustomTextField = ({\n//     id,\n//     label,\n//     defaultValue,\n//     helperText,\n//     variant,\n//     isValid,\n//     isInvalid,\n//     isDisabled,\n//     leftIcon,\n//     rightIcon,\n//     onChange,\n//     textcss,\n//     inputType,\n//     CustomValue,\n//     placeholder,\n//     onInput,\n//     type,\n//     multiline,\n//     rows,\n//     maxRows,\n// }) => {\n//     const [isFocused, setIsFocused] = useState(false);\n\n//     return (\n//         <TextField\n//             type={type}\n//             className={`${isValid ? \"valid-class\" : \"\"}${isInvalid ? \"invalid-class\" : \"\"}`}\n//             typeof={type}\n//             id={id}\n//             multiline={multiline}\n//             rows={rows}\n//             maxRows={maxRows}\n//             label={label}\n//             placeholder={placeholder}\n//             value={CustomValue}\n//             defaultValue={defaultValue}\n//             helperText={helperText}\n//             variant={variant}\n//             disabled={isDisabled}\n//             sx={textcss}\n//             onInput={onInput}\n//             onChange={onChange}\n//             InputLabelProps={{\n//                 shrink: !!defaultValue || !!isFocused,\n//                 style: leftIcon ? { paddingLeft: 30 } : {},\n//             }}\n//             onFocus={() => setIsFocused(true)}\n//             onBlur={() => setIsFocused(false)}\n//             {...(leftIcon || rightIcon\n//                 ? {\n//                       // only add InputProps if leftIcon or rightIcon is defined\n//                       InputProps: {\n//                           startAdornment: leftIcon ? (\n//                               <InputAdornment position=\"start\">{leftIcon}</InputAdornment>\n//                           ) : null,\n//                           endAdornment: rightIcon ? (\n//                               <InputAdornment position=\"end\">{rightIcon}</InputAdornment>\n//                           ) : null,\n//                       },\n//                   }\n//                 : {})}\n//         />\n//     );\n// };\n\n// CustomTextField.defaultProps = {\n//     id: \"text-field\",\n//     label: \"username\",\n//     defaultValue: \"\",\n//     helperText: \"valid username\",\n//     variant: \"standard\",\n//     isValid: false,\n//     isInvalid: false,\n//     isDisabled: false,\n//     leftIcon: null,  // Allow custom icon to be passed\n//     // leftIcon: \"\",\n//     rightIcon: \"\",\n//     onChange: () => {},\n// };\n\n// CustomTextField.propTypes = {\n//     id: PropTypes.string.isRequired,\n//     label: PropTypes.string.isRequired,\n//     defaultValue: PropTypes.string,\n//     helperText: PropTypes.string,\n//     variant: PropTypes.string,\n//     isValid: PropTypes.bool,\n//     isInvalid: PropTypes.bool,\n//     isDisabled: PropTypes.bool,\n//     leftIcon: PropTypes.node,\n//     rightIcon: PropTypes.node,\n//     onChange: PropTypes.func,\n//     onInput: PropTypes.string.isRequired,\n// };\n\n// export default CustomTextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { styled } from \"@mui/material/styles\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Typography } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n    \"& .MuiDialog-paper\": {\n        borderRadius: \"16px\",\n        boxShadow: \"0 24px 48px rgba(0, 0, 0, 0.15)\",\n        maxWidth: \"90vw\",\n        maxHeight: \"90vh\",\n        margin: \"24px\",\n        transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n    },\n    \"& .MuiDialogContent-root\": {\n        padding: theme.spacing(3),\n        fontFamily: \"Poppins, sans-serif\",\n    },\n    \"& .MuiDialogActions-root\": {\n        padding: theme.spacing(2, 3),\n        gap: theme.spacing(1),\n    },\n    \"& .MuiBackdrop-root\": {\n        backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n        backdropFilter: \"blur(4px)\",\n    }\n}));\n\nfunction BootstrapDialogTitle(props) {\n    const { children, onClose, ...other } = props;\n\n    return (\n        <DialogTitle \n            sx={{ \n                m: 0, \n                p: 3, \n                pb: 2,\n                fontFamily: \"Poppins, sans-serif\",\n                fontSize: \"20px\",\n                fontWeight: 600,\n                color: \"#333\",\n                borderBottom: \"1px solid #f0f0f0\",\n                position: \"relative\"\n            }} \n            {...other}\n        >\n            <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 600 }}>\n                {children}\n            </Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label=\"close\"\n                    onClick={onClose}\n                    sx={{\n                        position: \"absolute\",\n                        right: 16,\n                        top: 16,\n                        color: \"#666\",\n                        backgroundColor: \"#f5f5f5\",\n                        transition: \"all 0.2s ease\",\n                        \"&:hover\": {\n                            backgroundColor: \"#e0e0e0\",\n                            color: \"#333\",\n                            transform: \"scale(1.1)\",\n                        }\n                    }}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </DialogTitle>\n    );\n}\n\nBootstrapDialogTitle.propTypes = {\n    children: PropTypes.node,\n    onClose: PropTypes.func,\n};\n\nconst CustomModal = ({ \n    conditionOpen, \n    isOpen, \n    title, \n    footer, \n    children, \n    class_name, \n    disableBackdropClick, \n    maxWidth = \"sm\",\n    fullWidth = true\n}) => {\n    const handleClose = () => {\n        if (conditionOpen) {\n            conditionOpen(false);\n        }\n    };\n\n    const handleBackdropClick = (event) => {\n        if (disableBackdropClick) {\n            event.stopPropagation();\n        }\n    };\n\n    return (\n        <div className={class_name}>\n            <BootstrapDialog\n                onClose={(event, reason) => {\n                    if (reason !== 'backdropClick' || !disableBackdropClick) {\n                        handleClose();\n                    }\n                }}\n                aria-labelledby=\"customized-dialog-title\"\n                open={isOpen}\n                onBackdropClick={handleBackdropClick}\n                maxWidth={maxWidth}\n                fullWidth={fullWidth}\n            >\n                <BootstrapDialogTitle\n                    id=\"customized-dialog-title\"\n                    onClose={handleClose}\n                >\n                    {title}\n                </BootstrapDialogTitle>\n                <DialogContent>{children}</DialogContent>\n                {footer && <DialogActions>{footer}</DialogActions>}\n            </BootstrapDialog>\n        </div>\n    );\n};\n\nCustomModal.propTypes = {\n    children: PropTypes.node,\n    isOpen: PropTypes.bool.isRequired,\n    title: PropTypes.string,\n    footer: PropTypes.node,\n    conditionOpen: PropTypes.func.isRequired,\n    class_name: PropTypes.string,\n    disableBackdropClick: PropTypes.bool,\n    maxWidth: PropTypes.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]),\n    fullWidth: PropTypes.bool,\n};\n\nexport default CustomModal;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Checkbox, FormControlLabel, Typography } from \"@mui/material\";\n\nconst CustomCheckBox = ({ \n    checked, \n    disabled, \n    onChange, \n    label,\n    labelPlacement = \"end\",\n    color = \"primary\",\n    size = \"medium\",\n    indeterminate = false\n}) => {\n    const checkboxElement = (\n        <Checkbox \n            disabled={disabled} \n            checked={checked} \n            onChange={onChange}\n            color={color}\n            size={size}\n            indeterminate={indeterminate}\n            sx={{\n                transition: \"all 0.2s ease\",\n                \"&:hover\": {\n                    transform: \"scale(1.1)\",\n                },\n                \"&.Mui-checked\": {\n                    animation: \"pulse 0.3s ease-in-out\",\n                },\n                \"@keyframes pulse\": {\n                    \"0%\": {\n                        transform: \"scale(1)\",\n                    },\n                    \"50%\": {\n                        transform: \"scale(1.1)\",\n                    },\n                    \"100%\": {\n                        transform: \"scale(1)\",\n                    },\n                }\n            }}\n        />\n    );\n\n    if (label) {\n        return (\n            <FormControlLabel\n                control={checkboxElement}\n                label={\n                    <Typography \n                        variant=\"body2\" \n                        sx={{ \n                            fontFamily: \"Poppins, sans-serif\",\n                            fontSize: \"14px\",\n                            fontWeight: 500,\n                            color: disabled ? \"#999\" : \"#333\"\n                        }}\n                    >\n                        {label}\n                    </Typography>\n                }\n                labelPlacement={labelPlacement}\n                sx={{\n                    margin: 0,\n                    \"& .MuiFormControlLabel-label\": {\n                        marginLeft: \"8px\",\n                    }\n                }}\n            />\n        );\n    }\n\n    return checkboxElement;\n};\n\nCustomCheckBox.defaultProps = {\n    checked: false,\n    disabled: false,\n    onChange: () => {},\n    label: \"\",\n    labelPlacement: \"end\",\n    color: \"primary\",\n    size: \"medium\",\n    indeterminate: false,\n};\n\nCustomCheckBox.propTypes = {\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    label: PropTypes.string,\n    labelPlacement: PropTypes.oneOf([\"end\", \"start\", \"top\", \"bottom\"]),\n    color: PropTypes.oneOf([\"default\", \"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]),\n    size: PropTypes.oneOf([\"small\", \"medium\"]),\n    indeterminate: PropTypes.bool,\n};\n\nexport default CustomCheckBox;","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgPen = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m8.635 21.547-3.056.36c-.899.18-1.618-.72-1.618-1.618l.36-3.056c0-.36.18-.54.359-.9L16.545 4.47c.719-.72 1.977-.72 2.696 0l1.978 1.977c.719.72.719 1.978 0 2.697L9.534 21.008c-.18.36-.54.539-.9.539Z\",\n    stroke: \"#E72B4A\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })));\n};\nexport { SvgPen as ReactComponent };\nexport default __webpack_public_path__ + \"f682cbd9a68572f7e4b9eea43fd0a205.svg\";","import React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport SuperHCFImage from \"../../../static/images/DrImages/rectangleH.png\";\nimport CustomButton from \"../../CustomButton\";\nimport \"./HCFAdminCard.scss\";\n\nconst HCFAdminCard = () => {\n    return (\n        <>\n            <div className=\"superadmindoctor-card\">\n                <Box\n                    component={\"img\"}\n                    src={SuperHCFImage}\n                    sx={{\n                        width: \"128px\",\n                        height: \"128px\",\n                    }}\n                ></Box>\n                <div className=\"buttons-texts\">\n                    <div className=\"name-approve\">\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"20px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"500\",\n                                lineHeight: \"30px\",\n                            }}\n                        >\n                            Syed Imad\n                        </Typography>\n                        <CustomButton\n                            label=\"Approve\"\n                            isTransaprent={\"true\"}\n                            buttonCss={{\n                                width: \"149px\",\n                                height: \"48px\",\n                            }}\n                        ></CustomButton>\n                    </div>\n                    <div className=\"name-approve\">\n                        <Typography\n                            style={{\n                                fontFamily: \"poppins\",\n                                fontSize: \"12px\",\n                                fontStyle: \"normal\",\n                                fontWeight: \"400\",\n                                lineHeight: \"18px\",\n                                letterSpacing: \"0.096px\",\n                            }}\n                        >\n                            Today | 10:00AM\n                        </Typography>\n                        <CustomButton\n                            label=\"Block\"\n                            buttonCss={{\n                                width: \"149px\",\n                                height: \"48px\",\n                            }}\n                        ></CustomButton>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default HCFAdminCard;\n","import React,{useState, useEffect} from \"react\";\n// import \"./SuperAdminDoctor.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport { Box, Typography, CircularProgress, Pagination, Skeleton} from \"@mui/material\";\nimport DateModal from \"../../../components/DateModal/DateModal\";\nimport FilterModal from \"../../../components/FilterModal/FilterModal\";\nimport HCFAdminCard from \"../../../components/Card/HCFadminCard/HCFAdminCard\";\nimport CustomButton from \"../../../components/CustomButton\";\nimport { PaginationCard } from \"../../../PatientDashboard/PatientAppointment/PatientCards\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst SuperAdminHCF = () => {\n    const [cardData, setCardData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const[currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 3;\n\n    const fetchData = async () => {\n        setLoading(true);\n        try{\n            const resp = await axiosInstance.get('/sec/superadmin/acessibility/hcf');\n            console.log(\"Dashboard Response from API: \",resp?.data);\n            setCardData(resp?.data?.response || []);\n        }catch(err){\n            console.log(\"Error : \", err);\n        }finally {\n            setLoading(false);\n        }\n      };\n      \n      useEffect( () => {\n        fetchData();\n      },[] )\n    \n    React.useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"acessibility\");\n        localStorage.setItem(\"path\", \"hcf\");\n\n        const timer = setTimeout(() => {\n            setLoading(false);\n            setCardData([\n                { id: 1, name: \"Healthcare Facility 1\" },\n                { id: 2, name: \"Healthcare Facility 2\" },\n                { id: 3, name: \"Healthcare Facility 3\" },\n                { id: 4, name: \"Healthcare Facility 4\" },\n                { id: 5, name: \"Healthcare Facility 5\" },\n            ]);\n        }, 1000);\n\n        return () => clearTimeout(timer);\n    }, []);\n\n    const renderSkeletons = () => (\n        <>\n            <Skeleton variant=\"rectangular\" height={150} style={{ borderRadius: \"10px\", marginBottom: \"1rem\" }} />\n            <Skeleton variant=\"rectangular\" height={150} style={{ borderRadius: \"10px\", marginBottom: \"1rem\" }} />\n            <Skeleton variant=\"rectangular\" height={150} style={{ borderRadius: \"10px\", marginBottom: \"1rem\" }} />\n        </>\n    );\n\n    const handlePageChange = (event, newPage) => {\n        setCurrentPage(newPage);\n    };\n    \n    const paginatedData = cardData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);;\n\n\n\n    return (\n    <>\n    {loading ? (\n            <div className=\"loader-container\">\n            <div className=\"nav-d-f-container\">\n            <nav className=\"NavBar-Container-Appoinement\">\n                            <Skeleton variant=\"text\" width=\"30%\" height={30} style={{ marginRight: '1rem' }} />\n                            <Skeleton variant=\"text\" width=\"30%\" height={30} style={{ marginRight: '1rem' }} />\n                            <Skeleton variant=\"text\" width=\"30%\" />\n                        </nav>\n                        <div className=\"date-filter1\">\n                            <Skeleton variant=\"rectangular\" width={80} height={40} style={{ marginRight: '1rem' }} />\n                            <Skeleton variant=\"rectangular\" width={80} height={40} />\n                        </div>\n                    </div>\n                    <div className=\"doctor-container\">\n                        {renderSkeletons()}\n                        <div style={{ marginTop: \"2rem\", display: \"flex\", justifyContent: \"Right\" }}>\n                            <Skeleton variant=\"rectangular\" width={120} height={40} />\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <>\n                    <div className=\"nav-d-f-container\">\n                <nav className=\"NavBar-Container-Appoinement\">\n                    <NavLink to={\"/superadmin/accessibility/doctors\"}>Doctor</NavLink>\n                    <NavLink to={\"/superadmin/accessibility/patient\"}>Patient</NavLink>\n                    <NavLink to={\"/superadmin/accessibility/hcf\"}>HCF</NavLink>\n                </nav>\n                <div className=\"date-filter1\">\n                    <DateModal />\n                    <FilterModal />\n                </div>\n            </div>\n            <div className=\"doctor-container\">\n            {paginatedData.map((data, index) => (\n                            <HCFAdminCard key={index} data={data} />\n                        ))}\n                        <Box display=\"flex\" justifyContent=\"right\" mt={2}>\n                            <Pagination\n                                count={Math.ceil(cardData.length / itemsPerPage)}\n                                page={currentPage}\n                                onChange={handlePageChange}\n                                color=\"primary\"\n                                \n                            />\n                        </Box>\n                     </div>\n                 </>\n              )}\n         </>\n     );\n};\nexport default SuperAdminHCF; \n\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + __webpack_require__.h() + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + __webpack_require__.h() + \".css\";\n};","__webpack_require__.h = () => (\"fe511b5e8af44ec24fd9\")","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = (chunkId, fullhref, oldTag, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.miniCss = (chunkId, promises) => {\n\tvar cssChunks = {\"50\":1,\"86\":1,\"99\":1,\"148\":1,\"193\":1,\"227\":1,\"279\":1,\"308\":1,\"312\":1,\"598\":1,\"605\":1,\"638\":1,\"661\":1,\"734\":1,\"752\":1,\"799\":1,\"887\":1,\"909\":1,\"942\":1,\"959\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(() => {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, (e) => {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(148 != chunkId) {\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksec_frontend\"] = self[\"webpackChunksec_frontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [121], () => (__webpack_require__(29150)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","makeStyles","Explore","cardData","setCardData","useState","hcfData","setHCFData","docnearme","setDocnearme","populardoc","setPopularDoc","fetureddoc","setFeturedDoc","nav_specialization","setNav_spelization","specializationDoc","setSpecializationDoc","specializationCardData","setspecializationCardData","loading","setLoading","fetchDoctorNearme","async","zipcodes","length","_response$data2","response","axiosInstance","post","JSON","stringify","type","page","limit","data","error","fetchZipcodeFromCurrentLocation","navigator","geolocation","getCurrentPosition","latitude","longitude","position","coords","_geoResponse$data","geoResponse","axios","get","concat","zipCode","address","postcode","_response$data3","fetchPopularDoctor","_response$data4","fetchfeaturedoctors","useEffect","localStorage","setItem","_response$data","fetchDataNew","_response$data5","fetchDataHCFCards","_resp$data","resp","err","navSpecializtion","scrollContainerRef","useRef","_response$data6","specialist","DoctorSpecialization","React","Box","sx","width","className","marginLeft","marginBottom","NavLink","to","CallCardData","linkPath","sendCardData","CardData","textField","display","justifyContent","alignItems","paddingBottom","fontWeight","top","left","onClick","handleScrollLeft","current","scrollLeft","ChevronLeftIcon","ref","style","overflowX","Array","isArray","map","specialization","index","CustomButton","key","department_name","toLowerCase","label","isTransaprent","buttonCss","borderRadius","padding","marginRight","whiteSpace","handleClick","handleScrollRight","ChevronRightIcon","flexWrap","gap","_","Skeleton","height","NoAppointmentCard","text_one","SuperAdminTranDoctors","fetchData","margin","border","borderColor","backgroundColor","Stack","direction","SearchIcon","color","Typography","variant","textAlign","DatePickerModal","marginTop","TableContainer","component","Paper","background","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","from","colSpan","message","user_id","scope","name","user_percentage","superadmin_percentage","createData","calories","fat","carbs","protein","action","rows","DoctorDetail","image","doc3","fontFamily","fontSize","fontStyle","lineHeight","letterSpacing","doc2","doc1","PackageDoctor","value","setValue","setTimeout","flexDirection","ToModal","tagname","row","Payout","_balance$settled","_balance$balance","activeDropdown","setActiveDropdown","openDialog","setOpenDialog","listItems","setListItems","checked","useCallback","updatedItem","updatedItems","item","snackOpen","setSnackOpen","snackMsg","setSnackMsg","snackType","setSnackType","balance","setBalance","settled","paid","setRows","setPage","rowsPerPage","setRowsPerPage","doctorId","Number","getItem","_listRes$data","balRes","params","doctor_id","listRes","offset","e","_e$response","load","toEmail","setToEmail","amount","setAmount","DoctorStatisticsNavbar","toFixed","isElevated","CustomModal","isOpen","conditionOpen","title","p","placeholder","onChange","target","_res$data","amt","isNaN","res","memo","batch_id","_e$response2","size","fill","slice","payout_id","Date","created_at","toLocaleString","payout_batch_id","currency","status","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","CustomSnackBar","FilterModal","radioVal","setRadioVal","CustomModalMUI","rightIcon","KeyboardArrowDownIcon","modalCss","transform","bgcolor","boxShadow","pt","px","pb","modaltitle","borderTop","borderRight","borderLeft","justifycontent","fontfamily","fontstyle","fontweight","lineheight","modalcontent","CustomDropdown","items","activeItem","handleChange","dropdowncss","CustomRadioButton","_ref","radioGroupCss","borderBottom","AuditCards","Id","MedicalServicesIcon","ManageDashboard","navigate","useNavigate","navigateToRoute","setNavigateToRoute","String","Outlet","src","NotFound","Link","convertTo12Hour","time24","timeOnly","includes","split","hours","minutes","hour","minute","isAppointmentTimeReached","appointmentDate","appointmentTime","backendJoinStatus","arguments","undefined","isDevelopment","process","env","REACT_APP_ENV","now","currentDate","currentTime","toISOString","toTimeString","istOffset","utc","getTime","getTimezoneOffset","istTime","appointmentDateStr","appointmentTimeStr","currentTimeMinutes","timeToMinutes","timeDifference","timeStr","seconds","radiocss","orientation","FormControl","FormLabel","id","RadioGroup","_objectSpread","idx","FormControlLabel","control","Radio","transition","animation","defaultProps","propTypes","PropTypes","AdminDoctorCard","SuperAdminImage","SuperAdminDoctor","currentPage","setCurrentPage","totalPages","Math","ceil","totalCards","doctorCards","timer","clearTimeout","startIndex","endIndex","currentCards","DateModal","Pagination","handlePageChange","test_id","about","service_day_from","service_day_to","minHeight","flexShrink","sub_exam_name","test_price","Divider","lab_working_days_from","lab_working_days_to","lab_working_time_from","lab_working_time_to","handleBuyClick","disableBackdropClick","HCFStepper","drimage","image1","hospital","rating","reviews","image2","image3","hcfID","containerRef","trim","overflow","IconButton","scrollbarWidth","scrollBehavior","dataprop","suid","textDecoration","DoctorCard","DrData","scrollRight","currencysign","HCFCardsData","_ref2","HCFDrCard","formatDate","isoDate","year","month","day","hour12","formatOnlyDate","formatDateDay","date","weekday","formatTime","timeString","isPM","onClose","planData","onPlanUpdated","formData","setFormData","plan_name","plan_fee","plan_duration","plan_description","snackMessage","setSnackMessage","isLoadingPlanData","setIsLoadingPlanData","renderKey","setRenderKey","planId","doctor_fee_plan_id","plan_id","_response$data$respon","DocListingPlan","plan","duration","newFormData","prev","fetchPlanData","handleInputChange","field","handleClose","zIndex","footer","disabled","payload","doctor_list_id","parseFloat","_error$response","CircularProgress","console","CustomTextField","CustomValue","textcss","required","multiline","planCardData","RendenDataAfterDelete","isDeleteVisible","isEditVisible","editModalOpen","setEditModalOpen","deletePlan","EditPlanModal","handlePlanUpdated","DeleteIcon","EditIcon","handleEditClick","validateStep","step","questions","validateDetailsStep","validateDateTimeStep","validateDurationStep","validateQuestionsStep","validatePaymentStep","isValid","errors","patient_type","push","gender","age","problem","appointment_date","appointment_time","answeredQuestions","Object","keys","filter","startsWith","unansweredCount","payment_method_nonce","getStepTitle","getStepSubtitle","validateMobileNumber","mobile","countryCode","cleanedMobile","cleanMobileNumber","minLength","getMinLengthForCountry","maxLength","getMaxLengthForCountry","test","pattern","getValidationPattern","getMobileHelperText","replace","PackagePatient","patient_id","package","EditListingButton","onEditClick","tooltip","props","_objectWithoutProperties","_excluded","Tooltip","arrow","placement","_extends","getSizeStyles","getVariantStyles","opacity","cursor","Idtype","Idnumber","onhandleClickButtonOne","buttonOneLabel","buttonTwoLabel","onhandleClickButtonTwo","showEditButton","statusLabel","statusColor","flex","Chip","mt","mb","braintreeAxios","create","baseURL","timeout","generateClientToken","clientToken","isDevelopmentMode","window","location","hostname","subtitle","actions","children","elevation","PageLoader","text","CustomChip","isTransparent","isDisabled","leftIcon","onChipClick","onRightIconClick","chipVariant","onDelete","icon","deleteIcon","borderWidth","MyLocationOutlined","isRequired","CustomCircularProgress","progress","trackWidth","indicatorWidth","trackColor","indicatorColor","indicatorCap","spinnerMode","spinnerSpeed","showPercentage","animated","center","radius","max","dashArray","PI","dashOffset","viewBox","cx","cy","r","stroke","strokeWidth","animationDuration","animationTimingFunction","strokeDasharray","strokeDashoffset","strokeLinecap","x1","y1","x2","y2","stopColor","stopOpacity","stdDeviation","result","in","Fade","textShadow","round","CustomLinearProgress","thickness","LinearProgress","getColorStyles","content","right","bottom","CustomTab","centered","fullWidth","showScrollButtons","allowScrollButtonsMobile","tabProps","indicatorProps","currentIdx","setCurrentIdx","Tabs","newValue","scrollButtons","tabItem","badge","chip","Tab","textTransform","Badge","badgeContent","CustomToggleSwitch","optionLabels","small","htmlFor","CustomList","handleToggle","showDescription","showAvatar","maxWidth","labelText","descriptionText","List","labelId","ListItem","secondaryAction","Checkbox","edge","inputProps","disablePadding","ListItemButton","ListItemAvatar","Avatar","alt","ListItemText","primary","secondary","Fragment","SearchBarModalCard","first_name","middle_name","last_name","qualification","average_review","hospital_org","profile_picture","profilePicture","Card","CardMedia","DefaultDoctorImage","objectFit","CardContent","flexGrow","my","StarIcon","SearchBarModal","open","setOpen","searchValue","setSearchValue","setError","searchInputRef","handleOpen","fetchSearchResult","func","delay","_len","args","_key","debounce","focus","xs","sm","paddingX","role","tabIndex","onKeyDown","Modal","maxHeight","overflowY","outline","CloseIcon","TextField","inputRef","InputProps","startAdornment","InputAdornment","spacing","frontimg","front_end_url","LocationModal","postalCodes","setPostalCodes","isButtonClicked","setIsButtonClicked","loadingCurrentLocation","setLoadingCurrentLocation","searchLocation","setSearchLocation","centerCoordinates","setCenterCoordinates","doctors","setDoctors","locname","setLocname","geolocationError","setGeolocationError","fetchPostalCodesWithinGeofence","gridSize","postalCodesSet","Set","latLngPoints","generateGridPoints","i","point","fetchPostalCode","add","_data$address","url","fetch","json","lat","lng","x","y","sqrt","latLng","cos","fetchDoctors","zipcode","requestData","headers","doctorsData","LocationOnIcon","disableUnderline","onKeyPress","lon","display_name","handleSearch","userCoordinates","locationName","code","GpsFixedIcon","city","handlePopularCitySelect","doctor","UserContextProvider","createContext","UserProvider","setDoctor","patient","setPatient","hcf","setHcf","clinic","setClinic","diagnost","setDiagnost","Provider","DoctorLogin","user","PatientLogin","LogoutDoctor","LogoutPatient","HealthCare","LoginHcf","DiagnostLogin","LogoutClinic","LogoutDiagnost","ClinicLogin","useAuthentication","useContext","NotificationMenu","notifications","setNotifications","getNotification","signUpType","patientId","staffId","docId","clinicId","endpoint","Notify","handleProfileMenuOpen","n","is_read","NotificationsIcon","gutterBottom","notification","_notification$paramet","_notification$paramet2","_notification$paramet3","notification_id","divider","parameters","recipient","fourth","Button","put","markAsRead","API_BASE","API_ENDPOINTS","AUTH","LOGIN","REGISTER","VERIFY_OTP","RESEND_CODE","VERIFY_EMAIL","FORGOT_PASSWORD","CHANGE_PASSWORD","UPDATE_PROFILE","LOGOUT","CHECK_FORCE_LOGOUT","REFRESH_TOKEN","RESET_PASSWORD","PATIENT","DASHBOARD_DOCTOR_DETAIL","DOCTOR_NEAR_ME","POPULAR_DOCTORS","FEATURED_DOCTORS","DASHBOARD_HCF_DETAILS","DOCTOR_DEPARTMENTS","DOCTORS_BY_DEPT","DOCTOR_DETAILS_BY_ID","GET_APPOINTMENT_SLOTS","CREATE_APPOINTMENT","CREATE_APPOINTMENT_HCF_DOCTOR","GET_AVAILABLE_APPOINTMENT_DATES","CREATE_APPOINTMENT_PACKAGE_SELECT","CREATE_APPOINTMENT_PACKAGE_QUESTION","UPCOMING_APPOINTMENTS","REJECT_APPOINTMENT","CANCELLED_APPOINTMENTS","COMPLETED_APPOINTMENTS","LEAVE_REVIEW","PATIENT_PROFILE","UPDATE_PATIENT_PROFILE","PUT_SOCKET_ID","DOCTOR","DASHBOARD_COUNT","DASHBOARD_APP_IN_PROGRESS","DASHBOARD_APP_BOOKED","DASHBOARD_APP_COMPLETED","EARNING_COUNT","AFFILIATE_EARNING_COUNT","TOTAL_EARNING_COUNT","ALL_EARNING_LIST","APPOINTMENT_REQUESTS","APPOINTMENT_REQUESTS_ACCEPT","APPOINTMENT_REQUESTS_REJECT","LISTING_CREATE_UPDATE","PLAN_CREATE","PLAN_ALL","PLAN_UPDATE","PLAN_DELETE","PLAN_BY_ID","QUESTION_CREATE","QUESTION_UPDATE","QUESTION_DELETE","QUESTION_ALL","QUESTION_BY_ID","TERMS_CREATE_UPDATE","LISTING_PLAN_ACTIVE","LISTING_PLAN_DEACTIVE","DELETE_DOC_LISTING_PLAN","DOC_LISTING_ACTIVE_DEACTIVE","AUDIT_LOGS","APPOINTMENT_HISTORY","TRANSACTIONS","HCF","ADD_DOCTOR","ADD_DOCTOR_WORKING_DETAILS_AND_PLAN","CLINIC_APPOINTMENT_ACCEPT","CLINIC_APPOINTMENT_REJECT","JOIN_APPOINTMENT_CLINIC","LAB_DEPARTMENTS","PAYMENT","GENERATE_TOKEN","DOCTOR_BALANCE","PAYOUTS","PAYOUT","REPORTS","UPLOAD_APPOINTMENT_FILE_TO_S3","MASTER_DATA","COUNTRIES","DEPARTMENTS","AuthService","login","loginData","Accept","register","verifyOtp","otp","otp_code","resendCode","verifyEmail","forgotPassword","email","changePassword","updateProfile","logout","checkForceLogout","refreshToken","resetPassword","logoutUser","forceLogout","useAuth","setUser","isAuthenticated","setIsAuthenticated","checkAuth","userInfo","getCurrentUser","isTokenValid","clearAuthData","options","success","forceLogoutUser","refreshUser","checkLoginStatus","sessionStorage","checkForceLogoutStatus","is_logged_out","forceLoggedOut","userId","roleId","isTokenExpired","isExpired","profilepath","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isLoggingOut","setIsLoggingOut","profileImage","setProfileImage","isLoadingProfile","setIsLoadingProfile","profile","isMenuOpen","Boolean","handleMenuClose","Authentication","_response4","_response5","_response6","hcf_id","processedImage","processProfileImage","DocImg","fetchUserProfileImage","handleStorageChange","addEventListener","handleProfileUpdate","_e$detail","detail","removeEventListener","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","TransitionComponent","PaperProps","backdropFilter","onError","MenuItem","PersonIcon","confirm","clearLocalData","callServer","clear","Cookies","remove","LogoutIcon","currentTarget","AccountCircle","drawerWidth","openedMixin","theme","transitions","easing","sharp","enteringScreen","closedMixin","leavingScreen","breakpoints","up","DrawerHeader","styled","AppBar","MuiAppBar","shouldForwardProp","prop","drawer","Drawer","MuiDrawer","_ref3","boxSizing","CustomMenuDrawer","_ref4","list1","list2","handleOnMenuSelect","useTheme","isMobile","useMediaQuery","down","between","selectedItem","setSeletedItem","mobileOpen","setMobileOpen","isMobileMenuOpen","role_id","handleMobileMenuClose","alert","renderMobileMenu","handleDrawerOpen","handleDrawerClose","handleSelectItem","logos","hcf_admin","hcf_logo","doc_logo","diagnostic_center","dig_logo","clinic_logo","default","logoSrc","CssBaseline","Toolbar","handleMobileDrawerToggle","md","MenuIcon","Notificationmenu","Profilemenu","ModalProps","ChevronRight","ChevronLeft","mx","ListItemIcon","mr","SwipeableDrawer","anchor","onOpen","lg","headerLabel","Usage","radioValues","dropdownItems","drawerList1","Inbox","StarRate","Drafts","drawerList2","Delete","Info","DrawerChildComponents","isOn","setIsOn","checkVal","setCheckVal","activeFabDropdown","setActiveFabDropdown","showSnack","setShowSnack","textField1","setTextField1","textField2","setTextField2","textField3","setTextField3","textField4","setTextField4","textField5","setTextField5","textField6","setTextField6","handleClickChips","handleDelete","handleCheckList","ArrowCircleLeftOutlined","CloseOutlined","defaultValue","helperText","isInvalid","CustomCheckBox","isFabIcon","fabIcon","Settings","isText","actionLabel","handleAction","StarredComponent","DraftsComponent","TrashComponent","SpamComponent","drawerComponentList","usage","starred","drafts","trash","spam","activeComponent","setActiveComponent","showPassword","setShowPassword","setEmail","password","setPassword","showError","setShowError","errorMessage","setErrorMessage","errorMessageOpen","setErrorMessageOpen","helperTextMessage","setHelperTextMessage","passwordHelperTextMessage","setPasswordHelperTextMessage","invalidUserMessage","setInvalidUserMessage","authLogin","emailRegex","passwordRegex","VisibilityIcon","VisibilityOffIcon","login_with_email","resData","body","access_token","decodeJWT","set","expires","errMsg","forgotpassword","EmailValidation","disableButton","setDisableButton","onInput","match","ForgotPasswordOTP","setOtp","fetchEmail","snackbarState","setSnackbarState","hideDuration","CustomOTPInput","numInputs","activation_code","ForgotPasswordChange","confirmPassword","setConfirmPassword","isDisabledButton","setIsDisabledButton","showSnackError","setShowSnackError","responseMessage","setResponseMessage","error_responseMessage","setError_responseMessage","navigateionPath","_event$target","_event$target2","_event$target3","new_password","constructor","this","getCountries","searchCountries","query","search","getCountryByCode","iso2Code","getCountryByDialCode","dialCode","transformCountriesData","apiResponse","entries","country","iso2","flag","getCountryFlag","priority","areaCodes","codePoints","toUpperCase","char","charCodeAt","fromCodePoint","getFallbackCountries","CustomCountryCodeSelector","defaultCountryCode","defaultCountryName","defaultCountryFlag","noSpacing","countries","setCountries","countryService","selectedCountry","setSelectedCountry","mobileNumber","setMobileNumber","isLoading","setIsLoading","isDropdownOpen","setIsDropdownOpen","searchQuery","setSearchQuery","fetchCountries","transformedCountries","validCountries","defaultCountry","find","fallbackCountries","filteredCountries","useMemo","handleCountrySelect","fullMobileNumber","countryName","countryFlag","handleMobileNumberChange","Select","c","displayEmpty","renderValue","selected","MenuProps","py","MUIInputAdornment","useMobileValidation","initialCountryCode","debounceDelay","setMobile","setCountryCode","setCountryName","setCountryFlag","validationErrors","setValidationErrors","validationTimer","setValidationTimer","debouncedValidateMobile","mobileValue","countryCodeValue","mobileValidation","handleCountryCodeChange","newCountryCode","newCountryName","newCountryFlag","handleMobileInput","validateMobile","resetValidation","resetAll","getHelperText","isFormValid","getCleanMobileNumber","isMobileValid","mobileErrorMessage","canSubmit","LoginWithOtp","typeOfUser","snackbar","setSnackbar","roleID","roleRoutes","path","preventDefault","dialing_code","country_name","roleInfo","LoginWithOtpVerify","showSnackbar","dialingCode","handleLoginRedirect","emailKey","uidKey","cookieEmailkey","errorMsg","patientsignup","showPasswordConfirm","setShowPasswordConfirm","module","setModule","moduleName","setModuleName","submitButtonEnable","setSubmitButtonEnable","mobileValidationErrors","isMobileFormValid","navigateToLogin","setData","moduleType","handleMobileDataUpdate","countryNameValue","prevData","emailValidation","validateEmail","copy","passwordValue","passwordValidation","validatePassword","inputType","confirmPasswordValue","confirmPasswordValidation","validateConfirmPassword","originalPassword","values","every","_error$response2","steps","PatientCompleteProfile","activeStep","setActiveStep","skipped","setSkipped","openSnackBar","setOpenSnackBar","snackBarMessage","setSnackBarMessage","snackBarType","setSnackBarType","countryValues","setCountryValue","countryNames","setCountryNames","stateValue","setStateValue","stateName","setStateName","stateNames","setStateNames","cityValues","setCityValues","cityNames","setCityNames","selectedCountryFromDropDown","setSelectedCountryFromDropDown","selectCityFromDropDown","setSelectCityFromDropDown","citySelected","setCitySelected","getCurrentUserId","getCurrentRoleId","userEmail","getCurrentUserEmail","added_by","DOB","country_id","state_id","city_id","street_address1","street_address2","zip_code","isStepOptional","isStepSkipped","has","handleNext","newSkipped","delete","prevActiveStep","FetchCountryNames","FetchStateNames","patientSuid","patientEmail","patientMobile","patientDialingCode","CountryValues","CountryName","StateValues","StateName","state_name","_selectedCountryFromD","_selectCityFromDropDo","CityValues","cityName","_response$data7","_response$data8","_response$data9","city_name","FetchCityNames","ImageFrame","handleBack","Stepper","stepProps","labelProps","completed","Step","StepLabel","ClassicFrame","borderBottomColor","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","dayjs","toDate","slotProps","minwidthDropDown","_response$2","_country$country_name","_response$3","state","_state$state_name","_response$4","_city$city_name","cleanEmail","cleanMobile","cleanDialingCode","cleanSuid","formattedData","EmailVerification","isSubmitting","setIsSubmitting","alignContent","emailFromCookie","_error$response4","patientpersonalinformation","patientcontactinformation","patientpaymentinformation","hcflogin","Homes","showBurger","setShowBurgerMenu","toggleMenu","menu","document","querySelector","classList","toggle","ImageLogo","logo","FirstImage","Grid","container","FirstStepImage","SecondStepImage","ThirdStepImage","SecondRowImage","ThirdImage","paddingLeft","LastImage","AllDoctors","whiteframe","LinkedIn","Twitter","Instagram","Facebook","ScrewDoctor","Alldoctor","Whitelogo","AboutLanding","VisualImage","SillyImage","DoctorAuthentication","useLocation","hasValidToken","Navigate","pathname","PatientAuthentication","HealthCareAuthentication","_location","ClinicAuthentication","DiagnostAuthentication","_ref5","MainDashboard","getElementById","AppointmentDashboard","BodyDashboard","setActiveItem","setProfile","SettingsIcon","dashboard","appointment","manage","selectedItems","Profile","isEditing","setIsEditing","profileLink","setProfileLink","isopen","setIsopen","snackStatus","setSnackStatus","contactLink","setContactLink","profileUpdate","setProfileUpdate","updatedProfilePic","dispatchEvent","CustomEvent","profileData","fetchDataProfile","handleProfilePictureChange","file","files","reader","FileReader","onloadend","base64Data","readAsDataURL","isActive","toggleEditMode","CameraAltIcon","accept","hidden","startIcon","formattedDate","format","selectedValue","paddingTop","ContainerOne","Fname","Mname","Lname","Qualification","DrImage","worktime","hcfDoc","classes","drname","cardContainer","BookAppointmentContainer","BookAppointmentContainerDetails","useStyles","useParams","ID","resID","hcddocid","dotLogo","getProfileImageSrc","BookAppointmentModal","drID","doctorTotalconsultations","doctorTotalReviews","doctorTotalExperience","doctorAverageRating","personIcon","bagIcon","starIcon","messageIcon","description","review","showAll","setShowAll","dummyReviews","review_type","reviewsToShow","starIndex","StarBorderIcon","ContainerFour","University","YearOfQualification","doctorLicense","doctorAward","doctorExperience","fourthContainer","fourthInnerContainer","logoDesign","SchoolIcon","universityFields","license","CardMembershipIcon","lic_title","lic_issuedby","lic_date","lic_certificate_no","lic_description","award","EmojiEventsIcon","award_title","award_issuedby","award_date","award_description","experience","BusinessCenterIcon","job","organisation","from_date","to_date","RegDate","Description","StateReg","CountryReg","DepartmentName","Gender","html","DrDetailsCard","drCardData","setDrCardData","setReview","setloading","setDoctorLicense","setDoctorAward","setDoctorExperience","setDoctorTotalconsultations","setDoctorAverageRating","setDoctorTotalReviews","setDoctorTotalExperience","doctorAwards","doctorReviewData","drimg","DrId","working_days_start","working_days_end","working_time_start","working_time_end","ContainerTwo","ContainerThree","qualified_year","reg_date","state_reg_number","country_reg_number","university_name","img","Received","tableData","setTableData","patientID","setPatientID","openModal","setOpenModal","pdfUrl","setPdfUrl","currentData","_row$date","_row$tbook_timeime","BookingID","RecieveTable","lab_department_name","report_name","test_name","tbook_timeime","reportPath","report_path","link","createElement","href","download","click","handleDownload","FileDownloadIcon","Document","onLoadError","Page","pageNumber","Shared","displayedData","_row$time","ShareTable","doctor_name","time","appendChild","removeChild","category","Upcoming","upcomingData","setUpcomingData","setFlag","timeUpdate","setTimeUpdate","ChangeTheFlag","Changeflag","status_in_progress","status_booked","interval","setInterval","clearInterval","AppointmentNavbar","ButtonLabel","ButtonPath","text_two","canJoin","join_status","UpcomingCard","reject","rescheduled","join","appointment_id","roomid","changeFlagState","alignSelf","Completed","completedData","setCompletedData","setPatient_id","itemsPerPage","setItemsPerPage","status_complete","CompletedCard","pid","did","aid","Cancelled","cancelledData","setCancelledData","status_cancel","CancelledCard","Payment","handleSubmit","paypal","setPaypal","googlepay","setGooglepay","phonepay","setPhonepay","cardname","setCardname","cardno","setCardno","expirydate","setExpirydate","cvv","setCvv","borderTopColor","PayPalLogo","GoogleLogo","PhonePay","ContactDetails","submitDataFlag","setSubmitDataFlag","updateUserData","setUpdateUserData","_response$data0","_response$data1","_response$data10","_response$data11","_response$data12","_response$data13","_response$data14","submitData","history","back","DoctorMainDashboard","URLSearchParams","DoctorAppointmentDashboard","DoctorManage","DoctorListing","DoctorStatistics","ListAltIcon","AnalyticsIcon","listing","statistics","invalidUser","setInvalidUser","errorState","setErrorState","HCFRoleType","DiagnosticLogin","emailValid","setEmailValid","passwordValid","setPasswordValid","islogin","setIslogin","HCFDiagnosticCenterMainDashboard","DiagnosticCenterReports","pathFromStorage","cachedPath","removeItem","DiagnosticCenterProfile","DiagnosticCenterManage","reports","ClinicDashboard","ClinicMyAppointments","ClinicProfile","ClinicManage","myappointment","ROUTES","HOME","HOW_IT_WORKS","ABOUT_LANDING","USAGE","SELECT_ROLE_LOGIN","SELECT_ROLE_SIGNUP","SELECT_HCF_PROFILE_TYPE","SELECT_HCF_SIGNUP","PATIENT_LOGIN","HCF_ADMIN_LOGIN","SUPER_ADMIN_LOGIN","DOCTOR_LOGIN","CLINIC_LOGIN","DIAGNOST_CENTER_LOGIN","PATIENT_SIGNUP","DOCTOR_SIGNUP","HCF_ADMIN_SIGNUP","DIAGNOST_CENTER_SIGNUP","DIAGNOST_CLINIC_SIGNUP","FORGOT_PASSWORD_OTP","FORGOT_PASSWORD_CHANGE","LOGIN_WITH_OTP","LOGIN_WITH_OTP_VERIFY","EMAIL_VERIFICATION","PATIENT_COMPLETE_PROFILE","PATIENT_PERSONAL_INFORMATION","PATIENT_CONTACT_INFORMATION","PATIENT_PAYMENT_INFORMATION","DOCTOR_COMPLETE_PROFILE","CLINIC_DOCTOR_COMPLETE_PROFILE","PATIENT_DASHBOARD","DOCTOR_DASHBOARD","HCF_ADMIN","SUPER_ADMIN","CLINIC_DASHBOARD","DIAGNOST_CENTER_DASHBOARD","PATIENT_DASHBOARD_MAIN","PATIENT_DASHBOARD_EXPLORE","PATIENT_DASHBOARD_MY_ACTIVITY","PATIENT_DASHBOARD_PROFILE","PATIENT_DASHBOARD_PAYMENT","PATIENT_DASHBOARD_CONTACT","PATIENT_DASHBOARD_PATIENT_HCF","PATIENT_APPOINTMENT","PATIENT_APPOINTMENT_UPCOMING","PATIENT_APPOINTMENT_COMPLETED","PATIENT_APPOINTMENT_CANCELLED","PATIENT_APPOINTMENT_CHAT","PATIENT_APPOINTMENT_CHAT_PAGE","PATIENT_MANAGE","PATIENT_MANAGE_BOOKING_HISTORY","PATIENT_MANAGE_TRANSACTIONS","PATIENT_MANAGE_REPORTS","PATIENT_MANAGE_REPORTS_REQUEST","PATIENT_MANAGE_REPORTS_EXAMINED","PATIENT_MANAGE_REPORTS_RECEIVED","PATIENT_MANAGE_REPORTS_SHARED","PATIENT_MANAGE_SUBSCRIPTIONS","PATIENT_ACTIVITY_RECEIVED","PATIENT_ACTIVITY_SHARED","PATIENT_DOCTOR_DETAILS","PATIENT_HCF_DOCTOR_DETAILS","PATIENT_HCF_DETAILS","PATIENT_HCF_DETAILS_ABOUT","PATIENT_HCF_DETAILS_DEPARTMENT","PATIENT_HCF_DETAILS_LABS","DOCTOR_DASHBOARD_MAIN","DOCTOR_DASHBOARD_REQUEST","DOCTOR_DASHBOARD_NOTIFICATION","DOCTOR_APPOINTMENT","DOCTOR_APPOINTMENT_REQUEST","DOCTOR_APPOINTMENT_UPCOMING","DOCTOR_APPOINTMENT_COMPLETED","DOCTOR_APPOINTMENT_CANCELLED","DOCTOR_APPOINTMENT_CHATS","DOCTOR_APPOINTMENT_VIDEO_CALL","DOCTOR_APPOINTMENT_VOICE_CALL","DOCTOR_LISTING","DOCTOR_LISTING_DETAILS","DOCTOR_LISTING_CREATE","DOCTOR_LISTING_ACTIVE","DOCTOR_LISTING_SAVED_DRAFT","DOCTOR_MANAGE","DOCTOR_MANAGE_PROFILE","DOCTOR_MANAGE_STAFF","DOCTOR_MANAGE_AUDIT_LOG","DOCTOR_STATISTICS","DOCTOR_STATISTICS_OVERVIEW","DOCTOR_STATISTICS_BOOKING_HISTORY","DOCTOR_STATISTICS_TRANSACTIONS","DOCTOR_STATISTICS_PAYOUT","HCF_ADMIN_MAIN","HCF_ADMIN_DOCTOR","HCF_ADMIN_DOCTOR_ADD","HCF_ADMIN_DOCTOR_LISTING","HCF_ADMIN_DOCTOR_STAFF","HCF_ADMIN_DOCTOR_AUDIT_LOG","HCF_ADMIN_DIAGNOSTIC_CENTER","HCF_ADMIN_DIAGNOSTIC_CENTER_LABS","HCF_ADMIN_DIAGNOSTIC_CENTER_LAB_DETAILS","HCF_ADMIN_DIAGNOSTIC_CENTER_REPORTS","HCF_ADMIN_DIAGNOSTIC_CENTER_CHARTS","HCF_ADMIN_DIAGNOSTIC_CENTER_CHATS","SUPER_ADMIN_MAIN","SUPER_ADMIN_USERS","SUPER_ADMIN_TRANSACTIONS","SUPER_ADMIN_TRANSACTIONS_DOCTOR","SUPER_ADMIN_TRANSACTIONS_HCF","CLINIC_DASHBOARD_MAIN","CLINIC_DASHBOARD_APPOINTMENT","CLINIC_DASHBOARD_DOCTOR","CLINIC_DASHBOARD_STAFF","CLINIC_DASHBOARD_REPORTS","DIAGNOST_CENTER_DASHBOARD_MAIN","DIAGNOST_CENTER_DASHBOARD_APPOINTMENT","DIAGNOST_CENTER_DASHBOARD_DOCTOR","DIAGNOST_CENTER_DASHBOARD_STAFF","DIAGNOST_CENTER_DASHBOARD_REPORTS","VIDEO_CALLING_SDK","CHAT_ROOM","USER_TYPES","HEALTHCARE_FACILITY","STORAGE_KEYS","USER_TYPE_ROUTES","USER_TYPE_STORAGE_VALUES","useSignupSelection","navigateTo","navigateAndStore","useNavigation","route","navigateReplace","navigateBack","getCurrentRoute","isCurrentRoute","navigateWithState","navigateWithQuery","queryString","toString","fullRoute","storageKey","getStoredRoute","currentRoute","selectedType","setSelectedType","validateSelection","storageValue","handleRadioChange","handleErrorClose","SelectRoleSignup","isTablet","responsiveStyles","radioButton","continueButton","isTransapent","Snackbar","autoHideDuration","Alert","severity","subMessage","showProgress","progressSize","progressThickness","progressColor","disableEscapeKeyDown","Dialog","transitionDuration","DialogContent","defaultTitle","defaultMessage","defaultSubMessage","setTitle","setMessage","setSubMessage","showLoader","config","hideLoader","updateMessage","showLoaderWithPromise","promise","showDoctorVerification","showPaymentProcessing","showEmailVerification","showProfileUpdate","DoctorCompleteProfile","departmentName","setDepartmentName","departmentValue","setDepartmentValue","departmentDropDown","setDepartmentDropdown","flagToSendDoctorData","setFlagToSendDoctorData","speciality_id","degree","state_reg_date","country_reg_date","updatedUserSuccesfully","setUpdatedUserSuccesfully","showSnackBar","setShowSnackBar","isVerifying","verificationMessage","useVerificationLoader","fetchDepartmentName","doctorSuid","doctorEmail","DepartmentValues","PostUserData","dataToSend","VerificationLoader","views","_country$department_n","department_id","_response$5","SelectHCFSignup","HCFAdminDashboard","AdminDoctor","AdminDiagnosticCenter","AdminManage","diagnosticcenter","HCFDoctorActive","AllDoctorTable","clinic_status","pen","DoctorInfo","existingQuestions","setExistingQuestions","snack","setSnack","msg","loadQuestions","val","addBlank","question","ans_1","ans_2","ans_3","ans_4","q","doctor_questions_id","setDescription","TextareaAutosize","minRows","HCFAddDoctors","setAge","emailError","setEmailError","mobileError","setMobileError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","snacksuccess","setSnacksuccess","snacksuccessMessage","setSnacksuccessMessage","listing_name","setLiting_name","snackerror","setSnackerror","snackerrorMessage","setSnackerrorMessage","setIsFormValid","listingName","setListingName","dateRange","setDateRange","timeRange","setTimeRange","enableLising","setEnableListing","doctorsuid","setDoctorsuid","doctorListId","setDoctorListId","isModalOpen","setModalOpen","addPlanVisible","setAddPlanVisible","plandata","setplandata","renderthedataAfterDelete","setRenderTheApiAfterDelete","renderDataAfterAddPlan","setRenderDataAfterAddPlan","snackmessage","setSnackmessage","createListing","setCreateListing","postcreatelisting","setPostcreatelisting","setIsOpen","closeModal","mobileRegex","inputDateStr","getFullYear","getMonth","padStart","getDate","listId","docListingCreate","docListingUpdated","resetForm","postCreateListing","registerHcfClinicDoctor","handleEmailChange","verifyDocOTP","handleMobileChange","handlePasswordChange","DemoContainer","components","DateRangePicker","localeText","start","CalendarTodayIcon","end","minDate","newRange","MultiInputTimeRangeField","_newRange$","_newRange$2","_newRange$3","_newRange$4","AddIcon","ListingModal","RenderDataAfterAddingPlan","showSaveButton","enableAdditionalButton","additionalButtonName","onAdditionalButtonClick","saveButtonEnable","AddPlanCard","HCFAddQuestioner","HCFAddTerms","AddPackageTable","heading","cost","HCFAddPackage","CheckBoxIcon","AdminManageAuditLog","sortedData","sort","a","b","cellStyle","actionidStyle","action_id","ServiceDetails","serviceDayFrom","setServiceDayFrom","serviceDayTo","setServiceDayTo","serviceTimeFrom","setServiceTimeFrom","serviceTimeTo","setServiceTimeTo","CustomDatePicker","CustomTimePicker","handleReset","handleSkip","Error","prevSkipped","HcfAdminSignUp","hcf_name","reg_no","category_id","service_time_from","service_time_to","lab_department_id","diag_indian_reg_no","hcfCategory","setHcfCategory","hcfItems","departments","setDepartments","hcfAdminSuid","hcfAdminEmail","emailFromJWT","emailFromStorage","emailFromJWTStorage","emailFromLogin","finalEmail","finalData","departmentData","categoryMap","Clinic","Both","selectedCategory","department","handleCheckboxChange","updatedLabIds","labId","TermsAndCondition","submitApiFlag","setSubmitApiFlag","setType","mode","listingId","setUnifiedListingId","useListingMode","StepHeader","SectionCard","maxRows","DoctorPersonalInfo","snackBar","setSnackBar","DocProf","council_name","handleImageChange","onload","dataUrl","onerror","Copy","handleDropdownChange","dropdownName","updatedData","_response$","WorkIcon","ProfessionalDetails","isEditing1","setIsEditing1","professional","setProfessional","selectedDepartment","setSelectedDepartment","labDepartments","setLabDepartments","setExperience","setAward","licenses","setLicenses","setProfileData","isEditMode","setIsEditMode","experienceData","setExperienceData","jobTitle","organization","startDate","endDate","exp_id","openDialog1","setOpenDialog1","isEditMode1","setIsEditMode1","licenseData","setLicenseData","license_id","openDialog2","setopenDialog22","isEditMode2","setisEditMode2","awardData","setAwardData","award_id","fetchEducationDetails","educationData","fetchProfessionalDetails","professionalData","fetchProfileInfo","fetchDepartments","departmentItems","fetchExperience","fetchAwards","fetchLicenses","_departmentItems$find","departmentId","prevState","fetchProfessional","handleAdd","exp","LocalHospitalIcon","_experience$index","_experience$index2","_experience$index3","_experience$index4","_experience$index5","doctor_experience_id","handleEdit","handleAddAwa","awa","_award$index","_award$index2","_award$index3","_award$index4","_award$index5","doctor_awards_id","handleEditAwa","handleAddLic","lic","_licenses$index","_licenses$index2","_licenses$index3","_licenses$index4","_licenses$index5","_licenses$index6","doctor_license_id","handleEditLic","handleSave","handleChangeLic","lic_id","handleSaveLic","handleChangeAwa","handleSaveAwa","ShareList","labItems","setLabItems","staff_id","pdfFileName","setPdfFileName","pdfBase64","setPdfBase64","buttonloading","setButtonloading","snackBarOpen","setSnackBarOpen","_resp$data2","fetchLabsDepartments","handleFileInput","_file$target","uploadedFile","base64String","DiagnostCenterTableCard","book_date","class_name","maincontainerclassname","CustomSx","CloudUploadIcon","fileName","postReport","memoizedCardData","bookDate","book_time","testName","testFile","DiagnosticCenterChats","bgColor","setBgColor","DiagnosticCenterCharts","BookingHistoryDrCard","BookingId","BookingHistory","bookingHistoryData","setBookingHistoryData","paginatedData","colIndex","Transactions","transaction_id","ReceiveCard","TRXID","SendCard","Reports","PatientSearchTable","AllFiles","labID","lab_name","booking_id","scheduled","Examined","Subscriptions","subsLogo","VideoCall","setState","video","setVideo","cam","setCam","mini","john","mic","KeyboardVoiceIcon","handleCl","videocam","VideocamIcon","handleCli","camera","FlipCameraIosIcon","AttachmentIcon","CusttomButton","SendIcon","VoiceCall","Container1","company_name","business_name","handleBackClick","hcfpic","HCFDetailedCard","_hcfData$first_name","_hcfData$middle_name","_hcfData$last_name","_hcfData$company_name","_formatDateDay","_formatDateDay2","_hcfData$hcf_name","_hcfData$profile_pict","_hcfData$about","setHCFDataId","isError","setIsError","fetchDataHCFCardsId","fallbackText","Container4","SuperAdminDashboard","SuperAdminHistory","SuperAdminAccessibilty","SuperAdminLogsBody","SuperAdminTransaction","SuperAdminPackage","MonetizationOnIcon","ReceiptIcon","acessibility","logs","packages","transaction","DiagnostLabs","labData","setLabData","specificLab","lab","exam_id","fetchLabData","ArrowBackIcon","exam_name","DoctorBookingCard","SuperAdminLogs","totalRows","setTotalRows","pageNum","pageSize","totalCount","event_id","imageUrl","event_name","access_role","event_source","time_spent","toLocaleDateString","toLocaleTimeString","newRowsPerPage","TableData","dept","exam","DashboardTable","setOpenDialogCancle","setOpenDialogReschedule","openDialogCancle","openDialogReschedule","MoreHorizIcon","MenuListProps","AdminDashboard","patientCount","setPatientCount","doctorCount","setDoctorCount","healthcareFacilityCount","setHealthcareFacilityCount","DOCTORS","handleNavigate","Dept","Name","Examine","PatientDetail","pat3","pat2","pat1","SuperAdminMainDashboard","About","Department","departData","setDepartData","setNav_specialization","setSpecializationCardData","isLoadingNav","setIsLoadingNav","isLoadingCard","setIsLoadingCard","navSpecialization","Labs","specializationHCF","setSpecializationHCF","HCFLabDoctor","textWrap","SelectRoleLogin","HcfAdminLogin","apiError","SuperAdminLogin","MeetingAppContext","useMeetingAppContext","MeetingAppProvider","selectedMic","setSelectedMic","selectedWebcam","setSelectedWebcam","selectedSpeaker","setSelectedSpeaker","isCameraPermissionAllowed","setIsCameraPermissionAllowed","isMicrophonePermissionAllowed","setIsMicrophonePermissionAllowed","raisedHandsParticipants","setRaisedHandsParticipants","sideBarMode","setSideBarMode","pipMode","setPipMode","useRaisedHandParticipants","raisedHandsParticipantsRef","_handleRemoveOld","persisted","raisedHandOn","participantRaisedHand","participantId","newItem","participantFound","findIndex","pID","xmlns","maskType","maskUnits","d","mask","fillRule","clipRule","rx","clipPath","fillcolor","OutlinedButton","Icon","isFocused","lottieOption","disabledOpacity","renderRightComponent","large","btnID","focusIconColor","isRequestProcessing","buttonText","mouseOver","setMouseOver","mouseDown","setMouseDown","blinkingState","setBlinkingState","tooltipShow","setTooltipShow","btnRef","tooltipRef","intervalRef","iconSize","stopBlinking","s","onMouseEnter","createPopper","modifiers","onMouseLeave","onMouseDown","onMouseUp","transitionTimingFunction","Lottie","loop","autoPlay","animationData","rendererSettings","preserveAspectRatio","isClickToPauseDisabled","useIsTab","MobileIconButton","tooltipTitle","openTooltip","closeTooltip","class","nameTructed","tructedLength","substr","sideBarModes","useMediaStream","getVideoTrack","webcamId","encoderConfig","createCameraVideoTrack","cameraId","optimizationMode","multiStream","getAudioTrack","micId","createMicrophoneAudioTrack","microphoneId","PipBTN","isTab","pipWindowRef","togglePipMode","exitPictureInPicture","source","ctx","getContext","pipVideo","autoplay","stream","captureStream","drawCanvas","videos","querySelectorAll","fillStyle","fillRect","columns","getColCount","j","drawImage","pictureInPictureElement","requestAnimationFrame","srcObject","onloadedmetadata","requestPictureInPicture","play","getTracks","forEach","track","stop","PipIcon","MicBTN","getMicrophones","getPlaybackDevices","useMediaDevice","mMeeting","useMeeting","mics","setMics","speakers","setSpeakers","localMicOn","changeMic","MicOnIcon","MicOffIcon","toggleMic","WebCamBTN","getCameras","webcams","setWebcams","localWebcamOn","changeWebcam","WebcamOnIcon","WebcamOffIcon","toggleWebcam","BottomBar","bottomBarHeight","setIsMeetingLeft","RaiseHandBTN","publish","usePubSub","RaiseHand","RaiseHandIcon","ScreenShareBTN","localScreenShareOn","toggleScreenShare","presenterId","ScreenShareIcon","LeaveBTN","leave","EndIcon","ChatBTN","ChatIcon","ParticipantsBTN","_ref6","_Map","_Map2","participants","ParticipantsIcon","Map","MeetingIdCopyBTN","meetingId","isCopied","setIsCopied","clipboard","writeText","CheckIcon","ClipboardIcon","useIsMobile","BottomBarButtonTypes","END_CALL","CHAT","PARTICIPANTS","SCREEN_SHARE","WEBCAM","MIC","RAISE_HAND","RECORDING","PIP","MEETING_ID_COPY","otherFeatures","DotsHorizontalIcon","handleClickFAB","Transition","appear","show","as","handleCloseFAB","Child","enter","enterFrom","enterTo","leaveFrom","leaveTo","Panel","_ref7","ChatMessage","_mMeeting$localPartic","senderId","senderName","timestamp","localSender","localParticipant","getHours","getMinutes","ampm","ChatInput","inputHeight","input","autocomplete","shiftKey","messageText","_input$current","persist","_input$current2","PaperAirplaneIcon","ChatMessages","listHeight","listRef","messages","chatContainerRef","scrollTop","scrollHeight","ChatPanel","panelHeight","ParticipantListItem","raisedHand","micOn","webcamOn","displayName","isLocal","useParticipant","charAt","VideoCamOnIcon","VideoCamOffIcon","ParticipantPanel","sortedRaisedHandsParticipants","notRaised","rPID","part","peerId","SideBarTabView","sideBarContainerWidth","panelHeaderHeight","panelHeaderPadding","panelPadding","XIcon","SidebarConatiner","isLGDesktop","isXLDesktop","paddedHeight","color1","color2","color3","color4","CornerDisplayName","_audioStats$","_audioStats$2","_videoStats$","_videoStats$2","_audioStats$3","_audioStats$4","_videoStats$3","_videoStats$4","_audioStats$5","_audioStats$6","_audioStats$7","_videoStats$5","_videoStats$6","_videoStats$7","_audioStats$8","_audioStats$9","_videoStats$8","_videoStats$9","_videoStats$0","_videoStats$1","_videoStats$10","_videoStats$11","_videoStats$12","_videoStats$13","_audioStats$0","_audioStats$1","_videoStats$14","_videoStats$15","_videoStats$16","_videoStats$17","_videoStats$18","_videoStats$19","_videoStats$20","_videoStats$21","isPresenting","isActiveSpeaker","windowHeight","windowSize","setWindowSize","handleResize","innerWidth","innerHeight","useWindowSize","statsBoxHeightRef","setStatsBoxHeightRef","statsBoxWidthRef","setStatsBoxWidthRef","setCoords","statsBoxHeight","offsetHeight","statsBoxWidth","offsetWidth","analyzerSize","webcamStream","micStream","screenShareStream","getVideoStats","getAudioStats","getShareStats","statsIntervalIdRef","score","setScore","audioStats","setAudioStats","videoStats","setVideoStats","updateStats","stats","packetLossPercent","packetsLost","totalPackets","jitter","rtt","getQualityScore","qualityStateArray","audio","bitrate","framerate","codec","currentSpatialLayer","currentTemporalLayer","preferredSpatialLayer","preferredTemporalLayer","SpeakerIcon","MicOffSmallIcon","stopPropagation","Popover","close","rect","getBoundingClientRect","scrollY","NetworkIcon","ReactDOM","ParticipantView","micRef","mediaStream","MediaStream","addTrack","setSinkId","catch","webcamMediaStream","muted","ReactPlayer","playsinline","playIcon","pip","light","controls","playing","MemoizedParticipant","prevProps","nextProps","ParticipantGrid","participantIds","perRow","matchMedia","matches","MemoizedParticipantGrid","ParticipantsViewer","pinnedParticipants","activeSpeakerId","pinnedParticipantId","regularParticipantIds","ids","PresenterView","videoPlayer","screenShareAudioStream","screenShareOn","audioPlayer","playsInline","WaitingToJoinScreen","waitingMessages","animationDefaultOptions","successText","rejectText","onSuccess","onReject","subTitle","subTitleColor","Title","MeetingContainer","onMeetingLeave","containerHeight","setContainerHeight","containerWidth","setContainerWidth","localParticipantAllowedJoin","setLocalParticipantAllowedJoin","meetingErrorVisible","setMeetingErrorVisible","meetingError","setMeetingError","remainingTime","setRemainingTime","remainingTimeInSeconds","setRemainingTimeInSeconds","mMeetingRef","createRef","containerHeightRef","containerWidthRef","_containerRef$current","_containerRef$current2","_containerRef$current3","_containerRef$current4","onMeetingLeft","onParticipantJoined","participant","setQuality","onEntryResponded","_mMeetingRef$current","onMeetingJoined","isJoiningError","isCriticalError","Audio","onRecordingStateChanged","Constants","recordingEvents","RECORDING_STARTED","RECORDING_STOPPED","toast","autoClose","hideProgressBar","closeButton","pauseOnHover","draggable","onMessageReceived","localParticipantId","_mMeeting$localPartic2","trimSnackBarText","fetch_remainingtime","appID","remainingTimeStr","joinCallflag","convertToSeconds","countdownInterval","floor","secs","MemorizedParticipantView","isMeetingJoined","ConfirmBox","LeaveScreen","MeetingDetailsScreen","onClickJoin","_handleOnCreateMeeting","participantName","setParticipantName","onClickStartMeeting","setMeetingId","meetingIdError","setMeetingIdError","iscreateMeetingClicked","setIscreateMeetingClicked","isJoinMeetingClicked","setIsJoinMeetingClicked","socketID","setSocketID","isDisableButon","setIdDisableButton","fetch_CheckForTheAppointmentDateAndTime","socket_id","fetch_getSocketID","update_socketID","API_BASE_URL","VIDEOSDK_TOKEN","getToken","colorInterpolationFilters","filterUnits","floodOpacity","in2","operator","dy","JoiningScreen","setToken","setWebcamOn","setMicOn","customAudioStream","setCustomAudioStream","setCustomVideoStream","setDevices","checkPermissions","requestPermission","onDeviceChanged","setDidDeviceChange","getCameraDevices","getAudioDevices","getDefaultMediaTracks","webcam","webcamRef","audioTrack","setAudioTrack","videoTrack","setVideoTrack","dlgMuted","setDlgMuted","dlgDevices","setDlgDevices","didDeviceChange","videoPlayerRef","videoTrackRef","audioTrackRef","permissonAvaialble","startMuteListener","isPlaying","paused","ended","readyState","HAVE_CURRENT_DATA","videoSrcObject","pause","checkMediaPermission","audioTracks","getAudioTracks","videoTracks","getVideoTracks","currentAudioTrack","ev","requestAudioVideoPermission","mediaType","permission","AUDIO","VIDEO","ex","checkAudioVideoPermission","cameraPermissionAllowed","microphonePermissionAllowed","_permissonAvaialble$c","_webcams$","_webcams$2","deviceId","devices","_permissonAvaialble$c2","_speakers$","_speakers$2","_mics$","_mics$2","ButtonWithTooltip","onState","OnIcon","OffIcon","_toggleMic","MicPermissionDenied","_toggleWebcam","CameraPermissionDenied","token","roomId","method","Authorization","validateMeeting","createMeeting","customVideoStream","isMeetingStarted","setMeetingStarted","isMeetingLeft","onbeforeunload","MeetingProvider","micEnabled","webcamEnabled","customCameraVideoTrack","customMicrophoneAudioTrack","reinitialiseMeetingOnConfigChange","joinWithoutUserInteraction","startMeeting","ChatRoom","socket","setSocket","setRoomId","setName","setFile","setMessages","socketRef","setFileName","handleJoinRoom","emit","handleSend","io","on","prevMessages","userListMessage","sender","off","disconnect","msOverflowY","rel","typeof","SendOutlinedIcon","_event$target$files$","for","FileUploadOutlinedIcon","AdminLabDetail","_data1$","_data1$2","_data1$3","_data1$4","_data1$5","_data1$6","_data1$7","_data1$8","data1","setData1","setTest","openEditDialog","setOpenEditDialog","isFieldsFilled","setIsFieldsFilled","testdata","setTestData","lab_exam_id","test_subexam_price","test_description","isEditFilled","setIsEditFilled","editdata","setEditdata","sub_exam_id","selectedTest","setSelectedTest","fetchData1","getTests","checkFields","isFilled","checkEditFields","lab_description","fetchTestData","UpdateLab","Testlist","labelRowsPerPage","HcfDrDetailsCard","paramUser","roomID","paramRoomID","appId","userName","setUserName","setRoomID","setAppointment_id","DoctorAppointmentNavbar","ml","userID","savedUserName","users","setUsers","typingStatus","lastMessageRef","countDown","setCountDown","countDownWarning","setCountDownWarning","isCallEnded","setIsCallEnded","call_message","setCall_message","localCountdown","setLocalCountdown","appointmentEndTime","setAppointmentEndTime","appointmentData","setAppointmentData","isLoadingAppointment","setIsLoadingAppointment","fetchAppointmentDetails","isDoctor","patientEndpoint","doctorEndpoint","apiEndpoint","extractAppointment","extracted","appointmentDateTime","durationMinutes","endTime","timeLeft","parse","parseError","remaining","reload","patient_name","timeInSeconds","handleLeaveChat","random","handleSendMessage","onSubmit","handleTyping","setTypingStatus","derivedName","_lastMessageRef$curre","scrollIntoView","behavior","ChatBar","ChatBody","ChatFooter","DoctorSignup","$y","$M","$D","_response$6","lazy","LazyPatientMyActivity","LazyDoctorrequest","LazyDoctorNotification","LazyDoctorUpcoming","LazyDoctorRequest","LazyDoctorCompleted","LazyDoctorCancelled","LazyDoctorActiveListing","LazyDoctorSavedDraft","LazyDoctorBookingHistory","LazyDoctorTransaction","LazyDoctorOverview","LazyDoctorPayout","LazyDoctorStaff","LazyDoctorAuditLog","LazyDiagnosticNotification","LazyDiagnosticProfileInformation","LazyDiagnosticAuditLogs","LazyClinicNotification","LazyClinicRequests","LazyClinicAppointmentRequest","LazyClinicUpcoming","LazyClinicCompleted","LazyClinicCancelled","LazyClinicChats","LazyClinicProfileInformation","LazyClinicProfessionalInformation","LazyClinicSalesActivities","LazyClinicAuditLog","LazyAdminNotification","LazyAdminProfile","LazyAdminAllDoctors","LazyAdminActive","LazyAdminLabs","LazyAdminStaff","LazyAdminBlocked","LazyDoctorListingDetails","LazyDoctorAddPlans","LazyDoctorAddQuestioner","LazyAdminSalesActivities","LazyAdminOverview","LazyAdminBooking","LazyAdminPayout","LazyDiagnosticPatientSearch","LazyDiagnosticPatientShared","LazyDiagnosticSalesActivities","LazySuperAdminDoctor","LazySuperAdminPatient","LazySuperAdminHCF","LazySuperAdminHistoryDoctor","LazySuperAdminHistoryPatient","LazySuperAdminHistoryHCF","LazySuperAdminPackagePatient","LazySuperAdminPackageDoctor","LazySuperAdminTranDoctor","LazySuperAdminTranHCF","LazyPatientExplore","socketIO","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","AppRouter","Suspense","fallback","Routes","Route","element","HowItWorks","DiagnostSignUp","ClinicSignUp","ForgotPassword","SignupPage","PatientPersonalInformation","PatientContactInformation","PatientPaymentInformation","Contact","Home","ChatPage","DoctorDashboard","DoctorProssionalInfo","HcfLogin","HcfClinicSignup","ClinicMainDashboard","DiagnosticCenterDashboard","DiagnosticPatientChats","AdminMainDashboard","HCFBlocked","SuperAdminBody","VideoCallingSDK","Component","isLatestBuildDate","setIsLatestBuildDate","buildDateGreaterThan","latestDate","momLatestDateTime","moment","momCurrentDateTime","isAfter","packageJson","refreshCacheAndReload","caches","then","names","createTheme","typography","palette","common","black","white","main","warning","paper","hover","ClearCacheComponent","withClearCache","MainApp","App","ThemeProvider","REQUEST","SUCCESS","FAILURE","USER","base","reduce","acc","fetchUserAction","createAsyncAction","initialState","rootReducer","combineReducers","reducer","getType","request","failure","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","createRoot","render","BrowserRouter","reportWebVitals","defaultStyles","disableElevation","endIcon","SlideTransition","Slide","reason","getSeverity","getIcon","CheckCircleIcon","ErrorIcon","WarningIcon","InfoIcon","head","subhead","dates","doctorExperienceId","disablePast","maxDate","renderInput","startProps","endProps","fetchDocDuration","durations","listingPayload","setListingPayload","checkBoxIsDisable","setCheckBoxIsDisable","planMessage","setPlanMessage","validation","setValidation","plansTemplate","planType","updatePlanState","updatedPlans","v","feeMissing","durationMissing","fee","planDetails","plansTemplateForClinic","_validation$planType","_validation$planType2","_listingPayload$plan$","_listingPayload$plan$2","_listingPayload$plan$3","_validation$planType3","_validation$planType4","newState","is_trial","togglePlanCheckBox","some","planV","numericPayload","webpackContext","req","webpackContextResolve","__webpack_require__","o","resolve","exports","editingId","rawListingId","doctorIdStr","sentLogo","receiveLogo","FaildCard","DangerousIcon","Imagestar","m","menuItemValue","parentNode","InputLabel","SearchOff","actionText","onAction","isEmoji","isJSXElement","titleVariant","descriptionVariant","userSelect","Refresh","useFormValidation","setErrors","touched","setTouched","validateField","validateStepData","setFieldError","clearFieldError","clearStepErrors","setFieldTouched","isFieldTouched","getFieldError","_errors$step","getStepErrors","hasStepErrors","stepErrors","today","startOfToday","StyledPickersDay","PickersDay","isAvailable","timezone","HorizontalLinearStepper","stepLoading","setStepLoading","isUploadingFile","setIsUploadingFile","availableDatesSnackError","setAvailableDatesSnackError","availableDatesSnackMessage","setAvailableDatesSnackMessage","showSnackMessage","setShowSnackMessage","showSnackErrorMessage","setShowSnackErrorMessage","time_slot","setTime_slot","setQuestion","customAvailableDates","setCustomAvailableDates","planfee","setPlanFee","selectPackage","setSelectPackage","packageflag","setPackageFlag","selectedDate","setSelectedDate","setDuration","setValues","instance","dropinInstanceRef","nonce","setNonce","braintreeKey","setBraintreeKey","isRefreshing","setIsRefreshing","usedNonces","setUsedNonces","isProcessingPayment","setIsProcessingPayment","isAppointmentBooked","setIsAppointmentBooked","timeslotData","setTimeslotData","action_done_by","patient_report","answer_1","answer_2","answer_3","answer_4","answer_5","messagingPlan","setMessaginplanActive","voiceMessagingPlan","setVoiceMessaginplanActive","videoMessagingPlan","setVideoMessaginplanActive","rangeStartDate","rangeEndDate","isInRange","isWithinInterval","refreshBraintreeInstance","freshToken","Purchase_plan","Promise","currentInstance","requestPaymentMethod","refreshedInstance","nonce_value","retryCount","maxRetries","instanceToUse","get_nonce","BookAppoinetmentApiPath","appointmentPayload","bookappointment","clearSelectedPaymentMethod","refreshError","is_active","fetchSelectPackage","availableSlots","fetch_Time_Slots","initializePaymentToken","availableDates","dateString","_err$response","FetchDoctorAvailableDates","fallbackToken","fetchQuestions","alternativeLabel","StepIconComponent","active","StepContent","paragraph","uploadResponse","filePath","EmptyState","AdapterDateFns","DateCalendar","formatDateResp","shouldDisableDate","isSameDay","availableDate","slots","newTimeslotData","formattedTime","timeSlot","startTime","setHours","setMinutes","h","formatTimeSlot","isSelected","messageLogo","answers","DropIn","authorization","onInstance","ageDropDown","setAgeDropDown","DateValue","setDataValue","setRescheduleData","rescheduleData","option","optional","finish","displa","TimePicker","cancleData","setCancleData","CancleAppointment","LeaveAReview","giveReview","setGiveReview","Rating","precision","PaginationCard","shape","openLeaveReview","setOpenLeaveReview","CancelAppointmentSlider","RescheduleAppointmentSlider","DoctorListingNavbar","NumberOfAppointments","AppointmentType","dayjsValue","AccessTime","certific_num","doctorLicensesId","doctorAwardsId","interceptors","use","needsTokenRefresh","accessToken","originalRequest","SuperAdminTranHCF","hcf_percentage","decoded","jwtDecode","iat","raw","fiveMinutesFromNow","bearer","refresh_token","ClinicSalesActivities","allChecked","setAllChecked","completedChecked","setCompletedChecked","cancelledChecked","setCancelledChecked","bookedChecked","setBookedChecked","handleCheckBoxChange","checkboxType","filteredData","Docpic","updated_at","SuperAdminHistoryDoctor","image_url","contact_no_primary","start_date","autoFocus","focusedIndex","setFocusedIndex","inputRefs","sizeStyles","handlePaste","_inputRefs$current$la","pastedData","clipboardData","getData","lastFilledIndex","min","getInputClassName","el","inputMode","inputValue","updatedValue","_inputRefs$current","handleKeyDown","_inputRefs$current2","onPaste","onFocus","onBlur","test_subexam_id","_freshTokenResponse$d","freshTokenResponse","get_client_token","tokenResponse","_tokenResponse$data","payment_path","_values$instance","accessError","request_payment_response","fallbackImage","base64Image","blob","convertToBase64DataUrl","CalendarToday","no_calender_image","DoctorSavedDraft","activeListing","setActiveListing","deleteDoctorListFlag","setDeleteDoctorListFlag","deleteListing","setDeleteListing","fetchActiveListing","DocListingPlanDeactive","card","CustomDrActiveListingCard","listID","DeleteDoctorListing","ChangeActiveState","linkStyle","PatientadminCard","SuperPatientImage","SuperAdminPatient","AdminProfile","profiledata","mobile_no","state_reg_no","indian_reg_no","indian_reg_date","diag_state_reg_no","diag_state_reg_date","diag_indian_reg_date","service_offer","fetchProfileData","BusinessIcon","previewUrl","URL","createObjectURL","fullDataUrl","gridTemplateColumns","updateData","onLeftIconClick","setIsFocused","InputLabelProps","shrink","endAdornment","BootstrapDialog","BootstrapDialogTitle","other","DialogTitle","onBackdropClick","DialogActions","labelPlacement","indeterminate","checkboxElement","HCFAdminCard","SuperHCFImage","SuperAdminHCF","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","amdO","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","splice","getter","__esModule","getPrototypeOf","obj","t","ns","def","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","all","promises","u","miniCssF","g","globalThis","prototype","hasOwnProperty","l","done","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","setAttribute","onScriptComplete","doneFns","bind","Symbol","toStringTag","nmd","paths","loadStylesheet","fullhref","existingLinkTags","dataHref","tag","existingStyleTags","findStylesheet","oldTag","linkTag","errorType","realHref","insertBefore","nextSibling","createStylesheet","installedCssChunks","miniCss","installedChunks","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}