{"version":3,"file":"507.fe511b5e8af44ec24fd9.js","mappings":"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","sources":["webpack://sec-frontend/./src/DoctorModule/CustomDoctorComponent/Cards/CustomRequestCard/CardRequest.js","webpack://sec-frontend/./src/static/images/DrImages/GroupIcon.svg"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport profileImage from \"../../../../static/images/DrImages/profileImage.png\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { Box, Skeleton, Typography } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport \"./cardRequest.scss\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\n// import CustomModal from '../../../custom-modal';\nimport axios from \"axios\";\nimport CustomRadioButton from \"../../../../components/CustomRadioButton\";\nimport CustomModal from \"../../../../components/CustomModal\";\nimport GroupIcon from \"../../../../static/images/DrImages/GroupIcon.svg\";\nimport CustomButton from \"../../../../components/CustomButton/custom-button\";\nimport { baseURL } from \"../../../../constants/const\";\nimport axiosInstance from \"../../../../config/axiosInstance\";\nimport profileimg from \"../../../../static/images/DrImages/pat1.png\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\n\nconst CustomRequestCard = ({ data = {}, label, AcceptOrRejectButtonClicked, accAndRejClicked, }) => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n        setOpenDialogCancle(false);\n        setOpenDialogReschedule(false);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const [openDialogCancle, setOpenDialogCancle] = useState(false);\n    const [openDialogReschedule, setOpenDialogReschedule] = useState(false);\n    const [openDialog, setOpenDialog] = useState(false);\n    const [openPatientModal, setOpenPatientModal] = useState(false);\n    const [clinicAppointmentPatient, setClinicAppointmentPatient] = useState([]);\n    const [loading, setLoading] = useState(true); // Loading state\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n    const [numPages, setNumPages] = useState(null);\n\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        setNumPages(numPages);\n    };\n\n    const radioValues = [\n        \"I have a schedule clash\",\n        \"I am not available at the schedule\",\n        \"I have some emergency\",\n        \"I am not well\",\n        \"Other Emergencies\",\n    ];\n    const [radioVal, setRadioVal] = React.useState(radioValues[0]);\n    const [acceptAppointment, setAcceptAppointment] = useState({\n        appointment_id: null,\n        patient_id: null,\n        doctor_id: null,\n        status: null,\n    });\n    const [clicked, setClicked] = useState(false);\n\n    const [rejectAppointment, setRejectappointment] = useState({\n        appointment_id: data?.appointment_id,\n        patient_id: data?.patient_id,\n        doctor_id: data?.doctor_id,\n        reason: null,\n        status: \"in_progress\",\n        option: \"reject\",\n    });\n    console.log(\"Reject appointment data : \", rejectAppointment);\n    const [rejectClicked, setRejectClicked] = useState(false);\n    const [appointmentRequestData, setAppointmentRequestData] = useState({\n        appointment_id: null,\n        patient_id: null,\n        doctor_id: null,\n        // reason: null,\n        status: \"in_progress\",\n        option: \"accept\",\n    });\n\n\n    useEffect(() => {\n        setAppointmentRequestData({\n            appointment_id: data?.appointment_id,\n            patient_id: data?.patient_id,\n            doctor_id: data?.doctor_id,\n            status: \"in_progress\",\n            option: \"accept\",\n        });\n    }, []);\n\n    const AcceptAppointment = async () => {\n        setClicked(!clicked);\n        try {\n            console.log(\"Sending appointment request data:\", appointmentRequestData);\n            console.log(\"API endpoint: /sec/Doctor/AppointmentsRequestsAccept\");\n            \n            const response = await axiosInstance.post(\n                \"/sec/Doctor/AppointmentsRequestsAccept\",\n                appointmentRequestData,\n            );\n            \n            console.log(\"API Response:\", response?.data);\n            alert(`Appointment ${response?.data?.response?.status || 'accepted successfully'}`);\n            \n            // acceptButtonClicked(\"child\")\n            AcceptOrRejectButtonClicked(!accAndRejClicked);\n        } catch (error) {\n            console.error(\"Accept appointment error:\", error);\n            console.error(\"Error response:\", error.response?.data);\n            alert(`Error: ${error.response?.data?.error || error.message || 'Failed to accept appointment'}`);\n        }\n    };\n\n    const RejectAppointment = async () => {\n        // setRejectClicked(true);\n        console.log(\"Hitting reject request\");\n        try {\n            console.log(\"Sending reject appointment data:\", rejectAppointment);\n            console.log(\"API endpoint: /sec/Doctor/AppointmentsRequestsReject\");\n            \n            const response = await axiosInstance.post(\n                \"/sec/Doctor/AppointmentsRequestsReject\",\n                rejectAppointment,\n            );\n            \n            console.log(\"Reject API Response:\", response?.data);\n            alert(`Appointment ${response?.data?.response?.status || 'rejected successfully'}`);\n            \n            AcceptOrRejectButtonClicked(!accAndRejClicked);\n            setRejectAppointmentFlag(false);\n        } catch (error) {\n            console.error(\"Reject appointment error:\", error);\n            console.error(\"Error response:\", error.response?.data);\n            alert(`Error: ${error.response?.data?.error || error.message || 'Failed to reject appointment'}`);\n            setRejectAppointmentFlag(false);\n        }\n    };\n\n    const [rejectAppointmentFlag, setRejectAppointmentFlag] = useState(false);\n\n    useEffect(() => {\n        if (rejectAppointmentFlag) {\n            RejectAppointment();\n        }\n    }, [rejectAppointmentFlag]);\n\n    // const handleViewClick = () => {\n    //     setOpenPatientModal(true);\n    // };\n    const handleViewClick = (patient_id, appointment_id) => {\n        clinicAppointmentRequestsList(patient_id, appointment_id);\n        setOpenPatientModal(true);\n\n    };\n\n\n    const [openModal, setOpenModal] = useState(false);\n\n    const handleViewReport = () => {\n        setOpenModal(true);\n    };\n\n    const filepath =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_path;\n    const filename =\n        Array.isArray(clinicAppointmentPatient) && clinicAppointmentPatient[0]?.report_name;\n\n    console.log(\"filepath\", filepath);\n\n    const handleDownloadReport = () => {\n        // Direct download link for Google Drive\n        const link = document.createElement(\"a\");\n        link.target = \"_blank\";\n        link.href = filepath;\n        link.download = filename;\n        link.click();\n    };\n\n    const clinicAppointmentRequestsList = async (patient_id, appointment_id) => {\n        setLoading(true); // Set loading to true\n        try {\n            const response = await axiosInstance.get(\n                `sec/hcf/${patient_id}/${appointment_id}/ClinicAppointmentPatient`,\n            );\n            const Count = response?.data?.response || [];\n            setClinicAppointmentPatient(Count);\n        } catch (error) {\n            console.error(\"Error fetching request data:\", error.response);\n        } finally {\n            setLoading(false); // Set loading to false\n        }\n    };\n\n\n    console.log(\"clinicAppointmentPatient---->\", clinicAppointmentPatient);\n    const fileUrl = filepath && (filepath.startsWith(\"http\") ? filepath : `/assets/${filepath}`);\n\n    return (\n        <>\n            <div className=\"Request-main-container\">\n                <div className=\"Request-inner-container\">\n                    {/* -----Image Container-------- */}\n                    <div style={{ width: \"3.13981rem\", height: \"height: 4.71831rem\" }}>\n                        <div className=\"RequestimageContainer\">\n                            <Box\n                                className=\"image-container\"\n                                component={\"img\"}\n                                sx={{ width: \"100%\", height: \"100%\" }}\n                                src={data?.profile_picture || profileimg} // Fallback for no image\n                                alt=\"Profile Image\"\n                            ></Box>\n                        </div>\n                    </div>\n\n                    {/* --------- Details Container-------- */}\n                    <div style={{ marginLeft: \"2%\" }}>\n                        <div style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n                            <Typography\n                                sx={{\n                                    color: \"#313033\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"1.125rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.75rem\",\n                                }}\n                            >\n                                {/* {data?.patientBookedName === null\n                                    ? null\n                                    : data?.patientBookedName} */}\n                                {!data?.patientBookingName\n                                    ? !data?.patientBookedName\n                                        ? null\n                                        : data?.patientBookedName\n                                    : data?.patientBookingName}\n                            </Typography>\n                        </div>\n                        <div className=\"card-details-container\">\n                            <Typography\n                                sx={{\n                                    color: \"#787579\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"0.75rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.125rem\",\n                                    letterSpacing: \"0.006rem\",\n                                    whiteSpace: \"nowrap\", // Prevent wrapping\n                                    overflow: \"hidden\", // Handle overflow\n                                    textOverflow: \"ellipsis\", // Show ellipsis\n                                    flex: \"1\", // Allow it to take available space\n                                }}\n                            >\n                                {data?.appointment_date}\n                                {\" | \"}\n                                {data?.attachments}\n                                {\" | \"}\n                                {data?.report_name}\n                            </Typography>\n                            <Box\n                                component=\"a\"\n                                onClick={() => handleViewClick(data?.patient_id, data?.appointment_id)}\n                                sx={{\n                                    color: \"#E72B4A\",\n                                    fontFamily: \"Poppins\",\n                                    fontSize: \"0.75rem\",\n                                    fontStyle: \"normal\",\n                                    fontWeight: \"400\",\n                                    lineHeight: \"1.125rem\",\n                                    letterSpacing: \"0.006rem\",\n                                    textDecoration: \"none\",\n                                    whiteSpace: \"nowrap\", // Prevent wrapping\n                                    \"&:hover\": {\n                                        textDecoration: \"underline\",\n                                        cursor: \"pointer\"\n\n                                    },\n                                }}\n                            >\n                                View\n                            </Box>\n\n                            <CustomModal\n                                style={{ display: \"flex\" }}\n                                isOpen={openPatientModal}\n                                conditionOpen={setOpenPatientModal}\n                                title={\n                                    <Box\n                                        sx={{\n                                            border: \"1px solid #E6E1E5\",\n                                            borderTop: \"1px\",\n                                            borderRight: \"1px\",\n                                            borderLeft: \"1px\",\n                                            width: \"570px\",\n                                            height: \"82px\",\n                                            display: \"flex\",\n                                            justifyContent: \"flex-start\",\n                                            alignItems: \"center\",\n                                            paddingLeft: \"16px\",\n                                        }}\n                                    >\n                                        {loading ? (\n                                            <Skeleton variant=\"text\" width=\"40%\" height={30} />\n                                        ) : (\n                                            <h2\n                                                style={{\n                                                    textAlign: \"left\",\n                                                    fontFamily: \"Poppins\",\n                                                    fontSize: \"20px\",\n                                                    fontStyle: \"normal\",\n                                                    fontWeight: \"500\",\n                                                    lineHeight: \"30px\",\n                                                    width: \"100%\",\n                                                    height: \"30px\",\n                                                }}\n                                            >\n                                                Patient Details\n                                            </h2>\n                                        )}\n                                    </Box>\n                                }\n                            >\n                                {loading ? (\n                                    // 🦴 Skeleton content for modal body\n                                    <Box sx={{ padding: 2 }}>\n                                        <Skeleton variant=\"text\" width=\"30%\" />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n                                        <Skeleton variant=\"text\" width=\"30%\" sx={{ mt: 2 }} />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n                                        <Skeleton variant=\"text\" width=\"30%\" sx={{ mt: 2 }} />\n                                        <Skeleton variant=\"text\" width=\"70%\" />\n\n                                        <Skeleton variant=\"text\" width=\"40%\" sx={{ mt: 4 }} />\n                                        <Skeleton variant=\"text\" width=\"90%\" />\n                                        <Skeleton variant=\"text\" width=\"90%\" />\n\n                                        <Skeleton variant=\"text\" width=\"40%\" sx={{ mt: 4 }} />\n                                        <Skeleton variant=\"text\" width=\"100%\" height={200} />\n                                    </Box>\n                                ) : (\n                                    <>\n                                        <div>Patient Details</div>\n                                        <div className=\"textfield-cont\">\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Name</Typography>\n                                                <Typography>{`${clinicAppointmentPatient[0]?.first_name} ${clinicAppointmentPatient[0]?.middle_name} ${clinicAppointmentPatient[0]?.last_name}`}</Typography>\n                                            </div>\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Age</Typography>\n                                                <Typography>{clinicAppointmentPatient[0]?.age}</Typography>\n                                            </div>\n                                            <div className=\"name-email\">\n                                                <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>Gender</Typography>\n                                                <Typography>{clinicAppointmentPatient[0]?.gender}</Typography>\n                                            </div>\n                                        </div>\n                                        <div>\n                                            <div>Attached files</div>\n                                            <div className=\"textfield-cont\">\n                                                <div className=\"name-email\">\n                                                    <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>File name</Typography>\n                                                    <Typography>{clinicAppointmentPatient[0]?.attachments}</Typography>\n                                                </div>\n                                                <div className=\"name-email\">\n                                                    <Typography sx={{ color: \"#E72B4A\", cursor: \"pointer\" }} onClick={handleViewReport}>view</Typography>\n                                                </div>\n                                                <div className=\"name-email\">\n                                                    <Typography\n                                                        sx={{\n                                                            color: \"#E72B4A\",\n                                                            display: \"flex\",\n                                                            alignItems: \"center\",\n                                                            cursor: \"pointer\",\n                                                        }}\n                                                        onClick={handleDownloadReport}\n                                                    >\n                                                        <DownloadIcon sx={{ marginRight: \"5px\" }} /> Download\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <div>Questions Details</div>\n                                            <div className=\"textfield-cont\">\n                                                {[1, 2, 3, 4, 5].map((q) => (\n                                                    <div className=\"name-email\" key={q}>\n                                                        <Typography sx={{ color: \"#787579\", fontSize: \"0.875rem\", fontWeight: 400 }}>\n                                                            Question {q}\n                                                        </Typography>\n                                                        <Typography>{clinicAppointmentPatient[0]?.[`answer_${q}`] || \"answer\"}</Typography>\n                                                    </div>\n                                                ))}\n                                            </div>\n                                            <CustomModal isOpen={openModal} conditionOpen={setOpenModal}>\n                                                <Box\n                                                    sx={{\n                                                        width: \"870px\",\n                                                        border: \"1px solid #E6E1E5\",\n                                                        height: \"80vh\",\n                                                        padding: \"20px\",\n                                                        backgroundColor: \"white\",\n                                                        overflowY: \"scroll\",\n                                                    }}\n                                                >\n                                                    <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                                                        Report\n                                                    </Typography>\n                                                    <Document\n                                                        // file={fileUrl}\n                                                        file={clinicAppointmentPatient[0]?.report_path}\n                                                        onLoadSuccess={onDocumentLoadSuccess}\n                                                        loading={<Typography>Loading PDF...</Typography>}\n                                                        error={<Typography color=\"error\">Failed to load PDF.</Typography>}\n                                                        noData={<Typography>No PDF file provided.</Typography>}\n                                                    >\n                                                        {Array.from(new Array(numPages), (el, index) => (\n                                                            <Page\n                                                                key={`page_${index + 1}`}\n                                                                pageNumber={index + 1}\n                                                                width={800}\n                                                            />\n                                                        ))}\n                                                    </Document>\n                                                </Box>\n                                            </CustomModal>\n                                        </div>\n                                    </>\n                                )}\n                            </CustomModal>\n\n                        </div>\n                    </div>\n                </div>\n                {/* ------------ Button Container------------ */}\n                <div className=\"request-button-container\">\n                    <div style={{ display: \"flex\", alignItems: \"center\", marginRight: \"2%\" }}>\n                        {label ? (\n                            <CustomButton\n                                buttonCss={{\n                                    display: \"flex\",\n                                    width: \"9.3125rem\",\n                                    height: \"2.5rem\",\n                                    padding: \"0.5rem 1rem\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    gap: \"0.5rem\",\n                                    flexShrink: \"0\",\n                                    borderRadius: \"6.25rem\",\n                                }}\n                                label={label}\n                                isTransaprent={false}\n                                handleClick={AcceptAppointment}\n                            />\n                        ) : null}\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        {label ? (\n                            <MoreHorizIcon\n                                sx={{\n                                    cursor: \"pointer\",\n                                    color: \"#E6E1E5\",\n                                    border: \"1px solid #E6E1E5\",\n                                    borderRadius: \"50px\",\n                                }}\n                                onClick={handleClick}\n                            />\n                        ) : null}\n                        <Menu\n                            id=\"basic-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                            MenuListProps={{\n                                \"aria-labelledby\": \"basic-button\",\n                            }}\n                        >\n                            {/* ---------------------- Appointments and Re-Schedule--------------------------------------------------- */}\n                            <MenuItem onClick={() => setOpenDialog(!openDialog)}>Reject</MenuItem>\n                            <CustomModal\n                                isOpen={openDialog}\n                                title={\"Reject Appointment Request\"}\n                                conditionOpen={setOpenDialog}\n                                footer={\n                                    <Fragment>\n                                        <Box\n                                            sx={{\n                                                width: \"100%\",\n                                                display: \"flex\",\n                                                justifyContent: \"center\",\n                                                alignItems: \"center\",\n                                            }}\n                                        ></Box>\n                                    </Fragment>\n                                }\n                            >\n                                <Box sx={{ textAlign: \"center\" }}>\n                                    <Typography>\n                                        Are you sure. you want to cancel the appointment\n                                    </Typography>\n                                </Box>\n                                <div style={{ marginTop: \"4%\" }}>\n                                    <>\n                                        <Box\n                                            sx={{\n                                                marginTop: \"5%\",\n                                                display: \"flex\",\n                                                flexWrap: \"wrap\",\n                                                flexDirection: \"column\",\n                                            }}\n                                        >\n                                            <Typography\n                                                sx={{\n                                                    fontWeight: \"600\",\n                                                    fontSize: \"16px\",\n                                                    lineHeight: \"24px\",\n                                                }}\n                                            >\n                                                Reason For Rejection\n                                            </Typography>\n                                            <CustomRadioButton\n                                                label={\"\"}\n                                                handleChange={({ target }) => {\n                                                    setRadioVal(target.value);\n                                                    setRejectappointment({\n                                                        ...rejectAppointment,\n                                                        reason: target.value,\n                                                    });\n                                                }}\n                                                value={radioVal}\n                                                items={radioValues}\n                                            />\n                                            <Box sx={{ marginTop: \"5%\", width: \"100%\" }}>\n                                                <Typography>Add Note</Typography>\n                                                <TextField\n                                                    style={{ width: \"100%\", padding: \"3%\" }}\n                                                    placeholder=\" Note: Please leave the review here.\"\n                                                    multiline\n                                                    rows={3}\n                                                    maxRows={4}\n                                                />\n                                            </Box>\n                                            <Box\n                                                sx={{\n                                                    marginTop: \"6%\",\n                                                    display: \"flex\",\n                                                    justifyContent: \"center\",\n                                                }}\n                                            >\n                                                <CustomButton\n                                                    handleClick={() =>\n                                                        setRejectAppointmentFlag(true)\n                                                    }\n                                                    label=\"Reject Appointment\"\n                                                />\n                                            </Box>\n                                        </Box>\n                                    </>\n                                </div>\n                            </CustomModal>\n                        </Menu>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default CustomRequestCard;\n","var _circle, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nconst SvgGroupIcon = _ref => {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 16,\n    r: 15.5,\n    fill: \"#fff\",\n    stroke: \"#E6E1E5\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#AEAAAE\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 9.979,\n    cy: 15.998,\n    r: 2.006\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 15.998,\n    r: 2.006\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 22.024,\n    cy: 15.998,\n    r: 2.006\n  }))));\n};\nexport { SvgGroupIcon as ReactComponent };\nexport default __webpack_public_path__ + \"1cabdb3ae29c5524313e1580b423d0e4.svg\";"],"names":["_ref","_clinicAppointmentPat","_clinicAppointmentPat2","_clinicAppointmentPat3","_clinicAppointmentPat4","_clinicAppointmentPat5","_clinicAppointmentPat6","_clinicAppointmentPat7","_clinicAppointmentPat8","_clinicAppointmentPat0","data","label","AcceptOrRejectButtonClicked","accAndRejClicked","anchorEl","setAnchorEl","React","open","Boolean","openDialogCancle","setOpenDialogCancle","useState","openDialogReschedule","setOpenDialogReschedule","openDialog","setOpenDialog","openPatientModal","setOpenPatientModal","clinicAppointmentPatient","setClinicAppointmentPatient","loading","setLoading","pdfjs","workerSrc","concat","numPages","setNumPages","radioValues","radioVal","setRadioVal","acceptAppointment","setAcceptAppointment","appointment_id","patient_id","doctor_id","status","clicked","setClicked","rejectAppointment","setRejectappointment","reason","option","rejectClicked","setRejectClicked","appointmentRequestData","setAppointmentRequestData","useEffect","rejectAppointmentFlag","setRejectAppointmentFlag","async","_response$data2","response","axiosInstance","post","alert","error","_error$response4","message","RejectAppointment","openModal","setOpenModal","filepath","Array","isArray","report_path","filename","report_name","clinicAppointmentRequestsList","_response$data3","get","Count","startsWith","className","style","width","height","Box","component","sx","src","profile_picture","profileimg","alt","marginLeft","display","justifyContent","Typography","color","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","patientBookingName","patientBookedName","letterSpacing","whiteSpace","overflow","textOverflow","flex","appointment_date","attachments","onClick","handleViewClick","textDecoration","cursor","CustomModal","isOpen","conditionOpen","title","border","borderTop","borderRight","borderLeft","alignItems","paddingLeft","Skeleton","variant","textAlign","padding","mt","first_name","middle_name","last_name","age","gender","handleViewReport","handleDownloadReport","link","document","createElement","target","href","download","click","DownloadIcon","marginRight","map","q","_clinicAppointmentPat9","key","backgroundColor","overflowY","mb","Document","file","onLoadSuccess","_ref2","noData","from","el","index","Page","pageNumber","CustomButton","buttonCss","gap","flexShrink","borderRadius","isTransaprent","handleClick","_response$data","_error$response2","MoreHorizIcon","event","currentTarget","Menu","id","onClose","handleClose","MenuListProps","MenuItem","footer","Fragment","marginTop","flexWrap","flexDirection","CustomRadioButton","handleChange","_ref3","value","_objectSpread","items","TextField","placeholder","multiline","rows","maxRows"],"sourceRoot":""}