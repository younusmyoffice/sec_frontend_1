{"version":3,"file":"99.fe511b5e8af44ec24fd9.js","mappings":"oOAQA,MA+HA,EA/HsBA,KAClB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAC7BC,UAAWC,aAAaC,QAAQ,eAChCC,mBAAoB,iBAEjBC,EAAkBC,IAAuBN,EAAAA,EAAAA,WAAS,IAClDO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,KAC5CS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,IAGhCW,EAAaC,IAAkBZ,EAAAA,EAAAA,UAAS,IACxCa,IAAgBb,EAAAA,EAAAA,UAAS,IAEhCc,EAAAA,EAAAA,WAAU,KACNZ,aAAaa,QAAQ,kBAAmB,eACxCb,aAAaa,QAAQ,OAAQ,YAC9B,KAEHD,EAAAA,EAAAA,WAAU,KACNE,KACD,CAACX,IAEJ,MAAMW,EAAeC,UACjBP,GAAW,GACX,IAAI,IAAAQ,EACA,MAAMC,QAAiBC,EAAAA,EAAcC,KACjC,mCACAC,KAAKC,UAAUzB,IAEnBU,GAAiBW,SAAc,QAAND,EAARC,EAAUrB,YAAI,IAAAoB,OAAA,EAAdA,EAAgBC,WAAY,GACjD,CAAE,MAAOK,GAET,CAAE,QACEd,GAAW,EACf,GAOJ,SAASe,EAA4BC,GACjCpB,EAAoBoB,EACxB,CAGA,MAAMC,GAAchB,EAAc,GAAKE,EACjCe,EAAWD,EAAad,EACxBgB,EAAgBtB,EAAcuB,MAAMH,EAAYC,GAEtD,OACIG,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,MAAO,QAC/BJ,EAAAA,cAACK,EAAAA,EAAuB,MACxBL,EAAAA,cAACC,EAAAA,EAAG,CACAK,UAAW,MACXJ,GAAI,CACAK,SAAU,WACVC,IAAK,MACLJ,MAAO,OACPD,QAAS,OACTM,OAAQ,SAGZT,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEE,MAAO,OAAQK,OAAQ,SAC9BT,EAAAA,cAACC,EAAAA,EAAG,CAACC,GAAI,CAAEE,MAAO,OAAQK,OAAQ,SAC9BT,EAAAA,cAACC,EAAAA,EAAG,CACAC,GAAI,CACAE,MAAO,OACPM,OAAQ,oBACRD,OAAQ,MACRE,aAAc,MACdC,QAAS,KACTC,WAAY,OAGfnC,EACGoC,MAAMC,KAAK,CAAEC,OAAQ,IAAKC,IAAI,CAACC,EAAGC,IAC9BnB,EAAAA,cAACoB,EAAAA,EAAQ,CACLC,IAAKF,EACLG,QAAQ,cACRlB,MAAM,OACNK,OAAQ,GACRP,GAAI,CAAEqB,GAAI,MAGO,IAAzB/C,EAAcwC,OACdhB,EAAAA,cAACwB,EAAAA,EAAiB,CAACC,SAAU,mBAE7B3B,EAAcmB,IAAKlD,GACfiC,EAAAA,cAAC0B,EAAAA,EAAiB,CACdL,IAAKtD,EAAK4D,GACVjC,4BACIA,EAEJpB,iBAAkBA,EAClBsD,MAAO,SACP7D,KAAMA,OAMpBW,GAAWF,EAAcwC,OAAS,GAChChB,EAAAA,cAACC,EAAAA,EAAG,CACAC,GAAI,CACAC,QAAS,OACT0B,eAAgB,SAChBC,GAAI,IAGR9B,EAAAA,cAAC+B,EAAAA,EAAU,CACPC,MAAOC,KAAKC,KAAK1D,EAAcwC,OAASlC,GACxCqD,KAAMvD,EACNwD,SA7EXC,CAACnB,EAAGoB,KACzBzD,EAAeyD,IA6EiBC,MAAM,kB","sources":["webpack://sec-frontend/./src/DoctorModule/DoctorAppointmentDashboard/DoctorRequest/DoctorRequest.js"],"sourcesContent":["import { Box, Skeleton, Pagination } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./DoctorRequest.scss\";\nimport DoctorAppointmentNavbar from \"../../CustomDoctorComponent/DoctorAppointmentNavbar/DoctorAppointmentNavbar\";\nimport CustomRequestCard from \"../../CustomDoctorComponent/Cards/CustomRequestCard/CardRequest\";\nimport axiosInstance from \"../../../config/axiosInstance\";\nimport NoAppointmentCard from \"../../../PatientDashboard/PatientAppointment/NoAppointmentCard/NoAppointmentCard\";\n\nconst DoctorRequest = () => {\n    const [data, setData] = useState({\n        doctor_id: localStorage.getItem(\"doctor_suid\"),\n        status_in_progress: \"in_progress\",\n    });\n    const [accAndRejClicked, setAccAndRejClicked] = useState(false);\n    const [doctorRequest, setDoctorRequest] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // Pagination state\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage] = useState(5); // Number of items per page\n\n    useEffect(() => {\n        localStorage.setItem(\"activeComponent\", \"appointment\");\n        localStorage.setItem(\"path\", \"request\");\n    }, []);\n\n    useEffect(() => {\n        fetchDataNew();\n    }, [accAndRejClicked]);\n\n    const fetchDataNew = async () => {\n        setLoading(true);\n        try {\n            const response = await axiosInstance.post(\n                \"/sec/Doctor/AppointmentsRequests\",\n                JSON.stringify(data),\n            );\n            setDoctorRequest(response?.data?.response || []);\n        } catch (error) {\n            console.log(error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handlePageChange = (_, newPage) => {\n        setCurrentPage(newPage);\n    };\n\n    function AcceptOrRejectButtonClicked(value) {\n        setAccAndRejClicked(value);\n    }\n\n    // Calculate the indices for the current page\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const paginatedData = doctorRequest.slice(startIndex, endIndex);\n\n    return (\n        <>\n            <Box sx={{ display: \"flex\", width: \"95%\" }}>\n                <DoctorAppointmentNavbar />\n                <Box\n                    component={\"div\"}\n                    sx={{\n                        position: \"relative\",\n                        top: \"4em\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        height: \"100%\",\n                    }}\n                >\n                    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                        <Box sx={{ width: \"100%\", height: \"100%\" }}>\n                            <Box\n                                sx={{\n                                    width: \"100%\",\n                                    border: \"1px solid #E6E1E5\",\n                                    height: \"70%\",\n                                    borderRadius: \"8px\",\n                                    padding: \"2%\",\n                                    marginLeft: \"2%\",\n                                }}\n                            >\n                                {loading ? (\n                                    Array.from({ length: 3 }).map((_, index) => (\n                                        <Skeleton\n                                            key={index}\n                                            variant=\"rectangular\"\n                                            width=\"100%\"\n                                            height={80}\n                                            sx={{ mb: 2 }}\n                                        />\n                                    ))\n                                ) : doctorRequest.length === 0 ? (\n                                    <NoAppointmentCard text_one={\"No Appointment\"} />\n                                ) : (\n                                    paginatedData.map((data) => (\n                                        <CustomRequestCard\n                                            key={data.id} // Ensure each item has a unique key\n                                            AcceptOrRejectButtonClicked={\n                                                AcceptOrRejectButtonClicked\n                                            }\n                                            accAndRejClicked={accAndRejClicked}\n                                            label={\"Accept\"}\n                                            data={data}\n                                        />\n                                    ))\n                                )}\n                            </Box>\n                            {/* Pagination Component */}\n                            {!loading && doctorRequest.length > 0 && (\n                                <Box\n                                    sx={{\n                                        display: \"flex\",\n                                        justifyContent: \"center\",\n                                        mt: 2,\n                                    }}\n                                >\n                                    <Pagination\n                                        count={Math.ceil(doctorRequest.length / itemsPerPage)}\n                                        page={currentPage}\n                                        onChange={handlePageChange}\n                                        color=\"primary\"\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        </>\n    );\n};\n\nexport default DoctorRequest;\n"],"names":["DoctorRequest","data","setData","useState","doctor_id","localStorage","getItem","status_in_progress","accAndRejClicked","setAccAndRejClicked","doctorRequest","setDoctorRequest","loading","setLoading","currentPage","setCurrentPage","itemsPerPage","useEffect","setItem","fetchDataNew","async","_response$data","response","axiosInstance","post","JSON","stringify","error","AcceptOrRejectButtonClicked","value","startIndex","endIndex","paginatedData","slice","React","Box","sx","display","width","DoctorAppointmentNavbar","component","position","top","height","border","borderRadius","padding","marginLeft","Array","from","length","map","_","index","Skeleton","key","variant","mb","NoAppointmentCard","text_one","CustomRequestCard","id","label","justifyContent","mt","Pagination","count","Math","ceil","page","onChange","handlePageChange","newPage","color"],"sourceRoot":""}